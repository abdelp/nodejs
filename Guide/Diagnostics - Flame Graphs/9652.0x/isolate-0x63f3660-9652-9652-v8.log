v8-version,9,4,146,26,-node.22,0
v8-platform,linux,linux
shared-library,/home/abdel/.nvm/versions/node/v16.17.0/bin/node,0x400000,0x491e000,0
shared-library,/usr/lib/x86_64-linux-gnu/libc-2.31.so,0x7f4077299000,0x7f4077433000,0
shared-library,/usr/lib/x86_64-linux-gnu/libpthread-2.31.so,0x7f407748b000,0x7f40774a2000,0
shared-library,/usr/lib/x86_64-linux-gnu/libgcc_s.so.1,0x7f40774ae000,0x7f40774c3000,0
shared-library,/usr/lib/x86_64-linux-gnu/libm-2.31.so,0x7f40774c9000,0x7f407757d000,0
shared-library,/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28,0x7f4077618000,0x7f407779f000,0
shared-library,/usr/lib/x86_64-linux-gnu/libdl-2.31.so,0x7f40777fa000,0x7f40777fd000,0
shared-library,/usr/lib/x86_64-linux-gnu/ld-2.31.so,0x7f4077811000,0x7f4077835000,0
shared-library,[vdso],0x7ffe3d1e4000,0x7ffe3d1e5000,0
shared-library-end
profiler,begin,1000
tick,0x7f407749d454,1135,0,0x0,6
new,CodeRange,0x7f4060000000,0
new,MemoryChunk,0x1892fe5c0000,262144
tick,0x121b2a6,2194,0,0x0,6
new,MemoryChunk,0x27e8010c0000,262144
new,MemoryChunk,0x31b90db80000,262144
new,MemoryChunk,0x2a191fd80000,262144
new,MemoryChunk,0xc330a5c0000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x2ac221040000,262144
new,MemoryChunk,0x35e5fdec0000,262144
tick,0x121b2a6,3314,0,0x0,6
new,MemoryChunk,0x1d4983480000,262144
new,MemoryChunk,0x3e83b6140000,262144
new,MemoryChunk,0xe029200000,262144
new,MemoryChunk,0x456f1080000,262144
tick,0x121b21a,4467,0,0x0,6
new,MemoryChunk,0x1d94759c0000,262144
new,MemoryChunk,0x7f4060000000,262144
new,MemoryChunk,0x2d5a78340000,262144
tick,0x121b2a6,5561,0,0x0,6
code-creation,Builtin,2,6470,0x155d240,1340,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,6517,0x155d780,452,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,6524,0x155d960,620,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,6527,0x155dbe0,208,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,6543,0x155dcc0,352,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,6547,0x155de40,116,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,6549,0x155dec0,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,6552,0x155df00,328,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,6555,0x155e060,384,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,6558,0x155e200,412,CallFunction_ReceiverIsAny
code-creation,Builtin,2,6561,0x155e3a0,104,CallBoundFunction
code-creation,Builtin,2,6563,0x155e420,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,6566,0x155e4a0,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,6569,0x155e520,120,Call_ReceiverIsAny
code-creation,Builtin,2,6572,0x155e5a0,988,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,6575,0x155e980,984,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,6578,0x155ed60,1072,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,6581,0x155f1a0,1072,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,6584,0x155f5e0,1072,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,6587,0x155fa20,1072,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,6589,0x155fe60,944,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,6593,0x1560220,944,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,6596,0x15605e0,944,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,6600,0x15609a0,736,CallProxy
code-creation,Builtin,2,6603,0x1560ca0,116,CallVarargs
code-creation,Builtin,2,6606,0x1560d20,940,CallWithSpread
code-creation,Builtin,2,6612,0x15610e0,1948,CallWithSpread_Baseline
code-creation,Builtin,2,6615,0x1561880,1920,CallWithSpread_WithFeedback
code-creation,Builtin,2,6618,0x1562020,864,CallWithArrayLike
code-creation,Builtin,2,6620,0x15623a0,1812,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,6623,0x1562ac0,124,CallForwardVarargs
code-creation,Builtin,2,6626,0x1562b40,124,CallFunctionForwardVarargs
code-creation,Builtin,2,6629,0x1562bc0,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,6660,0x1562c60,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,6724,0x1562d60,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,6732,0x1562ea0,28,ConstructFunction
code-creation,Builtin,2,6735,0x1562ec0,104,ConstructBoundFunction
code-creation,Builtin,2,6738,0x1562f40,28,ConstructedNonConstructable
code-creation,Builtin,2,6741,0x1562f60,100,Construct
code-creation,Builtin,2,6744,0x1562fe0,116,ConstructVarargs
code-creation,Builtin,2,6748,0x1563060,964,ConstructWithSpread
code-creation,Builtin,2,6751,0x1563440,1740,ConstructWithSpread_Baseline
code-creation,Builtin,2,6754,0x1563b20,1756,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,6757,0x1564200,920,ConstructWithArrayLike
code-creation,Builtin,2,6761,0x15645a0,1644,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,6764,0x1564c20,164,ConstructForwardVarargs
code-creation,Builtin,2,6767,0x1564ce0,164,ConstructFunctionForwardVarargs
code-creation,Builtin,2,6784,0x1564da0,792,Construct_Baseline
code-creation,Builtin,2,6836,0x15650c0,812,Construct_WithFeedback
code-creation,Builtin,2,6844,0x1565400,444,JSConstructStubGeneric
code-creation,Builtin,2,6847,0x15655c0,344,JSBuiltinsConstructStub
code-creation,Builtin,2,6850,0x1565720,676,FastNewObject
code-creation,Builtin,2,6853,0x15659e0,292,FastNewClosure
code-creation,Builtin,2,6856,0x1565b20,720,ConstructProxy
code-creation,Builtin,2,6860,0x1565e00,192,JSEntry
tick,0x7f40773a70af,6878,0,0x0,6
code-creation,Builtin,2,6980,0x1565ee0,192,JSConstructEntry
code-creation,Builtin,2,7072,0x1565fc0,192,JSRunMicrotasksEntry
code-creation,Builtin,2,7152,0x15660a0,96,JSEntryTrampoline
code-creation,Builtin,2,7231,0x1566120,96,JSConstructEntryTrampoline
code-creation,Builtin,2,7309,0x15661a0,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,7360,0x15662c0,1116,StringCodePointAt
code-creation,Builtin,2,7374,0x1566720,1548,StringFromCodePointAt
code-creation,Builtin,2,7386,0x1566d40,544,StringEqual
code-creation,Builtin,2,7456,0x1566f80,276,StringGreaterThan
code-creation,Builtin,2,7540,0x15670a0,276,StringGreaterThanOrEqual
code-creation,Builtin,2,7619,0x15671c0,276,StringLessThan
code-creation,Builtin,2,7667,0x15672e0,276,StringLessThanOrEqual
code-creation,Builtin,2,7795,0x1567400,2492,StringSubstring
code-creation,Builtin,2,7896,0x1567dc0,80,OrderedHashTableHealIndex
code-creation,Builtin,2,7923,0x1567e20,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,7931,0x15682c0,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,7934,0x1568320,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,7937,0x1568380,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,7941,0x15683e0,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,7946,0x1568440,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,7950,0x15684a0,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,7969,0x1568500,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,7976,0x1568560,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,7979,0x1568640,52,InterpreterOnStackReplacement
tick,0x7f40773a70af,7992,0,0x0,6
code-creation,Builtin,2,8115,0x1568680,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,8211,0x15688e0,56,BaselineOnStackReplacement
code-creation,Builtin,2,8261,0x1568920,84,BaselineLeaveFrame
code-creation,Builtin,2,8275,0x1568980,212,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,8287,0x1568a60,220,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,8295,0x1568b40,188,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,8305,0x1568c00,1000,CompileLazy
code-creation,Builtin,2,8316,0x1569000,72,CompileLazyDeoptimizedCode
code-creation,Builtin,2,8356,0x1569060,252,InstantiateAsmJs
code-creation,Builtin,2,8434,0x1569160,32,NotifyDeoptimized
code-creation,Builtin,2,8483,0x15691a0,784,DeoptimizationEntry_Eager
code-creation,Builtin,2,8502,0x15694c0,784,DeoptimizationEntry_Soft
code-creation,Builtin,2,8509,0x15697e0,784,DeoptimizationEntry_Bailout
code-creation,Builtin,2,8515,0x1569b00,784,DeoptimizationEntry_Lazy
code-creation,Builtin,2,8594,0x1569e20,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,8674,0x1569e60,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,8723,0x1569ea0,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,8805,0x1569ee0,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,8897,0x1569f40,288,CallApiCallback
code-creation,Builtin,2,8961,0x156a080,272,CallApiGetter
code-creation,Builtin,2,8999,0x156a1a0,12,HandleApiCall
code-creation,Builtin,2,9052,0x156a1c0,12,HandleApiCallAsFunction
code-creation,Builtin,2,9061,0x156a1e0,12,HandleApiCallAsConstructor
code-creation,Builtin,2,9064,0x156a200,64,AllocateInYoungGeneration
code-creation,Builtin,2,9068,0x156a260,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,9086,0x156a2a0,64,AllocateInOldGeneration
code-creation,Builtin,2,9126,0x156a300,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,9180,0x156a340,424,CopyFastSmiOrObjectElements
code-creation,Builtin,2,9233,0x156a500,496,GrowFastDoubleElements
code-creation,Builtin,2,9286,0x156a700,396,GrowFastSmiOrObjectElements
code-creation,Builtin,2,9339,0x156a8a0,388,DebugBreakTrampoline
code-creation,Builtin,2,9346,0x156aa40,180,ToNumber
tick,0x7f40773a70af,9377,0,0x0,6
code-creation,Builtin,2,9469,0x156ab00,292,ToNumber_Baseline
code-creation,Builtin,2,9520,0x156ac40,360,ToNumeric_Baseline
code-creation,Builtin,2,9527,0x156adc0,104,PlainPrimitiveToNumber
code-creation,Builtin,2,9530,0x156ae40,212,ToNumberConvertBigInt
code-creation,Builtin,2,9534,0x156af20,132,Typeof
code-creation,Builtin,2,9537,0x156afc0,104,BigIntToI64
code-creation,Builtin,2,9540,0x156b040,4,BigIntToI32Pair
code-creation,Builtin,2,9542,0x156b060,232,I64ToBigInt
code-creation,Builtin,2,9561,0x156b160,4,I32PairToBigInt
code-creation,Builtin,2,9599,0x156b180,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,9606,0x156b200,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,9609,0x156c2a0,15704,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,9612,0x1570000,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,9615,0x1570120,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,9620,0x1570160,12,LoadIC_StringLength
code-creation,Builtin,2,9626,0x1570180,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,9643,0x15701a0,3056,LoadIC_NoFeedback
code-creation,Builtin,2,9650,0x1570da0,32,StoreGlobalIC_Slow
code-creation,Builtin,2,9653,0x1570de0,7284,StoreIC_NoFeedback
code-creation,Builtin,2,9656,0x1572a60,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,9676,0x1572b20,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,9714,0x1572b80,240,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,9721,0x1572c80,240,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,9725,0x1572d80,240,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,9729,0x1572e80,240,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,9733,0x1572f80,13924,StoreFastElementIC_Standard
code-creation,Builtin,2,9736,0x1576600,9660,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,9754,0x1578bc0,13104,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,9792,0x157bf00,6160,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,9799,0x157d720,8468,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,9802,0x157f840,19332,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,9806,0x15843e0,8468,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,9825,0x1586500,11028,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,9863,0x1589020,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,9870,0x1589340,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,9873,0x1589400,72,HasIndexedInterceptorIC
code-creation,Builtin,2,9876,0x1589460,88,DynamicCheckMapsTrampoline
code-creation,Builtin,2,9896,0x15894c0,260,DynamicCheckMaps
code-creation,Builtin,2,9907,0x15895e0,88,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,9911,0x1589640,224,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,9973,0x1589740,148,EnqueueMicrotask
code-creation,Builtin,2,10025,0x15897e0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,10064,0x1589800,3504,RunMicrotasks
code-creation,Builtin,2,10116,0x158a5c0,2624,HasProperty
code-creation,Builtin,2,10158,0x158b020,1144,DeleteProperty
code-creation,Builtin,2,10165,0x158b4a0,1972,CopyDataProperties
code-creation,Builtin,2,10168,0x158bc60,9156,SetDataProperties
code-creation,Builtin,2,10187,0x158e040,28,Abort
code-creation,Builtin,2,10239,0x158e060,28,AbortCSAAssert
code-creation,Builtin,2,10261,0x158e080,12,EmptyFunction
code-creation,Builtin,2,10314,0x158e0a0,12,Illegal
code-creation,Builtin,2,10368,0x158e0c0,12,StrictPoisonPillThrower
code-creation,Builtin,2,10433,0x158e0e0,12,UnsupportedThrower
code-creation,Builtin,2,10442,0x158e100,64,ReturnReceiver
code-creation,Builtin,2,10446,0x158e160,28,ArrayConstructor
code-creation,Builtin,2,10450,0x158e180,404,ArrayConstructorImpl
code-creation,Builtin,2,10454,0x158e320,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,10460,0x158e400,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,10465,0x158e4e0,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,10485,0x158e5a0,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,10542,0x158e660,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,10551,0x158e720,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,10554,0x158e7e0,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,10558,0x158e8a0,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,10565,0x158e960,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,10617,0x158eb80,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,10657,0x158ed80,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,10697,0x158ef40,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,10739,0x158f0e0,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,10748,0x158f2a0,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,10751,0x158f440,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,10755,0x158f620,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,10776,0x158f7c0,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,10830,0x158f820,12,ArrayConcat
code-creation,Builtin,2,10871,0x158f840,12,ArrayPrototypeFill
code-creation,Builtin,2,10914,0x158f860,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,10968,0x158fc20,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,11023,0x158fcc0,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,11085,0x158fda0,548,ArrayIncludes
code-creation,Builtin,2,11140,0x158ffe0,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,11194,0x1590340,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,11202,0x15903c0,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,11205,0x1590440,552,ArrayIndexOf
code-creation,Builtin,2,11208,0x1590680,12,ArrayPop
code-creation,Builtin,2,11210,0x15906a0,616,ArrayPrototypePop
code-creation,Builtin,2,11213,0x1590920,12,ArrayPush
code-creation,Builtin,2,11249,0x1590940,2412,ArrayPrototypePush
code-creation,Builtin,2,11302,0x15912c0,12,ArrayShift
code-creation,Builtin,2,11342,0x15912e0,12,ArrayUnshift
code-creation,Builtin,2,11395,0x1591300,944,CloneFastJSArray
code-creation,Builtin,2,11419,0x15916c0,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,11427,0x1591f60,968,ExtractFastJSArray
code-creation,Builtin,2,11447,0x1592340,260,ArrayPrototypeEntries
code-creation,Builtin,2,11501,0x1592460,248,ArrayPrototypeKeys
code-creation,Builtin,2,11522,0x1592560,260,ArrayPrototypeValues
code-creation,Builtin,2,11571,0x1592680,4424,ArrayIteratorPrototypeNext
code-creation,Builtin,2,11624,0x15937e0,4164,FlattenIntoArray
code-creation,Builtin,2,11662,0x1594840,4164,FlatMapIntoArray
code-creation,Builtin,2,11714,0x15958a0,372,ArrayPrototypeFlat
code-creation,Builtin,2,11767,0x1595a20,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,11819,0x1595be0,12,ArrayBufferConstructor
code-creation,Builtin,2,11890,0x1595c00,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,11943,0x1595c20,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,11995,0x1595c40,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,12047,0x1595c60,804,AsyncFunctionEnter
code-creation,Builtin,2,12099,0x1595fa0,132,AsyncFunctionReject
code-creation,Builtin,2,12147,0x1596040,128,AsyncFunctionResolve
code-creation,Builtin,2,12185,0x15960e0,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,12223,0x1596100,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,12260,0x1596c00,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,12268,0x1597700,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,12303,0x15977c0,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,12340,0x1597880,12,BigIntConstructor
code-creation,Builtin,2,12376,0x15978a0,12,BigIntAsUintN
code-creation,Builtin,2,12414,0x15978c0,12,BigIntAsIntN
code-creation,Builtin,2,12450,0x15978e0,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,12489,0x1597900,12,BigIntPrototypeToString
code-creation,Builtin,2,12496,0x1597920,12,BigIntPrototypeValueOf
code-creation,Builtin,2,12499,0x1597940,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,12502,0x1597960,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,12506,0x1597980,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,12522,0x15979a0,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,12528,0x15979c0,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,12562,0x15979e0,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,12595,0x1597a00,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,12617,0x1597a20,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,12654,0x1597a40,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,12692,0x1597a60,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,12729,0x1597a80,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,12765,0x1597aa0,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,12803,0x1597ac0,12,CallSitePrototypeGetThis
code-creation,Builtin,2,12840,0x1597ae0,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,12878,0x1597b00,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,12930,0x1597b20,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,12952,0x1597b40,12,CallSitePrototypeIsEval
code-creation,Builtin,2,13004,0x1597b60,12,CallSitePrototypeIsNative
code-creation,Builtin,2,13057,0x1597b80,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,13109,0x1597ba0,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,13161,0x1597bc0,12,CallSitePrototypeToString
code-creation,Builtin,2,13211,0x1597be0,12,ConsoleDebug
code-creation,Builtin,2,13267,0x1597c00,12,ConsoleError
code-creation,Builtin,2,13318,0x1597c20,12,ConsoleInfo
code-creation,Builtin,2,13355,0x1597c40,12,ConsoleLog
code-creation,Builtin,2,13393,0x1597c60,12,ConsoleWarn
code-creation,Builtin,2,13447,0x1597c80,12,ConsoleDir
code-creation,Builtin,2,13499,0x1597ca0,12,ConsoleDirXml
code-creation,Builtin,2,13520,0x1597cc0,12,ConsoleTable
code-creation,Builtin,2,13526,0x1597ce0,12,ConsoleTrace
code-creation,Builtin,2,13549,0x1597d00,12,ConsoleGroup
code-creation,Builtin,2,13599,0x1597d20,12,ConsoleGroupCollapsed
code-creation,Builtin,2,13635,0x1597d40,12,ConsoleGroupEnd
code-creation,Builtin,2,13672,0x1597d60,12,ConsoleClear
code-creation,Builtin,2,13711,0x1597d80,12,ConsoleCount
code-creation,Builtin,2,13748,0x1597da0,12,ConsoleCountReset
code-creation,Builtin,2,13785,0x1597dc0,12,ConsoleAssert
code-creation,Builtin,2,13822,0x1597de0,12,ConsoleProfile
code-creation,Builtin,2,13875,0x1597e00,12,ConsoleProfileEnd
code-creation,Builtin,2,13929,0x1597e20,12,ConsoleTime
code-creation,Builtin,2,13980,0x1597e40,12,ConsoleTimeLog
code-creation,Builtin,2,14031,0x1597e60,12,ConsoleTimeEnd
code-creation,Builtin,2,14081,0x1597e80,12,ConsoleTimeStamp
code-creation,Builtin,2,14132,0x1597ea0,12,ConsoleContext
code-creation,Builtin,2,14183,0x1597ec0,12,DataViewConstructor
code-creation,Builtin,2,14234,0x1597ee0,12,DateConstructor
code-creation,Builtin,2,14284,0x1597f00,220,DatePrototypeGetDate
code-creation,Builtin,2,14291,0x1597fe0,220,DatePrototypeGetDay
code-creation,Builtin,2,14297,0x15980c0,220,DatePrototypeGetFullYear
code-creation,Builtin,2,14300,0x15981a0,220,DatePrototypeGetHours
code-creation,Builtin,2,14319,0x1598280,196,DatePrototypeGetMilliseconds
tick,0x7f40773a70af,14384,0,0x0,6
tick,0x7f40773a70af,14443,0,0x0,6
tick,0x7f40773a70af,14480,0,0x0,6
tick,0x7f40773a70af,14535,0,0x0,6
tick,0x7f4077497839,14571,0,0x0,6
code-creation,Builtin,2,14621,0x1598360,220,DatePrototypeGetMinutes
code-creation,Builtin,2,14734,0x1598440,220,DatePrototypeGetMonth
code-creation,Builtin,2,14742,0x1598520,220,DatePrototypeGetSeconds
code-creation,Builtin,2,14746,0x1598600,124,DatePrototypeGetTime
code-creation,Builtin,2,14748,0x1598680,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,14752,0x1598760,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,14755,0x1598840,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,14758,0x1598920,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,14762,0x1598a00,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,14765,0x1598ae0,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,14771,0x1598bc0,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,14774,0x1598ca0,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,14777,0x1598d80,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,14796,0x1598e60,124,DatePrototypeValueOf
code-creation,Builtin,2,14803,0x1598ee0,352,DatePrototypeToPrimitive
code-creation,Builtin,2,14806,0x1599060,12,DatePrototypeGetYear
code-creation,Builtin,2,14809,0x1599080,12,DatePrototypeSetYear
code-creation,Builtin,2,14812,0x15990a0,12,DateNow
code-creation,Builtin,2,14814,0x15990c0,12,DateParse
code-creation,Builtin,2,14817,0x15990e0,12,DatePrototypeSetDate
code-creation,Builtin,2,14820,0x1599100,12,DatePrototypeSetFullYear
code-creation,Builtin,2,14826,0x1599120,12,DatePrototypeSetHours
code-creation,Builtin,2,14829,0x1599140,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,14832,0x1599160,12,DatePrototypeSetMinutes
code-creation,Builtin,2,14852,0x1599180,12,DatePrototypeSetMonth
code-creation,Builtin,2,14858,0x15991a0,12,DatePrototypeSetSeconds
code-creation,Builtin,2,14861,0x15991c0,12,DatePrototypeSetTime
code-creation,Builtin,2,14864,0x15991e0,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,14867,0x1599200,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,14870,0x1599220,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,14874,0x1599240,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,14877,0x1599260,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,14880,0x1599280,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,14884,0x15992a0,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,14887,0x15992c0,12,DatePrototypeToDateString
code-creation,Builtin,2,14890,0x15992e0,12,DatePrototypeToISOString
code-creation,Builtin,2,14893,0x1599300,12,DatePrototypeToUTCString
code-creation,Builtin,2,14895,0x1599320,12,DatePrototypeToString
code-creation,Builtin,2,14898,0x1599340,12,DatePrototypeToTimeString
code-creation,Builtin,2,14901,0x1599360,12,DatePrototypeToJson
code-creation,Builtin,2,14904,0x1599380,12,DateUTC
code-creation,Builtin,2,14906,0x15993a0,12,ErrorConstructor
code-creation,Builtin,2,14909,0x15993c0,12,ErrorCaptureStackTrace
code-creation,Builtin,2,14912,0x15993e0,12,ErrorPrototypeToString
code-creation,Builtin,2,14915,0x1599400,12,FunctionConstructor
code-creation,Builtin,2,14918,0x1599420,68,FunctionPrototypeApply
code-creation,Builtin,2,14921,0x1599480,12,FunctionPrototypeBind
code-creation,Builtin,2,14946,0x15994a0,32,FunctionPrototypeCall
code-creation,Builtin,2,14952,0x15994e0,12,FunctionPrototypeToString
code-creation,Builtin,2,14956,0x1599500,192,CreateIterResultObject
code-creation,Builtin,2,14959,0x15995e0,788,CreateGeneratorObject
code-creation,Builtin,2,14962,0x1599900,12,GeneratorFunctionConstructor
code-creation,Builtin,2,14965,0x1599920,412,GeneratorPrototypeNext
code-creation,Builtin,2,14968,0x1599ac0,420,GeneratorPrototypeReturn
code-creation,Builtin,2,14971,0x1599c80,424,GeneratorPrototypeThrow
code-creation,Builtin,2,14973,0x1599e40,12,AsyncFunctionConstructor
code-creation,Builtin,2,14976,0x1599e60,368,SuspendGeneratorBaseline
code-creation,Builtin,2,14979,0x1599fe0,88,ResumeGeneratorBaseline
code-creation,Builtin,2,14982,0x159a040,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,14986,0x159a080,12,GlobalDecodeURI
code-creation,Builtin,2,14989,0x159a0a0,12,GlobalDecodeURIComponent
code-creation,Builtin,2,14992,0x159a0c0,12,GlobalEncodeURI
code-creation,Builtin,2,14995,0x159a0e0,12,GlobalEncodeURIComponent
code-creation,Builtin,2,14998,0x159a100,12,GlobalEscape
code-creation,Builtin,2,15000,0x159a120,12,GlobalUnescape
code-creation,Builtin,2,15003,0x159a140,12,GlobalEval
code-creation,Builtin,2,15005,0x159a160,132,GlobalIsFinite
code-creation,Builtin,2,15008,0x159a200,124,GlobalIsNaN
code-creation,Builtin,2,15010,0x159a280,12,JsonParse
code-creation,Builtin,2,15013,0x159a2a0,12,JsonStringify
code-creation,Builtin,2,15016,0x159a2c0,4608,LoadIC
code-creation,Builtin,2,15018,0x159b4e0,4296,LoadIC_Megamorphic
code-creation,Builtin,2,15021,0x159c5c0,4520,LoadIC_Noninlined
code-creation,Builtin,2,15024,0x159d780,44,LoadICTrampoline
code-creation,Builtin,2,15026,0x159d7c0,24,LoadICBaseline
code-creation,Builtin,2,15029,0x159d7e0,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,15032,0x159d820,7376,LoadSuperIC
code-creation,Builtin,2,15035,0x159f500,24,LoadSuperICBaseline
code-creation,Builtin,2,15037,0x159f520,8132,KeyedLoadIC
code-creation,Builtin,2,15040,0x15a1500,13076,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,15043,0x15a4820,44,KeyedLoadICTrampoline
code-creation,Builtin,2,15045,0x15a4860,24,KeyedLoadICBaseline
code-creation,Builtin,2,15048,0x15a4880,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,15051,0x15a48c0,5064,StoreGlobalIC
code-creation,Builtin,2,15053,0x15a5ca0,44,StoreGlobalICTrampoline
code-creation,Builtin,2,15056,0x15a5ce0,24,StoreGlobalICBaseline
code-creation,Builtin,2,15059,0x15a5d00,5304,StoreIC
code-creation,Builtin,2,15061,0x15a71c0,44,StoreICTrampoline
code-creation,Builtin,2,15064,0x15a7200,24,StoreICBaseline
code-creation,Builtin,2,15066,0x15a7220,5740,KeyedStoreIC
code-creation,Builtin,2,15069,0x15a88a0,44,KeyedStoreICTrampoline
code-creation,Builtin,2,15072,0x15a88e0,24,KeyedStoreICBaseline
code-creation,Builtin,2,15074,0x15a8900,404,StoreInArrayLiteralIC
code-creation,Builtin,2,15077,0x15a8aa0,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,15080,0x15a8ac0,140,LookupContextBaseline
code-creation,Builtin,2,15083,0x15a8b60,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,15086,0x15a8c00,3244,LoadGlobalIC
code-creation,Builtin,2,15088,0x15a98c0,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,15091,0x15aa560,44,LoadGlobalICTrampoline
code-creation,Builtin,2,15094,0x15aa5a0,24,LoadGlobalICBaseline
code-creation,Builtin,2,15097,0x15aa5c0,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,15099,0x15aa600,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,15102,0x15aa620,140,LookupGlobalICBaseline
code-creation,Builtin,2,15105,0x15aa6c0,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,15108,0x15aa760,2056,CloneObjectIC
code-creation,Builtin,2,15110,0x15aaf80,24,CloneObjectICBaseline
code-creation,Builtin,2,15113,0x15aafa0,1988,CloneObjectIC_Slow
code-creation,Builtin,2,15116,0x15ab780,2764,KeyedHasIC
code-creation,Builtin,2,15118,0x15ac260,24,KeyedHasICBaseline
code-creation,Builtin,2,15121,0x15ac280,2620,KeyedHasIC_Megamorphic
code-creation,Builtin,2,15129,0x15accc0,1428,IterableToList
code-creation,Builtin,2,15132,0x15ad260,1228,IterableToFixedArray
code-creation,Builtin,2,15135,0x15ad740,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,15137,0x15ada40,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,15141,0x15ada80,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,15143,0x15adb00,976,IterableToFixedArrayForWasm
code-creation,Builtin,2,15146,0x15adee0,1616,StringListFromIterable
code-creation,Builtin,2,15149,0x15ae540,1220,FindOrderedHashMapEntry
code-creation,Builtin,2,15152,0x15aea20,4156,MapConstructor
code-creation,Builtin,2,15154,0x15afa60,1960,MapPrototypeSet
code-creation,Builtin,2,15157,0x15b0220,1524,MapPrototypeDelete
code-creation,Builtin,2,15160,0x15b0820,204,MapPrototypeGet
code-creation,Builtin,2,15162,0x15b0900,164,MapPrototypeHas
code-creation,Builtin,2,15165,0x15b09c0,12,MapPrototypeClear
code-creation,Builtin,2,15168,0x15b09e0,284,MapPrototypeEntries
code-creation,Builtin,2,15171,0x15b0b00,144,MapPrototypeGetSize
code-creation,Builtin,2,15174,0x15b0ba0,492,MapPrototypeForEach
code-creation,Builtin,2,15176,0x15b0da0,284,MapPrototypeKeys
code-creation,Builtin,2,15179,0x15b0ec0,284,MapPrototypeValues
code-creation,Builtin,2,15182,0x15b0fe0,1048,MapIteratorPrototypeNext
code-creation,Builtin,2,15185,0x15b1400,1176,MapIteratorToList
code-creation,Builtin,2,15187,0x15b18a0,12,NumberPrototypeToExponential
code-creation,Builtin,2,15190,0x15b18c0,12,NumberPrototypeToFixed
code-creation,Builtin,2,15193,0x15b18e0,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,15195,0x15b1900,12,NumberPrototypeToPrecision
code-creation,Builtin,2,15198,0x15b1920,328,SameValue
code-creation,Builtin,2,15222,0x15b1a80,204,SameValueNumbersOnly
code-creation,Builtin,2,15229,0x15b1b60,792,Add_Baseline
code-creation,Builtin,2,15232,0x15b1e80,828,Subtract_Baseline
code-creation,Builtin,2,15234,0x15b21c0,808,Multiply_Baseline
code-creation,Builtin,2,15237,0x15b2500,832,Divide_Baseline
code-creation,Builtin,2,15240,0x15b2860,764,Modulus_Baseline
code-creation,Builtin,2,15242,0x15b2b60,804,Exponentiate_Baseline
code-creation,Builtin,2,15245,0x15b2ea0,708,BitwiseAnd_Baseline
code-creation,Builtin,2,15248,0x15b3180,700,BitwiseOr_Baseline
code-creation,Builtin,2,15251,0x15b3440,708,BitwiseXor_Baseline
code-creation,Builtin,2,15254,0x15b3720,720,ShiftLeft_Baseline
code-creation,Builtin,2,15256,0x15b3a00,720,ShiftRight_Baseline
code-creation,Builtin,2,15259,0x15b3ce0,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,15262,0x15b4040,720,Add_WithFeedback
code-creation,Builtin,2,15264,0x15b4320,780,Subtract_WithFeedback
code-creation,Builtin,2,15267,0x15b4640,776,Multiply_WithFeedback
code-creation,Builtin,2,15270,0x15b4960,804,Divide_WithFeedback
code-creation,Builtin,2,15272,0x15b4ca0,724,Modulus_WithFeedback
code-creation,Builtin,2,15275,0x15b4f80,760,Exponentiate_WithFeedback
code-creation,Builtin,2,15278,0x15b5280,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,15281,0x15b5540,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,15283,0x15b5800,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,15286,0x15b5ac0,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,15289,0x15b5d80,692,ShiftRight_WithFeedback
code-creation,Builtin,2,15292,0x15b6040,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,15295,0x15b6380,1696,Equal_Baseline
code-creation,Builtin,2,15297,0x15b6a40,908,StrictEqual_Baseline
code-creation,Builtin,2,15300,0x15b6de0,1264,LessThan_Baseline
code-creation,Builtin,2,15302,0x15b72e0,1264,GreaterThan_Baseline
code-creation,Builtin,2,15305,0x15b77e0,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,15308,0x15b7ce0,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,15310,0x15b81e0,1620,Equal_WithFeedback
code-creation,Builtin,2,15313,0x15b8840,940,StrictEqual_WithFeedback
code-creation,Builtin,2,15316,0x15b8c00,1240,LessThan_WithFeedback
code-creation,Builtin,2,15318,0x15b90e0,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,15321,0x15b95c0,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,15324,0x15b9aa0,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,15335,0x15b9f80,332,BitwiseNot_Baseline
code-creation,Builtin,2,15337,0x15ba0e0,460,Decrement_Baseline
code-creation,Builtin,2,15340,0x15ba2c0,464,Increment_Baseline
code-creation,Builtin,2,15343,0x15ba4a0,488,Negate_Baseline
code-creation,Builtin,2,15345,0x15ba6a0,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,15348,0x15ba7e0,440,Decrement_WithFeedback
code-creation,Builtin,2,15351,0x15ba9a0,444,Increment_WithFeedback
code-creation,Builtin,2,15354,0x15bab60,472,Negate_WithFeedback
code-creation,Builtin,2,15356,0x15bad40,252,ObjectAssign
code-creation,Builtin,2,15359,0x15bae40,864,ObjectCreate
code-creation,Builtin,2,15362,0x15bb1c0,12,ObjectDefineGetter
code-creation,Builtin,2,15364,0x15bb1e0,12,ObjectDefineProperties
code-creation,Builtin,2,15367,0x15bb200,12,ObjectDefineProperty
code-creation,Builtin,2,15370,0x15bb220,12,ObjectDefineSetter
code-creation,Builtin,2,15373,0x15bb240,1512,ObjectEntries
code-creation,Builtin,2,15375,0x15bb840,12,ObjectFreeze
code-creation,Builtin,2,15378,0x15bb860,5592,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,15380,0x15bce40,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,15383,0x15bce60,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,15386,0x15bd0c0,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,15389,0x15bd0e0,164,ObjectHasOwn
code-creation,Builtin,2,15392,0x15bd1a0,388,ObjectIs
code-creation,Builtin,2,15394,0x15bd340,12,ObjectIsFrozen
code-creation,Builtin,2,15397,0x15bd360,12,ObjectIsSealed
code-creation,Builtin,2,15400,0x15bd380,536,ObjectKeys
code-creation,Builtin,2,15402,0x15bd5a0,12,ObjectLookupGetter
code-creation,Builtin,2,15405,0x15bd5c0,12,ObjectLookupSetter
code-creation,Builtin,2,15407,0x15bd5e0,2264,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,15410,0x15bdec0,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,15413,0x15bdfa0,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,15416,0x15bdfc0,12,ObjectPrototypeGetProto
code-creation,Builtin,2,15419,0x15bdfe0,12,ObjectPrototypeSetProto
code-creation,Builtin,2,15421,0x15be000,12,ObjectSeal
code-creation,Builtin,2,15424,0x15be020,1108,ObjectToString
code-creation,Builtin,2,15427,0x15be480,1280,ObjectValues
code-creation,Builtin,2,15429,0x15be9a0,280,OrdinaryHasInstance
code-creation,Builtin,2,15432,0x15beac0,344,InstanceOf
code-creation,Builtin,2,15435,0x15bec20,628,InstanceOf_WithFeedback
code-creation,Builtin,2,15437,0x15beea0,648,InstanceOf_Baseline
code-creation,Builtin,2,15440,0x15bf140,268,ForInEnumerate
code-creation,Builtin,2,15443,0x15bf260,148,ForInPrepare
code-creation,Builtin,2,15446,0x15bf300,2576,ForInFilter
code-creation,Builtin,2,15448,0x15bfd20,52,ReflectApply
code-creation,Builtin,2,15451,0x15bfd60,60,ReflectConstruct
code-creation,Builtin,2,15454,0x15bfda0,12,ReflectDefineProperty
code-creation,Builtin,2,15456,0x15bfdc0,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,15460,0x15bfde0,12,ReflectOwnKeys
code-creation,Builtin,2,15463,0x15bfe00,12,ReflectSet
code-creation,Builtin,2,15465,0x15bfe20,12,RegExpCapture1Getter
code-creation,Builtin,2,15468,0x15bfe40,12,RegExpCapture2Getter
code-creation,Builtin,2,15471,0x15bfe60,12,RegExpCapture3Getter
code-creation,Builtin,2,15473,0x15bfe80,12,RegExpCapture4Getter
code-creation,Builtin,2,15476,0x15bfea0,12,RegExpCapture5Getter
code-creation,Builtin,2,15479,0x15bfec0,12,RegExpCapture6Getter
code-creation,Builtin,2,15481,0x15bfee0,12,RegExpCapture7Getter
code-creation,Builtin,2,15484,0x15bff00,12,RegExpCapture8Getter
code-creation,Builtin,2,15520,0x15bff20,12,RegExpCapture9Getter
code-creation,Builtin,2,15542,0x15bff40,2212,RegExpConstructor
code-creation,Builtin,2,15549,0x15c0800,12,RegExpInputGetter
code-creation,Builtin,2,15552,0x15c0820,12,RegExpInputSetter
code-creation,Builtin,2,15554,0x15c0840,12,RegExpLastMatchGetter
code-creation,Builtin,2,15557,0x15c0860,12,RegExpLastParenGetter
code-creation,Builtin,2,15560,0x15c0880,12,RegExpLeftContextGetter
code-creation,Builtin,2,15565,0x15c08a0,908,RegExpPrototypeCompile
code-creation,Builtin,2,15571,0x15c0c40,12,RegExpPrototypeToString
code-creation,Builtin,2,15574,0x15c0c60,12,RegExpRightContextGetter
code-creation,Builtin,2,15578,0x15c0c80,248,RegExpExecAtom
code-creation,Builtin,2,15581,0x15c0d80,1024,RegExpExecInternal
code-creation,Builtin,2,15584,0x15c11a0,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,15589,0x15c11c0,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,15594,0x15c11e0,2676,SetConstructor
code-creation,Builtin,2,15598,0x15c1c60,1276,SetPrototypeHas
code-creation,Builtin,2,15601,0x15c2160,1708,SetPrototypeAdd
code-creation,Builtin,2,15604,0x15c2820,1476,SetPrototypeDelete
code-creation,Builtin,2,15607,0x15c2e00,12,SetPrototypeClear
code-creation,Builtin,2,15609,0x15c2e20,284,SetPrototypeEntries
code-creation,Builtin,2,15612,0x15c2f40,144,SetPrototypeGetSize
code-creation,Builtin,2,15615,0x15c2fe0,444,SetPrototypeForEach
code-creation,Builtin,2,15618,0x15c31a0,284,SetPrototypeValues
code-creation,Builtin,2,15620,0x15c32c0,984,SetIteratorPrototypeNext
code-creation,Builtin,2,15624,0x15c36a0,1104,SetOrSetIteratorToList
code-creation,Builtin,2,15627,0x15c3b00,12,SharedArrayBufferPrototypeGetByteLength
tick,0x7f40773a70af,15635,0,0x0,6
code-creation,Builtin,2,15719,0x15c3b20,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,15769,0x15c3b40,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,15776,0x15c3b60,1280,AtomicsLoad
code-creation,Builtin,2,15779,0x15c4080,1008,AtomicsStore
code-creation,Builtin,2,15782,0x15c4480,1704,AtomicsExchange
code-creation,Builtin,2,15785,0x15c4b40,2092,AtomicsCompareExchange
code-creation,Builtin,2,15788,0x15c5380,1804,AtomicsAdd
code-creation,Builtin,2,15791,0x15c5aa0,1804,AtomicsSub
code-creation,Builtin,2,15794,0x15c61c0,1804,AtomicsAnd
code-creation,Builtin,2,15798,0x15c68e0,1804,AtomicsOr
code-creation,Builtin,2,15801,0x15c7000,1804,AtomicsXor
code-creation,Builtin,2,15804,0x15c7720,12,AtomicsNotify
code-creation,Builtin,2,15807,0x15c7740,12,AtomicsIsLockFree
code-creation,Builtin,2,15810,0x15c7760,12,AtomicsWait
code-creation,Builtin,2,15813,0x15c7780,12,AtomicsWaitAsync
code-creation,Builtin,2,15816,0x15c77a0,12,StringFromCodePoint
code-creation,Builtin,2,15820,0x15c77c0,1428,StringFromCharCode
code-creation,Builtin,2,15823,0x15c7d60,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,15827,0x15c7d80,4360,StringPrototypeMatchAll
code-creation,Builtin,2,15830,0x15c8ea0,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,15834,0x15c8ec0,1228,StringPrototypeReplace
code-creation,Builtin,2,15837,0x15c93a0,2896,StringPrototypeSplit
code-creation,Builtin,2,15841,0x15c9f00,12,StringRaw
code-creation,Builtin,2,15844,0x15c9f20,12,SymbolConstructor
code-creation,Builtin,2,15846,0x15c9f40,12,SymbolFor
code-creation,Builtin,2,15849,0x15c9f60,12,SymbolKeyFor
code-creation,Builtin,2,15852,0x15c9f80,88,TypedArrayBaseConstructor
code-creation,Builtin,2,15855,0x15c9fe0,256,TypedArrayConstructor
code-creation,Builtin,2,15858,0x15ca100,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,15861,0x15ca120,884,TypedArrayPrototypeByteLength
code-creation,Builtin,2,15864,0x15ca4a0,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,15867,0x15ca620,588,TypedArrayPrototypeLength
code-creation,Builtin,2,15870,0x15ca880,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,15875,0x15ca8a0,12,TypedArrayPrototypeFill
code-creation,Builtin,2,15878,0x15ca8c0,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,15917,0x15ca8e0,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,15924,0x15ca900,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,15928,0x15ca920,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,15930,0x15ca940,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,15933,0x15caa80,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,15936,0x15cd440,792,GenericJSToWasmWrapper
code-creation,Builtin,2,15939,0x15cd760,148,WasmCompileLazy
code-creation,Builtin,2,15942,0x15cd800,168,WasmDebugBreak
code-creation,Builtin,2,15945,0x15cd8c0,16,WasmOnStackReplace
code-creation,Builtin,2,15947,0x15cd8e0,140,WasmFloat32ToNumber
code-creation,Builtin,2,15956,0x15cd980,152,WasmFloat64ToNumber
code-creation,Builtin,2,15959,0x15cda20,4,WasmI32AtomicWait32
code-creation,Builtin,2,15962,0x15cda40,4,WasmI64AtomicWait32
code-creation,Builtin,2,15965,0x15cda60,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,15967,0x15cda80,4316,WeakMapConstructor
code-creation,Builtin,2,15970,0x15ceb60,196,WeakMapLookupHashIndex
code-creation,Builtin,2,15973,0x15cec40,220,WeakMapGet
code-creation,Builtin,2,15976,0x15ced20,176,WeakMapPrototypeHas
code-creation,Builtin,2,15978,0x15cede0,204,WeakMapPrototypeSet
code-creation,Builtin,2,15981,0x15ceec0,144,WeakMapPrototypeDelete
code-creation,Builtin,2,15984,0x15cef60,2876,WeakSetConstructor
code-creation,Builtin,2,15986,0x15cfaa0,176,WeakSetPrototypeHas
code-creation,Builtin,2,15989,0x15cfb60,204,WeakSetPrototypeAdd
code-creation,Builtin,2,15992,0x15cfc40,144,WeakSetPrototypeDelete
code-creation,Builtin,2,15995,0x15cfce0,372,WeakCollectionDelete
code-creation,Builtin,2,15998,0x15cfe60,768,WeakCollectionSet
code-creation,Builtin,2,16001,0x15d0180,296,AsyncGeneratorResolve
code-creation,Builtin,2,16005,0x15d02c0,100,AsyncGeneratorReject
code-creation,Builtin,2,16008,0x15d0340,2760,AsyncGeneratorYield
code-creation,Builtin,2,16012,0x15d0e20,2872,AsyncGeneratorReturn
code-creation,Builtin,2,16015,0x15d1960,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,16018,0x15d1aa0,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,16022,0x15d1ac0,1016,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,16025,0x15d1ec0,1024,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,16028,0x15d22e0,1024,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,16032,0x15d2700,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,16035,0x15d31c0,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,16038,0x15d3c80,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,16042,0x15d3d00,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,16045,0x15d3da0,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,16048,0x15d3e20,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,16051,0x15d3ea0,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,16055,0x15d3f20,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,16058,0x15d3fc0,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,16060,0x15d4600,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,16064,0x15d4cc0,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,16066,0x15d5380,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,16069,0x15d5400,212,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,16073,0x15d54e0,212,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,16076,0x15d55c0,196,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,16079,0x15d56a0,388,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,16083,0x15d5840,388,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,16086,0x15d59e0,212,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,16090,0x15d5ac0,212,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,16094,0x15d5ba0,196,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,16098,0x15d5c80,388,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,16101,0x15d5e20,388,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,16105,0x15d5fc0,4,DirectCEntry
code-creation,Builtin,2,16107,0x15d5fe0,1096,StringAdd_CheckNone
code-creation,Builtin,2,16110,0x15d6440,2480,SubString
code-creation,Builtin,2,16112,0x15d6e00,16,StackCheck
code-creation,Builtin,2,16115,0x15d6e20,84,DoubleToI
code-creation,Builtin,2,16118,0x15d6e80,2236,GetProperty
code-creation,Builtin,2,16121,0x15d7740,2308,GetPropertyWithReceiver
code-creation,Builtin,2,16124,0x15d8060,15844,SetProperty
code-creation,Builtin,2,16126,0x15dbe60,13404,SetPropertyInLiteral
code-creation,Builtin,2,16132,0x15df2c0,8,MemCopyUint8Uint8
code-creation,Builtin,2,16135,0x15df2e0,8,MemMove
code-creation,Builtin,2,16137,0x15df300,12,IsTraceCategoryEnabled
code-creation,Builtin,2,16140,0x15df320,12,Trace
code-creation,Builtin,2,16142,0x15df340,12,FinalizationRegistryUnregister
code-creation,Builtin,2,16145,0x15df360,416,AsyncModuleEvaluate
code-creation,Builtin,2,16148,0x15df520,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,16151,0x15df540,12,CallAsyncModuleRejected
code-creation,Builtin,2,16154,0x15df560,260,AggregateErrorConstructor
code-creation,Builtin,2,16158,0x15df680,856,ArrayPrototypeAt
code-creation,Builtin,2,16162,0x15df9e0,656,ArrayPrototypeConcat
code-creation,Builtin,2,16165,0x15dfc80,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,16168,0x15e1360,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,16171,0x15e1440,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,16174,0x15e16c0,3256,ArrayEveryLoopContinuation
code-creation,Builtin,2,16177,0x15e2380,1464,ArrayEvery
code-creation,Builtin,2,16179,0x15e2940,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,16182,0x15e2a60,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,16186,0x15e2e40,3560,ArrayFilterLoopContinuation
code-creation,Builtin,2,16189,0x15e3c40,4248,ArrayFilter
code-creation,Builtin,2,16191,0x15e4ce0,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,16194,0x15e4dc0,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,16197,0x15e4e00,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,16200,0x15e4f40,528,ArrayFindLoopContinuation
code-creation,Builtin,2,16203,0x15e5160,1460,ArrayPrototypeFind
code-creation,Builtin,2,16206,0x15e5720,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,16209,0x15e5800,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,16213,0x15e5840,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,16217,0x15e5980,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,16220,0x15e5ba0,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,16223,0x15e6160,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,16226,0x15e6340,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,16229,0x15e6a00,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,16232,0x15e6be0,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,16235,0x15e72a0,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,16238,0x15e7380,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,16241,0x15e7460,3144,ArrayForEachLoopContinuation
code-creation,Builtin,2,16244,0x15e80c0,1328,ArrayForEach
code-creation,Builtin,2,16246,0x15e8600,3572,ArrayFrom
code-creation,Builtin,2,16248,0x15e9400,148,ArrayIsArray
code-creation,Builtin,2,16251,0x15e94a0,408,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,16254,0x15e9640,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,16257,0x15e9680,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,16260,0x15e9720,312,ConvertToLocaleString
code-creation,Builtin,2,16264,0x15e9860,748,JoinStackPush
code-creation,Builtin,2,16267,0x15e9b60,268,JoinStackPop
code-creation,Builtin,2,16269,0x15e9c80,6620,ArrayPrototypeJoin
code-creation,Builtin,2,16273,0x15eb660,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,16276,0x15ecb60,236,ArrayPrototypeToString
code-creation,Builtin,2,16280,0x15ecc60,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,16283,0x15ee3a0,4640,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,16286,0x15ef5e0,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,16290,0x15f04e0,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,16293,0x15f0600,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,16296,0x15f0700,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,16299,0x15f0920,3188,ArrayMapLoopContinuation
code-creation,Builtin,2,16302,0x15f15a0,3904,ArrayMap
code-creation,Builtin,2,16310,0x15f2500,1000,ArrayOf
code-creation,Builtin,2,16313,0x15f2900,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,16316,0x15f2ac0,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,16319,0x15f2ba0,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,16322,0x15f2c80,3204,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,16325,0x15f3920,2000,ArrayReduceRight
code-creation,Builtin,2,16328,0x15f4100,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,16331,0x15f41c0,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,16334,0x15f42a0,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,16338,0x15f4380,3216,ArrayReduceLoopContinuation
code-creation,Builtin,2,16341,0x15f5020,1604,ArrayReduce
code-creation,Builtin,2,16344,0x15f5680,3208,ArrayPrototypeReverse
code-creation,Builtin,2,16347,0x15f6320,3604,ArrayPrototypeShift
code-creation,Builtin,2,16350,0x15f7140,5188,ArrayPrototypeSlice
code-creation,Builtin,2,16354,0x15f85a0,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,16357,0x15f8680,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,16360,0x15f88e0,3244,ArraySomeLoopContinuation
code-creation,Builtin,2,16364,0x15f95a0,1448,ArraySome
code-creation,Builtin,2,16367,0x15f9b60,14200,ArrayPrototypeSplice
code-creation,Builtin,2,16370,0x15fd2e0,3256,ArrayPrototypeUnshift
code-creation,Builtin,2,16374,0x15fdfa0,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,16377,0x15fe100,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,16380,0x15fe260,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,16383,0x15fe340,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,16386,0x15fe4a0,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,16389,0x15fe580,96,ArrayBufferIsView
code-creation,Builtin,2,16391,0x15fe600,396,ToInteger
code-creation,Builtin,2,16394,0x15fe7a0,3068,FastCreateDataProperty
code-creation,Builtin,2,16397,0x15ff3a0,676,CheckNumberInRange
code-creation,Builtin,2,16400,0x15ff660,584,CheckSameObject
code-creation,Builtin,2,16403,0x15ff8c0,904,BooleanConstructor
code-creation,Builtin,2,16405,0x15ffc60,164,BooleanPrototypeToString
code-creation,Builtin,2,16408,0x15ffd20,156,BooleanPrototypeValueOf
code-creation,Builtin,2,16411,0x15ffdc0,1180,BigIntAddNoThrow
code-creation,Builtin,2,16414,0x1600260,1276,BigIntAdd
code-creation,Builtin,2,16417,0x1600760,1180,BigIntSubtractNoThrow
code-creation,Builtin,2,16420,0x1600c00,1276,BigIntSubtract
code-creation,Builtin,2,16423,0x1601100,284,BigIntUnaryMinus
code-creation,Builtin,2,16426,0x1601220,1356,ToString
code-creation,Builtin,2,16429,0x1601780,156,StringPrototypeToString
code-creation,Builtin,2,16432,0x1601820,156,StringPrototypeValueOf
code-creation,Builtin,2,16436,0x16018c0,2452,StringToList
code-creation,Builtin,2,16439,0x1602260,1012,StringPrototypeCharAt
code-creation,Builtin,2,16442,0x1602660,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,16446,0x1602920,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,16449,0x1602e40,400,StringPrototypeConcat
code-creation,Builtin,2,16452,0x1602fe0,992,StringConstructor
code-creation,Builtin,2,16455,0x16033e0,1432,StringAddConvertLeft
code-creation,Builtin,2,16457,0x1603980,1460,StringAddConvertRight
code-creation,Builtin,2,16460,0x1603f40,812,StringCharAt
code-creation,Builtin,2,16463,0x1604280,16,FastNewClosureBaseline
code-creation,Builtin,2,16466,0x16042a0,196,FastNewFunctionContextEval
code-creation,Builtin,2,16469,0x1604380,196,FastNewFunctionContextFunction
code-creation,Builtin,2,16472,0x1604460,248,CreateRegExpLiteral
code-creation,Builtin,2,16475,0x1604560,1080,CreateShallowArrayLiteral
code-creation,Builtin,2,16477,0x16049a0,496,CreateEmptyArrayLiteral
code-creation,Builtin,2,16480,0x1604ba0,1724,CreateShallowObjectLiteral
code-creation,Builtin,2,16483,0x1605260,384,ObjectConstructor
code-creation,Builtin,2,16486,0x1605400,176,CreateEmptyLiteralObject
code-creation,Builtin,2,16489,0x16054c0,532,NumberConstructor
code-creation,Builtin,2,16496,0x16056e0,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,16500,0x1605740,64,StringToNumber
code-creation,Builtin,2,16503,0x16057a0,184,NonNumberToNumber
code-creation,Builtin,2,16524,0x1605860,240,NonNumberToNumeric
code-creation,Builtin,2,16527,0x1605960,36,ToNumeric
code-creation,Builtin,2,16547,0x16059a0,1180,NumberToString
code-creation,Builtin,2,16551,0x1605e40,92,ToBoolean
code-creation,Builtin,2,16553,0x1605ea0,96,ToBooleanForBaselineJump
code-creation,Builtin,2,16556,0x1605f20,728,ToLength
code-creation,Builtin,2,16559,0x1606200,1308,ToName
code-creation,Builtin,2,16562,0x1606720,756,ToObject
code-creation,Builtin,2,16565,0x1606a20,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,16568,0x1606b00,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,16572,0x1606be0,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,16575,0x1606cc0,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,16578,0x1606e00,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,16605,0x1606f40,216,FastConsoleAssert
code-creation,Builtin,2,16663,0x1607020,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,16671,0x16070e0,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,16674,0x1607240,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,16679,0x16073a0,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,16682,0x16075e0,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,16685,0x1607820,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,16688,0x1607ac0,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,16692,0x1607d60,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,16695,0x16080a0,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,16698,0x1608360,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,16714,0x16086c0,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,16750,0x1608a60,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,16802,0x1608e40,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,16811,0x1609240,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,16814,0x1609600,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,16817,0x16099c0,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,16819,0x1609de0,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,16822,0x160a200,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,16826,0x160a640,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,16829,0x160aa80,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,16832,0x160aea0,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,16838,0x160b300,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,16841,0x160b6c0,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,16844,0x160ba80,828,FinalizationRegistryConstructor
code-creation,Builtin,2,16849,0x160bdc0,1136,FinalizationRegistryRegister
code-creation,Builtin,2,16852,0x160c240,644,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,16858,0x160c4e0,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,16862,0x160c640,924,FastFunctionPrototypeBind
code-creation,Builtin,2,16866,0x160c9e0,88,IncBlockCounter
code-creation,Builtin,2,16870,0x160ca40,236,GetTemplateObject
code-creation,Builtin,2,16875,0x160cb40,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,16879,0x160cb60,92,ForInNext
code-creation,Builtin,2,16896,0x160cbc0,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,16936,0x160cc60,116,GetIteratorWithFeedback
code-creation,Builtin,2,16961,0x160cce0,100,GetIteratorBaseline
code-creation,Builtin,2,17001,0x160cd60,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,17009,0x160ce80,1076,CallIteratorWithFeedback
code-creation,Builtin,2,17012,0x160d2c0,288,MathAbs
code-creation,Builtin,2,17014,0x160d400,428,MathCeil
code-creation,Builtin,2,17017,0x160d5c0,432,MathFloor
code-creation,Builtin,2,17022,0x160d780,488,MathRound
code-creation,Builtin,2,17025,0x160d980,428,MathTrunc
code-creation,Builtin,2,17044,0x160db40,364,MathPow
code-creation,Builtin,2,17082,0x160dcc0,396,MathMax
code-creation,Builtin,2,17141,0x160de60,404,MathMin
code-creation,Builtin,2,17148,0x160e000,320,MathAcos
code-creation,Builtin,2,17151,0x160e160,320,MathAcosh
code-creation,Builtin,2,17154,0x160e2c0,320,MathAsin
code-creation,Builtin,2,17156,0x160e420,320,MathAsinh
code-creation,Builtin,2,17159,0x160e580,320,MathAtan
code-creation,Builtin,2,17161,0x160e6e0,412,MathAtan2
code-creation,Builtin,2,17163,0x160e880,320,MathAtanh
code-creation,Builtin,2,17166,0x160e9e0,320,MathCbrt
code-creation,Builtin,2,17168,0x160eb40,168,MathClz32
code-creation,Builtin,2,17171,0x160ec00,320,MathCos
code-creation,Builtin,2,17173,0x160ed60,320,MathCosh
code-creation,Builtin,2,17176,0x160eec0,320,MathExp
code-creation,Builtin,2,17179,0x160f020,320,MathExpm1
code-creation,Builtin,2,17185,0x160f180,272,MathFround
code-creation,Builtin,2,17188,0x160f2a0,304,MathImul
code-creation,Builtin,2,17192,0x160f3e0,320,MathLog
code-creation,Builtin,2,17196,0x160f540,320,MathLog1p
code-creation,Builtin,2,17216,0x160f6a0,320,MathLog10
code-creation,Builtin,2,17257,0x160f800,320,MathLog2
code-creation,Builtin,2,17265,0x160f960,320,MathSin
code-creation,Builtin,2,17268,0x160fac0,180,MathSign
code-creation,Builtin,2,17271,0x160fb80,320,MathSinh
code-creation,Builtin,2,17273,0x160fce0,268,MathSqrt
code-creation,Builtin,2,17276,0x160fe00,320,MathTan
code-creation,Builtin,2,17281,0x160ff60,320,MathTanh
code-creation,Builtin,2,17284,0x16100c0,1056,MathHypot
code-creation,Builtin,2,17304,0x1610500,324,MathRandom
code-creation,Builtin,2,17345,0x1610660,2952,NumberPrototypeToString
code-creation,Builtin,2,17352,0x1611200,136,NumberIsFinite
code-creation,Builtin,2,17355,0x16112a0,340,NumberIsInteger
code-creation,Builtin,2,17358,0x1611400,116,NumberIsNaN
code-creation,Builtin,2,17361,0x1611480,372,NumberIsSafeInteger
tick,0x7f40773a70af,17371,0,0x0,6
code-creation,Builtin,2,17456,0x1611600,156,NumberPrototypeValueOf
code-creation,Builtin,2,17486,0x16116a0,196,NumberParseFloat
code-creation,Builtin,2,17493,0x1611780,248,ParseInt
code-creation,Builtin,2,17496,0x1611880,84,NumberParseInt
code-creation,Builtin,2,17499,0x16118e0,860,Add
code-creation,Builtin,2,17502,0x1611c40,424,Subtract
code-creation,Builtin,2,17505,0x1611e00,608,Multiply
code-creation,Builtin,2,17507,0x1612080,532,Divide
code-creation,Builtin,2,17509,0x16122a0,592,Modulus
code-creation,Builtin,2,17512,0x1612500,524,Exponentiate
code-creation,Builtin,2,17514,0x1612720,344,Negate
code-creation,Builtin,2,17530,0x1612880,112,BitwiseNot
code-creation,Builtin,2,17533,0x1612900,112,Decrement
code-creation,Builtin,2,17536,0x1612980,112,Increment
code-creation,Builtin,2,17539,0x1612a00,392,ShiftLeft
code-creation,Builtin,2,17542,0x1612ba0,392,ShiftRight
code-creation,Builtin,2,17545,0x1612d40,508,ShiftRightLogical
code-creation,Builtin,2,17549,0x1612f40,388,BitwiseAnd
code-creation,Builtin,2,17552,0x16130e0,388,BitwiseOr
code-creation,Builtin,2,17556,0x1613280,388,BitwiseXor
code-creation,Builtin,2,17559,0x1613420,796,LessThan
code-creation,Builtin,2,17571,0x1613740,796,LessThanOrEqual
code-creation,Builtin,2,17574,0x1613a60,796,GreaterThan
code-creation,Builtin,2,17577,0x1613d80,796,GreaterThanOrEqual
code-creation,Builtin,2,17579,0x16140a0,860,Equal
code-creation,Builtin,2,17582,0x1614400,348,StrictEqual
code-creation,Builtin,2,17584,0x1614560,3132,ObjectFromEntries
code-creation,Builtin,2,17587,0x16151a0,756,CreateObjectWithoutProperties
code-creation,Builtin,2,17589,0x16154a0,144,ObjectIsExtensible
code-creation,Builtin,2,17592,0x1615540,148,ObjectPreventExtensions
code-creation,Builtin,2,17595,0x16155e0,144,ObjectGetPrototypeOf
code-creation,Builtin,2,17598,0x1615680,300,ObjectSetPrototypeOf
code-creation,Builtin,2,17601,0x16157c0,80,ObjectPrototypeToString
code-creation,Builtin,2,17604,0x1615820,96,ObjectPrototypeValueOf
code-creation,Builtin,2,17608,0x16158a0,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,17612,0x1615960,860,FulfillPromise
code-creation,Builtin,2,17614,0x1615cc0,980,RejectPromise
code-creation,Builtin,2,17617,0x16160a0,2412,NewPromiseCapability
code-creation,Builtin,2,17620,0x1616a20,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,17632,0x1616ae0,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,17668,0x1616b80,1412,PerformPromiseThen
code-creation,Builtin,2,17675,0x1617120,648,PromiseReject
code-creation,Builtin,2,17678,0x16173c0,292,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,17681,0x1617500,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,17684,0x1617580,4556,PromiseAll
code-creation,Builtin,2,17687,0x1618760,4876,PromiseAllSettled
code-creation,Builtin,2,17690,0x1619a80,1100,PromiseAllResolveElementClosure
code-creation,Builtin,2,17693,0x1619ee0,1388,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,17696,0x161a460,1396,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,17699,0x161a9e0,1172,PromiseAnyRejectElementClosure
code-creation,Builtin,2,17703,0x161ae80,2368,PromiseAny
code-creation,Builtin,2,17730,0x161b7e0,2908,PromiseConstructor
code-creation,Builtin,2,17773,0x161c340,296,PromisePrototypeCatch
code-creation,Builtin,2,17811,0x161c480,88,PromiseValueThunkFinally
code-creation,Builtin,2,17820,0x161c4e0,84,PromiseThrowerFinally
code-creation,Builtin,2,17823,0x161c540,904,PromiseCatchFinally
code-creation,Builtin,2,17844,0x161c8e0,904,PromiseThenFinally
tick,0x7f40773a70af,17874,0,0x0,6
code-creation,Builtin,2,17942,0x161cc80,1700,PromisePrototypeFinally
code-creation,Builtin,2,18030,0x161d340,1336,PromiseRace
code-creation,Builtin,2,18079,0x161d880,268,PromiseFulfillReactionJob
code-creation,Builtin,2,18127,0x161d9a0,364,PromiseRejectReactionJob
code-creation,Builtin,2,18207,0x161db20,156,PromiseResolveTrampoline
code-creation,Builtin,2,18286,0x161dbc0,656,PromiseResolve
code-creation,Builtin,2,18366,0x161de60,712,ResolvePromise
code-creation,Builtin,2,18445,0x161e140,2220,PromisePrototypeThen
code-creation,Builtin,2,18531,0x161ea00,1144,PromiseResolveThenableJob
code-creation,Builtin,2,18611,0x161ee80,448,ProxyConstructor
code-creation,Builtin,2,18690,0x161f060,1760,ProxyDeleteProperty
code-creation,Builtin,2,18769,0x161f760,2112,ProxyGetProperty
code-creation,Builtin,2,18784,0x161ffc0,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,18836,0x1620400,1668,ProxyHasProperty
code-creation,Builtin,2,18927,0x1620aa0,760,ProxyIsExtensible
code-creation,Builtin,2,18967,0x1620da0,800,ProxyPreventExtensions
code-creation,Builtin,2,18975,0x16210e0,1148,ProxyRevocable
code-creation,Builtin,2,18979,0x1621560,120,ProxyRevoke
code-creation,Builtin,2,18983,0x16215e0,2216,ProxySetProperty
code-creation,Builtin,2,18986,0x1621ea0,1292,ProxySetPrototypeOf
code-creation,Builtin,2,18990,0x16223c0,208,ReflectIsExtensible
code-creation,Builtin,2,18993,0x16224a0,212,ReflectPreventExtensions
code-creation,Builtin,2,18996,0x1622580,188,ReflectGetPrototypeOf
code-creation,Builtin,2,19000,0x1622640,292,ReflectSetPrototypeOf
code-creation,Builtin,2,19035,0x1622780,284,ReflectGet
code-creation,Builtin,2,19093,0x16228a0,160,ReflectDeleteProperty
code-creation,Builtin,2,19129,0x1622960,148,ReflectHas
code-creation,Builtin,2,19136,0x1622a00,5108,RegExpPrototypeExecSlow
code-creation,Builtin,2,19142,0x1623e00,5100,RegExpPrototypeExec
code-creation,Builtin,2,19145,0x1625200,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,19148,0x1625b40,9384,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,19152,0x1628000,8796,RegExpMatchFast
code-creation,Builtin,2,19157,0x162a260,3592,RegExpPrototypeMatch
code-creation,Builtin,2,19161,0x162b080,6304,RegExpReplace
code-creation,Builtin,2,19164,0x162c940,524,RegExpPrototypeReplace
code-creation,Builtin,2,19166,0x162cb60,1400,RegExpSearchFast
code-creation,Builtin,2,19169,0x162d0e0,1640,RegExpPrototypeSearch
code-creation,Builtin,2,19172,0x162d760,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,19175,0x162d840,5784,RegExpSplit
code-creation,Builtin,2,19178,0x162eee0,476,RegExpPrototypeSplit
code-creation,Builtin,2,19182,0x162f0c0,2236,RegExpPrototypeTest
code-creation,Builtin,2,19185,0x162f980,1348,RegExpPrototypeTestFast
code-creation,Builtin,2,19201,0x162fee0,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,19260,0x162ffe0,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,19298,0x16300e0,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,19306,0x16301e0,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,19309,0x16302e0,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,19312,0x16303e0,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,19315,0x16304e0,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,19320,0x1630600,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,19342,0x1630720,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,19379,0x1631000,1500,StringPrototypeAt
code-creation,Builtin,2,19430,0x16315e0,2992,StringPrototypeEndsWith
code-creation,Builtin,2,19469,0x16321a0,480,CreateHTML
code-creation,Builtin,2,19512,0x16323a0,164,StringPrototypeAnchor
code-creation,Builtin,2,19549,0x1632460,128,StringPrototypeBig
code-creation,Builtin,2,19586,0x1632500,128,StringPrototypeBlink
code-creation,Builtin,2,19640,0x16325a0,128,StringPrototypeBold
code-creation,Builtin,2,19648,0x1632640,168,StringPrototypeFontcolor
code-creation,Builtin,2,19652,0x1632700,168,StringPrototypeFontsize
code-creation,Builtin,2,19685,0x16327c0,128,StringPrototypeFixed
code-creation,Builtin,2,19721,0x1632860,128,StringPrototypeItalics
code-creation,Builtin,2,19758,0x1632900,168,StringPrototypeLink
code-creation,Builtin,2,19796,0x16329c0,128,StringPrototypeSmall
code-creation,Builtin,2,19831,0x1632a60,128,StringPrototypeStrike
code-creation,Builtin,2,19870,0x1632b00,128,StringPrototypeSub
code-creation,Builtin,2,19924,0x1632ba0,128,StringPrototypeSup
code-creation,Builtin,2,19950,0x1632c40,1028,StringPrototypeIncludes
code-creation,Builtin,2,19973,0x1633060,628,StringPrototypeIndexOf
code-creation,Builtin,2,20012,0x16332e0,344,StringPrototypeIterator
code-creation,Builtin,2,20050,0x1633440,2028,StringIteratorPrototypeNext
code-creation,Builtin,2,20058,0x1633c40,1304,StringPrototypeMatch
code-creation,Builtin,2,20061,0x1634160,1304,StringPrototypeSearch
code-creation,Builtin,2,20064,0x1634680,824,StringPrototypePadStart
code-creation,Builtin,2,20067,0x16349c0,824,StringPrototypePadEnd
tick,0x7f40773a70af,20075,0,0x0,6
code-creation,Builtin,2,20128,0x1634d00,120,StringRepeat
code-creation,Builtin,2,20168,0x1634d80,400,StringPrototypeRepeat
code-creation,Builtin,2,20176,0x1634f20,10964,StringPrototypeReplaceAll
code-creation,Builtin,2,20179,0x1637a00,3384,StringPrototypeSlice
code-creation,Builtin,2,20181,0x1638740,3004,StringPrototypeStartsWith
code-creation,Builtin,2,20184,0x1639300,3324,StringPrototypeSubstr
code-creation,Builtin,2,20189,0x163a000,3260,StringPrototypeSubstring
code-creation,Builtin,2,20192,0x163acc0,6904,StringPrototypeTrim
code-creation,Builtin,2,20212,0x163c7c0,6316,StringPrototypeTrimStart
code-creation,Builtin,2,20250,0x163e080,5840,StringPrototypeTrimEnd
code-creation,Builtin,2,20257,0x163f760,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,20261,0x163f820,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,20268,0x163f8c0,172,SymbolPrototypeToString
code-creation,Builtin,2,20271,0x163f980,156,SymbolPrototypeValueOf
code-creation,Builtin,2,20274,0x163fa20,832,TypedArrayPrototypeAt
code-creation,Builtin,2,20294,0x163fd80,10004,CreateTypedArray
code-creation,Builtin,2,20333,0x16424a0,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,20341,0x16428a0,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,20344,0x1642a20,3508,TypedArrayPrototypeFilter
code-creation,Builtin,2,20347,0x16437e0,996,TypedArrayPrototypeFind
code-creation,Builtin,2,20350,0x1643be0,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,20356,0x1643fe0,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,20361,0x16441a0,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,20365,0x1644660,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,20385,0x1644820,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,20425,0x1644d00,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,20433,0x1645080,2352,TypedArrayFrom
code-creation,Builtin,2,20439,0x16459c0,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,20442,0x1645b40,1028,TypedArrayOf
tick,0x7f40773a70af,20449,0,0x0,6
code-creation,Builtin,2,20495,0x1645f60,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,20521,0x1646320,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,20528,0x16466e0,2496,TypedArrayPrototypeSet
code-creation,Builtin,2,20531,0x16470c0,3028,TypedArrayPrototypeSlice
code-creation,Builtin,2,20534,0x1647ca0,992,TypedArrayPrototypeSome
code-creation,Builtin,2,20536,0x16480a0,1052,TypedArrayMergeSort
code-creation,Builtin,2,20539,0x16484c0,1616,TypedArrayPrototypeSort
code-creation,Builtin,2,20542,0x1648b20,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,20545,0x16495e0,372,TypedArrayPrototypeValues
code-creation,Builtin,2,20549,0x1649760,956,WeakRefConstructor
code-creation,Builtin,2,20552,0x1649b20,184,WeakRefDeref
code-creation,Builtin,2,20556,0x1649be0,680,NewSloppyArgumentsElements
code-creation,Builtin,2,20559,0x1649ea0,296,NewStrictArgumentsElements
code-creation,Builtin,2,20563,0x1649fe0,320,NewRestArgumentsElements
code-creation,Builtin,2,20568,0x164a140,1388,FastNewSloppyArguments
code-creation,Builtin,2,20571,0x164a6c0,524,FastNewStrictArguments
code-creation,Builtin,2,20574,0x164a8e0,556,FastNewRestArguments
code-creation,Builtin,2,20577,0x164ab20,676,StringSlowFlatten
code-creation,Builtin,2,20580,0x164ade0,2000,StringIndexOf
code-creation,Builtin,2,20583,0x164b5c0,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,20585,0x164b5e0,20,TestHelperPlus1
code-creation,Builtin,2,20588,0x164b600,20,TestHelperPlus2
code-creation,Builtin,2,20591,0x164b620,96,NewSmiBox
code-creation,Builtin,2,20594,0x164b6a0,24,ReturnTwoValues
code-creation,Builtin,2,20596,0x164b6c0,32,Load_FastSmiElements_0
code-creation,Builtin,2,20599,0x164b700,32,Load_FastObjectElements_0
code-creation,Builtin,2,20602,0x164b740,144,Load_FastDoubleElements_0
code-creation,Builtin,2,20605,0x164b7e0,32,Store_FastSmiElements_0
code-creation,Builtin,2,20608,0x164b820,92,Store_FastObjectElements_0
code-creation,Builtin,2,20612,0x164b880,48,Store_FastDoubleElements_0
code-creation,Builtin,2,20616,0x164b8c0,36,Delete_FastSmiElements_0
code-creation,Builtin,2,20620,0x164b900,36,Delete_FastObjectElements_0
code-creation,Builtin,2,20623,0x164b940,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,20627,0x164b980,308,SortCompareDefault
code-creation,Builtin,2,20629,0x164bac0,92,SortCompareUserFn
code-creation,Builtin,2,20632,0x164bb20,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,20635,0x164bb40,308,Copy
code-creation,Builtin,2,20638,0x164bc80,5732,MergeAt
code-creation,Builtin,2,20641,0x164d300,792,GallopLeft
code-creation,Builtin,2,20643,0x164d620,832,GallopRight
code-creation,Builtin,2,20646,0x164d980,3820,ArrayTimSort
code-creation,Builtin,2,20649,0x164e880,2096,ArrayPrototypeSort
code-creation,Builtin,2,20651,0x164f0c0,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,20654,0x164f140,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,20657,0x164f1c0,76,WasmTaggedToFloat64
code-creation,Builtin,2,20660,0x164f220,72,WasmMemoryGrow
code-creation,Builtin,2,20663,0x164f280,100,WasmTableInit
code-creation,Builtin,2,20666,0x164f300,100,WasmTableCopy
code-creation,Builtin,2,20669,0x164f380,84,WasmTableFill
code-creation,Builtin,2,20672,0x164f3e0,72,WasmTableGrow
code-creation,Builtin,2,20675,0x164f440,144,WasmTableGet
code-creation,Builtin,2,20679,0x164f4e0,236,WasmTableSet
code-creation,Builtin,2,20682,0x164f5e0,88,WasmRefFunc
code-creation,Builtin,2,20685,0x164f640,144,WasmAllocateFixedArray
code-creation,Builtin,2,20688,0x164f6e0,44,WasmThrow
code-creation,Builtin,2,20691,0x164f720,52,WasmRethrow
code-creation,Builtin,2,20694,0x164f760,44,WasmTriggerTierUp
code-creation,Builtin,2,20697,0x164f7a0,32,WasmStackGuard
code-creation,Builtin,2,20699,0x164f7e0,32,WasmStackOverflow
code-creation,Builtin,2,20702,0x164f820,40,WasmTraceMemory
code-creation,Builtin,2,20705,0x164f860,32,WasmTraceEnter
code-creation,Builtin,2,20708,0x164f8a0,40,WasmTraceExit
code-creation,Builtin,2,20719,0x164f8e0,332,WasmAllocateJSArray
code-creation,Builtin,2,20722,0x164fa40,104,WasmAllocatePair
code-creation,Builtin,2,20725,0x164fac0,64,WasmAllocateRtt
code-creation,Builtin,2,20728,0x164fb20,72,WasmAllocateFreshRtt
code-creation,Builtin,2,20731,0x164fb80,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,20734,0x164fc00,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,20738,0x164fca0,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,20741,0x164fd60,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,20745,0x164fe20,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,20748,0x164fea0,60,WasmArrayCopy
code-creation,Builtin,2,20750,0x164fee0,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,20753,0x164ffe0,52,WasmSubtypeCheck
code-creation,Builtin,2,20756,0x1650020,8,WasmInt32ToNumber
code-creation,Builtin,2,20759,0x1650040,116,WasmUint32ToNumber
code-creation,Builtin,2,20762,0x16500c0,144,UintPtr53ToNumber
code-creation,Builtin,2,20765,0x1650160,96,WasmAtomicNotify
code-creation,Builtin,2,20767,0x16501e0,116,WasmI32AtomicWait64
code-creation,Builtin,2,20770,0x1650260,116,WasmI64AtomicWait64
code-creation,Builtin,2,20773,0x16502e0,580,WasmGetOwnProperty
code-creation,Builtin,2,20776,0x1650540,40,WasmTrap
code-creation,Builtin,2,20778,0x1650580,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,20781,0x16505a0,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,20785,0x16505c0,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,20788,0x16505e0,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,20791,0x1650600,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,20795,0x1650620,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,20798,0x1650640,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,20801,0x1650660,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,20804,0x1650680,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,20808,0x16506a0,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,20811,0x16506c0,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,20814,0x16506e0,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,20817,0x1650700,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,20820,0x1650720,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,20823,0x1650740,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,20826,0x1650760,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,20831,0x1650780,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,20834,0x1650840,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,20838,0x1650860,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,20842,0x16508e0,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,20846,0x1650960,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,20849,0x1650980,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,20853,0x1650a60,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,20856,0x1650b60,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,20859,0x1650b80,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,20862,0x1650ba0,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,20865,0x1650bc0,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,20868,0x1650be0,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,20872,0x1650c80,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,20875,0x1650ca0,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,20878,0x1650ce0,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,20883,0x1650d20,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,20892,0x1650d60,2668,Load_GenericElementsAccessor_0
code-creation,Builtin,2,20895,0x16517e0,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,20898,0x1651800,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,20902,0x1651840,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,20905,0x1651860,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,20910,0x1651920,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,20914,0x16519e0,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,20917,0x1651a60,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,20922,0x1651aa0,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,20960,0x1651b40,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,20967,0x1651bc0,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,20970,0x1651be0,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,20974,0x1651c80,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,20977,0x1651ca0,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,20981,0x1651cc0,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,20985,0x1651f40,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,20988,0x1652020,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,20991,0x1652060,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,20994,0x1652140,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,20997,0x1652240,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,21000,0x1652280,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,21003,0x1652360,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,21006,0x1652380,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,21009,0x16523a0,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,21034,0x1652460,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,21088,0x1652480,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,21097,0x16524a0,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,21100,0x1652560,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,21103,0x1652580,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,21109,0x16525a0,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,21113,0x1652660,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,21116,0x1652680,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,21119,0x16526a0,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,21140,0x1652760,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,21181,0x1652800,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,21189,0x16528c0,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,21192,0x1652980,12,CollatorConstructor
code-creation,Builtin,2,21195,0x16529a0,12,CollatorInternalCompare
code-creation,Builtin,2,21198,0x16529c0,12,CollatorPrototypeCompare
code-creation,Builtin,2,21204,0x16529e0,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,21208,0x1652a00,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,21211,0x1652a20,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,21217,0x1652a40,12,DatePrototypeToLocaleString
code-creation,Builtin,2,21223,0x1652a60,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,21229,0x1652a80,12,DateTimeFormatConstructor
code-creation,Builtin,2,21232,0x1652aa0,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,21235,0x1652ac0,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,21238,0x1652ae0,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,21241,0x1652b00,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,21245,0x1652b20,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,21248,0x1652b40,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,21253,0x1652b60,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,21259,0x1652b80,12,DisplayNamesConstructor
code-creation,Builtin,2,21263,0x1652ba0,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,21269,0x1652bc0,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,21274,0x1652be0,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,21277,0x1652c00,12,IntlGetCanonicalLocales
code-creation,Builtin,2,21284,0x1652c20,12,ListFormatConstructor
code-creation,Builtin,2,21287,0x1652c40,224,ListFormatPrototypeFormat
code-creation,Builtin,2,21290,0x1652d40,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,21294,0x1652e40,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,21299,0x1652e60,12,ListFormatSupportedLocalesOf
tick,0x7f40773a70af,21306,0,0x0,6
code-creation,Builtin,2,21399,0x1652e80,12,LocaleConstructor
code-creation,Builtin,2,21485,0x1652ea0,12,LocalePrototypeBaseName
code-creation,Builtin,2,21501,0x1652ec0,12,LocalePrototypeCalendar
code-creation,Builtin,2,21507,0x1652ee0,12,LocalePrototypeCalendars
code-creation,Builtin,2,21514,0x1652f00,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,21545,0x1652f20,12,LocalePrototypeCollation
code-creation,Builtin,2,21555,0x1652f40,12,LocalePrototypeCollations
code-creation,Builtin,2,21562,0x1652f60,12,LocalePrototypeHourCycle
code-creation,Builtin,2,21568,0x1652f80,12,LocalePrototypeHourCycles
code-creation,Builtin,2,21574,0x1652fa0,12,LocalePrototypeLanguage
code-creation,Builtin,2,21581,0x1652fc0,12,LocalePrototypeMaximize
code-creation,Builtin,2,21593,0x1652fe0,12,LocalePrototypeMinimize
code-creation,Builtin,2,21600,0x1653000,12,LocalePrototypeNumeric
code-creation,Builtin,2,21606,0x1653020,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,21645,0x1653040,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,21725,0x1653060,12,LocalePrototypeRegion
code-creation,Builtin,2,21740,0x1653080,12,LocalePrototypeScript
code-creation,Builtin,2,21746,0x16530a0,12,LocalePrototypeTextInfo
code-creation,Builtin,2,21753,0x16530c0,12,LocalePrototypeTimeZones
code-creation,Builtin,2,21794,0x16530e0,12,LocalePrototypeToString
code-creation,Builtin,2,21873,0x1653100,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,21921,0x1653120,12,NumberFormatConstructor
code-creation,Builtin,2,21962,0x1653140,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,21969,0x1653160,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,21972,0x1653180,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,21975,0x16531a0,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,21996,0x16531c0,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,22034,0x16531e0,12,PluralRulesConstructor
code-creation,Builtin,2,22041,0x1653200,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,22045,0x1653220,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,22047,0x1653240,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,22054,0x1653260,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,22058,0x1653280,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,22085,0x16532a0,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,22142,0x16532c0,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,22198,0x16532e0,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,22250,0x1653300,12,SegmenterConstructor
code-creation,Builtin,2,22302,0x1653320,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,22355,0x1653340,12,SegmenterPrototypeSegment
code-creation,Builtin,2,22409,0x1653360,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,22461,0x1653380,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,22515,0x16533a0,12,SegmentsPrototypeContaining
code-creation,Builtin,2,22568,0x16533c0,12,SegmentsPrototypeIterator
code-creation,Builtin,2,22620,0x16533e0,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,22674,0x1653400,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,22726,0x1653420,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,22778,0x1653440,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,22831,0x1653520,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,22883,0x1653540,632,StringToLowerCaseIntl
code-creation,Builtin,2,22938,0x16537c0,12,V8BreakIteratorConstructor
code-creation,Builtin,2,22992,0x16537e0,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,23044,0x1653800,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,23100,0x1653820,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,23152,0x1653840,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,23194,0x1653860,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,23246,0x1653880,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,23284,0x16538a0,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,23335,0x16538c0,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,23373,0x16538e0,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,23398,0x1653900,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,23405,0x1653920,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,23408,0x1653940,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,23414,0x1653960,24,Wide
code-creation,BytecodeHandler,0,23435,0x1653980,24,ExtraWide
code-creation,BytecodeHandler,0,23472,0x16539a0,104,DebugBreakWide
code-creation,BytecodeHandler,0,23496,0x1653a20,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,23550,0x1653aa0,164,DebugBreak0
code-creation,BytecodeHandler,0,23587,0x1653b60,104,DebugBreak1
code-creation,BytecodeHandler,0,23624,0x1653be0,104,DebugBreak2
code-creation,BytecodeHandler,0,23648,0x1653c60,104,DebugBreak3
code-creation,BytecodeHandler,0,23671,0x1653ce0,104,DebugBreak4
code-creation,BytecodeHandler,0,23694,0x1653d60,104,DebugBreak5
code-creation,BytecodeHandler,0,23717,0x1653de0,104,DebugBreak6
code-creation,BytecodeHandler,0,23740,0x1653e60,32,Ldar
code-creation,BytecodeHandler,0,23762,0x1653ea0,68,LdaZero
code-creation,BytecodeHandler,0,23786,0x1653f00,76,LdaSmi
code-creation,BytecodeHandler,0,23808,0x1653f60,68,LdaUndefined
code-creation,BytecodeHandler,0,23832,0x1653fc0,68,LdaNull
code-creation,BytecodeHandler,0,23854,0x1654020,68,LdaTheHole
code-creation,BytecodeHandler,0,23892,0x1654080,20,LdaTrue
code-creation,BytecodeHandler,0,23929,0x16540a0,20,LdaFalse
code-creation,BytecodeHandler,0,23938,0x16540c0,76,LdaConstant
code-creation,BytecodeHandler,0,23957,0x1654120,132,LdaContextSlot
code-creation,BytecodeHandler,0,23994,0x16541c0,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,24031,0x1654260,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,24069,0x16542c0,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,24106,0x1654320,32,Star
code-creation,BytecodeHandler,0,24143,0x1654360,40,Mov
code-creation,BytecodeHandler,0,24180,0x16543a0,40,PushContext
code-creation,BytecodeHandler,0,24217,0x16543e0,36,PopContext
code-creation,BytecodeHandler,0,24254,0x1654420,48,TestReferenceEqual
code-creation,BytecodeHandler,0,24264,0x1654460,52,TestUndetectable
code-creation,BytecodeHandler,0,24296,0x16544a0,36,TestNull
code-creation,BytecodeHandler,0,24349,0x16544e0,36,TestUndefined
code-creation,BytecodeHandler,0,24386,0x1654520,336,TestTypeOf
code-creation,BytecodeHandler,0,24394,0x1654680,6036,LdaGlobal
code-creation,BytecodeHandler,0,24428,0x1655e20,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,24465,0x1656fe0,168,StaGlobal
code-creation,BytecodeHandler,0,24503,0x16570a0,156,StaContextSlot
code-creation,BytecodeHandler,0,24549,0x1657140,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,24586,0x16571c0,124,LdaLookupSlot
code-creation,BytecodeHandler,0,24623,0x1657240,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,24661,0x1657340,4776,LdaLookupGlobalSlot
tick,0x7f40773a70af,24706,0,0x0,6
tick,0x7f4077497839,24746,0,0x0,6
tick,0x7f40773a70af,24802,0,0x0,6
code-creation,BytecodeHandler,0,24838,0x1658600,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,24902,0x1658680,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,24909,0x1658780,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,24913,0x1659a20,220,StaLookupSlot
code-creation,BytecodeHandler,0,24915,0x1659b00,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,24918,0x165af80,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,24922,0x165b040,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,24929,0x165b120,160,LdaModuleVariable
code-creation,BytecodeHandler,0,24932,0x165b1e0,292,StaModuleVariable
code-creation,BytecodeHandler,0,24935,0x165b320,172,StaNamedProperty
code-creation,BytecodeHandler,0,24938,0x165b3e0,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,24942,0x165b4a0,164,StaKeyedProperty
code-creation,BytecodeHandler,0,24944,0x165b560,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,24947,0x165b620,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,24951,0x165b700,160,CollectTypeProfile
code-creation,BytecodeHandler,0,24954,0x165b7c0,1028,Add
code-creation,BytecodeHandler,0,24957,0x165bbe0,1064,Sub
code-creation,BytecodeHandler,0,24959,0x165c020,1024,Mul
code-creation,BytecodeHandler,0,24962,0x165c440,988,Div
code-creation,BytecodeHandler,0,24965,0x165c820,912,Mod
code-creation,BytecodeHandler,0,24967,0x165cbc0,960,Exp
code-creation,BytecodeHandler,0,24970,0x165cfa0,876,BitwiseOr
code-creation,BytecodeHandler,0,24973,0x165d320,888,BitwiseXor
code-creation,BytecodeHandler,0,24976,0x165d6a0,888,BitwiseAnd
code-creation,BytecodeHandler,0,24979,0x165da20,900,ShiftLeft
code-creation,BytecodeHandler,0,24982,0x165ddc0,900,ShiftRight
code-creation,BytecodeHandler,0,24985,0x165e160,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,24988,0x165e560,960,AddSmi
code-creation,BytecodeHandler,0,24991,0x165e940,1000,SubSmi
code-creation,BytecodeHandler,0,24998,0x165ed40,916,MulSmi
code-creation,BytecodeHandler,0,25000,0x165f0e0,920,DivSmi
code-creation,BytecodeHandler,0,25004,0x165f480,816,ModSmi
code-creation,BytecodeHandler,0,25007,0x165f7c0,868,ExpSmi
code-creation,BytecodeHandler,0,25010,0x165fb40,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,25013,0x165fd40,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,25016,0x165ff40,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,25019,0x1660140,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,25022,0x1660340,488,ShiftRightSmi
code-creation,BytecodeHandler,0,25025,0x1660540,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,25028,0x16607e0,656,Inc
code-creation,BytecodeHandler,0,25031,0x1660a80,656,Dec
code-creation,BytecodeHandler,0,25034,0x1660d20,640,Negate
code-creation,BytecodeHandler,0,25038,0x1660fc0,480,BitwiseNot
code-creation,BytecodeHandler,0,25040,0x16611c0,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,25044,0x1661240,36,LogicalNot
code-creation,BytecodeHandler,0,25047,0x1661280,208,TypeOf
code-creation,BytecodeHandler,0,25050,0x1661360,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,25053,0x16613e0,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,25056,0x1661460,40,GetSuperConstructor
code-creation,BytecodeHandler,0,25059,0x16614a0,1120,CallAnyReceiver
code-creation,BytecodeHandler,0,25062,0x1661920,1120,CallProperty
code-creation,BytecodeHandler,0,25065,0x1661da0,1008,CallProperty0
code-creation,BytecodeHandler,0,25069,0x16621a0,1024,CallProperty1
code-creation,BytecodeHandler,0,25072,0x16625c0,1036,CallProperty2
code-creation,BytecodeHandler,0,25074,0x16629e0,1000,CallUndefinedReceiver
code-creation,BytecodeHandler,0,25078,0x1662de0,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,25081,0x1663200,1016,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,25085,0x1663600,1032,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,25088,0x1663a20,1120,CallWithSpread
code-creation,BytecodeHandler,0,25091,0x1663ea0,124,CallRuntime
code-creation,BytecodeHandler,0,25094,0x1663f20,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,25097,0x1663fc0,80,CallJSRuntime
code-creation,BytecodeHandler,0,25100,0x1664020,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,25103,0x1664500,1016,Construct
code-creation,BytecodeHandler,0,25106,0x1664900,536,ConstructWithSpread
code-creation,BytecodeHandler,0,25110,0x1664b20,1936,TestEqual
code-creation,BytecodeHandler,0,25113,0x16652c0,1064,TestEqualStrict
code-creation,BytecodeHandler,0,25116,0x1665700,1624,TestLessThan
code-creation,BytecodeHandler,0,25119,0x1665d60,1624,TestGreaterThan
code-creation,BytecodeHandler,0,25122,0x16663c0,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,25127,0x1666a20,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,25130,0x1667080,856,TestInstanceOf
code-creation,BytecodeHandler,0,25134,0x16673e0,156,TestIn
code-creation,BytecodeHandler,0,25137,0x1667480,112,ToName
code-creation,BytecodeHandler,0,25141,0x1667500,212,ToNumber
code-creation,BytecodeHandler,0,25144,0x16675e0,232,ToNumeric
code-creation,BytecodeHandler,0,25146,0x16676e0,112,ToObject
code-creation,BytecodeHandler,0,25149,0x1667760,116,ToString
code-creation,BytecodeHandler,0,25152,0x16677e0,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,25155,0x1667980,1460,CreateArrayLiteral
code-creation,BytecodeHandler,0,25158,0x1667f40,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,25162,0x1667fa0,792,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,25165,0x16682c0,2160,CreateObjectLiteral
code-creation,BytecodeHandler,0,25168,0x1668b40,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,25171,0x1668c40,168,CloneObject
code-creation,BytecodeHandler,0,25174,0x1668d00,212,GetTemplateObject
code-creation,BytecodeHandler,0,25177,0x1668de0,328,CreateClosure
code-creation,BytecodeHandler,0,25181,0x1668f40,120,CreateBlockContext
code-creation,BytecodeHandler,0,25184,0x1668fc0,132,CreateCatchContext
code-creation,BytecodeHandler,0,25187,0x1669060,256,CreateFunctionContext
code-creation,BytecodeHandler,0,25191,0x1669180,256,CreateEvalContext
code-creation,BytecodeHandler,0,25195,0x16692a0,132,CreateWithContext
code-creation,BytecodeHandler,0,25198,0x1669340,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,25201,0x1669980,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,25204,0x1669be0,632,CreateRestParameter
code-creation,BytecodeHandler,0,25207,0x1669e60,424,JumpLoop
code-creation,BytecodeHandler,0,25210,0x166a020,44,Jump
code-creation,BytecodeHandler,0,25214,0x166a060,56,JumpConstant
code-creation,BytecodeHandler,0,25217,0x166a0a0,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,25221,0x166a100,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,25224,0x166a160,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,25227,0x166a1c0,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,25230,0x166a220,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,25233,0x166a280,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,25237,0x166a2e0,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,25240,0x166a340,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,25244,0x166a3a0,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,25253,0x166a440,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,25256,0x166a4e0,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,25259,0x166a580,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,25262,0x166a620,64,JumpIfTrue
code-creation,BytecodeHandler,0,25265,0x166a680,64,JumpIfFalse
code-creation,BytecodeHandler,0,25268,0x166a6e0,64,JumpIfNull
code-creation,BytecodeHandler,0,25271,0x166a740,64,JumpIfNotNull
code-creation,BytecodeHandler,0,25274,0x166a7a0,64,JumpIfUndefined
code-creation,BytecodeHandler,0,25277,0x166a800,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,25281,0x166a860,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,25284,0x166a8c0,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,25287,0x166a920,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,25290,0x166a9a0,464,ForInEnumerate
code-creation,BytecodeHandler,0,25293,0x166ab80,252,ForInPrepare
code-creation,BytecodeHandler,0,25296,0x166ac80,60,ForInContinue
code-creation,BytecodeHandler,0,25299,0x166acc0,256,ForInNext
code-creation,BytecodeHandler,0,25303,0x166ade0,48,ForInStep
code-creation,BytecodeHandler,0,25306,0x166ae20,36,SetPendingMessage
code-creation,BytecodeHandler,0,25309,0x166ae60,116,Throw
code-creation,BytecodeHandler,0,25312,0x166aee0,116,ReThrow
code-creation,BytecodeHandler,0,25315,0x166af60,112,Return
code-creation,BytecodeHandler,0,25318,0x166afe0,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,25323,0x166b0c0,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,25326,0x166b160,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,25330,0x166b200,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,25338,0x166b2a0,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,25341,0x166b320,500,SuspendGenerator
code-creation,BytecodeHandler,0,25344,0x166b520,128,ResumeGenerator
code-creation,BytecodeHandler,0,25348,0x166b5c0,152,GetIterator
code-creation,BytecodeHandler,0,25351,0x166b660,116,Debugger
code-creation,BytecodeHandler,0,25354,0x166b6e0,124,IncBlockCounter
code-creation,BytecodeHandler,0,25357,0x166b760,56,Abort
code-creation,BytecodeHandler,0,25360,0x166b7a0,32,Star0
code-creation,BytecodeHandler,0,25363,0x166b7e0,60,Illegal
code-creation,BytecodeHandler,0,25367,0x166b820,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,25371,0x166b8a0,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,25374,0x166b920,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,25378,0x166b9a0,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,25381,0x166ba20,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,25384,0x166baa0,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,25387,0x166bb20,32,Ldar.Wide
code-creation,BytecodeHandler,0,25390,0x166bb60,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,25393,0x166bba0,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,25397,0x166bbe0,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,25399,0x166bc40,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,25402,0x166bca0,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,25406,0x166bce0,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,25409,0x166bd20,32,Star.Wide
code-creation,BytecodeHandler,0,25411,0x166bd60,40,Mov.Wide
code-creation,BytecodeHandler,0,25415,0x166bda0,40,PushContext.Wide
code-creation,BytecodeHandler,0,25418,0x166bde0,36,PopContext.Wide
code-creation,BytecodeHandler,0,25423,0x166be20,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,25426,0x166be60,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,25428,0x166d0a0,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,25432,0x166e2a0,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,25435,0x166e360,156,StaContextSlot.Wide
code-creation,BytecodeHandler,0,25438,0x166e400,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,25463,0x166e480,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,25522,0x166e520,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,25530,0x166e620,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,25566,0x166f920,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,25605,0x166f9c0,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,25644,0x166fac0,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,25684,0x1670da0,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,25692,0x1670e80,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,25696,0x1672300,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,25699,0x16723c0,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,25705,0x1672480,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,25708,0x1672540,296,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,25711,0x1672680,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,25714,0x1672740,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,25733,0x1672800,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,25772,0x16728c0,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,25781,0x1672980,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,25800,0x1672a60,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,25824,0x1672b20,984,Add.Wide
code-creation,BytecodeHandler,0,25863,0x1672f00,1020,Sub.Wide
code-creation,BytecodeHandler,0,25888,0x1673300,972,Mul.Wide
code-creation,BytecodeHandler,0,25928,0x16736e0,988,Div.Wide
code-creation,BytecodeHandler,0,25958,0x1673ac0,916,Mod.Wide
code-creation,BytecodeHandler,0,25998,0x1673e60,984,Exp.Wide
code-creation,BytecodeHandler,0,26023,0x1674240,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,26064,0x16745e0,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,26089,0x1674980,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,26129,0x1674d20,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,26153,0x16750e0,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,26162,0x16754a0,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,26166,0x16758c0,916,AddSmi.Wide
code-creation,BytecodeHandler,0,26185,0x1675c60,960,SubSmi.Wide
code-creation,BytecodeHandler,0,26224,0x1676040,912,MulSmi.Wide
code-creation,BytecodeHandler,0,26249,0x16763e0,920,DivSmi.Wide
code-creation,BytecodeHandler,0,26274,0x1676780,816,ModSmi.Wide
code-creation,BytecodeHandler,0,26314,0x1676ac0,868,ExpSmi.Wide
code-creation,BytecodeHandler,0,26342,0x1676e40,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,26382,0x1677040,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,26407,0x1677240,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,26447,0x1677440,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,26472,0x1677640,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,26512,0x1677840,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,26537,0x1677ae0,616,Inc.Wide
code-creation,BytecodeHandler,0,26543,0x1677d60,616,Dec.Wide
code-creation,BytecodeHandler,0,26546,0x1677fe0,648,Negate.Wide
code-creation,BytecodeHandler,0,26548,0x1678280,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,26553,0x1678480,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,26560,0x1678500,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,26564,0x1678580,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,26568,0x16785c0,1124,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,26571,0x1678a40,1124,CallProperty.Wide
code-creation,BytecodeHandler,0,26591,0x1678ec0,1012,CallProperty0.Wide
code-creation,BytecodeHandler,0,26632,0x16792c0,1024,CallProperty1.Wide
code-creation,BytecodeHandler,0,26640,0x16796e0,1036,CallProperty2.Wide
code-creation,BytecodeHandler,0,26643,0x1679b00,1004,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,26646,0x1679f00,1044,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,26649,0x167a320,1020,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,26655,0x167a720,1036,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,26663,0x167ab40,1124,CallWithSpread.Wide
code-creation,BytecodeHandler,0,26668,0x167afc0,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,26689,0x167b060,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,26729,0x167b120,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,26737,0x167b180,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,26740,0x167b660,960,Construct.Wide
code-creation,BytecodeHandler,0,26743,0x167ba40,472,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,26747,0x167bc20,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,26752,0x167c3e0,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,26759,0x167c820,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,26766,0x167ce20,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,26786,0x167d420,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,26826,0x167da20,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,26835,0x167e020,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,26838,0x167e3a0,160,TestIn.Wide
code-creation,BytecodeHandler,0,26842,0x167e460,116,ToName.Wide
code-creation,BytecodeHandler,0,26848,0x167e4e0,216,ToNumber.Wide
code-creation,BytecodeHandler,0,26851,0x167e5c0,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,26855,0x167e6c0,116,ToObject.Wide
code-creation,BytecodeHandler,0,26862,0x167e740,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,26866,0x167e8e0,1372,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,26871,0x167ee40,792,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,26910,0x167f160,2060,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,26963,0x167f980,172,CloneObject.Wide
code-creation,BytecodeHandler,0,26973,0x167fa40,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,26976,0x167fb00,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,26979,0x167fc60,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,26983,0x167fce0,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,26986,0x167fd80,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,26991,0x167fea0,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,26996,0x167ffc0,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,27030,0x1680060,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,27081,0x1680220,44,Jump.Wide
code-creation,BytecodeHandler,0,27104,0x1680260,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,27157,0x16802a0,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,27207,0x1680300,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,27230,0x1680360,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,27281,0x16803c0,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,27319,0x1680420,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,27373,0x1680480,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,27424,0x16804e0,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,27464,0x1680540,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,27521,0x16805a0,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,27573,0x1680640,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,27632,0x16806e0,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,27685,0x1680780,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,27737,0x1680820,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,27789,0x1680880,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,27842,0x16808e0,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,27894,0x1680940,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,27950,0x16809a0,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,28004,0x1680a00,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,28059,0x1680a60,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,28099,0x1680ac0,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,28140,0x1680b20,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,28196,0x1680ba0,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,28205,0x1680d80,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,28209,0x1680e80,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,28212,0x1680ec0,260,ForInNext.Wide
tick,0x7f40773a70af,28230,0,0x0,6
tick,0x7f40773a70af,28359,0,0x0,6
tick,0x7f40773a70af,28467,0,0x0,6
code-creation,BytecodeHandler,0,28581,0x1680fe0,48,ForInStep.Wide
code-creation,BytecodeHandler,0,28626,0x1681020,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,28634,0x16810c0,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,28638,0x1681180,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,28641,0x1681200,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,28644,0x1681420,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,28648,0x16814c0,156,GetIterator.Wide
code-creation,BytecodeHandler,0,28651,0x1681560,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,28655,0x1681600,56,Abort.Wide
code-creation,BytecodeHandler,0,28658,0x1681640,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,28661,0x16816c0,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,28664,0x1681740,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,28667,0x16817c0,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,28671,0x1681840,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,28674,0x16818c0,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,28677,0x1681940,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,28680,0x1681980,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,28714,0x16819a0,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,28770,0x16819e0,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,28778,0x1681a40,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,28782,0x1681aa0,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,28785,0x1681ae0,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,28804,0x1681b20,28,Star.ExtraWide
code-creation,BytecodeHandler,0,28844,0x1681b40,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,28852,0x1681b80,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,28856,0x1681bc0,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,28859,0x1681c00,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,28879,0x1681c40,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,28919,0x1682e80,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,28977,0x1684080,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,29030,0x1684140,152,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,29083,0x16841e0,108,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,29134,0x1684260,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,29173,0x1684300,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,29226,0x1684400,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,29236,0x1685700,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,29239,0x16857a0,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,29245,0x16858a0,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,29249,0x1686b80,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,29252,0x1686c60,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,29255,0x16880c0,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,29273,0x1688180,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,29326,0x1688220,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,29334,0x16882e0,292,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,29338,0x1688420,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,29344,0x16884e0,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,29377,0x16885a0,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,29416,0x1688660,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,29454,0x1688720,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,29511,0x1688800,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,29519,0x16888c0,980,Add.ExtraWide
code-creation,BytecodeHandler,0,29522,0x1688ca0,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,29525,0x16890a0,972,Mul.ExtraWide
tick,0x7f40773a70af,29534,0,0x0,6
code-creation,BytecodeHandler,0,29614,0x1689480,988,Div.ExtraWide
code-creation,BytecodeHandler,0,29660,0x1689860,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,29667,0x1689c00,980,Exp.ExtraWide
code-creation,BytecodeHandler,0,29670,0x1689fe0,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,29674,0x168a380,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,29677,0x168a720,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,29683,0x168aac0,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,29686,0x168ae80,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,29689,0x168b240,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,29693,0x168b660,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,29696,0x168ba00,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,29699,0x168bde0,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,29702,0x168c180,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,29706,0x168c520,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,29709,0x168c860,868,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,29714,0x168cbe0,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,29717,0x168cde0,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,29748,0x168cfe0,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,29755,0x168d1e0,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,29760,0x168d3e0,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,29764,0x168d5e0,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,29802,0x168d880,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,29839,0x168db00,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,29891,0x168dd80,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,29928,0x168e020,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,29980,0x168e220,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,30018,0x168e2a0,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,30071,0x168e320,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,30125,0x168e360,1120,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,30180,0x168e7e0,1120,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,30235,0x168ec60,1004,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,30271,0x168f060,1020,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,30310,0x168f460,1032,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,30348,0x168f880,1000,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,30387,0x168fc80,1044,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,30438,0x16900a0,1016,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,30490,0x16904a0,1028,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,30535,0x16908c0,1120,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,30543,0x1690d40,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,30546,0x1690de0,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,30549,0x1690ea0,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,30554,0x1690f00,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,30557,0x16913e0,956,Construct.ExtraWide
code-creation,BytecodeHandler,0,30562,0x16917a0,468,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,30566,0x1691980,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,30569,0x1692140,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,30573,0x1692580,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,30576,0x1692b80,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,30579,0x1693180,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,30585,0x1693780,1508,TestGreaterThanOrEqual.ExtraWide
tick,0x7f40773a70af,30595,0,0x0,6
code-creation,BytecodeHandler,0,30709,0x1693d80,860,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,30754,0x16940e0,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,30761,0x1694180,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,30765,0x1694200,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,30768,0x16942e0,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,30771,0x16943e0,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,30775,0x1694460,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,30779,0x1694600,1368,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,30784,0x1694b60,792,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,30788,0x1694e80,2060,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,30792,0x16956a0,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,30796,0x1695760,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,30799,0x1695820,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,30803,0x1695980,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,30807,0x1695a00,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,30811,0x1695aa0,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,30814,0x1695bc0,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,30817,0x1695ce0,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,30820,0x1695d80,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,30823,0x1695f40,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,30850,0x1695f80,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,30859,0x1695fc0,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,30863,0x1696020,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,30892,0x1696080,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,30948,0x16960e0,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,30956,0x1696140,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,30960,0x16961a0,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,30964,0x1696200,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,30967,0x1696260,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,30970,0x16962c0,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,30974,0x1696360,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,30978,0x1696400,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,30981,0x16964a0,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,30988,0x1696540,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,31027,0x16965a0,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,31086,0x1696600,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,31141,0x1696660,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,31196,0x16966c0,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,31251,0x1696720,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,31306,0x1696780,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,31361,0x16967e0,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,31416,0x1696840,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,31471,0x16968c0,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,31530,0x1696aa0,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,31551,0x1696ba0,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,31575,0x1696be0,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,31615,0x1696d00,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,31655,0x1696d40,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,31709,0x1696de0,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,31718,0x1696ea0,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,31722,0x1696f20,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,31728,0x1697140,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,31732,0x16971c0,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,31736,0x1697260,124,IncBlockCounter.ExtraWide
tick,0x7f40773a70af,31746,0,0x0,6
code-creation,BytecodeHandler,0,31867,0x16972e0,56,Abort.ExtraWide
tick,0x7f40773b197b,32042,0,0x0,6
new,MemoryChunk,0x1e7360ac0000,262144
new,MemoryChunk,0x69ecac00000,262144
tick,0x1c0beea,33093,0,0x0,5
new,MemoryChunk,0x279f2a300000,262144
tick,0x121b2a6,34237,0,0x0,5
new,MemoryChunk,0xce3b4ac0000,262144
tick,0x10b0a2a,35287,0,0x0,5
new,MemoryChunk,0xa26aa80000,262144
code-creation,Eval,10,36002,0xa26aa8a9b6,5, node:internal/main/run_main_module:1:1,0xa26aa8a870,~
script-source,99,node:internal/main/run_main_module,'use strict';\n\nconst {\n  prepareMainThreadExecution\n} = require('internal/bootstrap/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n
code-source-info,0xa26aa8a9b6,99,0,632,C0O0C4O632,,
code-creation,Function,10,36086,0xa26aa8aa5e,58, node:internal/main/run_main_module:1:1,0xa26aa8a930,~
code-source-info,0xa26aa8aa5e,99,0,632,C0O56C3O56C8O25C13O102C15O102C19O137C22O560C25O560C30O598C35O605C40O622C47O626C51O606C57O631,,
code-creation,LazyCompile,10,36321,0xa26aa8ac9e,76,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x2ac221050da8,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - NativeModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/loaders') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\n});\n\n\n// internalBindingAllowlist contains the name of internalBinding modules\n// that are allowed for access via process.binding()... This is used\n// to provide a transition path for modules that are being moved over to\n// internalBinding.\nconst internalBindingAllowlist = new SafeSet([\n  'async_wrap'\x2C\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'crypto'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'http_parser'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'natives'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'signal_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'url'\x2C\n  'util'\x2C\n  'uv'\x2C\n  'v8'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'util'\x2C\n]);\n\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'test'\x2C\n]);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = ObjectCreate(null);\n\n  process.binding = function binding(module) {\n    module = String(module);\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (internalBindingAllowlist.has(module)) {\n      if (runtimeDeprecatedList.has(module)) {\n        runtimeDeprecatedList.delete(module);\n        process.emitWarning(\n          `Access to process.binding('${module}') is deprecated.`\x2C\n          'DeprecationWarning'\x2C\n          'DEP0111');\n      }\n      if (legacyWrapperList.has(module)) {\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\n      }\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n// Set up internalBinding() in the closure.\n/**\n * @type {InternalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = ObjectCreate(null);\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst loaderId = 'internal/bootstrap/loaders';\nconst {\n  moduleIds\x2C\n  compileFunction\n} = internalBinding('native_module');\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass NativeModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C NativeModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the native module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\n      // Do not expose this to user land even with --expose-internals.\n      if (id !== loaderId) {\n        mod.canBeRequiredByUsers = true;\n      }\n    }\n  }\n\n  static exists(id) {\n    return NativeModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    const mod = NativeModule.map.get(id);\n    return mod && mod.canBeRequiredByUsers;\n  }\n\n  // Determine if a core module can be loaded without the node: prefix. This\n  // function does not validate if the module actually exists.\n  static canBeRequiredWithoutScheme(id) {\n    return !schemelessBlockList.has(id);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!this.canBeRequiredByUsers) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    this.getESMFacade();\n    this.syncExports();\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const { ModuleWrap } = internalBinding('module_wrap');\n    const url = `node:${this.id}`;\n    const nativeModule = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    ArrayPrototypePush(exportsKeys\x2C 'default');\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        nativeModule.syncExports();\n        this.setExport('default'\x2C nativeModule.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : nativeModuleRequire;\n\n      const fn = compileFunction(id);\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  NativeModule\x2C\n  require: nativeModuleRequire\n};\n\nfunction nativeModuleRequire(id) {\n  if (id === loaderId) {\n    return loaderExports;\n  }\n\n  const mod = NativeModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (!NativeModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return nativeModuleRequire(request);\n}\n\n// Pass the exports back to C++ land for C++ internals to use.\nreturn loaderExports;\n
code-source-info,0xa26aa8ac9e,9,10778,11121,C0O10787C2O10798C4O10794C9O10814C13O10835C14O10855C19O10868C24O10872C29O10872C35O11013C37O11023C47O11071C60O11029C65O11023C66O11092C71O11092C75O11119,,
tick,0xf9a36f,36871,0,0x0,3,0x11d7ee0,0xa26aa8aa61
code-creation,LazyCompile,10,36915,0xa26aa8ba36,175,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x2ac221050cd8,~
code-source-info,0xa26aa8ba36,9,9991,10552,C0O10009C6O10024C12O10053C16O10061C17O10089C22O10097C23O10110C30O10153C37O10184C45O10153C63O10283C70O10283C75O10318C89O10353C103O10310C108O10391C109O10403C124O10433C126O10446C141O10466C152O10485C160O10517C165O10466C170O10540C174O10548,,
code-creation,Eval,10,37228,0xa26aa8cad6,5, node:internal/bootstrap/pre_execution:1:1,0xa26aa8c6b0,~
script-source,100,node:internal/bootstrap/pre_execution,'use strict';\n\nconst {\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  defineOperation\x2C\n  emitExperimentalWarning\x2C\n  exposeInterface\x2C\n} = require('internal/util');\n\nconst { Buffer } = require('buffer');\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\nconst assert = require('internal/assert');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C\n                                    initialzeModules = true) {\n  refreshRuntimeOptions();\n\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\n  // this toggle from the snapshot.\n  reconnectZeroFillToggle();\n\n  // Patch the process object with legacy properties and normalizations\n  patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupPerfHooks();\n  setupInspectorHooks();\n  setupWarningHandler();\n  setupFetch();\n  setupWebCrypto();\n  setupCustomEvent();\n\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd.\n  if (process.env.NODE_V8_COVERAGE) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n\n  setupDebugEnv();\n\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n  setupStacktracePrinterOnSigint();\n\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n  initializeReportSignalHandlers();  // Main-thread-only.\n\n  initializeHeapSnapshotSignalHandlers();\n\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n  // spawned by our child_process module\x2C then initialize IPC.\n  // This attaches some internal event listeners and creates:\n  // process.send()\x2C process.channel\x2C process.connected\x2C\n  // process.disconnect().\n  setupChildProcessIpcChannel();\n\n  // Load policy from disk and parse it.\n  initializePolicy();\n\n  // If this is a worker in cluster mode\x2C start up the communication\n  // channel. This needs to be done before any user code gets executed\n  // (including preload modules).\n  initializeClusterIPC();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n  initializeWASI();\n\n  require('internal/v8/startup_snapshot').runDeserializeCallbacks();\n\n  if (!initialzeModules) {\n    return;\n  }\n\n  initializeCJSLoader();\n  initializeESMLoader();\n  const CJSLoader = require('internal/modules/cjs/loader');\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\n  loadPreloadModules();\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  require('internal/process/per_thread').refreshHrtimeBuffer();\n\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: getOptionValue('--build-snapshot')\x2C\n    value: process.argv[0]\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      process.argv[1] = path.resolve(process.argv[1]);\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n  }\n}\n\n// https://fetch.spec.whatwg.org/\nfunction setupFetch() {\n  if (!getOptionValue('--experimental-fetch')) {\n    return;\n  }\n\n  emitExperimentalWarning('Fetch');\n\n  const undici = require('internal/deps/undici/undici');\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\n}\n\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (process.config.variables.node_no_browser_globals ||\n      !getOptionValue('--experimental-global-webcrypto')) {\n    return;\n  }\n\n  let webcrypto;\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                         get crypto() {\n                           webcrypto ??= require('internal/crypto/webcrypto');\n                           return webcrypto.crypto;\n                         }\n                       }\x2C 'crypto') });\n  if (internalBinding('config').hasOpenSSL) {\n    webcrypto ??= require('internal/crypto/webcrypto');\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: webcrypto.Crypto\n    });\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: webcrypto.CryptoKey\n    });\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: webcrypto.SubtleCrypto\n    });\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (process.config.variables.node_no_browser_globals ||\n      !getOptionValue('--experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage to a specified file.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  const { report } = require('internal/process/report');\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return report;\n    }\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  const { addSignalHandler } = require('internal/process/report');\n\n  addSignalHandler();\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  process.on(signal\x2C () => {\n    writeHeapSnapshot();\n  });\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupPerfHooks() {\n  require('internal/perf/performance').refreshTimeOrigin();\n  require('internal/perf/utils').refreshTimeOrigin();\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n\n  // Create global.process and global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePolicy() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = new URL(`file://${experimentalPolicy}`);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    require('internal/process/policy')\n      .setup(src\x2C manifestURL.href);\n  }\n}\n\nfunction initializeWASI() {\n  const { NativeModule } = require('internal/bootstrap/loaders');\n  const mod = NativeModule.map.get('wasi');\n  mod.canBeRequiredByUsers =\n    getOptionValue('--experimental-wasi-unstable-preview1');\n}\n\nfunction initializeCJSLoader() {\n  const CJSLoader = require('internal/modules/cjs/loader');\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\n    CJSLoader.Module._initPaths();\n  }\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  CJSLoader.Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\nfunction initializeESMLoader() {\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\n\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\n\n  const {\n    setImportModuleDynamicallyCallback\x2C\n    setInitializeImportMetaObjectCallback\n  } = internalBinding('module_wrap');\n  const esm = require('internal/process/esm_loader');\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const { setSourceMapsEnabled } =\n    require('internal/source_map/source_map_cache');\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\n                        'ExperimentalWarning');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nmodule.exports = {\n  refreshRuntimeOptions\x2C\n  patchProcessObject\x2C\n  setupCoverageHooks\x2C\n  setupWarningHandler\x2C\n  setupFetch\x2C\n  setupWebCrypto\x2C\n  setupCustomEvent\x2C\n  setupDebugEnv\x2C\n  setupPerfHooks\x2C\n  prepareMainThreadExecution\x2C\n  initializeDeprecations\x2C\n  initializeESMLoader\x2C\n  initializeFrozenIntrinsics\x2C\n  initializeSourceMapsHandlers\x2C\n  loadPreloadModules\x2C\n  setupTraceCategoryState\x2C\n  setupInspectorHooks\x2C\n  initializeReport\x2C\n  initializeCJSLoader\x2C\n  initializeWASI\n};\n
code-source-info,0xa26aa8cad6,100,0,19111,C0O0C4O19111,,
code-creation,Function,10,38065,0xa26aa8d7ee,530, node:internal/bootstrap/pre_execution:1:1,0xa26aa8ca50,~
code-source-info,0xa26aa8d7ee,100,0,19111,C0O0C229O25C235O43C241O67C247O101C253O112C259O127C265O156C271O256C277O256C282O196C288O214C294O236C300O321C306O321C311O293C317O426C323O426C328O359C334O378C340O405C346O472C352O472C357O461C363O533C369O533C374O559C379O499C385O582C391O582C395O582C397O18637C404O18658C410O18683C416O18705C422O18727C428O18750C434O18764C440O18782C446O18802C452O18819C458O18837C464O18867C470O18893C476O18916C482O18946C488O18978C494O19000C500O19027C506O19050C512O19070C518O19093C524O18652C529O19110,,
tick,0x7f407730f963,38205,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0xa26aa8ace5,0xa26aa8aa61
code-creation,LazyCompile,10,38370,0xa26aa8f2d6,273,prepareMainThreadExecution node:internal/bootstrap/pre_execution:29:36,0xa26aa8cb08,~
code-source-info,0xa26aa8f2d
code-creation,LazyCompile,10,38460,0xa26aa90896,10,refreshRuntimeOptions node:internal/bootstrap/pre_execution:99:31,0xa26aa8cb58,~
code-source-info,0xa26aa90896,100,2827,2853,C0O2834C5O2834C9O2852,,
code-creation,LazyCompile,10,38482,0xa26aa9097e,22,refreshOptions node:internal/options:39:24,0x1d94759e5dc8,~
script-source,95,node:internal/options,'use strict';\n\nconst {\n  getCLIOptions\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsMap;\nlet aliasesMap;\nlet embedderOptions;\n\n// getCLIOptions() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  if (!optionsMap) {\n    ({ options: optionsMap } = getCLIOptions());\n  }\n  return optionsMap;\n}\n\nfunction getAliasesFromBinding() {\n  if (!aliasesMap) {\n    ({ aliases: aliasesMap } = getCLIOptions());\n  }\n  return aliasesMap;\n}\n\nfunction getEmbedderOptions() {\n  if (!embedderOptions) {\n    embedderOptions = getEmbedderOptionsFromBinding();\n  }\n  return embedderOptions;\n}\n\nfunction refreshOptions() {\n  optionsMap = undefined;\n  aliasesMap = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  const options = getCLIOptionsFromBinding();\n  if (optionName.startsWith('--no-')) {\n    const option = options.get('--' + optionName.slice(5));\n    return option && !option.value;\n  }\n  return options.get(optionName)?.value;\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  get options() {\n    return getCLIOptionsFromBinding();\n  }\x2C\n  get aliases() {\n    return getAliasesFromBinding();\n  }\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\n};\n
code-source-info,0xa26aa9097e,95,902,960,C0O909C4O920C10O935C14O946C21O959,,
tick,0xd07595,38614,0,0x0,2,0x11d7ee0,0xa26aa8f2f5,0xa26aa8aa6d
code-creation,LazyCompile,10,38658,0xa26aa90ce6,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x3e83b6142960,~
script-source,25,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\n} = internalBinding('buffer');\nconst {\n  untransferable_object_private_symbol\x2C\n  setHiddenValue\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\n};\n
code-source-info,0xa26aa90ce6,25,30717,30757,C0O30724C5O30735C11O30733C18O30756,,
tick,0x7f40773a70af,39888,0,0x0,3,0x11d7ee0,0xa26aa8f2f5,0xa26aa8aa6d
code-creation,LazyCompile,10,39965,0xa26aa935d6,460,patchProcessObject node:internal/bootstrap/pre_execution:103:28,0xa26aa8cba8,~
code-source-info,0xa26aa935d
code-creation,LazyCompile,10,40039,0xa26aa93966,69,internalBinding node:internal/bootstrap/loaders:171:45,0x2ac221050730,~
code-source-info,0xa26aa93966,9,5263,5501,C0O5288C7O5298C11O5312C15O5349C25O5376C30O5374C37O5410C48O5429C56O5465C61O5410C66O5486C68O5497,,
code-creation,LazyCompile,10,40158,0xa26aa93c2e,69,refreshHrtimeBuffer node:internal/process/per_thread:67:29,0x3e83b614ef28,~
script-source,30,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst constants = internalBinding('constants').os.signals;\n\nconst {\n  handleProcessExit\x2C\n} = require('internal/modules/esm/handle_process_exit');\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\n\nconst binding = internalBinding('process_methods');\n\nlet hrValues;\nlet hrBigintValues;\n\nfunction refreshHrtimeBuffer() {\n  // The 3 entries filled in by the original process.hrtime contains\n  // the upper/lower 32 bits of the second part of the value\x2C\n  // and the remaining nanoseconds of the value.\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\n  // Use a BigUint64Array in the closure because this is actually a bit\n  // faster than simply returning a BigInt from C++ in V8 7.1.\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\n}\n\n// Create the buffers.\nrefreshHrtimeBuffer();\n\nfunction hrtime(time) {\n  binding.hrtime();\n\n  if (time !== undefined) {\n    validateArray(time\x2C 'time');\n    if (time.length !== 2) {\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n    }\n\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n    const nsec = hrValues[2] - time[1];\n    const needsBorrow = nsec < 0;\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n  }\n\n  return [\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\n    hrValues[2]\x2C\n  ];\n}\n\nfunction hrtimeBigInt() {\n  binding.hrtimeBigInt();\n  return hrBigintValues[0];\n}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  function exit(code) {\n    process.off('exit'\x2C handleProcessExit);\n\n    if (code || code === 0)\n      process.exitCode = code;\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || 0);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || 0);\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw errnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\n    };\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvironment }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { options\x2C aliases } = require('internal/options');\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvironment) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\x2C\n  hrtime\x2C\n  hrtimeBigInt\x2C\n  refreshHrtimeBuffer\x2C\n};\n
code-source-info,0xa26aa93c2e,30,1436,1876,C0O1623C7O1650C10O1658C17O1634C25O1632C31O1810C38O1846C41O1854C53O1827C61O1825C68O1875,,
code-creation,LazyCompile,10,40688,0xa26aa94af6,82,getOptionValue node:internal/options:44:24,0x1d94759e5e38,~
code-source-info,0xa26aa94af6,95,985,1228,C0O1018C3O1018C7O1063C15O1063C22O1113C30O1135C38O1135C43O1122C47O1113C53O1150C55O1175C60O1181C61O1203C66O1203C74O1218C81O1226,,
code-creation,LazyCompile,10,40761,0xa26aa94c4e,33,getCLIOptionsFromBinding node:internal/options:18:34,0x1d94759e5ad0,~
code-source-info,0xa26aa94c4e,95,497,598,C0O504C6O527C11O554C15O539C28O578C32O596,,
tick,0xcf0031,40869,1,0xb57600,6,0xd3aa20,0xa26aa94c59,0xa26aa94af9,0xa26aa9361a,0xa26aa8f2fb,0xa26aa8aa6d
code-creation,LazyCompile,10,41202,0xa26aa94e0e,175,resolve node:path:1091:10,0x3e83b617c508,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C 'path');\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n\n      validateString(path\x2C 'path');\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0xa26aa94e0e,41,33781,34691,C0O33781C3O33816C6O33847C8O33877C12O33884C16O33897C18O33891C25O33901C27O33945C28O33947C35O33958C42O33964C45O33964C49O33983C57O33983C62O34057C68O34064C73O34081C75O34106C87O34132C92O34154C99O34181C107O34220C109O34216C113O33920C118O33859C121O34436C126O34482C137O34451C143O34568C147O34598C152O34609C156O34624C157O34655C163O34662C174O34687,,
tick,0x7f40773285ff,42915,0,0x0,3,0x11d7ee0,0xa26aa936b8,0xa26aa8f2fb,0xa26aa8aa6d
code-creation,LazyCompile,10,42955,0xa26aa98046,30,validateString node:internal/validators:119:24,0x1d4983483eb8,~
script-source,16,node:internal/validators,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n    ERR_INVALID_CALLBACK\x2C\n  }\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\n  return value;\n}\n\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n);\n\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!isInt32(value)) {\n      if (!NumberIsInteger(value)) {\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n      }\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\n);\n\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!isUint32(value)) {\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    const min = positive ? 1 : 0;\n    // 2 ** 32 === 4294967296\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\n  }\n  if (positive && value === 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\n  }\n});\n\nfunction validateString(value\x2C name) {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n}\n\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n      ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n}\n\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\nfunction validateBoolean(value\x2C name) {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n}\n\n/**\n * @param {unknown} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean\x2C\n *   allowFunction?: boolean\x2C\n *   nullable?: boolean\n * }} [options]\n */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options) => {\n    const useDefaultOptions = options == null;\n    const allowArray = useDefaultOptions ? false : options.allowArray;\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\n    const nullable = useDefaultOptions ? false : options.nullable;\n    if ((!nullable && value === null) ||\n        (!allowArray && ArrayIsArray(value)) ||\n        (typeof value !== 'object' && (\n          !allowFunction || typeof value !== 'function'\n        ))) {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n    }\n  });\n\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\nfunction validateSignalName(signal\x2C name = 'signal') {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n}\n\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\nfunction validateEncoding(data\x2C encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n}\n\n// Check that the port number is not NaN when coerced to a number\x2C\n// is an integer and that it falls within the legal range of port numbers.\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n}\n\nconst validateCallback = hideStackFrames((callback) => {\n  if (typeof callback !== 'function')\n    throw new ERR_INVALID_CALLBACK(callback);\n});\n\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n};\n
code-source-info,0xa26aa98046,16,3428,3537,C0O3446C6O3481C22O3487C27O3481C29O3536,,
tick,0x7f407774b821,43359,0,0x0,3,0x11d7ee0,0xa26aa94e47,0xa26aa936b8,0xa26aa8f2fb,0xa26aa8aa6d
code-creation,LazyCompile,10,43383,0xa26aa98a5e,13, node:path:1082:10,0x3e83b617c4b8,~
code-source-info,0xa26aa98a5e,41,33630,33649,C0O33644C3O33644C8O33644C12O33649,,
code-creation,LazyCompile,10,43440,0xa26aa98b5e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x1d94759ea570,~
script-source,98,node:internal/bootstrap/switches/does_own_process_state,'use strict';\n\nconst credentials = internalBinding('credentials');\nconst rawMethods = internalBinding('process_methods');\n\nprocess.abort = rawMethods.abort;\nprocess.umask = wrappedUmask;\nprocess.chdir = wrappedChdir;\nprocess.cwd = wrappedCwd;\n\nif (credentials.implementsPosixCredentials) {\n  const wrapped = wrapPosixCredentialSetters(credentials);\n\n  process.initgroups = wrapped.initgroups;\n  process.setgroups = wrapped.setgroups;\n  process.setegid = wrapped.setegid;\n  process.seteuid = wrapped.seteuid;\n  process.setgid = wrapped.setgid;\n  process.setuid = wrapped.setuid;\n}\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst {\n  parseFileMode\x2C\n  validateArray\x2C\n  validateString\n} = require('internal/validators');\n\nfunction wrapPosixCredentialSetters(credentials) {\n  const {\n    codes: {\n      ERR_INVALID_ARG_TYPE\x2C\n      ERR_UNKNOWN_CREDENTIAL\n    }\n  } = require('internal/errors');\n  const {\n    validateUint32\n  } = require('internal/validators');\n\n  const {\n    initgroups: _initgroups\x2C\n    setgroups: _setgroups\x2C\n    setegid: _setegid\x2C\n    seteuid: _seteuid\x2C\n    setgid: _setgid\x2C\n    setuid: _setuid\n  } = credentials;\n\n  function initgroups(user\x2C extraGroup) {\n    validateId(user\x2C 'user');\n    validateId(extraGroup\x2C 'extraGroup');\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\n    const result = _initgroups(user\x2C extraGroup);\n    if (result === 1) {\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\n    } else if (result === 2) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\n    }\n  }\n\n  function setgroups(groups) {\n    validateArray(groups\x2C 'groups');\n    for (let i = 0; i < groups.length; i++) {\n      validateId(groups[i]\x2C `groups[${i}]`);\n    }\n    // Result is 0 on success. A positive integer indicates that the\n    // corresponding group was not found.\n    const result = _setgroups(groups);\n    if (result > 0) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\n    }\n  }\n\n  function wrapIdSetter(type\x2C method) {\n    return function(id) {\n      validateId(id\x2C 'id');\n      if (typeof id === 'number') id |= 0;\n      // Result is 0 on success\x2C 1 if credential is unknown.\n      const result = method(id);\n      if (result === 1) {\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\n      }\n    };\n  }\n\n  function validateId(id\x2C name) {\n    if (typeof id === 'number') {\n      validateUint32(id\x2C name);\n    } else if (typeof id !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\n    }\n  }\n\n  return {\n    initgroups\x2C\n    setgroups\x2C\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\n    setuid: wrapIdSetter('User'\x2C _setuid)\n  };\n}\n\n// Cache the working directory to prevent lots of lookups. If the working\n// directory is changed by `chdir`\x2C it'll be updated.\nlet cachedCwd = '';\n\nfunction wrappedChdir(directory) {\n  validateString(directory\x2C 'directory');\n  rawMethods.chdir(directory);\n  // Mark cache that it requires an update.\n  cachedCwd = '';\n}\n\nfunction wrappedUmask(mask) {\n  if (mask !== undefined) {\n    mask = parseFileMode(mask\x2C 'mask');\n  }\n  return rawMethods.umask(mask);\n}\n\nfunction wrappedCwd() {\n  if (cachedCwd === '')\n    cachedCwd = rawMethods.cwd();\n  return cachedCwd;\n}\n
code-source-info,0xa26aa98b5e,98,3341,3425,C0O3348C7O3362C12O3374C17O3397C22O3397C29O3384C35O3406C39O3423,,
code-creation,LazyCompile,10,43696,0xa26aa991c6,442,normalizeString node:path:66:25,0x3e83b617c020,~
code-source-info,0xa26aa991c
code-creation,LazyCompile,10,43776,0xa26aa99546,8,isPosixPathSeparator node:path:56:30,0x3e83b617bf80,~
code-source-info,0xa26aa99546,41,1854,1902,C0O1865C2O1881C4O1877C7O1900,,
code-creation,LazyCompile,10,43878,0xa26aa99956,37,initializeGlobalConsole node:internal/console/constructor:687:33,0x3e83b6160508,~
script-source,37,node:internal/console/constructor,'use strict';\n\n// The Console constructor is not actually used to construct the global\n// console. It's exported for backwards compatibility.\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst { trace } = internalBinding('trace_events');\nconst {\n  isStackOverflowError\x2C\n  codes: {\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { previewEntries } = internalBinding('util');\nconst { Buffer: { isBuffer } } = require('buffer');\nconst {\n  inspect\x2C\n  formatWithOptions\n} = require('internal/util/inspect');\nconst {\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\n} = require('internal/util/types');\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n  CHAR_UPPERCASE_C: kTraceCount\x2C\n} = require('internal/constants');\nconst kCounts = Symbol('counts');\n\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\nconst kMaxGroupIndentation = 1000;\n\n// Lazy loaded for startup performance.\nlet cliTable;\n\n// Track amount of indentation required via `console.group()`.\nconst kGroupIndent = Symbol('kGroupIndent');\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\nconst kFormatForStderr = Symbol('kFormatForStderr');\nconst kFormatForStdout = Symbol('kFormatForStdout');\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\nconst kColorMode = Symbol('kColorMode');\nconst kIsConsole = Symbol('kIsConsole');\nconst kWriteToConsole = Symbol('kWriteToConsole');\nconst kBindProperties = Symbol('kBindProperties');\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\nconst kUseStdout = Symbol('kUseStdout');\nconst kUseStderr = Symbol('kUseStderr');\n\nconst optionsMap = new SafeWeakMap();\n\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\n  // We have to test new.target here to see if this function is called\n  // with new\x2C because we need to define a custom instanceof to accommodate\n  // the global console.\n  if (new.target === undefined) {\n    return ReflectConstruct(Console\x2C arguments);\n  }\n\n  if (!options || typeof options.write === 'function') {\n    options = {\n      stdout: options\x2C\n      stderr: arguments[1]\x2C\n      ignoreErrors: arguments[2]\n    };\n  }\n\n  const {\n    stdout\x2C\n    stderr = stdout\x2C\n    ignoreErrors = true\x2C\n    colorMode = 'auto'\x2C\n    inspectOptions\x2C\n    groupIndentation\x2C\n  } = options;\n\n  if (!stdout || typeof stdout.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\n  }\n  if (!stderr || typeof stderr.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\n  }\n\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\n\n  if (groupIndentation !== undefined) {\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\n                    0\x2C kMaxGroupIndentation);\n  }\n\n  if (inspectOptions !== undefined) {\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\n\n    if (inspectOptions.colors !== undefined &&\n        options.colorMode !== undefined) {\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\n        'options.inspectOptions.color'\x2C 'colorMode');\n    }\n    optionsMap.set(this\x2C inspectOptions);\n  }\n\n  // Bind the prototype functions to this Console instance\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\n    // We have to bind the methods grabbed from the instance instead of from\n    // the prototype so that users extending the Console can override them\n    // from the prototype chain of the subclass.\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: key\n    });\n  });\n\n  this[kBindStreamsEager](stdout\x2C stderr);\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\n}\n\nconst consolePropAttributes = {\n  writable: true\x2C\n  enumerable: false\x2C\n  configurable: true\n};\n\n// Fixup global.console instanceof global.console.Console\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value(instance) {\n    return instance[kIsConsole];\n  }\n});\n\nconst kColorInspectOptions = { colors: true };\nconst kNoColorInspectOptions = {};\n\nObjectDefineProperties(Console.prototype\x2C {\n  [kBindStreamsEager]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Eager version for the Console constructor\n    value: function(stdout\x2C stderr) {\n      ObjectDefineProperties(this\x2C {\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\n      });\n    }\n  }\x2C\n  [kBindStreamsLazy]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Lazily load the stdout and stderr from an object so we don't\n    // create the stdio streams when they are not even accessed\n    value: function(object) {\n      let stdout;\n      let stderr;\n      ObjectDefineProperties(this\x2C {\n        '_stdout': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stdout) stdout = object.stdout;\n            return stdout;\n          }\x2C\n          set(value) { stdout = value; }\n        }\x2C\n        '_stderr': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stderr) { stderr = object.stderr; }\n            return stderr;\n          }\x2C\n          set(value) { stderr = value; }\n        }\n      });\n    }\n  }\x2C\n  [kBindProperties]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\n      ObjectDefineProperties(this\x2C {\n        '_stdoutErrorHandler': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: createWriteErrorHandler(this\x2C kUseStdout)\n        }\x2C\n        '_stderrErrorHandler': {\n          ...consolePropAttributes\x2C\n          __proto__: null\x2C\n          value: createWriteErrorHandler(this\x2C kUseStderr)\n        }\x2C\n        '_ignoreErrors': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: Boolean(ignoreErrors)\n        }\x2C\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        // Corresponds to https://console.spec.whatwg.org/#count-map\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\n        [kGroupIndentationWidth]: {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: groupIndentation\n        }\x2C\n        [SymbolToStringTag]: {\n          __proto__: null\x2C\n          writable: false\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: 'console'\n        }\n      });\n    }\n  }\x2C\n  [kWriteToConsole]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(streamSymbol\x2C string) {\n      const ignoreErrors = this._ignoreErrors;\n      const groupIndent = this[kGroupIndent];\n\n      const useStdout = streamSymbol === kUseStdout;\n      const stream = useStdout ? this._stdout : this._stderr;\n      const errorHandler = useStdout ?\n        this._stdoutErrorHandler : this._stderrErrorHandler;\n\n      if (groupIndent.length !== 0) {\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\n        }\n        string = groupIndent + string;\n      }\n      string += '\\n';\n\n      if (ignoreErrors === false) return stream.write(string);\n\n      // There may be an error occurring synchronously (e.g. for files or TTYs\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\n      // handle both situations.\n      try {\n        // Add and later remove a noop error handler to catch synchronous\n        // errors.\n        if (stream.listenerCount('error') === 0)\n          stream.once('error'\x2C noop);\n\n        stream.write(string\x2C errorHandler);\n      } catch (e) {\n        // Console is a debugging utility\x2C so it swallowing errors is not\n        // desirable even in edge cases such as low stack space.\n        if (isStackOverflowError(e))\n          throw e;\n        // Sorry\x2C there's no proper way to pass along the error here.\n      } finally {\n        stream.removeListener('error'\x2C noop);\n      }\n    }\n  }\x2C\n  [kGetInspectOptions]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(stream) {\n      let color = this[kColorMode];\n      if (color === 'auto') {\n        color = stream.isTTY && (\n          typeof stream.getColorDepth === 'function' ?\n            stream.getColorDepth() > 2 : true);\n      }\n\n      const options = optionsMap.get(this);\n      if (options) {\n        if (options.colors === undefined) {\n          options.colors = color;\n        }\n        return options;\n      }\n\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\n    }\n  }\x2C\n  [kFormatForStdout]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stdout);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\n  }\x2C\n  [kFormatForStderr]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stderr);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\n  }\x2C\n});\n\n// Make a function that can serve as the callback passed to `stream.write()`.\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\n  return (err) => {\n    // This conditional evaluates to true if and only if there was an error\n    // that was not already emitted (which happens when the _write callback\n    // is invoked asynchronously).\n    const stream = streamSymbol === kUseStdout ?\n      instance._stdout : instance._stderr;\n    if (err !== null && !stream._writableState.errorEmitted) {\n      // If there was an error\x2C it will be emitted on `stream` as\n      // an `error` event. Adding a `once` listener will keep that error\n      // from becoming an uncaught exception\x2C but since the handler is\n      // removed after the event\x2C non-console.* writes won't be affected.\n      // we are only adding noop if there is no one else listening for 'error'\n      if (stream.listenerCount('error') === 0) {\n        stream.once('error'\x2C noop);\n      }\n    }\n  };\n}\n\nconst consoleMethods = {\n  log(...args) {\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\n  }\x2C\n\n\n  warn(...args) {\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\n  }\x2C\n\n\n  dir(object\x2C options) {\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\n      customInspect: false\x2C\n      ...this[kGetInspectOptions](this._stdout)\x2C\n      ...options\n    }));\n  }\x2C\n\n  time(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    if (this._times.has(label)) {\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\n      return;\n    }\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    this._times.set(label\x2C process.hrtime());\n  }\x2C\n\n  timeEnd(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    if (found) {\n      this._times.delete(label);\n    }\n  }\x2C\n\n  timeLog(label = 'default'\x2C ...data) {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n  }\x2C\n\n  trace: function trace(...args) {\n    const err = {\n      name: 'Trace'\x2C\n      message: this[kFormatForStderr](args)\n    };\n    ErrorCaptureStackTrace(err\x2C trace);\n    this.error(err.stack);\n  }\x2C\n\n  assert(expression\x2C ...args) {\n    if (!expression) {\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\n      // The arguments will be formatted in warn() again\n      ReflectApply(this.warn\x2C this\x2C args);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#clear\n  clear() {\n    // It only makes sense to clear if _stdout is a TTY.\n    // Otherwise\x2C do nothing.\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\n      // The require is here intentionally to avoid readline being\n      // required too early when console is first loaded.\n      const {\n        cursorTo\x2C\n        clearScreenDown\x2C\n      } = require('internal/readline/callbacks');\n      cursorTo(this._stdout\x2C 0\x2C 0);\n      clearScreenDown(this._stdout);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#count\n  count(label = 'default') {\n    // Ensures that label is a string\x2C and only things that can be\n    // coerced to strings. e.g. Symbol is not allowed\n    label = `${label}`;\n    const counts = this[kCounts];\n    let count = counts.get(label);\n    if (count === undefined)\n      count = 1;\n    else\n      count++;\n    counts.set(label\x2C count);\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\n    this.log(`${label}: ${count}`);\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#countreset\n  countReset(label = 'default') {\n    const counts = this[kCounts];\n    if (!counts.has(label)) {\n      process.emitWarning(`Count for '${label}' does not exist`);\n      return;\n    }\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\n    counts.delete(`${label}`);\n  }\x2C\n\n  group(...data) {\n    if (data.length > 0) {\n      ReflectApply(this.log\x2C this\x2C data);\n    }\n    this[kGroupIndent] +=\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\n  }\x2C\n\n  groupEnd() {\n    this[kGroupIndent] = StringPrototypeSlice(\n      this[kGroupIndent]\x2C\n      0\x2C\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\n    );\n  }\x2C\n\n  // https://console.spec.whatwg.org/#table\n  table(tabularData\x2C properties) {\n    if (properties !== undefined)\n      validateArray(properties\x2C 'properties');\n\n    if (tabularData === null || typeof tabularData !== 'object')\n      return this.log(tabularData);\n\n    cliTable ??= require('internal/cli_table');\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\n\n    const _inspect = (v) => {\n      const depth = v !== null &&\n                    typeof v === 'object' &&\n                    !isArray(v) &&\n                    ObjectKeys(v).length > 2 ? -1 : 0;\n      const opt = {\n        depth\x2C\n        maxArrayLength: 3\x2C\n        breakLength: Infinity\x2C\n        ...this[kGetInspectOptions](this._stdout)\n      };\n      return inspect(v\x2C opt);\n    };\n    const getIndexArray = (length) => ArrayFrom(\n      { length }\x2C (_\x2C i) => _inspect(i));\n\n    const mapIter = isMapIterator(tabularData);\n    let isKeyValue = false;\n    let i = 0;\n    if (mapIter) {\n      const res = previewEntries(tabularData\x2C true);\n      tabularData = res[0];\n      isKeyValue = res[1];\n    }\n\n    if (isKeyValue || isMap(tabularData)) {\n      const keys = [];\n      const values = [];\n      let length = 0;\n      if (mapIter) {\n        for (; i < tabularData.length / 2; ++i) {\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\n          length++;\n        }\n      } else {\n        for (const { 0: k\x2C 1: v } of tabularData) {\n          ArrayPrototypePush(keys\x2C _inspect(k));\n          ArrayPrototypePush(values\x2C _inspect(v));\n          length++;\n        }\n      }\n      return final([\n        iterKey\x2C keyKey\x2C valuesKey\x2C\n      ]\x2C [\n        getIndexArray(length)\x2C\n        keys\x2C\n        values\x2C\n      ]);\n    }\n\n    const setIter = isSetIterator(tabularData);\n    if (setIter)\n      tabularData = previewEntries(tabularData);\n\n    const setlike = setIter || mapIter || isSet(tabularData);\n    if (setlike) {\n      const values = [];\n      let length = 0;\n      for (const v of tabularData) {\n        ArrayPrototypePush(values\x2C _inspect(v));\n        length++;\n      }\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\n    }\n\n    const map = ObjectCreate(null);\n    let hasPrimitives = false;\n    const valuesKeyArray = [];\n    const indexKeyArray = ObjectKeys(tabularData);\n\n    for (; i < indexKeyArray.length; i++) {\n      const item = tabularData[indexKeyArray[i]];\n      const primitive = item === null ||\n          (typeof item !== 'function' && typeof item !== 'object');\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        valuesKeyArray[i] = _inspect(item);\n      } else {\n        const keys = properties || ObjectKeys(item);\n        for (const key of keys) {\n          map[key] ??= [];\n          if ((primitive && properties) ||\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\n            map[key][i] = '';\n          else\n            map[key][i] = _inspect(item[key]);\n        }\n      }\n    }\n\n    const keys = ObjectKeys(map);\n    const values = ObjectValues(map);\n    if (hasPrimitives) {\n      ArrayPrototypePush(keys\x2C valuesKey);\n      ArrayPrototypePush(values\x2C valuesKeyArray);\n    }\n    ArrayPrototypeUnshift(keys\x2C indexKey);\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\n\n    return final(keys\x2C values);\n  }\x2C\n};\n\n// Returns true if label was found\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\n  const time = self._times.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\n    return false;\n  }\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (data === undefined) {\n    self.log('%s: %s'\x2C label\x2C formatted);\n  } else {\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\n  }\n  return true;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nconst keyKey = 'Key';\nconst valuesKey = 'Values';\nconst indexKey = '(index)';\nconst iterKey = '(iteration index)';\n\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\n\nfunction noop() {}\n\nfor (const method of ReflectOwnKeys(consoleMethods))\n  Console.prototype[method] = consoleMethods[method];\n\nConsole.prototype.debug = Console.prototype.log;\nConsole.prototype.info = Console.prototype.log;\nConsole.prototype.dirxml = Console.prototype.log;\nConsole.prototype.error = Console.prototype.warn;\nConsole.prototype.groupCollapsed = Console.prototype.group;\n\nfunction initializeGlobalConsole(globalConsole) {\n  globalConsole[kBindStreamsLazy](process);\n  globalConsole[kBindProperties](true\x2C 'auto');\n}\n\nmodule.exports = {\n  Console\x2C\n  kBindStreamsLazy\x2C\n  kBindProperties\x2C\n  initializeGlobalConsole\x2C\n  formatTime // exported for tests\n};\n
tick,0x7f40773a70af,44713,0,0x0,3,0x11d7ee0,0xa26aa936e2,0xa26aa8f2fb,0xa26aa8aa6d
code-source-info,0xa26aa99956,37,20398,20509,C0O20418C2O20432C4O20431C11O20449C16O20462C18O20476C20O20475C29O20492C36O20508,,
code-creation,LazyCompile,10,44836,0xa26aa9b336,94,value node:internal/console/constructor:200:20,0x3e83b615fa88,~
code-source-info,0xa26aa9b336,37,5722,6356,C0O5722C15O5743C16O5743C18O5761C19O5761C21O5775C33O5825C38O5923C46O6030C60O6091C65O6189C73O6300C87O5775C93O6355,,
code-creation,LazyCompile,10,44980,0xa26aa9b986,414,value node:internal/console/constructor:230:20,0x3e83b615fb10,~
code-source-info,0xa26aa9b986,37,6455,7849,C17O6511C27O6573C34O6615C52O6685C55O6655C73O6754C86O6851C89O6821C104O6899C111O6941C126O6981C129O6981C144O7032C151O7054C166O7088C169O7084C187O7179C191O7189C198O7211C213O7245C216O7241C235O7267C239O7280C246O7302C261O7332C275O7354C279O7367C286O7389C300O7419C314O7436C318O7451C325O7473C340O7503C354O7518C358O7543C365O7585C380O7625C394O7662C398O7682C407O6511C413O7848,,
code-creation,LazyCompile,10,45074,0xa26aa9bdf6,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x3e83b615fdb8,~
code-source-info,0xa26aa9bdf6,37,10641,11498,C0O10641C13O10670C17O11496,,
code-creation,LazyCompile,10,45179,0xa26aa9bfe6,27,SafeMap node:internal/per_context/primordials:366:16,0x2ac22104a868,~
script-source,6,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n// Because these functions are used by `makeSafe`\x2C which is exposed\n// on the `primordials` object\x2C it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\n);\n\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\n    )\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<any[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<any>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @param {Promise<any>[]} promises\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\n * @returns {Promise<any>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0xa26aa9bfe6,6,10601,10618,C3O10607C7O10613C11O10607C26O10617,,
tick,0x7f40773285fa,45847,0,0x0,3,0x11d7ee0,0xa26aa9ba2f,0xa26aa99973,0xa26aa936e2,0xa26aa8f2fb,0xa26aa8aa6d
code-creation,LazyCompile,10,46003,0xa26aa9d0f6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:155:33,0xa26aa8cbf8,~
code-source-info,0xa26aa9d0f6,100,4999,5247,C16O5051C21O5051C26O5077C28O5094C36O5124C43O5210C49O5228C56O5094C62O5246,,
code-creation,LazyCompile,10,46247,0xa26aa9d25e,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:318:33,0xa26aa8cfb8,~
code-source-info,0xa26aa9d25e,100,9736,9963,C0O9778C6O9778C11O9751C16O9850C22O9850C27O9821C32O9892C35O9917C40O9892C45O9962,,
tick,0xf764c1,46479,0,0x0,3,0x11d7ee0,0xa26aa9d286,0xa26aa8f302,0xa26aa8aa6d
code-creation,LazyCompile,10,46647,0xa26aa9d3f6,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x3e83b614f648,~
code-source-info,0xa26aa9d3f6,30,11365,11662,C0O11389C4O11418C10O11453C16O11484C21O11528C26O11529C33O11474C39O11553C44O11574C49O11574C55O11593C61O11625C66O11646C71O11646C76O11661,,
code-creation,LazyCompile,10,46813,0xa26aa9d5a6,42,setupPerfHooks node:internal/bootstrap/pre_execution:324:24,0xa26aa8d008,~
code-source-info,0xa26aa9d5a6,100,9988,10108,C0O9995C6O9995C11O10031C16O10032C20O10055C26O10055C31O10085C36O10086C41O10107,,
code-creation,LazyCompile,10,46979,0xa26aa9d726,42,refreshTimeOrigin node:internal/perf/performance:217:27,0x456f109ad60,~
script-source,76,node:internal/perf/performance,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_MISSING_ARGS\n  }\n} = require('internal/errors');\n\nconst {\n  EventTarget\x2C\n} = require('internal/event_target');\n\nconst { now } = require('internal/perf/utils');\n\nconst { markResourceTiming } = require('internal/perf/resource_timing');\n\nconst {\n  mark\x2C\n  measure\x2C\n  clearMarkTimings\x2C\n} = require('internal/perf/usertiming');\nconst {\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n} = require('internal/perf/observe');\n\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\nconst nodeTiming = require('internal/perf/nodetiming');\nconst timerify = require('internal/perf/timerify');\nconst { customInspectSymbol: kInspect } = require('internal/util');\nconst { inspect } = require('util');\n\nconst {\n  getTimeOriginTimestamp\n} = internalBinding('performance');\n\nclass Performance extends EventTarget {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `Performance ${inspect({\n      nodeTiming: this.nodeTiming\x2C\n      timeOrigin: this.timeOrigin\x2C\n    }\x2C opts)}`;\n  }\n}\n\nfunction toJSON() {\n  return {\n    nodeTiming: this.nodeTiming\x2C\n    timeOrigin: this.timeOrigin\x2C\n    eventLoopUtilization: this.eventLoopUtilization()\n  };\n}\n\nfunction clearMarks(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearMarkTimings(name);\n  clearEntriesFromBuffer('mark'\x2C name);\n}\n\nfunction clearMeasures(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearEntriesFromBuffer('measure'\x2C name);\n}\n\nfunction clearResourceTimings(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearEntriesFromBuffer('resource'\x2C name);\n}\n\nfunction getEntries() {\n  return filterBufferMapByNameAndType();\n}\n\nfunction getEntriesByName(name) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('name');\n  }\n  name = `${name}`;\n  return filterBufferMapByNameAndType(name\x2C undefined);\n}\n\nfunction getEntriesByType(type) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('type');\n  }\n  type = `${type}`;\n  return filterBufferMapByNameAndType(undefined\x2C type);\n}\n\nclass InternalPerformance extends EventTarget {}\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\n\nObjectDefineProperties(Performance.prototype\x2C {\n  clearMarks: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMarks\x2C\n  }\x2C\n  clearMeasures: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMeasures\x2C\n  }\x2C\n  clearResourceTimings: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearResourceTimings\x2C\n  }\x2C\n  eventLoopUtilization: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: eventLoopUtilization\x2C\n  }\x2C\n  getEntries: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntries\x2C\n  }\x2C\n  getEntriesByName: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByName\x2C\n  }\x2C\n  getEntriesByType: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByType\x2C\n  }\x2C\n  mark: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: mark\x2C\n  }\x2C\n  measure: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: measure\x2C\n  }\x2C\n  nodeTiming: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: nodeTiming\x2C\n  }\x2C\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\n  // which is a Node.js dependency\x2C not a internal module\n  markResourceTiming: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: markResourceTiming\x2C\n  }\x2C\n  now: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: now\x2C\n  }\x2C\n  timerify: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: timerify\x2C\n  }\x2C\n  // This would be updated during pre-execution in case\n  // the process is launched from a snapshot.\n  // TODO(joyeecheung): we may want to warn about access to\n  // this during snapshot building.\n  timeOrigin: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  }\x2C\n  toJSON: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: toJSON\x2C\n  }\n});\n\nfunction refreshTimeOrigin() {\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  });\n}\n\nmodule.exports = {\n  InternalPerformance\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0xa26aa9d726,76,4753,4931,C0O4760C7O4781C10O4793C25O4898C28O4898C35O4760C41O4930,,
tick,0x7f40773a70af,47717,0,0x0,3,0x11d7ee0,0xa26aa9d5b6,0xa26aa8f308,0xa26aa8aa6d
code-creation,LazyCompile,10,47867,0xa26aa9df76,19,refreshTimeOrigin node:internal/perf/utils:25:27,0xe02921a6e8,~
script-source,48,node:internal/perf/utils,'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones\x2C\n  getTimeOrigin\x2C\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now\x2C\n  getMilestoneTimestamp\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0xa26aa9df76,48,525,563,C0O532C5O545C11O543C18O562,,
code-creation,LazyCompile,10,48055,0xa26aa9e1e6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:329:29,0xa26aa8d058,~
code-source-info,0xa26aa9e1e6,100,10138,10691,C0O10481C6O10485C11O10510C17O10575C23O10575C28O10545C33O10559C38O10621C44O10621C49O10649C54O10650C61O10690,,
code-creation,Eval,10,48204,0xa26aa9e57e,5, node:internal/inspector_async_hook:1:1,0xa26aa9e3c8,~
script-source,101,node:internal/inspector_async_hook,'use strict';\n\nlet hook;\nlet config;\n\nconst {\n  SafeSet\x2C\n} = primordials;\n\nfunction lazyHookCreation() {\n  const inspector = internalBinding('inspector');\n  const { createHook } = require('async_hooks');\n  config = internalBinding('config');\n\n  hook = createHook({\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\n    // therefore we mark all tasks as recurring. Based on the discussion\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\n    // this should be fine as long as we call asyncTaskCanceled() too.\n      const recurring = true;\n      if (type === 'PROMISE')\n        this.promiseIds.add(asyncId);\n      else\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\n    }\x2C\n\n    before(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskStarted(asyncId);\n    }\x2C\n\n    after(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskFinished(asyncId);\n    }\x2C\n\n    destroy(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return this.promiseIds.delete(asyncId);\n      inspector.asyncTaskCanceled(asyncId);\n    }\x2C\n  });\n\n  hook.promiseIds = new SafeSet();\n}\n\nfunction enable() {\n  if (hook === undefined) lazyHookCreation();\n  if (config.bits < 64) {\n    // V8 Inspector stores task ids as (void*) pointers.\n    // async_hooks store ids as 64bit numbers.\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\n    // ids on 32bit platforms.\n    process.emitWarning(\n      'Warning: Async stack traces in debugger are not available ' +\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\n      {\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\n      });\n  } else {\n    hook.enable();\n  }\n}\n\nfunction disable() {\n  if (hook === undefined) lazyHookCreation();\n  hook.disable();\n}\n\nmodule.exports = {\n  enable\x2C\n  disable\n};\n
code-source-info,0xa26aa9e57e,101,0,1972,C0O0C4O1972,,
code-creation,Function,10,48347,0xa26aa9e79e,79, node:internal/inspector_async_hook:1:1,0xa26aa9e4f8,~
code-source-info,0xa26aa9e79e,101,0,1972,C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1971,,
new,MemoryChunk,0x7f4060040000,262144
code-creation,Function,11,48538,0x7f4060043060,660,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x2ac221050da8,^
code-source-info,0x7f4060043060,9,10778,11121,,,
tick,0x7f40773a70af,48621,0,0x0,0,0x11e14a0,0xa26aa8ace9,0xa26aa9e1fd,0xa26aa8f30e,0xa26aa8aa6d
code-creation,Function,11,48685,0x7f4060043360,112,isPosixPathSeparator node:path:56:30,0x3e83b617bf80,^
code-source-info,0x7f4060043360,41,1854,1902,,,
code-creation,Function,11,48770,0x7f4060043440,3068,normalizeString node:path:66:25,0x3e83b617c020,^
code-source-info,0x7f4060043440,41,2161,4085,,,
code-creation,LazyCompile,10,48868,0xa26aa9ef96,69,setupWarningHandler node:internal/bootstrap/pre_execution:168:29,0xa26aa8cc48,~
code-source-info,0xa26aa9ef96,100,5277,5474,C0O5312C6O5312C11O5296C16O5351C24O5355C33O5399C38O5403C45O5420C50O5435C53O5443C61O5443C68O5473,,
code-creation,LazyCompile,10,49015,0xa26aa9f20e,20,addListener node:events:604:58,0x1d49834a9280,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\nconst kRejection = SymbolFor('nodejs.rejection');\n\nconst { kEmptyObject } = require('internal/util');\n\nconst {\n  inspect\x2C\n  identicalSequenceRange\x2C\n} = require('internal/util/inspect');\n\nlet spliceOne;\n\nconst {\n  AbortError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNHANDLED_ERROR\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\n\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst kCapture = Symbol('kCapture');\nconst kErrorMonitor = Symbol('events.errorMonitor');\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\nconst kMaxEventTargetListenersWarned =\n  Symbol('events.maxEventTargetListenersWarned');\n\nlet EventEmitterAsyncResource;\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\n//\n// This implementation was adapted straight from addaleax's\n// eventemitter-asyncresource MIT-licensed userland module.\n// https://github.com/addaleax/eventemitter-asyncresource\nfunction lazyEventEmitterAsyncResource() {\n  if (EventEmitterAsyncResource === undefined) {\n    const {\n      AsyncResource\n    } = require('async_hooks');\n\n    const kEventEmitter = Symbol('kEventEmitter');\n    const kAsyncResource = Symbol('kAsyncResource');\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\n      /**\n       * @param {EventEmitter} ee\n       * @param {string} [type]\n       * @param {{\n       *   triggerAsyncId?: number\x2C\n       *   requireManualDestroy?: boolean\x2C\n       * }} [options]\n       */\n      constructor(ee\x2C type\x2C options) {\n        super(type\x2C options);\n        this[kEventEmitter] = ee;\n      }\n\n      /**\n       * @type {EventEmitter}\n       */\n      get eventEmitter() {\n        if (this[kEventEmitter] === undefined)\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\n        return this[kEventEmitter];\n      }\n    }\n\n    EventEmitterAsyncResource =\n      class EventEmitterAsyncResource extends EventEmitter {\n        /**\n         * @param {{\n         *   name?: string\x2C\n         *   triggerAsyncId?: number\x2C\n         *   requireManualDestroy?: boolean\x2C\n         * }} [options]\n         */\n        constructor(options = undefined) {\n          let name;\n          if (typeof options === 'string') {\n            name = options;\n            options = undefined;\n          } else {\n            if (new.target === EventEmitterAsyncResource) {\n              validateString(options?.name\x2C 'options.name');\n            }\n            name = options?.name || new.target.name;\n          }\n          super(options);\n\n          this[kAsyncResource] =\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\n        }\n\n        /**\n         * @param {symbol\x2Cstring} event\n         * @param  {...any} args\n         * @returns {boolean}\n         */\n        emit(event\x2C ...args) {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          const { asyncResource } = this;\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\n                              args);\n        }\n\n        /**\n         * @returns {void}\n         */\n        emitDestroy() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          this.asyncResource.emitDestroy();\n        }\n\n        /**\n         * @type {number}\n         */\n        get asyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.asyncId();\n        }\n\n        /**\n         * @type {number}\n         */\n        get triggerAsyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.triggerAsyncId();\n        }\n\n        /**\n         * @type {EventEmitterReferencingAsyncResource}\n         */\n        get asyncResource() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this[kAsyncResource];\n        }\n      };\n  }\n  return EventEmitterAsyncResource;\n}\n\n/**\n * Creates a new `EventEmitter` instance.\n * @param {{ captureRejections?: boolean; }} [opts]\n * @constructs {EventEmitter}\n */\nfunction EventEmitter(opts) {\n  EventEmitter.init.call(this\x2C opts);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\nmodule.exports.on = on;\nmodule.exports.getEventListeners = getEventListeners;\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.captureRejectionSymbol = kRejection;\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\n  __proto__: null\x2C\n  get() {\n    return EventEmitter.prototype[kCapture];\n  }\x2C\n  set(value) {\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\n\n    EventEmitter.prototype[kCapture] = value;\n  }\x2C\n  enumerable: true\n});\n\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: lazyEventEmitterAsyncResource\x2C\n  set: undefined\x2C\n  configurable: true\x2C\n});\n\nEventEmitter.errorMonitor = kErrorMonitor;\n\n// The default for captureRejections is false\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\n  __proto__: null\x2C\n  value: false\x2C\n  writable: true\x2C\n  enumerable: false\n});\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\nlet isEventTarget;\n\nfunction checkListener(listener) {\n  validateFunction(listener\x2C 'listener');\n}\n\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: function() {\n    return defaultMaxListeners;\n  }\x2C\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\n                                 'a non-negative number'\x2C\n                                 arg);\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nObjectDefineProperties(EventEmitter\x2C {\n  kMaxEventTargetListeners: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListeners\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n  kMaxEventTargetListenersWarned: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListenersWarned\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\n});\n\n/**\n * Sets the max listeners.\n * @param {number} n\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\n * @returns {void}\n */\nEventEmitter.setMaxListeners =\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n    if (eventTargets.length === 0) {\n      defaultMaxListeners = n;\n    } else {\n      if (isEventTarget === undefined)\n        isEventTarget = require('internal/event_target').isEventTarget;\n\n      for (let i = 0; i < eventTargets.length; i++) {\n        const target = eventTargets[i];\n        if (isEventTarget(target)) {\n          target[kMaxEventTargetListeners] = n;\n          target[kMaxEventTargetListenersWarned] = false;\n        } else if (typeof target.setMaxListeners === 'function') {\n          target.setMaxListeners(n);\n        } else {\n          throw new ERR_INVALID_ARG_TYPE(\n            'eventTargets'\x2C\n            ['EventEmitter'\x2C 'EventTarget']\x2C\n            target);\n        }\n      }\n    }\n  };\n\n// If you're updating this function definition\x2C please also update any\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\nEventEmitter.init = function(opts) {\n\n  if (this._events === undefined ||\n      this._events === ObjectGetPrototypeOf(this)._events) {\n    this._events = ObjectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n\n\n  if (opts?.captureRejections) {\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\n    this[kCapture] = Boolean(opts.captureRejections);\n  } else {\n    // Assigning the kCapture property directly saves an expensive\n    // prototype lookup in a very sensitive hot path.\n    this[kCapture] = EventEmitter.prototype[kCapture];\n  }\n};\n\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\n  if (!that[kCapture]) {\n    return;\n  }\n\n  // Handle Promises/A+ spec\x2C then could be a getter\n  // that throws on second use.\n  try {\n    const then = promise.then;\n\n    if (typeof then === 'function') {\n      then.call(promise\x2C undefined\x2C function(err) {\n        // The callback is called with nextTick to avoid a follow-up\n        // rejection from this promise.\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\n      });\n    }\n  } catch (err) {\n    that.emit('error'\x2C err);\n  }\n}\n\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\n  if (typeof ee[kRejection] === 'function') {\n    ee[kRejection](err\x2C type\x2C ...args);\n  } else {\n    // We have to disable the capture rejections mechanism\x2C otherwise\n    // we might end up in an infinite loop.\n    const prev = ee[kCapture];\n\n    // If the error handler throws\x2C it is not catchable and it\n    // will end up in 'uncaughtException'. We restore the previous\n    // value of kCapture in case the uncaughtException is present\n    // and the exception is handled.\n    try {\n      ee[kCapture] = false;\n      ee.emit('error'\x2C err);\n    } finally {\n      ee[kCapture] = prev;\n    }\n  }\n}\n\n/**\n * Increases the max listeners of the event emitter.\n * @param {number} n\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\n/**\n * Returns the current max listener value for the event emitter.\n * @returns {number}\n */\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nfunction enhanceStackTrace(err\x2C own) {\n  let ctorInfo = '';\n  try {\n    const { name } = this.constructor;\n    if (name !== 'EventEmitter')\n      ctorInfo = ` on ${name} instance`;\n  } catch {\n    // Continue regardless of error.\n  }\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n  const errStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\n  const ownStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\n\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\n  if (len > 0) {\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\n                         '    [... lines matching original stack trace ...]');\n  }\n\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\n}\n\n/**\n * Synchronously calls each of the listeners registered\n * for the event.\n * @param {string | symbol} type\n * @param {...any} [args]\n * @returns {boolean}\n */\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\n  let doError = (type === 'error');\n\n  const events = this._events;\n  if (events !== undefined) {\n    if (doError && events[kErrorMonitor] !== undefined)\n      this.emit(kErrorMonitor\x2C ...args);\n    doError = (doError && events.error === undefined);\n  } else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    let er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      try {\n        const capture = {};\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\n          __proto__: null\x2C\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\n          configurable: true\n        });\n      } catch {\n        // Continue regardless of error.\n      }\n\n      // Note: The comments on the `throw` lines are intentional\x2C they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n\n    let stringifiedEr;\n    try {\n      stringifiedEr = inspect(er);\n    } catch {\n      stringifiedEr = er;\n    }\n\n    // At least give some kind of context to the user\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  const handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    const result = handler.apply(this\x2C args);\n\n    // We check if result is undefined first because that\n    // is the most common case so we do not pay any perf\n    // penalty\n    if (result !== undefined && result !== null) {\n      addCatch(this\x2C result\x2C type\x2C args);\n    }\n  } else {\n    const len = handler.length;\n    const listeners = arrayClone(handler);\n    for (let i = 0; i < len; ++i) {\n      const result = listeners[i].apply(this\x2C args);\n\n      // We check if result is undefined first because that\n      // is the most common case so we do not pay any perf\n      // penalty.\n      // This code is duplicated because extracting it away\n      // would make it non-inlineable.\n      if (result !== undefined && result !== null) {\n        addCatch(this\x2C result\x2C type\x2C args);\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\n  let m;\n  let events;\n  let existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = ObjectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners\x2C first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit('newListener'\x2C type\x2C\n                  listener.listener ?? listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element\x2C need to change to array.\n      existing = events[type] =\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\n      // If we've already got an array\x2C just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      const w = genericNodeError(\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\n      process.emitWarning(w);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Adds a listener to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n  return _addListener(this\x2C type\x2C listener\x2C false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n/**\n * Adds the `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependListener =\n    function prependListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type\x2C this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target\x2C arguments);\n  }\n}\n\nfunction _onceWrap(target\x2C type\x2C listener) {\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\n  const wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\n/**\n * Adds a one-time `listener` function to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.once = function once(type\x2C listener) {\n  checkListener(listener);\n\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n  return this;\n};\n\n/**\n * Adds a one-time `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type\x2C listener) {\n      checkListener(listener);\n\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n\n/**\n * Removes the specified `listener` from the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeListener =\n    function removeListener(type\x2C listener) {\n      checkListener(listener);\n\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      const list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = ObjectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        let position = -1;\n\n        for (let i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          if (spliceOne === undefined)\n            spliceOne = require('internal/util').spliceOne;\n          spliceOne(list\x2C position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener'\x2C type\x2C listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n/**\n * Removes all listeners from the event emitter. (Only\n * removes listeners for a specific event name if specified\n * as `type`).\n * @param {string | symbol} [type]\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      // Not listening for removeListener\x2C no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = ObjectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = ObjectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // Emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        for (const key of ReflectOwnKeys(events)) {\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = ObjectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      const listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target\x2C type\x2C unwrap) {\n  const events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  const evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener);\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this\x2C type\x2C true);\n};\n\n/**\n * Returns a copy of the array of listeners and wrappers for\n * the event name specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this\x2C type\x2C false);\n};\n\n/**\n * Returns the number of listeners listening to the event name\n * specified as `type`.\n * @deprecated since v3.2.0\n * @param {EventEmitter} emitter\n * @param {string | symbol} type\n * @returns {number}\n */\nEventEmitter.listenerCount = function(emitter\x2C type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  }\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\n/**\n * Returns the number of listeners listening to event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {number}\n */\nfunction listenerCount(type) {\n  const events = this._events;\n\n  if (events !== undefined) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Returns an array listing the events for which\n * the emitter has registered listeners.\n * @returns {any[]}\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr) {\n  // At least since V8 8.3\x2C this implementation is faster than the previous\n  // which always used a simple for-loop\n  switch (arr.length) {\n    case 2: return [arr[0]\x2C arr[1]];\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\n  }\n  return ArrayPrototypeSlice(arr);\n}\n\nfunction unwrapListeners(arr) {\n  const ret = arrayClone(arr);\n  for (let i = 0; i < ret.length; ++i) {\n    const orig = ret[i].listener;\n    if (typeof orig === 'function')\n      ret[i] = orig;\n  }\n  return ret;\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nfunction getEventListeners(emitterOrTarget\x2C type) {\n  // First check if EventEmitter\n  if (typeof emitterOrTarget.listeners === 'function') {\n    return emitterOrTarget.listeners(type);\n  }\n  // Require event target lazily to avoid always loading it\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\n  if (isEventTarget(emitterOrTarget)) {\n    const root = emitterOrTarget[kEvents].get(type);\n    const listeners = [];\n    let handler = root?.next;\n    while (handler?.listener !== undefined) {\n      const listener = handler.listener?.deref ?\n        handler.listener.deref() : handler.listener;\n      listeners.push(listener);\n      handler = handler.next;\n    }\n    return listeners;\n  }\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Creates a `Promise` that is fulfilled when the emitter\n * emits the given event.\n * @param {EventEmitter} emitter\n * @param {string} name\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {Promise}\n */\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n  return new Promise((resolve\x2C reject) => {\n    const errorListener = (err) => {\n      emitter.removeListener(name\x2C resolver);\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      reject(err);\n    };\n    const resolver = (...args) => {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error'\x2C errorListener);\n      }\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      resolve(args);\n    };\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\n    if (name !== 'error' && typeof emitter.once === 'function') {\n      // EventTarget does not have `error` event semantics like Node\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\n      emitter.once('error'\x2C errorListener);\n    }\n    function abortListener() {\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\n    }\n    if (signal != null) {\n      eventTargetAgnosticAddListener(\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\n    }\n  });\n}\n\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value\x2C done) {\n  return { value\x2C done };\n}\n\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.removeListener === 'function') {\n    emitter.removeListener(name\x2C listener);\n  } else if (typeof emitter.removeEventListener === 'function') {\n    emitter.removeEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags?.once) {\n      emitter.once(name\x2C listener);\n    } else {\n      emitter.on(name\x2C listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    emitter.addEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\n/**\n * Returns an `AsyncIterator` that iterates `event` events.\n * @param {EventEmitter} emitter\n * @param {string | symbol} event\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {AsyncIterator}\n */\nfunction on(emitter\x2C event\x2C options) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n\n  const unconsumedEvents = [];\n  const unconsumedPromises = [];\n  let error = null;\n  let finished = false;\n\n  const iterator = ObjectSetPrototypeOf({\n    next() {\n      // First\x2C we consume all unread events\n      const value = unconsumedEvents.shift();\n      if (value) {\n        return PromiseResolve(createIterResult(value\x2C false));\n      }\n\n      // Then we error\x2C if an error happened\n      // This happens one time if at all\x2C because after 'error'\n      // we stop listening\n      if (error) {\n        const p = PromiseReject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished\x2C resolve to done\n      if (finished) {\n        return PromiseResolve(createIterResult(undefined\x2C true));\n      }\n\n      // Wait until an event happens\n      return new Promise(function(resolve\x2C reject) {\n        unconsumedPromises.push({ resolve\x2C reject });\n      });\n    }\x2C\n\n    return() {\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n\n      if (signal) {\n        eventTargetAgnosticRemoveListener(\n          signal\x2C\n          'abort'\x2C\n          abortListener\x2C\n          { once: true });\n      }\n\n      finished = true;\n\n      for (const promise of unconsumedPromises) {\n        promise.resolve(createIterResult(undefined\x2C true));\n      }\n\n      return PromiseResolve(createIterResult(undefined\x2C true));\n    }\x2C\n\n    throw(err) {\n      if (!err || !(err instanceof Error)) {\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\n                                       'Error'\x2C err);\n      }\n      error = err;\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n    }\x2C\n\n    [SymbolAsyncIterator]() {\n      return this;\n    }\n  }\x2C AsyncIteratorPrototype);\n\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\n  if (event !== 'error' && typeof emitter.on === 'function') {\n    emitter.on('error'\x2C errorHandler);\n  }\n\n  if (signal) {\n    eventTargetAgnosticAddListener(\n      signal\x2C\n      'abort'\x2C\n      abortListener\x2C\n      { once: true });\n  }\n\n  return iterator;\n\n  function abortListener() {\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\n  }\n\n  function eventHandler(...args) {\n    const promise = ArrayPrototypeShift(unconsumedPromises);\n    if (promise) {\n      promise.resolve(createIterResult(args\x2C false));\n    } else {\n      unconsumedEvents.push(args);\n    }\n  }\n\n  function errorHandler(err) {\n    finished = true;\n\n    const toError = ArrayPrototypeShift(unconsumedPromises);\n\n    if (toError) {\n      toError.reject(err);\n    } else {\n      // The next time we call next()\n      error = err;\n    }\n\n    iterator.return();\n  }\n}\n
code-source-info,0xa26aa9f20e,23,17710,17782,C0O17731C14O17738C19O17780,,
tick,0x7f40773a70af,50291,0,0x0,3,0x11d7ee0,0xa26aa9efd3,0xa26aa8f314,0xa26aa8aa6d
code-creation,LazyCompile,10,50405,0xa26aaa1866,378,_addListener node:events:541:22,0x1d49834a91e0,~
code-source-info,0xa26aaa
code-creation,LazyCompile,10,50489,0xa26aaa1b76,15,checkListener node:events:265:23,0x1d49834a8b90,~
code-source-info,0xa26aaa1b76,23,7730,7786,C0O7745C8O7745C14O7785,,
code-creation,LazyCompile,10,50553,0xa26aaa1c66,30, node:internal/validators:245:42,0x1d4983484350,~
code-source-info,0xa26aaa1c66,16,7573,7689,C0O7594C6O7631C22O7637C27O7631C29O7688,,
code-creation,LazyCompile,10,50687,0xa26aaa1ee6,380,emit node:events:460:44,0x1d49834a9120,~
code-source-info,0xa26aaa1ee
tick,0x1125a84,50829,0,0x0,2,0x11d7ee0,0xa26aaa1ff2,0xa26aaa18b3,0xa26aa9f21c,0xa26aa9efd3,0xa26aa8f314,0xa26aa8aa6d
code-creation,LazyCompile,10,50866,0xa26aaa2286,172,startListeningIfSignal node:internal/process/signal:22:32,0x1d94759e9020,~
script-source,97,node:internal/process/signal,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n} = require('internal/errors');\n\nconst { signals } = internalBinding('constants').os;\n\nlet Signal;\nconst signalWraps = new SafeMap();\n\nfunction isSignal(event) {\n  return typeof event === 'string' && signals[event] !== undefined;\n}\n\n// Detect presence of a listener for the special signal types\nfunction startListeningIfSignal(type) {\n  if (isSignal(type) && !signalWraps.has(type)) {\n    if (Signal === undefined)\n      Signal = internalBinding('signal_wrap').Signal;\n    const wrap = new Signal();\n\n    wrap.unref();\n\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\n\n    const signum = signals[type];\n    const err = wrap.start(signum);\n    if (err) {\n      wrap.close();\n      throw errnoException(err\x2C 'uv_signal_start');\n    }\n\n    signalWraps.set(type\x2C wrap);\n  }\n}\n\nfunction stopListeningIfSignal(type) {\n  const wrap = signalWraps.get(type);\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\n    wrap.close();\n    signalWraps.delete(type);\n  }\n}\n\nmodule.exports = {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\n};\n
code-source-info,0xa26aaa2286,97,429,904,C0O440C3O444C11O463C14O475C19O475C26O492C32O524C38O533C43O563C50O531C56O589C61O589C67O613C72O613C76O627C78O643C84O673C98O643C103O641C107O721C114O728C118O757C123O757C129O776C131O798C136O798C140O813C148O819C153O813C154O870C159O882C164O882C171O903,,
code-creation,LazyCompile,10,50929,0xa26aaa2646,19,isSignal node:internal/process/signal:17:18,0x1d94759e8e68,~
code-source-info,0xa26aaa2646,97,255,334,C0O267C8O303C13O310C17O318C18O332,,
code-creation,LazyCompile,10,51018,0xa26aaa287e,156,setupFetch node:internal/bootstrap/pre_execution:179:20,0xa26aa8cc98,~
code-source-info,0xa26aaa287e,100,5529,5985,C0O5536C8O5541C14O5587C15O5594C16O5602C24O5602C28O5654C34O5654C39O5696C46O5712C52O5740C57O5696C62O5750C69O5766C75O5797C80O5750C85O5810C92O5826C98O5856C103O5810C108O5868C115O5884C121O5914C126O5868C131O5926C138O5942C144O5973C149O5926C155O5984,,
code-creation,LazyCompile,10,51136,0xa26aaa2dae,280,setupWebCrypto node:internal/bootstrap/pre_execution:196:24,0xa26aa8cce8,~
code-source-info,0xa26aaa2dae,100,6114,7306,C0O6114C8O6121C13O6133C18O6140C23O6150C33O6184C39O6184C45O6241C46O6248C47O6260C48O6260C50O6273C61O6294C76O6361C107O6361C120O6273C125O6634C133O6638C138O6663C144O6682C158O6696C162O6692C164O6738C175O6759C189O6902C197O6738C202O6921C213O6942C227O7088C235O6921C240O7110C251O7131C265O7280C273O7110C279O7305,,
code-creation,LazyCompile,10,51242,0xa26aaa3036,5,get node:internal/bootstrap/node:136:6,0x2ac221055928,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\n//\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\n// responsible for setting up node.js core before executing main scripts\n// under `lib/internal/main/`.\n//\n// This file is expected not to perform any asynchronous operations itself\n// when being executed - those should be done in either\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\n// of the code here focuses on setting up the global proxy and the process\n// object in a synchronous manner.\n// As special caution is given to the performance of the startup process\x2C\n// many dependencies are invoked lazily.\n//\n// Scripts run before this file:\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\n//   builtins that won't be affected by user land monkey-patching for internal\n//   modules to use.\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\n//   `internalBinding()` and `NativeModule`.\n//\n// This file is run to bootstrap both the main thread and the worker threads.\n// After this file is run\x2C certain properties are setup according to the\n// configuration of the Node.js instance using the files in\n// `lib/internal/bootstrap/switches/`.\n//\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\n// execution. They may run additional setups exported by\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C require\x2C internalBinding\x2C primordials */\n\nsetupPrepareStackTrace();\n\nconst {\n  Array\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeFill\x2C\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPreventExtensions\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  ReflectSet\x2C\n  SymbolToStringTag\x2C\n  globalThis\x2C\n} = primordials;\nconst config = internalBinding('config');\nconst internalTimers = require('internal/timers');\nconst { deprecate } = require('internal/util');\n\nsetupProcessObject();\n\nsetupGlobalProxy();\nsetupBuffer();\n\nprocess.domain = null;\nprocess._exiting = false;\n\n// process.config is serialized config.gypi\nconst nativeModule = internalBinding('native_module');\n\n// TODO(@jasnell): Once this has gone through one full major\n// release cycle\x2C remove the Proxy and setter and update the\n// getter to either return a read-only object or always return\n// a freshly parsed version of nativeModule.config.\n\nconst deprecationHandler = {\n  warned: false\x2C\n  message: 'Setting process.config is deprecated. ' +\n           'In the future the property will be read-only.'\x2C\n  code: 'DEP0150'\x2C\n  maybeWarn() {\n    if (!this.warned) {\n      process.emitWarning(this.message\x2C {\n        type: 'DeprecationWarning'\x2C\n        code: this.code\n      });\n      this.warned = true;\n    }\n  }\x2C\n\n  defineProperty(target\x2C key\x2C descriptor) {\n    this.maybeWarn();\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\n  }\x2C\n\n  deleteProperty(target\x2C key) {\n    this.maybeWarn();\n    delete target[key];\n  }\x2C\n\n  preventExtensions(target) {\n    this.maybeWarn();\n    return ObjectPreventExtensions(target);\n  }\x2C\n\n  set(target\x2C key\x2C value) {\n    this.maybeWarn();\n    return ReflectSet(target\x2C key\x2C value);\n  }\x2C\n\n  get(target\x2C key\x2C receiver) {\n    const val = ReflectGet(target\x2C key\x2C receiver);\n    if (val != null && typeof val === 'object') {\n      // eslint-disable-next-line node-core/prefer-primordials\n      return new Proxy(val\x2C deprecationHandler);\n    }\n    return val;\n  }\x2C\n\n  setPrototypeOf(target\x2C proto) {\n    this.maybeWarn();\n    return ObjectSetPrototypeOf(target\x2C proto);\n  }\n};\n\n// eslint-disable-next-line node-core/prefer-primordials\nlet processConfig = new Proxy(\n  JSONParse(nativeModule.config)\x2C\n  deprecationHandler);\n\nObjectDefineProperty(process\x2C 'config'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n  get() { return processConfig; }\x2C\n  set(value) {\n    deprecationHandler.maybeWarn();\n    processConfig = value;\n  }\n});\n\nrequire('internal/worker/js_transferable').setup();\n\n// Bootstrappers for all threads\x2C including worker threads and main thread\nconst perThreadSetup = require('internal/process/per_thread');\nconst rawMethods = internalBinding('process_methods');\n\n// Set up methods on the process object for all threads\n{\n  process.dlopen = rawMethods.dlopen;\n  process.uptime = rawMethods.uptime;\n\n  // TODO(joyeecheung): either remove them or make them public\n  process._getActiveRequests = rawMethods._getActiveRequests;\n  process._getActiveHandles = rawMethods._getActiveHandles;\n\n  process.getActiveResourcesInfo = function() {\n    const timerCounts = internalTimers.getTimerCounts();\n    return ArrayPrototypeConcat(\n      rawMethods._getActiveRequestsInfo()\x2C\n      rawMethods._getActiveHandlesInfo()\x2C\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\n  };\n\n  // TODO(joyeecheung): remove these\n  process.reallyExit = rawMethods.reallyExit;\n  process._kill = rawMethods._kill;\n\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\n  process._rawDebug = wrapped._rawDebug;\n  process.cpuUsage = wrapped.cpuUsage;\n  process.resourceUsage = wrapped.resourceUsage;\n  process.memoryUsage = wrapped.memoryUsage;\n  process.kill = wrapped.kill;\n  process.exit = wrapped.exit;\n\n  process.hrtime = perThreadSetup.hrtime;\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\n\n  process.openStdin = function() {\n    process.stdin.resume();\n    return process.stdin;\n  };\n}\n\nconst credentials = internalBinding('credentials');\nif (credentials.implementsPosixCredentials) {\n  process.getuid = credentials.getuid;\n  process.geteuid = credentials.geteuid;\n  process.getgid = credentials.getgid;\n  process.getegid = credentials.getegid;\n  process.getgroups = credentials.getgroups;\n}\n\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\n// process. They use the same functions as the JS embedder API. These callbacks\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\n// and the cost of doing so is negligible.\nconst { nativeHooks } = require('internal/async_hooks');\ninternalBinding('async_wrap').setupHooks(nativeHooks);\n\nconst {\n  setupTaskQueue\x2C\n  queueMicrotask\n} = require('internal/process/task_queues');\n\nif (!config.noBrowserGlobals) {\n  // Override global console from the one provided by the VM\n  // to the one implemented by Node.js\n  // https://console.spec.whatwg.org/#console-namespace\n  exposeNamespace(globalThis\x2C 'console'\x2C\n                  createGlobalConsole(globalThis.console));\n\n  const { URL\x2C URLSearchParams } = require('internal/url');\n  // https://url.spec.whatwg.org/#url\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\n  // https://url.spec.whatwg.org/#urlsearchparams\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\n\n  const {\n    TextEncoder\x2C TextDecoder\n  } = require('internal/encoding');\n  // https://encoding.spec.whatwg.org/#textencoder\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\n  // https://encoding.spec.whatwg.org/#textdecoder\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\n\n  const {\n    AbortController\x2C\n    AbortSignal\x2C\n  } = require('internal/abort_controller');\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\n\n  const {\n    EventTarget\x2C\n    Event\x2C\n  } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\n  const {\n    MessageChannel\x2C\n    MessagePort\x2C\n    MessageEvent\x2C\n  } = require('internal/worker/io');\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\n\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\n  const timers = require('timers');\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\n\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\n\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\n                            require('perf_hooks').performance);\n\n  // Non-standard extensions:\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\n}\n\n// Set the per-Environment callback that will be called\n// when the TrackingTraceStateObserver updates trace state.\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\n// attached to the per-process TracingController.\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\n\n// process.allowedNodeEnvironmentFlags\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\n  __proto__: null\x2C\n  get() {\n    const flags = perThreadSetup.buildAllowedFlags();\n    process.allowedNodeEnvironmentFlags = flags;\n    return process.allowedNodeEnvironmentFlags;\n  }\x2C\n  // If the user tries to set this to another value\x2C override\n  // this completely to that value.\n  set(value) {\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\n      __proto__: null\x2C\n      value\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\n    });\n  }\x2C\n  enumerable: true\x2C\n  configurable: true\n});\n\n// process.assert\nprocess.assert = deprecate(\n  perThreadSetup.assert\x2C\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\n  'DEP0100');\n\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\n// deprecate it in favor of a better API?\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\nconst features = {\n  inspector: hasInspector\x2C\n  debug: isDebugBuild\x2C\n  uv: true\x2C\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\n  tls_alpn: hasOpenSSL\x2C\n  tls_sni: hasOpenSSL\x2C\n  tls_ocsp: hasOpenSSL\x2C\n  tls: hasOpenSSL\x2C\n  // This needs to be dynamic because snapshot is built without code cache.\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\n  // Make it possible to build snapshot with code cache\n  get cached_builtins() {\n    return nativeModule.hasCachedBuiltins();\n  }\n};\n\nObjectDefineProperty(process\x2C 'features'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  configurable: false\x2C\n  value: features\n});\n\n{\n  const {\n    onGlobalUncaughtException\x2C\n    setUncaughtExceptionCaptureCallback\x2C\n    hasUncaughtExceptionCaptureCallback\n  } = require('internal/process/execution');\n\n  // For legacy reasons this is still called `_fatalException`\x2C even\n  // though it is now a global uncaught exception handler.\n  // The C++ land node::errors::TriggerUncaughtException grabs it\n  // from the process object because it has been monkey-patchable.\n  // TODO(joyeecheung): investigate whether process._fatalException\n  // can be deprecated.\n  process._fatalException = onGlobalUncaughtException;\n  process.setUncaughtExceptionCaptureCallback =\n    setUncaughtExceptionCaptureCallback;\n  process.hasUncaughtExceptionCaptureCallback =\n    hasUncaughtExceptionCaptureCallback;\n}\n\nconst { emitWarning } = require('internal/process/warning');\nprocess.emitWarning = emitWarning;\n\n// We initialize the tick callbacks and the timer callbacks last during\n// bootstrap to make sure that any operation done before this are synchronous.\n// If any ticks or timers are scheduled before this they are unlikely to work.\n{\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\n  process.nextTick = nextTick;\n  // Used to emulate a tick manually in the JS land.\n  // A better name for this function would be `runNextTicks` but\n  // it has been exposed to the process object so we keep this legacy name\n  // TODO(joyeecheung): either remove it or make it public\n  process._tickCallback = runNextTicks;\n\n  const { setupTimers } = internalBinding('timers');\n  const {\n    processImmediate\x2C\n    processTimers\x2C\n  } = internalTimers.getTimerCallbacks(runNextTicks);\n  // Sets two per-Environment callbacks that will be run from libuv:\n  // - processImmediate will be run in the callback of the per-Environment\n  //   check handle.\n  // - processTimers will be run in the callback of the per-Environment timer.\n  setupTimers(processImmediate\x2C processTimers);\n  // Note: only after this point are the timers effective\n}\n\n// Preload modules so that they are included in the builtin snapshot.\nrequire('fs');\nrequire('v8');\nrequire('vm');\nrequire('url');\nrequire('internal/options');\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  const {\n    prepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\n    }\n  } = require('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTrace);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n}\n\nfunction setupProcessObject() {\n  const EventEmitter = require('events');\n  const origProcProto = ObjectGetPrototypeOf(process);\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\n  FunctionPrototypeCall(EventEmitter\x2C process);\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: false\x2C\n    value: 'process'\n  });\n  // Make process globally available to users by putting it on the global proxy\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    value: process\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: true\n  });\n}\n\nfunction setupGlobalProxy() {\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    value: 'global'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n  globalThis.global = globalThis;\n}\n\nfunction setupBuffer() {\n  const {\n    Buffer\x2C\n    atob\x2C\n    btoa\x2C\n  } = require('buffer');\n  const bufferBinding = internalBinding('buffer');\n\n  // Only after this point can C++ use Buffer::New()\n  bufferBinding.setBufferPrototype(Buffer.prototype);\n  delete bufferBinding.setBufferPrototype;\n  delete bufferBinding.zeroFill;\n\n  ObjectDefineProperties(globalThis\x2C {\n    'Buffer': {\n      __proto__: null\x2C\n      value: Buffer\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    'atob': {\n      __proto__: null\x2C\n      value: atob\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    'btoa': {\n      __proto__: null\x2C\n      value: btoa\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n  });\n}\n\nfunction createGlobalConsole(consoleFromVM) {\n  const consoleFromNode =\n    require('internal/console/global');\n  if (config.hasInspector) {\n    const inspector = require('internal/util/inspector');\n    // This will be exposed by `require('inspector').console` later.\n    inspector.consoleFromVM = consoleFromVM;\n    // TODO(joyeecheung): postpone this until the first time inspector\n    // is activated.\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\n    // Setup inspector command line API.\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\n  }\n  return consoleFromNode;\n}\n\n// https://heycam.github.io/webidl/#es-namespaces\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: namespaceObject\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\n  });\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\n  });\n}\n\n// https://heycam.github.io/webidl/#Replaceable\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value\x2C\n  });\n}\n
code-source-info,0xa26aaa3036,10,4152,4180,C0O4157C4O4178,,
code-creation,LazyCompile,10,51898,0xa26aaa421e,52,get node:internal/bootstrap/node:112:6,0x2ac221055888,~
code-source-info,0xa26aaa421e,10,3519,3783,C0O3561C14O3561C20O3600C29O3715C35O3737C43O3722C48O3757C49O3768C51O3779,,
tick,0x7f40773a70af,52013,0,0x0,3,0x11d7ee0,0xa26aaa2dc0,0xa26aa8f320,0xa26aa8aa6d
code-creation,LazyCompile,10,52043,0xa26aaa43de,74,setupCustomEvent node:internal/bootstrap/pre_execution:238:26,0xa26aa8cd60,~
code-source-info,0xa26aaa43de,100,7439,7700,C0O7446C3O7458C8O7465C13O7475C21O7509C27O7509C33O7568C34O7575C35O7606C41O7606C46O7590C51O7642C58O7658C67O7642C73O7699,,
code-creation,LazyCompile,10,52112,0xa26aaa45ce,75,setupDebugEnv node:internal/bootstrap/pre_execution:290:23,0xa26aa8cec8,~
code-source-info,0xa26aaa45ce,100,8986,9196,C0O8993C6O8993C11O9026C19O9054C24O9058C29O9027C34O9073C42O9077C48O9121C54O9121C59O9158C64O9171C69O9172C74O9195,,
code-creation,LazyCompile,10,52166,0xa26aaa4966,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x1d498349f870,~
script-source,22,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = ObjectCreate(null);\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\n};\n
code-source-info,0xa26aaa4966,22,546,991,C0O561C7O574C14O572C20O596C31O709C44O709C51O753C62O754C69O782C80O783C88O833C100O848C116O833C121O833C123O871C132O883C144O959C151O971C158O990,,
code-creation,LazyCompile,10,52360,0xa26aaa4f76,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:268:40,0xa26aa8ce00,~
code-source-info,0xa26aaa4f76,100,8530,8716,C0O8537C8O8542C14O8582C15O8589C16O8623C22O8623C27O8604C32O8673C38O8706C43O8706C48O8715,,
code-creation,LazyCompile,10,52430,0xa26aaa518e,62,initializeReport node:internal/bootstrap/pre_execution:278:26,0xa26aa8ce50,~
code-source-info,0xa26aaa518e,100,8743,8962,C0O8743C8O8769C16O8769C21O8758C27O8807C42O8828C47O8920C55O8807C61O8961,,
code-creation,Eval,10,52576,0xa26aaa56fe,5, node:internal/process/report:1:1,0xa26aaa5508,~
script-source,102,node:internal/process/report,'use strict';\nconst {\n  ERR_SYNTHETIC\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateSignalName\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst nr = internalBinding('report');\nconst {\n  JSONParse\x2C\n} = primordials;\nconst report = {\n  writeReport(file\x2C err) {\n    if (typeof file === 'object' && file !== null) {\n      err = file;\n      file = undefined;\n    } else if (file !== undefined) {\n      validateString(file\x2C 'file');\n    }\n\n    if (err === undefined) {\n      err = new ERR_SYNTHETIC();\n    } else {\n      validateObject(err\x2C 'err');\n    }\n\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\n  }\x2C\n  getReport(err) {\n    if (err === undefined)\n      err = new ERR_SYNTHETIC();\n    else\n      validateObject(err\x2C 'err');\n\n    return JSONParse(nr.getReport(err));\n  }\x2C\n  get directory() {\n    return nr.getDirectory();\n  }\x2C\n  set directory(dir) {\n    validateString(dir\x2C 'directory');\n    nr.setDirectory(dir);\n  }\x2C\n  get filename() {\n    return nr.getFilename();\n  }\x2C\n  set filename(name) {\n    validateString(name\x2C 'filename');\n    nr.setFilename(name);\n  }\x2C\n  get compact() {\n    return nr.getCompact();\n  }\x2C\n  set compact(b) {\n    validateBoolean(b\x2C 'compact');\n    nr.setCompact(b);\n  }\x2C\n  get signal() {\n    return nr.getSignal();\n  }\x2C\n  set signal(sig) {\n    validateSignalName(sig\x2C 'signal');\n    removeSignalHandler();\n    addSignalHandler(sig);\n    nr.setSignal(sig);\n  }\x2C\n  get reportOnFatalError() {\n    return nr.shouldReportOnFatalError();\n  }\x2C\n  set reportOnFatalError(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnFatalError(trigger);\n  }\x2C\n  get reportOnSignal() {\n    return nr.shouldReportOnSignal();\n  }\x2C\n  set reportOnSignal(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnSignal(trigger);\n    removeSignalHandler();\n    addSignalHandler();\n  }\x2C\n  get reportOnUncaughtException() {\n    return nr.shouldReportOnUncaughtException();\n  }\x2C\n  set reportOnUncaughtException(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnUncaughtException(trigger);\n  }\n};\n\nfunction addSignalHandler(sig) {\n  if (nr.shouldReportOnSignal()) {\n    if (typeof sig !== 'string')\n      sig = nr.getSignal();\n\n    process.on(sig\x2C signalHandler);\n  }\n}\n\nfunction removeSignalHandler() {\n  const sig = nr.getSignal();\n\n  if (sig)\n    process.removeListener(sig\x2C signalHandler);\n}\n\nfunction signalHandler(sig) {\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\n}\n\nmodule.exports = {\n  addSignalHandler\x2C\n  report\n};\n
code-source-info,0xa26aaa56fe,102,0,2545,C0O0C4O2545,,
code-creation,Function,10,52738,0xa26aaa620e,306, node:internal/process/report:1:1,0xa26aaa5678,~
code-source-info,0xa26aaa620e,102,0,2545,C0O0C48O42C51O42C56O68C61O24C67O165C70O165C75O86C81O105C87O123C93O145C99O208C102O208C106O208C108O245C114O288C119O292C127O678C281O2494C288O2515C294O2535C300O2509C305O2544,,
code-creation,LazyCompile,10,52913,0xa26aaa8076,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:298:40,0xa26aa8cf18,~
code-source-info,0xa26aaa8076,100,9297,9393,C0O9333C6O9333C11O9312C16O9372C20O9392,,
code-creation,LazyCompile,10,52994,0xa26aaa817e,57,addSignalHandler node:internal/process/report:98:26,0xa26aaa5730,~
code-source-info,0xa26aaa817e,102,2144,2290,C0O2154C5O2161C10O2161C16O2191C22O2226C27O2235C32O2235C38O2253C41O2261C49O2261C56O2289,,
tick,0xe86108,53095,0,0x0,3,0x11d7ee0,0xa26aa8f372,0xa26aa8aa6d
code-creation,LazyCompile,10,53174,0xa26aaa8746,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:304:46,0xa26aa8cf68,~
code-source-info,0xa26aaa8746,100,9440,9702,C0O9440C8O9462C18O9462C23O9506C25O9523C26O9530C27O9534C35O9534C40O9564C45O9565C50O9625C58O9625C63O9603C69O9643C74O9651C79O9654C84O9651C91O9701,,
code-creation,LazyCompile,10,53448,0xa26aaa89d6,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:437:37,0xa26aa8d138,~
code-source-info,0xa26aaa89d6,100,13519,14048,C0O13526C3O13538C8O13542C14O13580C20O13580C25O13624C33O13647C38O13651C46O13624C52O13677C53O13687C57O13677C61O13768C64O13783C73O13841C76O13849C81O13853C90O13900C93O13915C102O13957C108O13957C113O13981C118O13982C124O14021C127O14036C132O14021C137O14047,,
code-creation,LazyCompile,10,53805,0xa26aaa8dce,455,initializePolicy node:internal/bootstrap/pre_execution:465:26,0xa26aa8d1d8,~
code-source-info,0xa26aaa8dce
code-creation,LazyCompile,10,54011,0xa26aaa91be,63,initializeClusterIPC node:internal/bootstrap/pre_execution:456:30,0xa26aa8d188,~
code-source-info,0xa26aaa91be,100,14079,14320,C0O14086C3O14098C10O14102C18O14117C23O14121C29O14159C35O14159C40O14191C45O14191C49O14280C52O14295C62O14319,,
code-creation,LazyCompile,10,54084,0xa26aaa932e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:560:38,0xa26aa8d318,~
code-source-info,0xa26aaa932e,100,17878,18027,C0O17922C6O17922C11O17893C16O17973C21O18002C26O18026,,
tick,0x114eddc,54184,1,0xb53890,2,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aaa9334,0xa26aa8f38a,0xa26aa8aa6d
code-creation,Eval,10,54363,0xa26aaa9dce,5, node:internal/source_map/source_map_cache:1:1,0xa26aaa9a38,~
script-source,103,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolSplit\x2C\n  SafeMap\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nfunction ObjectGetValueSafe(obj\x2C key) {\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\n}\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\nconst fs = require('fs');\nconst { getOptionValue } = require('internal/options');\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\nconst {\n  normalizeReferrerURL\x2C\n} = require('internal/modules/cjs/helpers');\nconst { validateBoolean } = require('internal/validators');\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\n\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst cjsSourceMapCache = new IterableWeakMap();\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\nconst generatedSourceMapCache = new SafeMap();\nconst kLeadingProtocol = /^\\w+:\\/\\//;\n\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\nlet SourceMap;\n\nlet sourceMapsEnabled;\nfunction getSourceMapsEnabled() {\n  if (sourceMapsEnabled === undefined) {\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n  }\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  const {\n    setSourceMapsEnabled\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  setSourceMapsEnabled(val);\n  if (val) {\n    const {\n      prepareStackTrace\n    } = require('internal/source_map/prepare_stack_trace');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      prepareStackTrace\x2C\n    } = require('internal/errors');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  try {\n    filename = normalizeReferrerURL(filename);\n  } catch (err) {\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\n    debug(err);\n    return;\n  }\n  const match = RegExpPrototypeExec(\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x2C\n    content\x2C\n  );\n  if (match) {\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\n    const url = data ? null : match.groups.sourceMappingURL;\n    if (cjsModuleInstance) {\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\n        filename\x2C\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    } else if (isGeneratedSource) {\n      generatedSourceMapCache.set(filename\x2C {\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    } else {\n      // If there is no cjsModuleInstance and is not generated source assume we are in a\n      // "modules/esm" context.\n      esmSourceMapCache.set(filename\x2C {\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    }\n  }\n}\n\nfunction maybeCacheGeneratedSourceMap(content) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n\n  const matchSourceURL = RegExpPrototypeExec(\n    /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/\x2C\n    content\n  );\n  if (matchSourceURL == null) {\n    return;\n  }\n  let sourceURL = matchSourceURL.groups.sourceURL;\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  try {\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true);\n  } catch (err) {\n    // This can happen if the filename is not a valid URL.\n    // If we fail to cache the source map\x2C we should not fail the whole process.\n    debug(err);\n  }\n}\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\n  // account in coverage calculations.\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\n    return line.length;\n  });\n}\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = ObjectCreate(null);\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of cjsSourceMapCache) {\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\n      url: ObjectGetValueSafe(value\x2C 'url')\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL\x2C isGenerated) {\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let sourceMap;\n  if (isGenerated) {\n    sourceMap = generatedSourceMapCache.get(sourceURL);\n  } else {\n    sourceMap = esmSourceMapCache.get(sourceURL);\n    if (sourceMap === undefined) {\n      for (const value of cjsSourceMapCache) {\n        const filename = ObjectGetValueSafe(value\x2C 'filename');\n        if (sourceURL === filename) {\n          sourceMap = {\n            data: ObjectGetValueSafe(value\x2C 'data')\n          };\n        }\n      }\n    }\n  }\n  if (sourceMap && sourceMap.data) {\n    return new SourceMap(sourceMap.data);\n  }\n  return undefined;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0xa26aaa9dce,103,0,9046,C0O0C4O9046,,
code-creation,Function,10,54773,0xa26aaaa4b6,482, node:internal/source_map/source_map_cache:1:1,0xa26aaa9d48,~
code-source-info,0xa26aaaa4b6,103,0,9046,C0O0C164O25C170O46C176O59C182O75C188O89C194O123C200O156C206O179C212O209C217O220C223O532C229O532C234O521C240O563C246O563C251O596C264O597C270O563C272O659C278O659C282O659C284O701C290O701C295O682C301O758C307O758C312O738C317O838C323O838C328O812C334O907C340O907C345O887C351O983C357O983C362O947C367O1215C369O1215C374O1215C376O1342C378O1342C383O1342C385O1475C387O1475C392O1475C394O1515C398O1515C400O1575C406O1575C411O1537C417O1552C423O1567C429O1604C430O1604C432O1620C433O1620C435O4462C439O8910C446O8931C452O8948C458O8972C464O8996C470O9019C476O8925C481O9045,,
code-creation,LazyCompile,10,54919,0xa26aaab43e,82,debuglog node:internal/util/debuglog:71:18,0x1d498349fbc0,~
code-source-info,0xa26aaab43e,22,2232,3240,C0O2232C28O2357C32O2357C34O2759C35O2759C37O2781C41O2781C43O2869C48O3068C58O3089C63O3135C74O3068C79O3224C81O3238,,
code-creation,Eval,10,55103,0xa26aaab9be,5, node:internal/util/iterable_weak_map:1:1,0xa26aaab770,~
script-source,104,node:internal/util/iterable_weak_map,'use strict';\n\nconst {\n  ObjectFreeze\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SymbolIterator\x2C\n} = primordials;\n\n// This class is modified from the example code in the WeakRefs specification:\n// https://github.com/tc39/proposal-weakrefs\n// Licensed under ECMA's MIT-style license\x2C see:\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\nclass IterableWeakMap {\n  #weakMap = new SafeWeakMap();\n  #refSet = new SafeSet();\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\n\n  set(key\x2C value) {\n    const entry = this.#weakMap.get(key);\n    if (entry) {\n      // If there's already an entry for the object represented by "key"\x2C\n      // the value can be updated without creating a new WeakRef:\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\n    } else {\n      const ref = new SafeWeakRef(key);\n      this.#weakMap.set(key\x2C { value\x2C ref });\n      this.#refSet.add(ref);\n      this.#finalizationGroup.register(key\x2C {\n        set: this.#refSet\x2C\n        ref\n      }\x2C ref);\n    }\n  }\n\n  get(key) {\n    return this.#weakMap.get(key)?.value;\n  }\n\n  has(key) {\n    return this.#weakMap.has(key);\n  }\n\n  delete(key) {\n    const entry = this.#weakMap.get(key);\n    if (!entry) {\n      return false;\n    }\n    this.#weakMap.delete(key);\n    this.#refSet.delete(entry.ref);\n    this.#finalizationGroup.unregister(entry.ref);\n    return true;\n  }\n\n  [SymbolIterator]() {\n    const iterator = this.#refSet[SymbolIterator]();\n\n    const next = () => {\n      const result = iterator.next();\n      if (result.done) return result;\n      const key = result.value.deref();\n      if (key == null) return next();\n      const { value } = this.#weakMap.get(key);\n      return { done: false\x2C value };\n    };\n\n    return {\n      [SymbolIterator]() { return this; }\x2C\n      next\x2C\n    };\n  }\n}\n\nfunction cleanup({ set\x2C ref }) {\n  set.delete(ref);\n}\n\nObjectFreeze(IterableWeakMap.prototype);\n\nmodule.exports = {\n  IterableWeakMap\x2C\n};\n
code-source-info,0xa26aaab9be,104,0,1958,C0O0C4O1958,,
code-creation,Function,10,55228,0xa26aaac11e,196, node:internal/util/iterable_weak_map:1:1,0xa26aaab938,~
code-source-info,0xa26aaac11e,104,0,1958,C0O0C26O25C31O41C37O69C43O80C49O95C55O110C134O1392C168O1904C173O1875C177O1917C184O1938C190O1932C195O1957,,
code-creation,Function,10,55238,0xa26aaac29e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0xa26aaabc48,~
code-source-info,0xa26aaac29e,104,399,516,C3O410C10O410C27O441C34O441C48O479C62O479C74O516,,
tick,0x1be95f5,55340,1,0xb53890,6,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aaaa5e9,0xa26aa8ba9d,0x7f40600432df,0xa26aaa9334,0xa26aa8f38a,0xa26aa8aa6d
code-creation,Eval,10,55520,0xa26aaacf86,5, node:internal/modules/cjs/helpers:1:1,0xa26aaaccd0,~
script-source,105,node:internal/modules/cjs/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\n} = require('internal/errors').codes;\nconst { NativeModule } = require('internal/bootstrap/loaders');\n\nconst { validateString } = require('internal/validators');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\n\nconst { getOptionValue } = require('internal/options');\nconst userConditions = getOptionValue('--conditions');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\nconst cjsConditions = new SafeSet([\n  'require'\x2C\n  'node'\x2C\n  ...addonConditions\x2C\n  ...userConditions\x2C\n]);\n\nfunction loadNativeModule(filename\x2C request) {\n  const mod = NativeModule.map.get(filename);\n  if (mod?.canBeRequiredByUsers) {\n    debug('load native module %s'\x2C request);\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\n    mod.compileForPublicLoader();\n    return mod;\n  }\n}\n\n// Invoke with makeRequireFunction(module) where |module| is the Module object\n// to use as the context for the require() function.\n// Use redirects to set up a mapping from a policy and restrict dependencies\nconst urlToFileCache = new SafeMap();\nfunction makeRequireFunction(mod\x2C redirects) {\n  const Module = mod.constructor;\n\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = cjsConditions;\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        if (destination.protocol === 'node:') {\n          const specifier = destination.pathname;\n          const mod = loadNativeModule(specifier\x2C href);\n          if (mod && mod.canBeRequiredByUsers) {\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (destination.protocol === 'file:') {\n          let filepath;\n          if (urlToFileCache.has(href)) {\n            filepath = urlToFileCache.get(href);\n          } else {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod.require(filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\n        ));\n      }\n      return mod.require(specifier);\n    };\n  } else {\n    require = function require(path) {\n      return mod.require(path);\n    };\n  }\n\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  require.main = process.mainModule;\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('internal/modules/cjs/loader').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      __proto__: null\x2C\n      get: () => {\n        const lib = dummyModule.require(name);\n\n        // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n        delete object[name];\n        ObjectDefineProperty(object\x2C name\x2C {\n          __proto__: null\x2C\n          get: () => lib\x2C\n          set: setReal\x2C\n          configurable: true\x2C\n          enumerable: false\n        });\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\n    });\n  });\n}\n\n/**\n *\n * @param {string | URL} referrer\n * @returns {string}\n */\nfunction normalizeReferrerURL(referrer) {\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\n    return pathToFileURL(referrer).href;\n  }\n  return new URL(referrer).href;\n}\n\n// For error messages only - used to check if ESM syntax is in use.\nfunction hasEsmSyntax(code) {\n  debug('Checking for ESM syntax');\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n  let root;\n  try {\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\n  } catch {\n    return false;\n  }\n\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\n    stmt.type === 'ExportDefaultDeclaration' ||\n    stmt.type === 'ExportNamedDeclaration' ||\n    stmt.type === 'ImportDeclaration' ||\n    stmt.type === 'ExportAllDeclaration');\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n};\n
code-source-info,0xa26aaacf86,105,0,6862,C0O0C4O6862,,
code-creation,Function,10,55836,0xa26aaad506,536, node:internal/modules/cjs/helpers:1:1,0xa26aaacf00,~
code-source-info,0xa26aaad506,105,0,6862,C0O0C104O25C110O50C116O72C122O94C128O118C134O151C139O162C144O173C150O202C156O229C162O253C168O373C174O373C179O399C184O307C190O342C196O432C202O432C207O415C213O499C219O499C224O480C230O544C236O544C240O544C242O607C248O607C253O569C259O584C265O599C271O660C277O660C282O641C287O712C290O712C295O757C301O757C306O790C319O791C325O757C327O856C330O856C335O911C346O1041C353O1083C354O1083C410O1105C465O1041C470O1041C472O1665C474O1665C479O1665C481O6702C488O6723C494O6749C500O6766C506O6782C512O6802C518O6825C524O6849C530O6717C535O6861,,
code-creation,LazyCompile,10,55948,0xa26aaae1ce,27,SafeSet node:internal/per_context/primordials:379:16,0x2ac22104a9f0,~
code-source-info,0xa26aaae1ce,6,10928,10945,C3O10934C7O10940C11O10934C26O10944,,
code-creation,LazyCompile,10,56036,0xa26aaae396,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xa26aaaba40,~
code-source-info,0xa26aaae396,104,373,373,C0O373C15O373,,
code-creation,LazyCompile,10,56103,0xa26aaae71e,27,SafeWeakMap node:internal/per_context/primordials:372:16,0x2ac22104a928,~
code-source-info,0xa26aaae71e,6,10772,10789,C3O10778C7O10784C11O10778C26O10788,,
code-creation,LazyCompile,10,56158,0xa26aaae826,27,SafeFinalizationRegistry node:internal/per_context/primordials:393:16,0x2ac22104ab78,~
code-source-info,0xa26aaae826,6,11378,11423,C3O11398C7O11404C11O11398C26O11422,,
code-creation,LazyCompile,10,56331,0xa26aaaf09e,492,initializeDeprecations node:internal/bootstrap/pre_execution:347:32,0xa26aa8d0a8,~
code-source-info,0xa26aaaf09e
tick,0x7f40773a70af,56452,0,0x0,3,0x11d7ee0,0xa26aa8f390,0xa26aa8aa6d
code-creation,LazyCompile,10,56617,0xa26aaaf5b6,53,initializeWASI node:internal/bootstrap/pre_execution:514:24,0xa26aa8d228,~
code-source-info,0xa26aaaf5b6,100,16170,16376,C0O16202C6O16202C11O16185C16O16268C21O16272C29O16272C35O16287C37O16318C43O16318C47O16312C52O16375,,
code-creation,LazyCompile,10,56830,0xa26aaaf706,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33,0x1d94759d5d58,~
script-source,89,node:internal/v8/startup_snapshot,'use strict';\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\n} = require('internal/errors');\n\nconst {\n  setSerializeCallback\x2C\n  setDeserializeCallback\x2C\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\n  markBootstrapComplete\n} = internalBinding('mksnapshot');\n\nfunction isBuildingSnapshot() {\n  // For now this is the only way to build a snapshot.\n  return require('internal/options').getOptionValue('--build-snapshot');\n}\n\nfunction throwIfNotBuildingSnapshot() {\n  if (!isBuildingSnapshot()) {\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\n  }\n}\n\nconst deserializeCallbacks = [];\nlet deserializeCallbackIsSet = false;\nfunction runDeserializeCallbacks() {\n  while (deserializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addDeserializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  if (!deserializeCallbackIsSet) {\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\n    // the deserialize callbacks can always be invoked. For now only\n    // store it in C++ when it's actually used to avoid unnecessary\n    // C++ -> JS costs.\n    setDeserializeCallback(runDeserializeCallbacks);\n    deserializeCallbackIsSet = true;\n  }\n  deserializeCallbacks.push([callback\x2C data]);\n}\n\nconst serializeCallbacks = [];\nfunction runSerializeCallbacks() {\n  while (serializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\n    callback(data);\n  }\n  // Remove the hooks from the snapshot.\n  require('v8').startupSnapshot = undefined;\n}\n\nfunction addSerializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  serializeCallbacks.push([callback\x2C data]);\n}\n\nfunction initializeCallbacks() {\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\n  // they throw.\n  if (isBuildingSnapshot()) {\n    setSerializeCallback(runSerializeCallbacks);\n  }\n}\n\nlet deserializeMainIsSet = false;\nfunction setDeserializeMainFunction(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\n  // main function to run the lib/internal/main scripts and make sure that\n  // the main function set in the snapshot building process takes precedence.\n  validateFunction(callback\x2C 'callback');\n  if (deserializeMainIsSet) {\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\n  }\n  deserializeMainIsSet = true;\n\n  _setDeserializeMainFunction(function deserializeMain() {\n    const {\n      prepareMainThreadExecution\n    } = require('internal/bootstrap/pre_execution');\n\n    // This should be in sync with run_main_module.js until we make that\n    // a built-in main function.\n    prepareMainThreadExecution(true);\n    markBootstrapComplete();\n    callback(data);\n  });\n}\n\nmodule.exports = {\n  initializeCallbacks\x2C\n  runDeserializeCallbacks\x2C\n  // Exposed to require('v8').startupSnapshot\n  namespace: {\n    addDeserializeCallback\x2C\n    addSerializeCallback\x2C\n    setDeserializeMainFunction\x2C\n    isBuildingSnapshot\n  }\n};\n
code-source-info,0xa26aaaf706,89,760,901,C0O802C5O795C11O802C16O846C21O867C26O867C31O824C37O837C44O880C48O767C52O900,,
code-creation,LazyCompile,10,57303,0xa26aaafc96,66,initializeCJSLoader node:internal/bootstrap/pre_execution:521:29,0xa26aa8d278,~
code-source-info,0xa26aaafc96,100,16406,16721,C0O16431C6O16431C11O16473C16O16478C20O16498C26O16536C31O16543C36O16543C40O16639C51O16660C56O16696C60O16654C65O16720,,
tick,0x7f40777084a4,57544,1,0xb53890,6,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,58527,0xa26aab1d16,5, node:internal/modules/cjs/loader:1:1,0xa26aab1430,~
script-source,106,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  ArrayPrototypeFlatMap\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\n};\n\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\nconst { deprecate\x2C kEmptyObject } = require('internal/util');\nconst vm = require('vm');\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { sep } = path;\nconst { internalModuleStat } = internalBinding('fs');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst { getOptionValue } = require('internal/options');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\n\n// Whether any user-provided CJS modules had been loaded (executed).\n// Used for internal assertions.\nlet hasLoadedAnyUserCJSModule = false;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\n} = require('internal/constants');\n\nconst {\n  isProxy\n} = require('internal/util/types');\n\nconst asyncESM = require('internal/process/esm_loader');\nconst { enrichCJSError } = require('internal/modules/esm/translators');\nconst { kEvaluated } = internalBinding('module_wrap');\nconst {\n  encodedSepRegEx\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\n} = require('internal/modules/esm/resolve');\n\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = ObjectCreate(null);\n\nlet requireDepth = 0;\nlet statCache = null;\nlet isPreloading = false;\n\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) return result;\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\n    ArrayPrototypePush(children\x2C child);\n}\n\nconst moduleParentCache = new SafeWeakMap();\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  this.exports = {};\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\n\nconst builtinModules = [];\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\n  if (mod.canBeRequiredByUsers &&\n    NativeModule.canBeRequiredWithoutScheme(id)) {\n    ArrayPrototypePush(builtinModules\x2C id);\n  }\n}\n\nconst allBuiltins = new SafeSet(\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\n);\nNativeModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\n\nObjectFreeze(builtinModules);\nModule.builtinModules = builtinModules;\n\nModule._cache = ObjectCreate(null);\nModule._pathCache = ObjectCreate(null);\nModule._extensions = ObjectCreate(null);\nlet modulePaths = [];\nModule.globalPaths = [];\n\nlet patched = false;\n\n// eslint-disable-next-line func-style\nlet wrap = function(script) {\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  __proto__: null\x2C\n\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\nfunction getModuleParent() {\n  return moduleParentCache.get(this);\n}\n\nfunction setModuleParent(value) {\n  moduleParentCache.set(this\x2C value);\n}\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  get: pendingDeprecation ? deprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : getModuleParent\x2C\n  set: pendingDeprecation ? deprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : setModuleParent\x2C\n});\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nconst packageJsonCache = new SafeMap();\n\nfunction readPackage(requestPath) {\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\n\n  const existing = packageJsonCache.get(jsonPath);\n  if (existing !== undefined) return existing;\n\n  const result = packageJsonReader.read(jsonPath);\n  const json = result.containsKeys === false ? '{}' : result.string;\n  if (json === undefined) {\n    packageJsonCache.set(jsonPath\x2C false);\n    return false;\n  }\n\n  try {\n    const parsed = JSONParse(json);\n    const filtered = {\n      name: parsed.name\x2C\n      main: parsed.main\x2C\n      exports: parsed.exports\x2C\n      imports: parsed.imports\x2C\n      type: parsed.type\n    };\n    packageJsonCache.set(jsonPath\x2C filtered);\n    return filtered;\n  } catch (e) {\n    e.path = jsonPath;\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\n    throw e;\n  }\n}\n\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\n  let separatorIndex;\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\n      return false;\n    const pjson = readPackage(checkPath + sep);\n    if (pjson) return {\n      data: pjson\x2C\n      path: checkPath\x2C\n    };\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const pkg = readPackage(requestPath)?.main;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath\x2C 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\n      );\n    }\n  }\n  return actual;\n}\n\n// In order to minimize unnecessary lstat() calls\x2C\n// this cache is a list of known-real paths.\n// Set to an empty Map to reset.\nconst realpathCache = new SafeMap();\n\n// Check if the file exists and is not a directory\n// if using --preserve-symlinks and isMain is false\x2C\n// keep symlinks intact\x2C otherwise resolve to the\n// absolute realpath.\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  if (preserveSymlinks && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\n// Given a path\x2C check if the file exists with any of the set extensions\nfunction tryExtensions(p\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n// Find the longest (possibly multi-dot) extension registered in\n// Module._extensions\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) continue; // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) return currentExtension;\n  }\n  return '.js';\n}\n\nfunction trySelfParentPath(parent) {\n  if (!parent) return false;\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) return false;\n\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\n  if (!pkg || pkg.exports === undefined) return false;\n  if (typeof pkg.name !== 'string') return false;\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n    throw e;\n  }\n}\n\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\n  if (!name)\n    return;\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = readPackage(pkgPath);\n  if (pkg?.exports != null) {\n    try {\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      throw e;\n    }\n  }\n}\n\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry)\n    return entry;\n\n  let exts;\n  let trailingSlash = request.length > 0 &&\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\n    CHAR_FORWARD_SLASH;\n  if (!trailingSlash) {\n    trailingSlash = RegExpPrototypeExec(trailingSlashRegex\x2C request) !== null;\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (curPath && stat(curPath) < 1) continue;\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved)\n        return exportsResolved;\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (preserveSymlinks) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (preserveSymlinksMain) {\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the preserveSymlinksMain option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined)\n          exts = ObjectKeys(Module._extensions);\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined)\n        exts = ObjectKeys(Module._extensions);\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n  }\n\n  return false;\n};\n\n// 'node_modules' character codes reversed\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\n      return [from + 'node_modules'];\n\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/')\n      return ['/node_modules'];\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (NativeModule.canBeRequiredByUsers(request) &&\n      NativeModule.canBeRequiredWithoutScheme(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    let paths = modulePaths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  __proto__: null\x2C\n\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') return target[prop];\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\n});\n\nfunction getExportsForCircularRequire(module) {\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n// Check the cache for the requested file.\n// 1. If a module already exists in the cache: return its exports object.\n// 2. If the module is native: call\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\n//    Then have it load  the file contents before returning its exports\n//    object.\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded)\n          return getExportsForCircularRequire(cachedModule);\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(request\x2C 5);\n\n    const module = loadNativeModule(id\x2C request);\n    if (!module?.canBeRequiredByUsers) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\n    }\n\n    return module.exports;\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      const parseCachedModule = cjsParseCache.get(cachedModule);\n      if (!parseCachedModule || parseCachedModule.loaded)\n        return getExportsForCircularRequire(cachedModule);\n      parseCachedModule.loaded = true;\n    } else {\n      return cachedModule.exports;\n    }\n  }\n\n  const mod = loadNativeModule(filename\x2C request);\n  if (mod?.canBeRequiredByUsers &&\n      NativeModule.canBeRequiredWithoutScheme(filename)) {\n    return mod.exports;\n  }\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (isMain) {\n    process.mainModule = module;\n    module.id = '.';\n  }\n\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (\n    (\n      StringPrototypeStartsWith(request\x2C 'node:') &&\n      NativeModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\n    ) || (\n      NativeModule.canBeRequiredByUsers(request) &&\n      NativeModule.canBeRequiredWithoutScheme(request)\n    )\n  ) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\n    const pkg = readPackageScope(parentPath) || {};\n    if (pkg.data?.imports != null) {\n      try {\n        return finalizeEsmResolution(\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\n                                cjsConditions)\x2C parentPath\x2C request\x2C\n          pkg.path);\n      } catch (e) {\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\n          throw createEsmNotFoundErr(request);\n        throw e;\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\n  if (filename) return filename;\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\n  const { resolved\x2C exact } = match;\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  const filename = fileURLToPath(resolved);\n  let actual = tryFile(filename);\n  if (!exact && !actual) {\n    const exts = ObjectKeys(Module._extensions);\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\n      tryPackage(filename\x2C exts\x2C false\x2C request);\n  }\n  if (actual)\n    return actual;\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path)\n    err.path = path;\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n// Given a file name\x2C pass it to the proper extension handler.\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  const esmLoader = asyncESM.esmLoader;\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache\n  if ((module?.module === undefined ||\n       module.module.getStatus() < kEvaluated) &&\n      !esmLoader.cjsCache.has(this))\n    esmLoader.cjsCache.set(this\x2C exports);\n};\n\n\n// Loads a module at the given file path. Returns that module's\n// `exports` property.\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n\n// Resolved path to process.argv[1] will be lazily placed here\n// (needed for setting breakpoint when called with --inspect-brk)\nlet resolvedArgv;\nlet hasPausedEntry = false;\n\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\n  if (patched) {\n    const wrapper = Module.wrap(content);\n    return vm.runInThisContext(wrapper\x2C {\n      filename\x2C\n      lineOffset: 0\x2C\n      displayErrors: true\x2C\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                             importAssertions);\n      }\x2C\n    });\n  }\n  try {\n    return vm.compileFunction(content\x2C [\n      'exports'\x2C\n      'require'\x2C\n      'module'\x2C\n      '__filename'\x2C\n      '__dirname'\x2C\n    ]\x2C {\n      filename\x2C\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                             importAssertions);\n      }\x2C\n    });\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance)\n      enrichCJSError(err\x2C content);\n    throw err;\n  }\n}\n\n// Run the file contents in the correct scope or sandbox. Expose\n// the correct helper variables (require\x2C module\x2C exports) to\n// the file.\n// Returns exception\x2C if any.\nModule.prototype._compile = function(content\x2C filename) {\n  let moduleURL;\n  let redirects;\n  if (policy?.manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  maybeCacheSourceMap(filename\x2C content\x2C this);\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) statCache = new SafeMap();\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  hasLoadedAnyUserCJSModule = true;\n  if (requireDepth === 0) statCache = null;\n  return result;\n};\n\n// Native extension for .js\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const cached = cjsParseCache.get(module);\n  let content;\n  if (cached?.source) {\n    content = cached.source;\n    cached.source = undefined;\n  } else {\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = readPackageScope(filename);\n    // Function require shouldn't be used in ES modules.\n    if (pkg?.data?.type === 'module') {\n      const parent = moduleParentCache.get(module);\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = hasEsmSyntax(content);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {\n          // Continue regardless of error.\n        }\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n  module._compile(content\x2C filename);\n};\n\n\n// Native extension for .json\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  if (policy?.manifest) {\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    module.exports = JSONParse(stripBOM(content));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n\n// Native extension for .node\nModule._extensions['.node'] = function(module\x2C filename) {\n  if (policy?.manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURLInstance(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests))\n    return;\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++)\n    parent.require(requests[n]);\n  isPreloading = false;\n};\n\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of NativeModule.map.values()) {\n    if (mod.canBeRequiredByUsers &&\n        NativeModule.canBeRequiredWithoutScheme(mod.id)) {\n      mod.syncExports();\n    }\n  }\n};\n\nModule.isBuiltin = function isBuiltin(moduleName) {\n  return allBuiltins.has(moduleName);\n};\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0xa26aab1d16,106,0,41236,C0O0C4O41236,,
code-creation,Function,10,60153,0xa26aab3be6,2678, node:internal/modules/cjs/loader:1:1,0xa26aab1c90,~
code-source-info,0xa26aab3be
tick,0x7f407731c473,60257,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
tick,0x7f407731c3df,60355,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,60483,0xa26aab7e2e,5, node:internal/modules/package_json_reader:1:1,0xa26aab7c88,~
script-source,107,node:internal/modules/package_json_reader,'use strict';\n\nconst { SafeMap } = primordials;\nconst { internalModuleReadJSON } = internalBinding('fs');\nconst { pathToFileURL } = require('url');\nconst { toNamespacedPath } = require('path');\n\nconst cache = new SafeMap();\n\nlet manifest;\n\n/**\n *\n * @param {string} jsonPath\n */\nfunction read(jsonPath) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\n  );\n  const result = { string\x2C containsKeys };\n  const { getOptionValue } = require('internal/options');\n  if (string !== undefined) {\n    if (manifest === undefined) {\n      manifest = getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').manifest :\n        null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL\x2C string);\n    }\n  }\n  cache.set(jsonPath\x2C result);\n  return result;\n}\n\nmodule.exports = { read };\n
code-source-info,0xa26aab7e2e,107,0,983,C0O0C4O983,,
code-creation,Function,10,60573,0xa26aab7f7e,113, node:internal/modules/package_json_reader:1:1,0xa26aab7da8,~
code-source-info,0xa26aab7f7e,107,0,983,C0O0C29O23C34O83C37O83C42O56C48O132C54O132C59O114C65O177C71O177C76O156C82O209C84O209C89O209C91O229C92O229C94O956C101O975C107O971C112O982,,
code-creation,Eval,10,60723,0xa26aab884e,5, node:internal/process/esm_loader:1:1,0xa26aab8648,~
script-source,108,node:internal/process/esm_loader,'use strict';\n\nconst {\n  ObjectCreate\x2C\n} = primordials;\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n} = require('internal/errors').codes;\nconst { ESMLoader } = require('internal/modules/esm/loader');\nconst {\n  hasUncaughtExceptionCaptureCallback\x2C\n} = require('internal/process/execution');\nconst { pathToFileURL } = require('internal/url');\nconst {\n  getModuleFromWrap\x2C\n} = require('internal/vm/module');\n\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { initializeImportMeta } = callbackMap.get(wrap);\n    if (initializeImportMeta !== undefined) {\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\n    }\n  }\n};\n\nexports.importModuleDynamicallyCallback =\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { importModuleDynamically } = callbackMap.get(wrap);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\n    }\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n};\n\nconst esmLoader = new ESMLoader();\nexports.esmLoader = esmLoader;\n\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\n// esmLoader.\nlet isESMInitialized = false;\n\n/**\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\n * @returns {void}\n */\nasync function initializeLoader() {\n  if (isESMInitialized) { return; }\n\n  const { getOptionValue } = require('internal/options');\n  const customLoaders = getOptionValue('--experimental-loader');\n\n  if (customLoaders.length === 0) return;\n\n  let cwd;\n  try {\n    cwd = process.cwd() + '/';\n  } catch {\n    cwd = 'file:///';\n  }\n\n  // A separate loader instance is necessary to avoid cross-contamination\n  // between internal Node.js and userland. For example\x2C a module with internal\n  // state (such as a counter) should be independent.\n  const internalEsmLoader = new ESMLoader();\n\n  // Importation must be handled by internal loader to avoid poluting userland\n  const keyedExportsList = await internalEsmLoader.import(\n    customLoaders\x2C\n    pathToFileURL(cwd).href\x2C\n    ObjectCreate(null)\x2C\n  );\n\n  // Hooks must then be added to external/public loader\n  // (so they're triggered in userland)\n  await esmLoader.addCustomLoaders(keyedExportsList);\n\n  isESMInitialized = true;\n}\n\nexports.loadESM = async function loadESM(callback) {\n  try {\n    await initializeLoader();\n    await callback(esmLoader);\n  } catch (err) {\n    if (hasUncaughtExceptionCaptureCallback()) {\n      process._fatalException(err);\n      return;\n    }\n    internalBinding('errors').triggerUncaughtException(\n      err\x2C\n      true /* fromPromise */\n    );\n  }\n};\n
code-source-info,0xa26aab884e,108,0,2985,C0O0C4O2985,,
code-creation,Function,10,60939,0xa26aab8aee,188, node:internal/process/esm_loader:1:1,0xa26aab87c8,~
code-source-info,0xa26aab8aee,108,0,2985,C0O0C47O25C53O111C59O111C64O137C69O67C75O167C81O167C86O153C92O258C98O258C103O217C109O323C115O323C120O305C126O381C132O381C137O358C143O413C147O448C151O749C155O789C159O1259C162O1259C167O1259C169O1276C171O1294C175O1541C176O1541C178O2630C182O2646C187O2984,,
tick,0x7f40773a70af,60988,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,61341,0xa26aaba146,5, node:internal/modules/esm/loader:1:1,0xa26aab9c48,~
script-source,109,node:internal/modules/esm/loader,'use strict';\n\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\nrequire('internal/modules/cjs/loader');\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeWeakMap\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n  globalThis\x2C\n} = primordials;\nconst { MessageChannel } = require('internal/worker/io');\n\nconst {\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\n  ERR_INTERNAL_ASSERTION\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\n  ERR_INVALID_RETURN_VALUE\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\n} = require('internal/errors').codes;\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst ModuleMap = require('internal/modules/esm/module_map');\nconst ModuleJob = require('internal/modules/esm/module_job');\n\nconst {\n  defaultResolve\x2C\n  DEFAULT_CONDITIONS\x2C\n} = require('internal/modules/esm/resolve');\nconst {\n  initializeImportMeta\n} = require('internal/modules/esm/initialize_import_meta');\nconst { defaultLoad } = require('internal/modules/esm/load');\nconst { translators } = require(\n  'internal/modules/esm/translators');\nconst { getOptionValue } = require('internal/options');\n\n/**\n * @typedef {object} ExportedHooks\n * @property {Function} globalPreload\n * @property {Function} resolve\n * @property {Function} load\n */\n\n/**\n * @typedef {Record<string\x2C any>} ModuleExports\n */\n\n/**\n * @typedef {object} KeyedExports\n * @property {ModuleExports} exports\n * @property {URL['href']} url\n */\n\n/**\n * @typedef {object} KeyedHook\n * @property {Function} fn\n * @property {URL['href']} url\n */\n\n/**\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\n */\n\n/**\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\n */\n\n// [2] `validate...()`s throw the wrong error\n\nlet emittedSpecifierResolutionWarning = false;\n\n/**\n * A utility function to iterate through a hook chain\x2C track advancement in the\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\n * hook.\n * @param {KeyedHook[]} chain The whole hook chain.\n * @param {object} meta Properties that change as the current hook advances\n * along the chain.\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\n * reached AND invoked.\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\n * @param {number} meta.hookIndex A non-negative integer tracking the current\n * position in the hook chain.\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\n *  containing all validation of a custom loader hook's intermediary output. Any\n *  validation within MUST throw.\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\n */\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\n  // First\x2C prepare the current\n  const { hookName } = meta;\n  const {\n    fn: hook\x2C\n    url: hookFilePath\x2C\n  } = chain[meta.hookIndex];\n\n  // ex 'nextResolve'\n  const nextHookName = `next${\n    StringPrototypeToUpperCase(hookName[0]) +\n    StringPrototypeSlice(hookName\x2C 1)\n  }`;\n\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\n  const generatedHookIndex = meta.hookIndex;\n  let nextNextHook;\n  if (meta.hookIndex > 0) {\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\n    // factory generates the next link in the chain.\n    meta.hookIndex--;\n\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n  } else {\n    // eslint-disable-next-line func-name-matching\n    nextNextHook = function chainAdvancedTooFar() {\n      throw new ERR_INTERNAL_ASSERTION(\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\n      );\n    };\n  }\n\n  return ObjectDefineProperty(\n    async (arg0 = undefined\x2C context) => {\n      // Update only when hook is invoked to avoid fingering the wrong filePath\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\n\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\n\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\n\n      // Set when next<HookName> is actually called\x2C not just generated.\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\n\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\n        ObjectAssign(meta.context\x2C context);\n      }\n\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\n\n      validateOutput(outputErrIdentifier\x2C output);\n\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\n      return output;\n\n    }\x2C\n    'name'\x2C\n    { __proto__: null\x2C value: nextHookName }\x2C\n  );\n}\n\n/**\n * An ESMLoader instance is used as the main entry point for loading ES modules.\n * Currently\x2C this is a singleton -- there is only one used for loading\n * the main module and everything in its dependency graph.\n */\nclass ESMLoader {\n  /**\n   * Prior to ESM loading. These are called once before any modules are started.\n   * @private\n   * @property {KeyedHook[]} globalPreloaders Last-in-first-out\n   *  list of preload hooks.\n   */\n  #globalPreloaders = [];\n\n  /**\n   * Phase 2 of 2 in ESM loading.\n   * @private\n   * @property {KeyedHook[]} loaders Last-in-first-out\n   *  collection of loader hooks.\n   */\n  #loaders = [\n    {\n      fn: defaultLoad\x2C\n      url: 'node:internal/modules/esm/load'\x2C\n    }\x2C\n  ];\n\n  /**\n   * Phase 1 of 2 in ESM loading.\n   * @private\n   * @property {KeyedHook[]} resolvers Last-in-first-out\n   *  collection of resolver hooks.\n   */\n  #resolvers = [\n    {\n      fn: defaultResolve\x2C\n      url: 'node:internal/modules/esm/resolve'\x2C\n    }\x2C\n  ];\n\n  #importMetaInitializer = initializeImportMeta;\n\n  /**\n   * Map of already-loaded CJS modules to use\n   */\n  cjsCache = new SafeWeakMap();\n\n  /**\n   * The index for assigning unique URLs to anonymous module evaluation\n   */\n  evalIndex = 0;\n\n  /**\n   * Registry of loaded modules\x2C akin to `require.cache`\n   */\n  moduleMap = new ModuleMap();\n\n  /**\n   * Methods which translate input code or other information into ES modules\n   */\n  translators = translators;\n\n  constructor() {\n    if (getOptionValue('--experimental-loader').length > 0) {\n      emitExperimentalWarning('Custom ESM Loaders');\n    }\n    if (getOptionValue('--experimental-network-imports')) {\n      emitExperimentalWarning('Network Imports');\n    }\n    if (\n      !emittedSpecifierResolutionWarning &&\n      getOptionValue('--experimental-specifier-resolution') === 'node'\n    ) {\n      process.emitWarning(\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\n        'ExperimentalWarning'\n      );\n      emittedSpecifierResolutionWarning = true;\n    }\n  }\n\n  /**\n   *\n   * @param {ModuleExports} exports\n   * @returns {ExportedHooks}\n   */\n  static pluckHooks({\n    globalPreload\x2C\n    resolve\x2C\n    load\x2C\n    // obsolete hooks:\n    dynamicInstantiate\x2C\n    getFormat\x2C\n    getGlobalPreloadCode\x2C\n    getSource\x2C\n    transformSource\x2C\n  }) {\n    const obsoleteHooks = [];\n    const acceptedHooks = ObjectCreate(null);\n\n    if (getGlobalPreloadCode) {\n      globalPreload ??= getGlobalPreloadCode;\n\n      process.emitWarning(\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\n      );\n    }\n    if (dynamicInstantiate) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'dynamicInstantiate'\n    );\n    if (getFormat) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getFormat'\x2C\n    );\n    if (getSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getSource'\x2C\n    );\n    if (transformSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'transformSource'\x2C\n    );\n\n    if (obsoleteHooks.length) process.emitWarning(\n      `Obsolete loader hook(s) supplied and will be ignored: ${\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\n      }`\x2C\n      'DeprecationWarning'\x2C\n    );\n\n    // Use .bind() to avoid giving access to the Loader instance when called.\n    if (globalPreload) {\n      acceptedHooks.globalPreloader =\n        FunctionPrototypeBind(globalPreload\x2C null);\n    }\n    if (resolve) {\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\n    }\n    if (load) {\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\n    }\n\n    return acceptedHooks;\n  }\n\n  /**\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\n   * calls global preload hook(s).\n   * @param {KeyedExports} customLoaders\n   *  A list of exports from user-defined loaders (as returned by\n   *  ESMLoader.import()).\n   */\n  addCustomLoaders(\n    customLoaders = []\x2C\n  ) {\n    for (let i = 0; i < customLoaders.length; i++) {\n      const {\n        exports\x2C\n        url\x2C\n      } = customLoaders[i];\n      const {\n        globalPreloader\x2C\n        resolver\x2C\n        loader\x2C\n      } = ESMLoader.pluckHooks(exports);\n\n      if (globalPreloader) {\n        ArrayPrototypePush(\n          this.#globalPreloaders\x2C\n          {\n            fn: FunctionPrototypeBind(globalPreloader)\x2C // [1]\n            url\x2C\n          }\x2C\n        );\n      }\n      if (resolver) {\n        ArrayPrototypePush(\n          this.#resolvers\x2C\n          {\n            fn: FunctionPrototypeBind(resolver)\x2C // [1]\n            url\x2C\n          }\x2C\n        );\n      }\n      if (loader) {\n        ArrayPrototypePush(\n          this.#loaders\x2C\n          {\n            fn: FunctionPrototypeBind(loader)\x2C // [1]\n            url\x2C\n          }\x2C\n        );\n      }\n    }\n\n    // [1] ensure hook function is not bound to ESMLoader instance\n\n    this.preload();\n  }\n\n  async eval(\n    source\x2C\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\n  ) {\n    const evalInstance = (url) => {\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n      callbackMap.set(module\x2C {\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\n          return this.import(specifier\x2C url\x2C importAssertions);\n        }\n      });\n\n      return module;\n    };\n    const job = new ModuleJob(\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\n    this.moduleMap.set(url\x2C undefined\x2C job);\n    const { module } = await job.run();\n\n    return {\n      namespace: module.getNamespace()\x2C\n    };\n  }\n\n  /**\n   * Get a (possibly still pending) module job from the cache\x2C\n   * or create one and return its Promise.\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\n   *                           or the first parameter of an `import()`\n   *                           expression\n   * @param {string | undefined} parentURL The URL of the module importing this\n   *                                     one\x2C unless this is the Node.js entry\n   *                                     point.\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\n   */\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\n    let importAssertionsForResolve;\n\n    // By default\x2C `this.#loaders` contains just the Node default load hook\n    if (this.#loaders.length !== 1) {\n      // We can skip cloning if there are no user-provided loaders because\n      // the Node.js default resolve hook does not use import assertions.\n      importAssertionsForResolve = ObjectAssign(\n        ObjectCreate(null)\x2C\n        importAssertions\x2C\n      );\n    }\n\n    const { format\x2C url } =\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\n\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\n\n    // CommonJS will set functions for lazy job evaluation.\n    if (typeof job === 'function') {\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\n    }\n\n    if (job === undefined) {\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\n    }\n\n    return job;\n  }\n\n  /**\n   * Create and cache an object representing a loaded module.\n   * @param {string} url The absolute URL that was resolved for this module\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @param {string} [parentURL] The absolute URL of the module importing this\n   *                             one\x2C unless this is the Node.js entry point\n   * @param {string} [format] The format hint possibly returned by the\n   *                          `resolve` hook\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\n   */\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\n    const moduleProvider = async (url\x2C isMain) => {\n      const {\n        format: finalFormat\x2C\n        responseURL\x2C\n        source\x2C\n      } = await this.load(url\x2C {\n        format\x2C\n        importAssertions\x2C\n      });\n\n      const translator = translators.get(finalFormat);\n\n      if (!translator) {\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\n      }\n\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\n    };\n\n    const inspectBrk = (\n      parentURL === undefined &&\n      getOptionValue('--inspect-brk')\n    );\n\n    const job = new ModuleJob(\n      this\x2C\n      url\x2C\n      importAssertions\x2C\n      moduleProvider\x2C\n      parentURL === undefined\x2C\n      inspectBrk\n    );\n\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\n\n    return job;\n  }\n\n  /**\n   * This method is usually called indirectly as part of the loading processes.\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\n   *\n   * This method must NOT be renamed: it functions as a dynamic import on a\n   * loader module.\n   *\n   * @param {string | string[]} specifiers Path(s) to the module.\n   * @param {string} parentURL Path of the parent importing the module.\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\n   *  A collection of module export(s) or a list of collections of module\n   *  export(s).\n   */\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\n    // list pairing the url and exports collected. This is especially useful for\n    // error messaging\x2C to identity from where an export came. But\x2C in most\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\n    // only 1 possible url from which the exports were collected and it is\n    // already known to the caller. Nesting that in a list would only ever\n    // create redundant work for the caller\x2C so it is later popped off the\n    // internal list.\n    const wasArr = ArrayIsArray(specifiers);\n    if (!wasArr) { specifiers = [specifiers]; }\n\n    const count = specifiers.length;\n    const jobs = new Array(count);\n\n    for (let i = 0; i < count; i++) {\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\n        .then((job) => job.run())\n        .then(({ module }) => module.getNamespace());\n    }\n\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\n\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\n\n    for (let i = 0; i < count; i++) {\n      const namespace = ObjectCreate(null);\n      namespace.url = specifiers[i];\n      namespace.exports = namespaces[i];\n\n      namespaces[i] = namespace;\n    }\n\n    return namespaces;\n  }\n\n  /**\n   * Provide source that is understood by one of Node's translators.\n   *\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\n   * until it reaches the bottom or short-circuits.\n   *\n   * @param {URL['href']} url The URL/path of the module to be loaded\n   * @param {object} context Metadata about the module\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\n   */\n  async load(url\x2C context = {}) {\n    const chain = this.#loaders;\n    const meta = {\n      chainFinished: null\x2C\n      context\x2C\n      hookErrIdentifier: ''\x2C\n      hookIndex: chain.length - 1\x2C\n      hookName: 'load'\x2C\n      shortCircuited: false\x2C\n    };\n\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\n      if (typeof nextUrl !== 'string') {\n        // non-strings can be coerced to a url string\n        // validateString() throws a less-specific error\n        throw new ERR_INVALID_ARG_TYPE(\n          `${hookErrIdentifier} url`\x2C\n          'a url string'\x2C\n          nextUrl\x2C\n        );\n      }\n\n      // Try to avoid expensive URL instantiation for known-good urls\n      if (!this.moduleMap.has(nextUrl)) {\n        try {\n          new URL(nextUrl);\n        } catch {\n          throw new ERR_INVALID_ARG_VALUE(\n            `${hookErrIdentifier} url`\x2C\n            nextUrl\x2C\n            'should be a url string'\x2C\n          );\n        }\n      }\n\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\n    };\n    const validateOutput = (hookErrIdentifier\x2C output) => {\n      if (typeof output !== 'object' || output === null) { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'an object'\x2C\n          hookErrIdentifier\x2C\n          output\x2C\n        );\n      }\n    };\n\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n\n    const loaded = await nextLoad(url\x2C context);\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\n\n    validateOutput(hookErrIdentifier\x2C loaded);\n\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\n\n    if (!meta.chainFinished && !meta.shortCircuited) {\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\n    }\n\n    const {\n      format\x2C\n      source\x2C\n    } = loaded;\n    let responseURL = loaded.responseURL;\n\n    if (responseURL === undefined) {\n      responseURL = url;\n    }\n\n    let responseURLObj;\n    if (typeof responseURL === 'string') {\n      try {\n        responseURLObj = new URL(responseURL);\n      } catch {\n        // responseURLObj not defined will throw in next branch.\n      }\n    }\n\n    if (responseURLObj?.href !== responseURL) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'undefined or a fully resolved URL string'\x2C\n        hookErrIdentifier\x2C\n        'responseURL'\x2C\n        responseURL\x2C\n      );\n    }\n\n    if (format == null) {\n      const dataUrl = RegExpPrototypeExec(\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n        url\x2C\n      );\n\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\n        dataUrl ? dataUrl[1] : format\x2C\n        url);\n    }\n\n    if (typeof format !== 'string') { // [2]\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string'\x2C\n        hookErrIdentifier\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (\n      source != null &&\n      typeof source !== 'string' &&\n      !isAnyArrayBuffer(source) &&\n      !isArrayBufferView(source)\n    ) {\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\n        hookErrIdentifier\x2C\n        'source'\x2C\n        source\n      );\n    }\n\n    return {\n      format\x2C\n      responseURL\x2C\n      source\x2C\n    };\n  }\n\n  preload() {\n    for (let i = this.#globalPreloaders.length - 1; i >= 0; i--) {\n      const channel = new MessageChannel();\n      const {\n        port1: insidePreload\x2C\n        port2: insideLoader\x2C\n      } = channel;\n\n      insidePreload.unref();\n      insideLoader.unref();\n\n      const {\n        fn: preloader\x2C\n        url: specifier\x2C\n      } = this.#globalPreloaders[i];\n\n      const preload = preloader({\n        port: insideLoader\x2C\n      });\n\n      if (preload == null) { return; }\n\n      const hookErrIdentifier = `${specifier} globalPreload`;\n\n      if (typeof preload !== 'string') { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'a string'\x2C\n          hookErrIdentifier\x2C\n          preload\x2C\n        );\n      }\n      const { compileFunction } = require('vm');\n      const preloadInit = compileFunction(\n        preload\x2C\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\n        {\n          filename: '<preload>'\x2C\n        }\n      );\n      const { NativeModule } = require('internal/bootstrap/loaders');\n      // We only allow replacing the importMetaInitializer during preload\x2C\n      // after preload is finished\x2C we disable the ability to replace it\n      //\n      // This exposes accidentally setting the initializer too late by\n      // throwing an error.\n      let finished = false;\n      let replacedImportMetaInitializer = false;\n      let next = this.#importMetaInitializer;\n      try {\n        // Calls the compiled preload source text gotten from the hook\n        // Since the parameters are named we use positional parameters\n        // see compileFunction above to cross reference the names\n        FunctionPrototypeCall(\n          preloadInit\x2C\n          globalThis\x2C\n          // Param getBuiltin\n          (builtinName) => {\n            if (NativeModule.canBeRequiredByUsers(builtinName) &&\n                NativeModule.canBeRequiredWithoutScheme(builtinName)) {\n              return require(builtinName);\n            }\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\n          }\x2C\n          // Param port\n          insidePreload\x2C\n          // Param setImportMetaCallback\n          (fn) => {\n            if (finished || typeof fn !== 'function') {\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\n            }\n            replacedImportMetaInitializer = true;\n            const parent = next;\n            next = (meta\x2C context) => {\n              return fn(meta\x2C context\x2C parent);\n            };\n          });\n      } finally {\n        finished = true;\n        if (replacedImportMetaInitializer) {\n          this.#importMetaInitializer = next;\n        }\n      }\n    }\n  }\n\n  importMetaInitialize(meta\x2C context) {\n    this.#importMetaInitializer(meta\x2C context);\n  }\n\n  /**\n   * Resolve the location of the module.\n   *\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\n   * until it reaches the bottom or short-circuits.\n   *\n   * @param {string} originalSpecifier The specified URL path of the module to\n   *                                   be resolved.\n   * @param {string} [parentURL] The URL path of the module's parent.\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\n   *                                              statement or expression.\n   * @returns {{ format: string\x2C url: URL['href'] }}\n   */\n  async resolve(\n    originalSpecifier\x2C\n    parentURL\x2C\n    importAssertions = ObjectCreate(null)\n  ) {\n    const isMain = parentURL === undefined;\n\n    if (\n      !isMain &&\n      typeof parentURL !== 'string' &&\n      !isURLInstance(parentURL)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'parentURL'\x2C\n        ['string'\x2C 'URL']\x2C\n        parentURL\x2C\n      );\n    }\n    const chain = this.#resolvers;\n    const context = {\n      conditions: DEFAULT_CONDITIONS\x2C\n      importAssertions\x2C\n      parentURL\x2C\n    };\n    const meta = {\n      chainFinished: null\x2C\n      context\x2C\n      hookErrIdentifier: ''\x2C\n      hookIndex: chain.length - 1\x2C\n      hookName: 'resolve'\x2C\n      shortCircuited: false\x2C\n    };\n\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\n      validateString(\n        suppliedSpecifier\x2C\n        `${hookErrIdentifier} specifier`\x2C\n      ); // non-strings can be coerced to a url string\n\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\n    };\n    const validateOutput = (hookErrIdentifier\x2C output) => {\n      if (typeof output !== 'object' || output === null) { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'an object'\x2C\n          hookErrIdentifier\x2C\n          output\x2C\n        );\n      }\n    };\n\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n\n    const resolution = await nextResolve(originalSpecifier\x2C context);\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\n\n    validateOutput(hookErrIdentifier\x2C resolution);\n\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\n\n    if (!meta.chainFinished && !meta.shortCircuited) {\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\n    }\n\n    const {\n      format\x2C\n      url\x2C\n    } = resolution;\n\n    if (\n      format != null &&\n      typeof format !== 'string' // [2]\n    ) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string'\x2C\n        hookErrIdentifier\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (typeof url !== 'string') {\n      // non-strings can be coerced to a url string\n      // validateString() throws a less-specific error\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a url string'\x2C\n        hookErrIdentifier\x2C\n        'url'\x2C\n        url\x2C\n      );\n    }\n\n    // Try to avoid expensive URL instantiation for known-good urls\n    if (!this.moduleMap.has(url)) {\n      try {\n        new URL(url);\n      } catch {\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n          'a url string'\x2C\n          hookErrIdentifier\x2C\n          'url'\x2C\n          url\x2C\n        );\n      }\n    }\n\n    return {\n      format\x2C\n      url\x2C\n    };\n  }\n}\n\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\n\nexports.ESMLoader = ESMLoader;\n
code-source-info,0xa26aaba146,109,0,26217,C0O0C4O26217,,
code-creation,Function,10,62686,0xa26aabaa5e,721, node:internal/modules/esm/loader:1:1,0xa26aaba0c0,~
code-source-info,0xa26aabaa5e,109,0,26217,C0O0C146O79C152O79C156O130C162O139C168O155C174O177C180O199C186O224C192O249C198O265C204O281C210O305C215O329C221O343C227O366C233O387C239O402C245O426C251O456C257O512C263O512C268O493C274O756C280O756C285O782C290O554C296O585C302O611C308O635C314O660C320O697C326O725C332O836C338O836C343O798C349O813C355O828C361O897C367O897C372O869C378O976C384O976C389O933C395O953C401O1056C407O1056C412O1018C418O1036C424O1106C430O1106C434O1106C436O1168C442O1168C446O1168C448O1265C454O1265C459O1223C465O1241C471O1341C477O1341C482O1316C488O1421C494O1421C499O1405C505O1483C511O1483C516O1467C522O1558C528O1558C533O1539C539O2230C540O2230C701O26167C708O26136C713O26186C715O26204C720O26216,,
tick,0x7f40773a70af,62715,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Function,10,62805,0xa26aabafe6,176,<instance_members_initializer> node:internal/modules/esm/loader:190:3,0xa26aaba568,~
code-source-info,0xa26aabafe6,109,5870,6869,C3O5890C17O6057C33O6075C56O6314C72O6332C95O6436C110O6530C117O6530C131O6648C141O6735C148O6735C162O6858C175O6869,,
tick,0xd1a881,63081,1,0xb53890,2,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aabac0c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,63215,0xa26aabd26e,5, node:internal/modules/esm/module_map:1:1,0xa26aabd080,~
script-source,110,node:internal/modules/esm/module_map,'use strict';\n\nconst ModuleJob = require('internal/modules/esm/module_job');\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\nconst {\n  ObjectCreate\x2C\n  SafeMap\x2C\n} = primordials;\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n// Tracks the state of the loader-level module cache\nclass ModuleMap extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  get(url\x2C type = kImplicitAssertType) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type];\n  }\n  set(url\x2C type = kImplicitAssertType\x2C job) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    if (job instanceof ModuleJob !== true &&\n        typeof job !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\n    }\n    debug(`Storing ${url} (${\n      type === kImplicitAssertType ? 'implicit type' : type\n    }) in ModuleMap`);\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\n    cachedJobsForUrl[type] = job;\n    return super.set(url\x2C cachedJobsForUrl);\n  }\n  has(url\x2C type = kImplicitAssertType) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type] !== undefined;\n  }\n}\nmodule.exports = ModuleMap;\n
code-source-info,0xa26aabd26e,110,0,1444,C0O0C4O1444,,
code-creation,Function,10,63496,0xa26aabd6a6,175, node:internal/modules/esm/module_map:1:1,0xa26aabd1e8,~
code-source-info,0xa26aabd6a6,110,0,1444,C0O0C23O33C26O33C30O33C32O109C35O109C40O85C46O159C52O175C57O213C60O213C65O246C78O247C84O213C86O324C89O324C94O350C99O299C105O385C108O385C113O366C123O495C167O1416C169O1431C174O1443,,
code-creation,Eval,10,63949,0xa26aabe11e,5, node:internal/modules/esm/module_job:1:1,0xa26aabde58,~
script-source,111,node:internal/modules/esm/module_job,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSome\x2C\n  FunctionPrototype\x2C\n  ObjectCreate\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseResolve\x2C\n  PromisePrototypeCatch\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafePromiseAll\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst { ModuleWrap } = internalBinding('module_wrap');\n\nconst { decorateErrorStack } = require('internal/util');\nconst {\n  getSourceMapsEnabled\x2C\n} = require('internal/source_map/source_map_cache');\nconst assert = require('internal/assert');\nconst resolvedPromise = PromiseResolve();\n\nconst noop = FunctionPrototype;\n\nlet hasPausedEntry = false;\n\nconst CJSGlobalLike = [\n  'require'\x2C\n  'module'\x2C\n  'exports'\x2C\n  '__filename'\x2C\n  '__dirname'\x2C\n];\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\n  ArrayPrototypeSome(\n    CJSGlobalLike\x2C\n    (globalLike) => errorMessage === `${globalLike} is not defined`\n  );\n\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\n * its dependencies\x2C over time. */\nclass ModuleJob {\n  // `loader` is the Loader instance used for loading dependencies.\n  // `moduleProvider` is a function\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\n              moduleProvider\x2C isMain\x2C inspectBrk) {\n    this.loader = loader;\n    this.importAssertions = importAssertions;\n    this.isMain = isMain;\n    this.inspectBrk = inspectBrk;\n\n    this.module = undefined;\n    // Expose the promise to the ModuleWrap directly for linking below.\n    // `this.module` is also filled in below.\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\n\n    // Wait for the ModuleWrap instance being linked with all dependencies.\n    const link = async () => {\n      this.module = await this.modulePromise;\n      assert(this.module instanceof ModuleWrap);\n\n      // Explicitly keeping track of dependency jobs is needed in order\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\n      // so that circular dependencies can't cause a deadlock by two of\n      // these `link` callbacks depending on each other.\n      const dependencyJobs = [];\n      const promises = this.module.link(async (specifier\x2C assertions) => {\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\n        const job = await jobPromise;\n        return job.modulePromise;\n      });\n\n      if (promises !== undefined)\n        await SafePromiseAll(promises);\n\n      return SafePromiseAll(dependencyJobs);\n    };\n    // Promise for the list of all dependencyJobs.\n    this.linked = link();\n    // This promise is awaited later anyway\x2C so silence\n    // 'unhandled rejection' warnings.\n    PromisePrototypeCatch(this.linked\x2C noop);\n\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\n    // and module wrapper is instantiated.\n    this.instantiated = undefined;\n  }\n\n  instantiate() {\n    if (this.instantiated === undefined) {\n      this.instantiated = this._instantiate();\n    }\n    return this.instantiated;\n  }\n\n  async _instantiate() {\n    const jobsInGraph = new SafeSet();\n    const addJobsToDependencyGraph = async (moduleJob) => {\n      if (jobsInGraph.has(moduleJob)) {\n        return;\n      }\n      jobsInGraph.add(moduleJob);\n      const dependencyJobs = await moduleJob.linked;\n      return SafePromiseAll(dependencyJobs\x2C addJobsToDependencyGraph);\n    };\n    await addJobsToDependencyGraph(this);\n\n    try {\n      if (!hasPausedEntry && this.inspectBrk) {\n        hasPausedEntry = true;\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\n        initWrapper(this.module.instantiate\x2C this.module);\n      } else {\n        this.module.instantiate();\n      }\n    } catch (e) {\n      decorateErrorStack(e);\n      // TODO(@bcoe): Add source map support to exception that occurs as result\n      // of missing named export. This is currently not possible because\n      // stack trace originates in module_job\x2C not the file itself. A hidden\n      // symbol with filename could be set in node_errors.cc to facilitate this.\n      if (!getSourceMapsEnabled() &&\n          StringPrototypeIncludes(e.message\x2C\n                                  ' does not provide an export named')) {\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\n          /:\\d+$/\x2C\n          splitStack[0]\x2C\n          ''\n        );\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\n          e.message);\n        const { url: childFileURL } = await this.loader.resolve(\n          childSpecifier\x2C parentFileUrl\x2C\n        );\n        let format;\n        try {\n          // This might throw for non-CommonJS modules because we aren't passing\n          // in the import assertions and some formats require them; but we only\n          // care about CommonJS for the purposes of this error message.\n          ({ format } =\n            await this.loader.load(childFileURL));\n        } catch {\n          // Continue regardless of error.\n        }\n\n        if (format === 'commonjs') {\n          const importStatement = splitStack[1];\n          // TODO(@ctavan): The original error stack only provides the single\n          // line which causes the error. For multi-line import statements we\n          // cannot generate an equivalent object destructuring assignment by\n          // just parsing the error stack.\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\n          const destructuringAssignment = oneLineNamedImports &&\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\n          e.message = `Named export '${name}' not found. The requested module` +\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\n            'always be imported via the default export\x2C for example using:' +\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\n              destructuringAssignment ?\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\n          newStack[3] = `SyntaxError: ${e.message}`;\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\n        }\n      }\n      throw e;\n    }\n\n    for (const dependencyJob of jobsInGraph) {\n      // Calling `this.module.instantiate()` instantiates not only the\n      // ModuleWrap in this module\x2C but all modules in the graph.\n      dependencyJob.instantiated = resolvedPromise;\n    }\n  }\n\n  async run() {\n    await this.instantiate();\n    const timeout = -1;\n    const breakOnSigint = false;\n    try {\n      await this.module.evaluate(timeout\x2C breakOnSigint);\n    } catch (e) {\n      if (e?.name === 'ReferenceError' &&\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\n        e.message += ' in ES module scope';\n\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\n          e.message += '\x2C you can use import instead';\n        }\n\n        const packageConfig =\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\n            require('internal/modules/esm/resolve')\n              .getPackageScopeConfig(this.module.url);\n        if (packageConfig.type === 'module') {\n          e.message +=\n            '\\nThis file is being treated as an ES module because it has a ' +\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\n            'to use the \\'.cjs\\' file extension.';\n        }\n      }\n      throw e;\n    }\n    return { module: this.module };\n  }\n}\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\nmodule.exports = ModuleJob;\n
code-source-info,0xa26aabe11e,111,0,8059,C0O0C4O8059,,
code-creation,Function,10,64385,0xa26aabe5fe,316, node:internal/modules/esm/module_job:1:1,0xa26aabe098,~
code-source-info,0xa26aabe5fe,111,0,8059,C0O0C79O25C85O47C91O69C97O91C102O112C108O128C113O152C118O170C124O195C130O211C136O234C142O266C148O284C154O295C160O322C166O346C172O414C178O414C183O399C189O478C195O478C200O455C206O540C212O540C217O514C223O604C229O604C233O604C235O656C238O656C240O688C242O688C244O729C245O729C247O759C251O759C253O877C257O877C296O8013C303O7982C308O8031C310O8046C315O8058,,
tick,0x7f40773a70af,64479,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aabd6c0,0xa26aa8ba9d,0x7f40600432df,0xa26aabac0c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
new,MemoryChunk,0x24759bdc0000,262144
code-creation,Eval,10,64800,0xce3b4affe2e,5, node:internal/modules/esm/assert:1:1,0xce3b4affc38,~
script-source,112,node:internal/modules/esm/assert,'use strict';\n\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ObjectCreate\x2C\n  ObjectValues\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n} = primordials;\nconst { validateString } = require('internal/validators');\n\nconst {\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\n} = require('internal/errors').codes;\n\n// The HTML spec has an implied default type of `'javascript'`.\nconst kImplicitAssertType = 'javascript';\n\n/**\n * Define a map of module formats to import assertion types (the value of\n * `type` in `assert { type: 'json' }`).\n * @type {Map<string\x2C string>}\n */\nconst formatTypeMap = {\n  '__proto__': null\x2C\n  'builtin': kImplicitAssertType\x2C\n  'commonjs': kImplicitAssertType\x2C\n  'json': 'json'\x2C\n  'module': kImplicitAssertType\x2C\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\n};\n\n/**\n * The HTML spec disallows the default type to be explicitly specified\n * (for now); so `import './file.js'` is okay but\n * `import './file.js' assert { type: 'javascript' }` throws.\n * @type {Array<string\x2C string>}\n */\nconst supportedAssertionTypes = ArrayPrototypeFilter(\n  ObjectValues(formatTypeMap)\x2C\n  (type) => type !== kImplicitAssertType);\n\n\n/**\n * Test a module's import assertions.\n * @param {string} url The URL of the imported module\x2C for error reporting.\n * @param {string} format One of Node's supported translators\n * @param {Record<string\x2C string>} importAssertions Validations for the\n *                                                  module import.\n * @returns {true}\n * @throws {TypeError} If the format and assertion type are incompatible.\n */\nfunction validateAssertions(url\x2C format\x2C\n                            importAssertions = ObjectCreate(null)) {\n  const validType = formatTypeMap[format];\n\n  switch (validType) {\n    case undefined:\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\n      // formats in the future.\n      return true;\n\n    case kImplicitAssertType:\n      // This format doesn't allow an import assertion type\x2C so the property\n      // must not be set on the import assertions object.\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\n        return true;\n      }\n      return handleInvalidType(url\x2C importAssertions.type);\n\n    case importAssertions.type:\n      // The asserted type is the valid type for this format.\n      return true;\n\n    default:\n      // There is an expected type for this format\x2C but the value of\n      // `importAssertions.type` might not have been it.\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\n        // `type` wasn't specified at all.\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\n      }\n      handleInvalidType(url\x2C importAssertions.type);\n  }\n}\n\n/**\n * Throw the correct error depending on what's wrong with the type assertion.\n * @param {string} url The resolved URL for the module to be imported\n * @param {string} type The value of the import assertion `type` property\n */\nfunction handleInvalidType(url\x2C type) {\n  // `type` might have not been a string.\n  validateString(type\x2C 'type');\n\n  // `type` might not have been one of the types we understand.\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\n  }\n\n  // `type` was the wrong value for this format.\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\n}\n\n\nmodule.exports = {\n  kImplicitAssertType\x2C\n  validateAssertions\x2C\n};\n
code-source-info,0xce3b4affe2e,112,0,3624,C0O0C4O3624,,
code-creation,Function,10,64956,0x24759bdc122e,201, node:internal/modules/esm/assert:1:1,0xce3b4affda8,~
code-source-info,0x24759bdc122e,112,0,3624,C0O0C46O25C51O49C57O75C63O91C68O107C74O182C77O182C82O163C88O341C91O341C96O367C101O225C107O261C113O298C119O468C121O468C123O659C130O695C136O730C142O781C148O812C154O659C156O1240C159O1264C169O1240C174O1240C176O3557C183O3578C189O3601C195O3572C200O3623,,
code-creation,LazyCompile,10,65043,0x24759bdc1836,9, node:internal/modules/esm/assert:43:3,0xce3b4afff00,~
code-source-info,0x24759bdc1836,112,1295,1333,C0O1310C2O1314C4O1310C8O1333,,
tick,0x1144989,65304,1,0xb53890,2,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,65784,0x24759bdc3406,5, node:internal/modules/esm/resolve:1:1,0x24759bdc2c58,~
script-source,113,node:internal/modules/esm/resolve,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst internalFS = require('internal/fs/utils');\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  realpathSync\x2C\n  statSync\x2C\n  Stats\x2C\n} = require('fs');\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst { sep\x2C relative\x2C resolve } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\nconst typeFlag = getOptionValue('--input-type');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n  ERR_INVALID_PACKAGE_TARGET\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\n\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst userConditions = getOptionValue('--conditions');\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\nconst DEFAULT_CONDITIONS = ObjectFreeze([\n  'node'\x2C\n  'import'\x2C\n  ...addonConditions\x2C\n  ...userConditions\x2C\n]);\n\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\n\n/**\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\n * @typedef {'module' | 'commonjs'} PackageType\n * @typedef {{\n *   pjsonPath: string\x2C\n *   exports?: ExportConfig\x2C\n *   name?: string\x2C\n *   main?: string\x2C\n *   type?: PackageType\x2C\n * }} PackageConfig\n */\n\nconst emittedPackageWarnings = new SafeSet();\n\n/**\n * @param {string} match\n * @param {URL} pjsonUrl\n * @param {boolean} isExports\n * @param {string | URL | undefined} base\n * @returns {void}\n */\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\n      '"exports"' : '"imports"'} field module resolution of the package at ${\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0148'\n  );\n}\n\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\n  if (!pendingDeprecation) return;\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0155'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @param {string} main\n * @returns {void}\n */\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\n  const format = defaultGetFormatWithoutErrors(url);\n  if (format !== 'module')\n    return;\n  const path = fileURLToPath(url);\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\n  const basePath = fileURLToPath(base);\n  if (main)\n    process.emitWarning(\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\n      `excluding the full filename and extension to the resolved file at "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\n      'deprecated for ES modules.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n  else\n    process.emitWarning(\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\n      } resolving the main entry point "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return DEFAULT_CONDITIONS_SET;\n}\n\nconst realpathCache = new SafeMap();\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\n\n/**\n * @param {string | URL} path\n * @returns {import('fs').Stats}\n */\nconst tryStatSync =\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\n\n/**\n * @param {string} path\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {PackageConfig}\n */\nfunction getPackageConfig(path\x2C specifier\x2C base) {\n  const existing = packageJSONCache.get(path);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const source = packageJsonReader.read(path).string;\n  if (source === undefined) {\n    const packageConfig = {\n      pjsonPath: path\x2C\n      exists: false\x2C\n      main: undefined\x2C\n      name: undefined\x2C\n      type: 'none'\x2C\n      exports: undefined\x2C\n      imports: undefined\x2C\n    };\n    packageJSONCache.set(path\x2C packageConfig);\n    return packageConfig;\n  }\n\n  let packageJSON;\n  try {\n    packageJSON = JSONParse(source);\n  } catch (error) {\n    throw new ERR_INVALID_PACKAGE_CONFIG(\n      path\x2C\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\n      error.message\n    );\n  }\n\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\n  const { exports } = packageJSON;\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\n  if (typeof main !== 'string') main = undefined;\n  if (typeof name !== 'string') name = undefined;\n  // Ignore unknown types for forwards compatibility\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\n\n  const packageConfig = {\n    pjsonPath: path\x2C\n    exists: true\x2C\n    main\x2C\n    name\x2C\n    type\x2C\n    exports\x2C\n    imports\x2C\n  };\n  packageJSONCache.set(path\x2C packageConfig);\n  return packageConfig;\n}\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\n      break;\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\n                                           resolved);\n    if (packageConfig.exists) return packageConfig;\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check "/package.json" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\n  }\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  const packageConfig = {\n    pjsonPath: packageJSONPath\x2C\n    exists: false\x2C\n    main: undefined\x2C\n    name: undefined\x2C\n    type: 'none'\x2C\n    exports: undefined\x2C\n    imports: undefined\x2C\n  };\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\n  return packageConfig;\n}\n\n/**\n * @param {string | URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\n * 5. NOT_FOUND\n * @param {URL} packageJSONUrl\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\n  let guess;\n  if (packageConfig.main !== undefined) {\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\n                                   packageJSONUrl))) {\n      return guess;\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\n                                          packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\n                                        packageJSONUrl)));\n    else guess = undefined;\n    if (guess) {\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\n                                 packageConfig.main);\n      return guess;\n    }\n    // Fallthrough.\n  }\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\n  // So fs.\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\n  else guess = undefined;\n  if (guess) {\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\n    return guess;\n  }\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensionsWithTryExactName(search) {\n  if (fileExists(search)) return search;\n  return resolveExtensions(search);\n}\n\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensions(search) {\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\n    if (fileExists(guess)) return guess;\n  }\n  return undefined;\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveDirectoryEntry(search) {\n  const dirPath = fileURLToPath(search);\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\n  if (fileExists(pkgJsonPath)) {\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\n    if (pkgJson.containsKeys) {\n      const { main } = JSONParse(pkgJson.string);\n      if (main != null) {\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\n        return resolveExtensionsWithTryExactName(mainUrl);\n      }\n    }\n  }\n  return resolveExtensions(new URL('index'\x2C search));\n}\n\nconst encodedSepRegEx = /%2F|%5C/i;\n/**\n * @param {URL} resolved\n * @param {string | URL | undefined} base\n * @param {boolean} preserveSymlinks\n * @returns {URL | undefined}\n */\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\n      fileURLToPath(base));\n\n  let path = fileURLToPath(resolved);\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\n    let file = resolveExtensionsWithTryExactName(resolved);\n\n    // Directory\n    if (file === undefined) {\n      file = StringPrototypeEndsWith(path\x2C '/') ?\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\n\n      if (file === resolved) return file;\n\n      if (file === undefined) {\n        throw new ERR_MODULE_NOT_FOUND(\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\n      }\n    }\n\n    path = file;\n  }\n\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\n    StringPrototypeSlice(path\x2C -1) : path);\n  if (stats.isDirectory()) {\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\n    err.url = String(resolved);\n    throw err;\n  } else if (!stats.isFile()) {\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\n  }\n\n  if (!preserveSymlinks) {\n    const real = realpathSync(path\x2C {\n      [internalFS.realpathCacheKey]: realpathCache\n    });\n    const { search\x2C hash } = resolved;\n    resolved =\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\n    resolved.search = search;\n    resolved.hash = hash;\n  }\n\n  return resolved;\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\n    fileURLToPath(base));\n}\n\n/**\n * @param {string} subpath\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\n    base && fileURLToPath(base));\n}\n\n/**\n *\n * @param {string | URL} subpath\n * @param {URL} packageJSONUrl\n * @param {boolean} internal\n * @param {string | URL | undefined} base\n */\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\n  const reason = `request is not a valid subpath for the "${internal ?\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\n                                         base && fileURLToPath(base));\n}\n\nfunction throwInvalidPackageTarget(\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target\x2C null\x2C '');\n  } else {\n    target = `${target}`;\n  }\n  throw new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\n    internal\x2C base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\nconst patternRegEx = /\\*/g;\n\nfunction resolvePackageTargetString(\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\n\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (!StringPrototypeStartsWith(target\x2C './')) {\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\n        !StringPrototypeStartsWith(target\x2C '/')) {\n      let isURL = false;\n      try {\n        new URL(target);\n        isURL = true;\n      } catch {\n        // Continue regardless of error.\n      }\n      if (!isURL) {\n        const exportTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target + subpath;\n        return packageResolve(\n          exportTarget\x2C packageJSONUrl\x2C conditions);\n      }\n    }\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null)\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  const resolved = new URL(target\x2C packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (subpath === '') return resolved;\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\n    const request = pattern ?\n      StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\n    throwInvalidSubpath(request\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (pattern) {\n    return new URL(\n      RegExpPrototypeSymbolReplace(\n        patternRegEx\x2C\n        resolved.href\x2C\n        () => subpath\n      )\n    );\n  }\n\n  return new URL(subpath\x2C resolved);\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) return false;\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\n                              base\x2C pattern\x2C internal\x2C conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\n      conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0) {\n      return null;\n    }\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolveResult;\n      try {\n        resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\n          internal\x2C conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\n          continue;\n        }\n        throw e;\n      }\n      if (resolveResult === undefined) {\n        continue;\n      }\n      if (resolveResult === null) {\n        lastException = null;\n        continue;\n      }\n      return resolveResult;\n    }\n    if (lastException === undefined || lastException === null)\n      return lastException;\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\n          '"exports" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\n          pattern\x2C internal\x2C conditions);\n        if (resolveResult === undefined)\n          continue;\n        return resolveResult;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\n                            base);\n}\n\n/**\n *\n * @param {Exports} exports\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @returns {boolean}\n */\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\n  if (typeof exports !== 'object' || exports === null) return false;\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * @param {URL} packageJSONUrl\n * @param {string} packageSubpath\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\n  let exports = packageConfig.exports;\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\n    exports = { '.': exports };\n\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\n    const target = exports[packageSubpath];\n    const resolved = resolvePackageTarget(\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\n    );\n\n    if (resolved == null) {\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n\n    return { resolved\x2C exact: true };\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath;\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n    if (patternIndex !== -1 &&\n        StringPrototypeStartsWith(packageSubpath\x2C\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\n                                            true\x2C base);\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n      if (packageSubpath.length >= key.length &&\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n        bestMatch = key;\n        bestMatchSubpath = StringPrototypeSlice(\n          packageSubpath\x2C patternIndex\x2C\n          packageSubpath.length - patternTrailer.length);\n      }\n    } else if (key[key.length - 1] === '/' &&\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\n      patternKeyCompare(bestMatch\x2C key) === 1) {\n      bestMatch = key;\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\n    const resolved = resolvePackageTarget(\n      packageJSONUrl\x2C\n      target\x2C\n      bestMatchSubpath\x2C\n      bestMatch\x2C\n      base\x2C\n      pattern\x2C\n      false\x2C\n      conditions);\n\n    if (resolved == null) {\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n\n    if (!pattern) {\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\n    }\n\n    return { resolved\x2C exact: pattern };\n  }\n\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n}\n\nfunction patternKeyCompare(a\x2C b) {\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLenA > baseLenB) return -1;\n  if (baseLenB > baseLenA) return 1;\n  if (aPatternIndex === -1) return 1;\n  if (bPatternIndex === -1) return -1;\n  if (a.length > b.length) return -1;\n  if (b.length > a.length) return 1;\n  return 0;\n}\n\n/**\n * @param {string} name\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\n          !StringPrototypeIncludes(name\x2C '*') &&\n          !StringPrototypeEndsWith(name\x2C '/')) {\n        const resolved = resolvePackageTarget(\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\n        );\n        if (resolved != null) {\n          return { resolved\x2C exact: true };\n        }\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath;\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n          if (patternIndex !== -1 &&\n              StringPrototypeStartsWith(name\x2C\n                                        StringPrototypeSlice(key\x2C 0\x2C\n                                                             patternIndex))) {\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n            if (name.length >= key.length &&\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n              bestMatch = key;\n              bestMatchSubpath = StringPrototypeSlice(\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\n            }\n          } else if (key[key.length - 1] === '/' &&\n            StringPrototypeStartsWith(name\x2C key) &&\n            patternKeyCompare(bestMatch\x2C key) === 1) {\n            bestMatch = key;\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\n          const resolved = resolvePackageTarget(\n            packageJSONUrl\x2C target\x2C\n            bestMatchSubpath\x2C bestMatch\x2C\n            base\x2C pattern\x2C true\x2C\n            conditions);\n          if (resolved !== null) {\n            if (!pattern)\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\n            return { resolved\x2C exact: pattern };\n          }\n        }\n      }\n    }\n  }\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * @param {URL} url\n * @returns {PackageType}\n */\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type;\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\n */\nfunction parsePackageName(specifier\x2C base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier\x2C '/'\x2C separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // \\\\ separators.\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\n    validPackageName = false;\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier\x2C separatorIndex));\n\n  return { packageName\x2C packageSubpath\x2C isScoped };\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageResolve(specifier\x2C base\x2C conditions) {\n  if (NativeModule.canBeRequiredByUsers(specifier) &&\n      NativeModule.canBeRequiredWithoutScheme(specifier)) {\n    return new URL('node:' + specifier);\n  }\n\n  const { packageName\x2C packageSubpath\x2C isScoped } =\n    parsePackageName(specifier\x2C base);\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (packageConfig.name === packageName &&\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\n      ).resolved;\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\n                                                  packageJSONPath.length - 13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json'\x2C packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\n      ).resolved;\n    }\n\n    if (packageSubpath === '.') {\n      return legacyMainResolve(\n        packageJSONUrl\x2C\n        packageConfig\x2C\n        base\n      );\n    }\n\n    return new URL(packageSubpath\x2C packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  // eslint can't handle the above code.\n  // eslint-disable-next-line no-unreachable\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true;\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false;\n  if (specifier[0] === '/') return true;\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @param {boolean} preserveSymlinks\n * @returns {URL}\n */\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\n  const isRemote = base.protocol === 'http:' ||\n    base.protocol === 'https:';\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL(specifier\x2C base);\n  } else if (!isRemote && specifier[0] === '#') {\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch {\n      if (!isRemote) {\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\n      }\n    }\n  }\n  if (resolved.protocol !== 'file:')\n    return resolved;\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\n}\n\n/**\n * Try to resolve an import as a CommonJS module\n * @param {string} specifier\n * @param {string} parentURL\n * @returns {boolean|string}\n */\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent\x2C null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      found = relative(parent\x2C found);\n      // Add '.separator if the path does not start with '..separator'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\n        found = `.${sep}${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\n      const index = StringPrototypeIndexOf(found\x2C pkg);\n      if (index !== -1) {\n        found = StringPrototypeSlice(found\x2C index);\n      }\n    }\n    // Normalize the path separator to give a valid suggestion\n    // on Windows\n    if (process.platform === 'win32') {\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\n                                           found\x2C '/');\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\n  if (parsedParentURL) {\n    if (\n      parsedParentURL.protocol === 'http:' ||\n      parsedParentURL.protocol === 'https:'\n    ) {\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n        // data: and blob: disallowed due to allowing file: access via\n        // indirection\n        if (parsed &&\n          parsed.protocol !== 'https:' &&\n          parsed.protocol !== 'http:'\n        ) {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            specifier\x2C\n            parsedParentURL\x2C\n            'remote imports cannot import from a local location.'\n          );\n        }\n\n        return { url: parsed.href };\n      }\n      if (NativeModule.canBeRequiredByUsers(specifier) &&\n          NativeModule.canBeRequiredWithoutScheme(specifier)) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          specifier\x2C\n          parsedParentURL\x2C\n          'remote imports cannot import from a local location.'\n        );\n      }\n\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\n        specifier\x2C\n        parsedParentURL\x2C\n        'only relative and absolute specifiers are supported.'\n      );\n    }\n  }\n}\n\nfunction throwIfUnsupportedURLProtocol(url) {\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\n      url.protocol !== 'node:') {\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\n  }\n}\n\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\n  if (\n    parsed &&\n    parsed.protocol !== 'file:' &&\n    parsed.protocol !== 'data:' &&\n    (\n      !experimentalNetworkImports ||\n      (\n        parsed.protocol !== 'https:' &&\n        parsed.protocol !== 'http:'\n      )\n    )\n  ) {\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\n      'file'\x2C\n      'data'\x2C\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\n    ));\n  }\n}\n\nasync function defaultResolve(specifier\x2C context = {}) {\n  let { parentURL\x2C conditions } = context;\n  if (parentURL && policy?.manifest) {\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\n    if (redirects) {\n      const { resolve\x2C reaction } = redirects;\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\n      let missing = true;\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        return { url: href };\n      }\n      if (missing) {\n        // Prevent network requests from firing if resolution would be banned.\n        // Network requests can extract data by doing things like putting\n        // secrets in query params\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          parentURL\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\n        );\n      }\n    }\n  }\n\n  let parsedParentURL;\n  if (parentURL) {\n    try {\n      parsedParentURL = new URL(parentURL);\n    } catch {\n      // Ignore exception\n    }\n  }\n\n  let parsed;\n  try {\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n      parsed = new URL(specifier\x2C parsedParentURL);\n    } else {\n      parsed = new URL(specifier);\n    }\n\n    if (parsed.protocol === 'data:' ||\n      (experimentalNetworkImports &&\n        (\n          parsed.protocol === 'https:' ||\n          parsed.protocol === 'http:'\n        )\n      )\n    ) {\n      return { url: parsed.href };\n    }\n  } catch {\n    // Ignore exception\n  }\n\n  // There are multiple deep branches that can either throw or return; instead\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\n  // check for a return. This seems the least gnarly.\n  const maybeReturn = checkIfDisallowedImport(\n    specifier\x2C\n    parsed\x2C\n    parsedParentURL\x2C\n  );\n\n  if (maybeReturn) return maybeReturn;\n\n  // This must come after checkIfDisallowedImport\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\n\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\n\n    // This is the initial entry point to the program\x2C and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\n    // input\x2C to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\n    // entry point\x2C etc.).\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\n      if (found) {\n        // Modify the stack and message string to include the hint\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\n        const hint = `Did you mean to import ${found}?`;\n        error.stack =\n          ArrayPrototypeShift(lines) + '\\n' +\n          hint + '\\n' +\n          ArrayPrototypeJoin(lines\x2C '\\n');\n        error.message += `\\n${hint}`;\n      }\n    }\n    throw error;\n  }\n\n  throwIfUnsupportedURLProtocol(url);\n\n  return {\n    // Do NOT cast `url` to a string: that will work even when there are real\n    // problems\x2C silencing them\n    url: url.href\x2C\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\n  };\n}\n\nmodule.exports = {\n  DEFAULT_CONDITIONS\x2C\n  defaultResolve\x2C\n  encodedSepRegEx\x2C\n  getPackageScopeConfig\x2C\n  getPackageType\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\x2C\n};\n\n// cycle\nconst {\n  defaultGetFormatWithoutErrors\x2C\n} = require('internal/modules/esm/get_format');\n\nif (policy) {\n  const $defaultResolve = defaultResolve;\n  module.exports.defaultResolve = async function defaultResolve(\n    specifier\x2C\n    context\n  ) {\n    const ret = await $defaultResolve(specifier\x2C context);\n    // This is a preflight check to avoid data exfiltration by query params etc.\n    policy.manifest.mightAllow(ret.url\x2C () =>\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\n        context.parentURL\x2C\n        specifier\x2C\n        context.conditions\n      )\n    );\n    return ret;\n  };\n}\n
code-source-info,0x24759bdc3406,113,0,40878,C0O0C4O40878,,
code-creation,Function,10,67446,0x24759bdc4536,1185, node:internal/modules/esm/resolve:1:1,0x24759bdc3380,~
code-source-info,0x24759bdc
tick,0x7f40773a70af,67579,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
tick,0xa12510,67624,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,67854,0x24759bdc7f1e,5, node:internal/modules/esm/get_format:1:1,0x24759bdc7c98,~
script-source,114,node:internal/modules/esm/get_format,'use strict';\nconst {\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  RegExpPrototypeExec\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\nconst { basename\x2C extname\x2C relative } = require('path');\nconst { getOptionValue } = require('internal/options');\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\nconst {\n  extensionFormatMap\x2C\n  getLegacyExtensionFormat\x2C\n  mimeToFormat\x2C\n} = require('internal/modules/esm/formats');\n\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\nconst experimentalSpecifierResolution =\n  getOptionValue('--experimental-specifier-resolution');\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\n\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\n  'data:': getDataProtocolModuleFormat\x2C\n  'file:': getFileProtocolModuleFormat\x2C\n  'http:': getHttpProtocolModuleFormat\x2C\n  'https:': getHttpProtocolModuleFormat\x2C\n  'node:'() { return 'builtin'; }\x2C\n});\n\nfunction getDataProtocolModuleFormat(parsed) {\n  const { 1: mime } = RegExpPrototypeExec(\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n    parsed.pathname\x2C\n  ) || [ null\x2C null\x2C null ];\n\n  return mimeToFormat(mime);\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @param {boolean} ignoreErrors\n * @returns {string}\n */\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\n  const filepath = fileURLToPath(url);\n  const ext = extname(filepath);\n  if (ext === '.js') {\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\n  }\n\n  const format = extensionFormatMap[ext];\n  if (format) return format;\n\n  if (experimentalSpecifierResolution !== 'node') {\n    // Explicit undefined return indicates load hook should rerun format check\n    if (ignoreErrors) return undefined;\n    let suggestion = '';\n    if (getPackageType(url) === 'module' && ext === '') {\n      const config = getPackageScopeConfig(url);\n      const fileBasename = basename(filepath);\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\n      suggestion = 'Loading extensionless files is not supported inside of ' +\n        '"type":"module" package.json contexts. The package.json file ' +\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\n        'field of package.json can point to a file with an extension\x2C for example ' +\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\n    }\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\n  }\n\n  return getLegacyExtensionFormat(ext) ?? null;\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | undefined} only works when enabled\n */\nfunction getHttpProtocolModuleFormat(url\x2C context) {\n  if (experimentalNetworkImports) {\n    return PromisePrototypeThen(\n      PromiseResolve(fetchModule(url\x2C context))\x2C\n      (entry) => {\n        return mimeToFormat(entry.headers['content-type']);\n      }\n    );\n  }\n}\n\n/**\n * @param {URL | URL['href']} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\n  const parsed = new URL(url);\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\n    return null;\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\n}\n\n/**\n * @param {URL | URL['href']} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormat(url\x2C context) {\n  const parsed = new URL(url);\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\n    null;\n}\n\nmodule.exports = {\n  defaultGetFormat\x2C\n  defaultGetFormatWithoutErrors\x2C\n  extensionFormatMap\x2C\n};\n
code-source-info,0x24759bdc7f1e,114,0,4134,C0O0C4O4134,,
code-creation,Function,10,68120,0x24759bdc839e,368, node:internal/modules/esm/get_format:1:1,0x24759bdc7e98,~
code-source-info,0x24759bdc839e,114,0,4134,C0O0C90O24C95O40C100O56C106O89C112O113C118O131C124O154C130O233C133O233C138O201C144O211C150O220C156O277C159O277C164O258C169O330C172O330C177O314C183O454C186O454C191O386C197O408C203O436C209O533C212O533C216O533C218O625C221O625C225O625C227O730C230O730C235O688C241O704C247O802C250O802C255O779C261O784C267O866C270O866C275O892C280O835C286O926C288O939C300O972C306O1012C312O1052C318O1093C322O1124C330O926C335O926C337O4037C344O4058C350O4078C356O4111C362O4052C367O4133,,
code-creation,Eval,10,68351,0x24759bdc9246,5, node:internal/modules/esm/fetch_module:1:1,0x24759bdc8f60,~
script-source,115,node:internal/modules/esm/fetch_module,'use strict';\nconst {\n  ObjectPrototypeHasOwnProperty\x2C\n  PromisePrototypeThen\x2C\n  SafeMap\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  Buffer: { concat: BufferConcat }\x2C\n} = require('buffer');\nconst {\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n} = require('internal/errors').codes;\nconst { URL } = require('internal/url');\nconst net = require('net');\nconst { once } = require('events');\nconst { compose } = require('stream');\n/**\n * @typedef CacheEntry\n * @property {Promise<string> | string} resolvedHREF\n * @property {Record<string\x2C string>} headers\n * @property {Promise<Buffer> | Buffer} body\n */\n\n/**\n * Only for GET requests\x2C other requests would need new Map\n * HTTP cache semantics keep diff caches\n *\n * It caches either the promise or the cache entry since import.meta.url needs\n * the value synchronously for the response location after all redirects.\n *\n * Maps HREF to pending cache entry\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\n */\nconst cacheForGET = new SafeMap();\n\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\n// lazily/at runtime and not top level of an internal module.\n\n// [2] Creating a new agent instead of using the gloabl agent improves\n// performance and precludes the agent becoming tainted.\n\nlet HTTPSAgent;\nfunction HTTPSGet(url\x2C opts) {\n  const https = require('https'); // [1]\n  HTTPSAgent ??= new https.Agent({ // [2]\n    keepAlive: true\x2C\n  });\n  return https.get(url\x2C {\n    agent: HTTPSAgent\x2C\n    ...opts\x2C\n  });\n}\n\nlet HTTPAgent;\nfunction HTTPGet(url\x2C opts) {\n  const http = require('http'); // [1]\n  HTTPAgent ??= new http.Agent({ // [2]\n    keepAlive: true\x2C\n  });\n  return http.get(url\x2C {\n    agent: HTTPAgent\x2C\n    ...opts\x2C\n  });\n}\n\nfunction dnsLookup(name\x2C opts) {\n  // eslint-disable-next-line no-func-assign\n  dnsLookup = require('dns/promises').lookup;\n  return dnsLookup(name\x2C opts);\n}\n\nlet zlib;\nfunction createBrotliDecompress() {\n  zlib ??= require('zlib'); // [1]\n  // eslint-disable-next-line no-func-assign\n  createBrotliDecompress = zlib.createBrotliDecompress;\n  return createBrotliDecompress();\n}\n\nfunction createUnzip() {\n  zlib ??= require('zlib'); // [1]\n  // eslint-disable-next-line no-func-assign\n  createUnzip = zlib.createUnzip;\n  return createUnzip();\n}\n\n/**\n * Redirection status code as per section 6.4 of RFC 7231:\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\n * and RFC 7238:\n * https://datatracker.ietf.org/doc/html/rfc7238\n * @param {number} statusCode\n * @returns {boolean}\n */\nfunction isRedirect(statusCode) {\n  switch (statusCode) {\n    case 300: // Multiple Choices\n    case 301: // Moved Permanently\n    case 302: // Found\n    case 303: // See Other\n    case 307: // Temporary Redirect\n    case 308: // Permanent Redirect\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * @param {URL} parsed\n * @returns {Promise<CacheEntry> | CacheEntry}\n */\nfunction fetchWithRedirects(parsed) {\n  const existing = cacheForGET.get(parsed.href);\n  if (existing) {\n    return existing;\n  }\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\n  const result = (async () => {\n    const req = handler(parsed\x2C {\n      headers: { Accept: '*/*' }\x2C\n    });\n    // Note that `once` is used here to handle `error` and that it hits the\n    // `finally` on network error/timeout.\n    const { 0: res } = await once(req\x2C 'response');\n    try {\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\n      if (isRedirect(res.statusCode) && hasLocation) {\n        const location = new URL(res.headers.location\x2C parsed);\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            res.headers.location\x2C\n            parsed.href\x2C\n            'cannot redirect to non-network location'\n          );\n        }\n        const entry = await fetchWithRedirects(location);\n        cacheForGET.set(parsed.href\x2C entry);\n        return entry;\n      }\n      if (res.statusCode === 404) {\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\n        throw err;\n      }\n      // This condition catches all unsupported status codes\x2C including\n      // 3xx redirection codes without `Location` HTTP header.\n      if (res.statusCode < 200 || res.statusCode >= 300) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          res.headers.location\x2C\n          parsed.href\x2C\n          'cannot redirect to non-network location');\n      }\n      const { headers } = res;\n      const contentType = headers['content-type'];\n      if (!contentType) {\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\n          parsed.href\x2C\n          "the 'Content-Type' header is required"\n        );\n      }\n      /**\n       * @type {CacheEntry}\n       */\n      const entry = {\n        resolvedHREF: parsed.href\x2C\n        headers: {\n          'content-type': res.headers['content-type']\x2C\n        }\x2C\n        body: (async () => {\n          let bodyStream = res;\n          if (res.headers['content-encoding'] === 'br') {\n            bodyStream = compose(res\x2C createBrotliDecompress());\n          } else if (\n            res.headers['content-encoding'] === 'gzip' ||\n            res.headers['content-encoding'] === 'deflate'\n          ) {\n            bodyStream = compose(res\x2C createUnzip());\n          }\n          const buffers = await bodyStream.toArray();\n          const body = BufferConcat(buffers);\n          entry.body = body;\n          return body;\n        })()\x2C\n      };\n      cacheForGET.set(parsed.href\x2C entry);\n      await entry.body;\n      return entry;\n    } finally {\n      req.destroy();\n    }\n  })();\n  cacheForGET.set(parsed.href\x2C result);\n  return result;\n}\n\nconst allowList = new net.BlockList();\nallowList.addAddress('::1'\x2C 'ipv6');\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\n\n/**\n * Returns if an address has local status by if it is going to a local\n * interface or is an address resolved by DNS to be a local interface\n * @param {string} hostname url.hostname to test\n * @returns {Promise<boolean>}\n */\nasync function isLocalAddress(hostname) {\n  try {\n    if (\n      StringPrototypeStartsWith(hostname\x2C '[') &&\n      StringPrototypeEndsWith(hostname\x2C ']')\n    ) {\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\n    }\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\n    return allowList.check(addr.address\x2C ipv);\n  } catch {\n    // If it errored\x2C the answer is no.\n  }\n  return false;\n}\n\n/**\n * Fetches a location with a shared cache following redirects.\n * Does not respect HTTP cache headers.\n *\n * This splits the header and body Promises so that things only needing\n * headers don't need to wait on the body.\n *\n * In cases where the request & response have already settled\x2C this returns the\n * cache value synchronously.\n *\n * @param {URL} parsed\n * @param {ESModuleContext} context\n * @returns {ReturnType<typeof fetchWithRedirects>}\n */\nfunction fetchModule(parsed\x2C { parentURL }) {\n  const { href } = parsed;\n  const existing = cacheForGET.get(href);\n  if (existing) {\n    return existing;\n  }\n  if (parsed.protocol === 'http:') {\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\n      if (is !== true) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          href\x2C\n          parentURL\x2C\n          'http can only be used to load local resources (use https instead).'\n        );\n      }\n      return fetchWithRedirects(parsed);\n    });\n  }\n  return fetchWithRedirects(parsed);\n}\n\nmodule.exports = {\n  fetchModule\x2C\n};\n
code-source-info,0x24759bdc9246,115,0,7752,C0O0C4O7752,,
code-creation,Function,10,68761,0x24759bdc96fe,355, node:internal/modules/esm/fetch_module:1:1,0x24759bdc91c0,~
code-source-info,0x24759bdc96fe,115,0,7752,C0O0C113O24C119O57C125O81C130O92C136O119C142O143C148O235C154O235C159O235C164O215C170O358C176O358C181O384C186O264C192O297C198O332C204O408C210O408C215O400C221O445C227O445C232O478C238O478C243O469C249O517C255O517C260O505C266O1093C268O1093C273O1093C275O1383C276O1383C278O1611C279O1611C281O1990C282O1990C284O5892C289O5884C294O5884C296O5905C299O5915C310O5915C316O5942C319O5952C330O5952C336O7715C343O7736C349O7730C354O7751,,
tick,0x7f407774af20,68870,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
tick,0x10f59d2,69725,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0x24759bdc97e1,0xa26aa8ba9d,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,69787,0x24759bdcbfe6,5, node:net:1:1,0x24759bdcb788,~
script-source,116,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIndexOf\x2C\n  Boolean\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  ObjectCreate\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\n} = internalBinding('uv');\n\nconst { Buffer } = require('buffer');\nconst { guessHandleType } = internalBinding('util');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n} = require('internal/stream_base_commons');\nconst {\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  genericNodeError\x2C\n  uvExceptionWithHostPort\x2C\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst {\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n} = require('internal/dtrace');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\n\nconst { clearTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst isWindows = process.platform === 'win32';\n\nconst noop = () => {};\n\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nfunction getFlags(ipv6Only) {\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\n    );\n  }\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw errnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        __proto__: null\x2C\n        value: 0\x2C writable: true\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  this[kSetNoDelay] = Boolean(options.noDelay);\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.pending) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(errnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\n        self._readableState);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  const er = genericNodeError(\n    'This socket has been ended by the other party'\x2C\n    { code: 'EPIPE' }\n  );\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  // Backwards compatibility: assume true when `enable` is omitted\n  enable = Boolean(enable === undefined ? true : enable);\n\n  if (!this._handle) {\n    this[kSetNoDelay] = enable;\n    return this;\n  }\n\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = enable;\n    this._handle.setNoDelay(enable);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\n  enable = Boolean(enable);\n  const initialDelay = ~~(initialDelayMsecs / 1000);\n\n  if (!this._handle) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    return this;\n  }\n\n  if (!this._handle.setKeepAlive) {\n    return this;\n  }\n\n  if (enable !== this[kSetKeepAlive] ||\n      (\n        enable &&\n        this[kSetKeepAliveInitialDelay] !== initialDelay\n      )\n  ) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    this._handle.setKeepAlive(enable\x2C initialDelay);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.connecting;\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this._unrefTimer;\n  }\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(errnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug('_read');\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  DTRACE_NET_STREAM_END(this);\n  return this;\n};\n\nSocket.prototype.resetAndDestroy = function() {\n  if (this._handle) {\n    if (!(this._handle instanceof TCP))\n      throw new ERR_INVALID_HANDLE_TYPE();\n    if (this.connecting) {\n      debug('reset wait for connection');\n      this.once('connect'\x2C () => this._reset());\n    } else {\n      this._reset();\n    }\n  } else {\n    this.destroy(new ERR_SOCKET_CLOSED());\n  }\n  return this;\n};\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      this._handle.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(errnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    if (this.resetAndClosing) {\n      this.resetAndClosing = false;\n      const err = this._handle.reset(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n      if (err)\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\n    } else {\n      this._handle.close(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n    }\n    this._handle.onread = noop;\n    this._handle = null;\n    this._sockname = null;\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._reset = function() {\n  debug('reset connection');\n  this.resetAndClosing = true;\n  return this.destroy();\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    const out = {};\n    const err = this._handle.getpeername(out);\n    if (err) return out;\n    this._peername = out;\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\n  }\n}\n\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n    });\n    return;\n  }\n\n  if (options.lookup !== undefined)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: options.family\x2C\n    hints: options.hints || 0\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n      }\n    });\n  });\n}\n\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  const self = handle[owner_symbol];\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\n      self._handle.setNoDelay(true);\n    }\n\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\n    }\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\n    }\n  } else {\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = exceptionWithHostPort(status\x2C\n                                     'connect'\x2C\n                                     req.address\x2C\n                                     req.port\x2C\n                                     details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n    self.destroy(ex);\n  }\n}\n\nfunction addAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    signal.addEventListener('abort'\x2C onAborted);\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = {};\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n  this.noDelay = Boolean(options.noDelay);\n  this.keepAlive = Boolean(options.keepAlive);\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n    backlog\x2C\n    ...options\x2C\n  };\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n\n  function listenOnPrimaryHandle(err\x2C handle) {\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options.ipv6Only);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\n    return this;\n  }\n  addAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C\n                    pipeName\x2C\n                    -1\x2C\n                    -1\x2C\n                    backlog\x2C\n                    undefined\x2C\n                    options.exclusive\x2C\n                    undefined\x2C\n                    {\n                      readableAll: options.readableAll\x2C\n                      writableAll: options.writableAll\x2C\n                    });\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw errnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      addressType = ip ? addressType : 4;\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\n});\n\nServer.prototype.address = function() {\n  if (this._handle && this._handle.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw errnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections && self._connections >= self.maxConnections) {\n    if (clientHandle.getsockname || clientHandle.getpeername) {\n      const data = ObjectCreate(null);\n      if (clientHandle.getsockname) {\n        const localInfo = ObjectCreate(null);\n        clientHandle.getsockname(localInfo);\n        data.localAddress = localInfo.address;\n        data.localPort = localInfo.port;\n      }\n      if (clientHandle.getpeername) {\n        const remoteInfo = ObjectCreate(null);\n        clientHandle.getpeername(remoteInfo);\n        data.remoteAddress = remoteInfo.address;\n        data.remotePort = remoteInfo.port;\n        data.remoteFamily = remoteInfo.family;\n      }\n      self.emit('drop'\x2C data);\n    } else {\n      self.emit('drop');\n    }\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\n  });\n\n  if (self.noDelay && clientHandle.setNoDelay) {\n    socket[kSetNoDelay] = true;\n    clientHandle.setNoDelay(true);\n  }\n  if (self.keepAlive && clientHandle.setKeepAlive) {\n    socket[kSetKeepAlive] = true;\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\n  }\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n\n  DTRACE_NET_SERVER_CONNECTION(socket);\n  self.emit('connection'\x2C socket);\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n};\n
code-source-info,0x24759bdcbfe6,116,0,51955,C0O0C4O51955,,
code-creation,Function,10,71805,0x24759bdcf036,2694, node:net:1:1,0x24759bdcbf60,~
code-source-info,0x24759bdcf036,116,0,51955,C0O0C435O1159C441O1175C447O1200C453O1211C459O1221C465O1236C471O1254C477O1278C482O1302C487O1312C493O1365C499O1365C503O1365C505O1399C511O1399C515O1399C517O1430C523O1430C528O1463C542O1464C548O1430C550O1588C556O1588C561O1518C567O1526C572O1536C577O1546C583O1570C589O1628C595O1628C599O1628C601O1712C604O1712C609O1666C615O1683C621O1696C627O1755C633O1755C638O1744C644O1802C647O1802C652O1782C658O1852C661O1852C666O1835C672O1947C675O1947C680O1894C686O1901C692O1930C698O2042C701O2042C706O1986C712O1994C718O2024C724O2173C730O2173C735O2082C741O2096C752O2137C758O2154C764O2371C770O2371C775O2216C781O2233C787O2249C793O2265C798O2285C804O2296C809O2312C814O2332C820O2343C826O2356C832O2801C838O2801C843O2801C848O2435C854O2467C860O2493C866O2520C872O2545C878O2573C884O2602C890O2633C896O2661C902O2684C908O2709C914O2727C920O2752C926O2772C932O2854C938O2854C943O2837C949O3009C955O3009C960O2896C966O2919C972O2939C978O2956C984O2974C990O2990C996O3069C999O3069C1003O3069C1005O3167C1011O3167C1016O3109C1022O3141C1028O3247C1029O3247C1031O3260C1032O3260C1034O3269C1035O3269C1037O3284C1038O3284C1040O3325C1046O3325C1051O3308C1057O3365C1063O3365C1068O3352C1074O3420C1076O3420C1078O3457C1080O3457C1082O3482C1085O3490C1092O3499C1095O3482C1097O3526C1101O3526C1103O3573C1106O3573C1110O3573C1112O3664C1118O3664C1123O3622C1129O3637C1135O3650C1141O7140C1144O7140C1148O7140C1150O7184C1153O7184C1157O7184C1159O7229C1162O7229C1166O7229C1168O7274C1171O7274C1175O7274C1177O7333C1180O7333C1184O7333C1186O11870C1189O11898C1197O11916C1202O11923C1207O11870C1212O11935C1218O11971C1223O11935C1228O12011C1231O12018C1240O12040C1244O12266C1247O12273C1256O12290C1260O13802C1263O13809C1270O13830C1274O13852C1277O13859C1286O13880C1290O14390C1293O14397C1302O14418C1306O14801C1309O14808C1318O14831C1322O15443C1325O15450C1334O15468C1338O15518C1344O15546C1358O15600C1366O15518C1371O15650C1377O15678C1391O15723C1399O15650C1404O15808C1410O15836C1424O15889C1432O15808C1437O16211C1443O16239C1457O16292C1465O16211C1470O16378C1476O16406C1481O16417C1487O16459C1498O16378C1503O16824C1506O16831C1515O16847C1519O17082C1522O17089C1531O17103C1535O17295C1538O17302C1547O17328C1555O17683C1558O17690C1567O17706C1575O18046C1578O18053C1587O18070C1595O18260C1598O18267C1607O18282C1615O18619C1618O18626C1627O18648C1635O18801C1638O18808C1647O18827C1655O20079C1658O20086C1667O20103C1675O20207C1678O20214C1687O20237C1695O20703C1703O20703C1713O20823C1721O20823C1731O20922C1739O20922C1749O21018C1757O21018C1767O21109C1770O21116C1779O21139C1787O21421C1795O21421C1805O21519C1813O21519C1823O21608C1826O21615C1831O21625C1835O21643C1843O21695C1846O21702C1855O21726C1863O22493C1866O22500C1875O22518C1883O22592C1886O22599C1895O22616C1903O22860C1911O22860C1921O23000C1929O23000C1939O26668C1942O26675C1951O26693C1959O31094C1962O31101C1971O31115C1979O31308C1982O31315C1991O31331C1999O34817C2002O34845C2014O34869C2023O34817C2033O34881C2039O34881C2049O38867C2052O38874C2063O38893C2071O40378C2074O40385C2087O40402C2095O44647C2101O44675C2122O44727C2134O44647C2144O44818C2147O44825C2160O44843C2168O46939C2171O46946C2184O46971C2192O47730C2195O47737C2208O47753C2216O48625C2219O48632C2232O48662C2240O49140C2243O49147C2255O49170C2268O49194C2276O49512C2282O49537C2303O49580C2315O49620C2327O49512C2337O49667C2343O49695C2360O49740C2372O49775C2384O49667C2394O49817C2397O49824C2410O49847C2418O50093C2421O50100C2434O50114C2442O50217C2445O50224C2458O50240C2466O50348C2468O50403C2469O50403C2471O50410C2482O50433C2483O50433C2485O50457C2494O51165C2499O51437C2509O51479C2519O51517C2529O51534C2539O51793C2549O51822C2559O51833C2569O51855C2579O51871C2589O51889C2599O51899C2609O51909C2619O51927C2684O51452C2693O51954,,
tick,0x7f40773a70af,71965,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0x24759bdc97e1,0xa26aa8ba9d,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
tick,0x7f40773a70af,72053,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0x24759bdc97e1,0xa26aa8ba9d,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,72226,0x24759bdd4dae,5, node:internal/net:1:1,0x24759bdd4be8,~
script-source,117,node:internal/net,'use strict';\n\nconst {\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n} = primordials;\n\nconst Buffer = require('buffer').Buffer;\nconst { writeBuffer } = internalBinding('fs');\nconst errors = require('internal/errors');\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\nconst IPv6Reg = new RegExp('^(' +\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\n\nfunction isIPv4(s) {\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\n}\n\nfunction isIPv6(s) {\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\n}\n\nfunction isIP(s) {\n  if (isIPv4(s)) return 4;\n  if (isIPv6(s)) return 6;\n  return 0;\n}\n\nfunction makeSyncWrite(fd) {\n  return function(chunk\x2C enc\x2C cb) {\n    if (enc !== 'buffer')\n      chunk = Buffer.from(chunk\x2C enc);\n\n    this._handle.bytesWritten += chunk.length;\n\n    const ctx = {};\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\n    if (ctx.errno !== undefined) {\n      const ex = errors.uvException(ctx);\n      ex.errno = ctx.errno;\n      return cb(ex);\n    }\n    cb();\n  };\n}\n\nmodule.exports = {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  makeSyncWrite\x2C\n  normalizedArgsSymbol: Symbol('normalizedArgs')\n};\n
code-source-info,0x24759bdd4dae,117,0,1749,C0O0C4O1749,,
code-creation,Function,10,72338,0x24759bdd519e,617, node:internal/net:1:1,0x24759bdd4d28,~
code-source-info,0x24759bdd519e,117,0,1749,C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O320C119O335C124O360C129O375C142O360C147O360C149O417C152O457C160O483C173O499C183O473C192O521C205O537C218O547C228O511C237O569C250O586C263O597C273O559C282O625C295O643C308O658C321O669C331O615C340O697C353O715C366O730C379O741C389O687C398O769C411O787C424O802C437O813C447O759C456O841C469O859C482O874C495O885C505O831C514O919C527O934C540O947C550O903C556O965C562O457C567O457C569O1633C576O1654C582O1662C588O1672C594O1682C601O1721C611O1648C616O1748,,
code-creation,Eval,10,72618,0x24759bdd8506,5, node:internal/dtrace:1:1,0x24759bdd83c0,~
script-source,118,node:internal/dtrace,'use strict';\n\nconst config = internalBinding('config');\n\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\n  DTRACE_NET_STREAM_END = () => {}\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\n\nmodule.exports = {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n};\n
code-source-info,0x24759bdd8506,118,0,568,C0O0C4O568,,
code-creation,Function,10,72692,0x24759bdd89de,140, node:internal/dtrace:1:1,0x24759bdd8480,~
code-source-info,0x24759bdd89de,118,0,568,C0O30C3O30C8O322C17O334C25O68C36O109C47O151C58O192C69O234C80O277C91O368C98O389C104O419C110O450C116O480C122O511C128O543C134O383C139O567,,
code-creation,LazyCompile,10,72876,0x24759bdd928e,34,protoGetter node:net:796:21,0x24759bdcc428,~
code-source-info,0x24759bdd928e,116,20540,20701,C0O20561C8O20589C13O20600C20O20685C27O20561C33O20700,,
tick,0x1567e2d,73030,0,0x0,0,0x24759bdc980a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,73144,0x24759bddd636,37,get BlockList node:net:1920:16,0x24759bdce470,~
code-source-info,0x24759bddd636,116,51574,51663,C0O51583C14O51597C19O51626C26O51593C32O51642C36O51659,,
code-creation,Eval,10,73631,0x24759bdddb3e,5, node:internal/blocklist:1:1,0x24759bddd958,~
script-source,119,node:internal/blocklist,'use strict';\n\nconst {\n  Boolean\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\n} = primordials;\n\nconst {\n  BlockList: BlockListHandle\x2C\n} = internalBinding('block_list');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst {\n  SocketAddress\x2C\n  kHandle: kSocketAddressHandle\x2C\n} = require('internal/socketaddress');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst kHandle = Symbol('kHandle');\nconst { owner_symbol } = internalBinding('symbols');\n\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\n\nconst { validateInt32\x2C validateString } = require('internal/validators');\n\nclass BlockList extends JSTransferable {\n  constructor() {\n    super();\n    this[kHandle] = new BlockListHandle();\n    this[kHandle][owner_symbol] = this;\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `BlockList ${inspect({\n      rules: this.rules\n    }\x2C opts)}`;\n  }\n\n  addAddress(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      address = new SocketAddress({\n        address\x2C\n        family\x2C\n      });\n    }\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\n  }\n\n  addRange(start\x2C end\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(start)) {\n      validateString(start\x2C 'start');\n      validateString(family\x2C 'family');\n      start = new SocketAddress({\n        address: start\x2C\n        family\x2C\n      });\n    }\n    if (!SocketAddress.isSocketAddress(end)) {\n      validateString(end\x2C 'end');\n      validateString(family\x2C 'family');\n      end = new SocketAddress({\n        address: end\x2C\n        family\x2C\n      });\n    }\n    const ret = this[kHandle].addRange(\n      start[kSocketAddressHandle]\x2C\n      end[kSocketAddressHandle]);\n    if (ret === false)\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\n  }\n\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(network)) {\n      validateString(network\x2C 'network');\n      validateString(family\x2C 'family');\n      network = new SocketAddress({\n        address: network\x2C\n        family\x2C\n      });\n    }\n    switch (network.family) {\n      case 'ipv4':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\n        break;\n      case 'ipv6':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\n        break;\n    }\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\n  }\n\n  check(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      try {\n        address = new SocketAddress({\n          address\x2C\n          family\x2C\n        });\n      } catch {\n        // Ignore the error. If it's not a valid address\x2C return false.\n        return false;\n      }\n    }\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\n  }\n\n  get rules() {\n    return this[kHandle].getRules();\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kHandle][owner_symbol] = this;\n  }\n}\n\nclass InternalBlockList extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n    if (handle !== undefined)\n      handle[owner_symbol] = this;\n  }\n}\n\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\n\nmodule.exports = {\n  BlockList\x2C\n  InternalBlockList\x2C\n};\n
code-source-info,0x24759bdddb3e,119,0,3877,C0O0C4O3877,,
code-creation,Function,10,74060,0x24759bdde546,359, node:internal/blocklist:1:1,0x24759bdddab8,~
code-source-info,0x24759bdde546,119,0,3877,C0O0C35O25C41O36C46O60C51O127C54O127C59O106C65O204C68O204C73O190C78O293C81O293C86O241C92O267C98O385C101O385C106O339C111O357C116O367C121O450C124O450C129O438C135O501C138O501C142O501C144O545C147O545C152O528C158O611C161O611C166O637C171O584C177O688C180O688C185O654C191O669C197O745C204O884C241O3223C251O3384C278O3519C301O3691C306O3725C311O3735C315O3713C319O3787C324O3808C329O3748C334O3821C341O3842C347O3855C353O3836C358O3876,,
tick,0x7f407774bceb,74129,1,0xb53890,3,0xd3aa20,0xa26aa8ba7c,0x7f40600432df,0x24759bddd644,0x24759bdc981a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Function,11,74284,0x7f40600440a0,544,internalBinding node:internal/bootstrap/loaders:171:45,0x2ac221050730,^
code-source-info,0x7f40600440a0,9,5263,5501,,,
code-creation,Function,11,74348,0x7f4060044320,572,getOptionValue node:internal/options:44:24,0x1d94759e5e38,^
code-source-info,0x7f4060044320,95,985,1228,,,
code-creation,Function,11,74362,0x7f40600445c0,428,getCLIOptionsFromBinding node:internal/options:18:34,0x1d94759e5ad0,^
code-source-info,0x7f40600445c0,95,497,598,,,
code-creation,Function,11,74378,0x7f40600447e0,1248,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x2ac221050cd8,^
code-source-info,0x7f40600447e0,9,9991,10552,,,
code-creation,Function,11,74389,0x7f4060044d20,244,SafeMap node:internal/per_context/primordials:366:16,0x2ac22104a868,^
code-source-info,0x7f4060044d20,6,10601,10618,,,
code-creation,Eval,10,74541,0x24759bde014e,5, node:internal/socketaddress:1:1,0x24759bddff58,~
script-source,120,node:internal/socketaddress,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  SocketAddress: _SocketAddress\x2C\n  AF_INET\x2C\n  AF_INET6\x2C\n} = internalBinding('block_list');\n\nconst {\n  validateObject\x2C\n  validateString\x2C\n  validatePort\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst kHandle = Symbol('kHandle');\nconst kDetail = Symbol('kDetail');\n\nclass SocketAddress extends JSTransferable {\n  static isSocketAddress(value) {\n    return value?.[kHandle] !== undefined;\n  }\n\n  constructor(options = {}) {\n    super();\n    validateObject(options\x2C 'options');\n    let { family = 'ipv4' } = options;\n    const {\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\n      port = 0\x2C\n      flowlabel = 0\x2C\n    } = options;\n\n    let type;\n    if (typeof family?.toLowerCase === 'function')\n      family = family.toLowerCase();\n    switch (family) {\n      case 'ipv4':\n        type = AF_INET;\n        break;\n      case 'ipv6':\n        type = AF_INET6;\n        break;\n      default:\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\n    }\n\n    validateString(address\x2C 'options.address');\n    validatePort(port\x2C 'options.port');\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\n\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\n    this[kDetail] = this[kHandle].detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  get address() {\n    return this[kDetail].address;\n  }\n\n  get port() {\n    return this[kDetail].port;\n  }\n\n  get family() {\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\n  }\n\n  get flowlabel() {\n    // The flow label can be changed internally.\n    return this[kHandle].flowlabel();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kDetail] = handle.detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  toJSON() {\n    return {\n      address: this.address\x2C\n      port: this.port\x2C\n      family: this.family\x2C\n      flowlabel: this.flowlabel\x2C\n    };\n  }\n}\n\nclass InternalSocketAddress extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nInternalSocketAddress.prototype.constructor =\n  SocketAddress.prototype.constructor;\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\n\nmodule.exports = {\n  SocketAddress\x2C\n  InternalSocketAddress\x2C\n  kHandle\x2C\n};\n
code-source-info,0x24759bde014e,120,0,3207,C0O0C4O3207,,
code-creation,Function,10,74740,0x24759bde0c76,366, node:internal/socketaddress:1:1,0x24759bde00c8,~
code-source-info,0x24759bde0c76,120,0,3207,C0O0C38O25C43O49C48O143C51O143C56O100C62O118C68O129C74O257C77O257C82O185C88O203C94O221C100O237C106O345C109O345C114O345C119O313C125O419C128O419C133O405C138O466C141O466C146O454C152O557C155O557C160O511C165O529C170O539C175O618C178O618C182O618C184O653C187O653C191O653C193O701C226O2071C236O2313C246O2482C279O2877C302O2988C307O3028C312O3038C316O3010C320O3094C325O3119C330O3051C335O3132C342O3153C348O3170C354O3195C360O3147C365O3206,,
code-creation,LazyCompile,10,74887,0x24759bde1846,72,BlockList node:internal/blocklist:40:14,0x24759bdddb70,~
code-source-info,0x24759bde1846,119,775,879,C3O784C11O784C23O797C28O802C33O817C36O813C41O811C45O840C50O845C52O844C58O854C64O868C71O878,,
code-creation,LazyCompile,10,74993,0x24759bde1fee,115,addAddress node:internal/blocklist:60:13,0x24759bdddc10,~
code-source-info,0x24759bde1fee,119,1149,1460,C14O1182C19O1201C24O1201C31O1235C39O1235C44O1277C52O1277C57O1317C69O1355C75O1372C81O1327C87O1400C89O1405C91O1404C95O1414C102O1433C104O1432C108O1414C114O1459,,
code-creation,LazyCompile,10,75089,0x24759bde216e,20,isSocketAddress node:internal/socketaddress:43:25,0x24759bde01d0,~
code-source-info,0x24759bde216e,120,742,798,C0O756C9O771C11O770C18O780C19O794,,
tick,0x111a9f7,75211,0,0x0,2,0x11d7ee0,0x24759bde203f,0x24759bdc9834,0xa26aa8ba9d,0x7f40600432df,0x24759bdc844a,0xa26aa8ba9d,0x7f40600432df,0x24759bdc49ac,0xa26aa8ba9d,0x7f40600432df,0xa26aabac24,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,75257,0x24759bde2ad6,323,SocketAddress node:internal/socketaddress:47:14,0x24759bde0180,~
code-source-info,0x24759bde2ad6,120,813,1761,C7O813C13O834C21O834C33O847C41O847C46O893C58O940C69O958C81O998C89O1014C97O1055C99O1065C106O1082C117O1134C122O1134C127O1153C146O1198C151O1222C153O1256C158O1281C160O1311C168O1369C175O1317C180O1311C181O1389C189O1389C194O1437C202O1437C207O1477C220O1477C225O1537C230O1542C235O1557C252O1553C257O1551C261O1609C266O1614C274O1630C276O1629C280O1639C291O1663C296O1686C301O1711C306O1739C310O1639C315O1623C322O1760,,
code-creation,LazyCompile,10,75316,0x24759bde2e26,99, node:internal/validators:163:3,0x1d4983484068,~
code-source-info,0x24759bde2e26,16,4731,5290,C0O4789C4O4829C9O4865C14O4903C21O4939C26O4975C33O5011C38O5025C46O5072C50O5086C53O5086C67O5161C75O5226C91O5232C96O5226C98O5289,,
code-creation,LazyCompile,10,75404,0x24759bde2fd6,129,validatePort node:internal/validators:220:22,0x1d4983484240,~
code-source-info,0x24759bde2fd6,16,6761,7119,C24O6805C44O6902C47O6902C52O6927C58O6935C65O6951C70O6962C72O6968C75O6957C86O6989C92O7013C99O7023C101O7041C117O7047C122O7041C123O7101C125O7113C128O7117,,
code-creation,LazyCompile,10,75483,0x24759bde3226,149, node:internal/validators:102:40,0x1d4983483e68,~
code-source-info,0x24759bde3226,16,2897,3401,C0O2928C6O2965C22O2971C27O2965C28O3026C31O3031C37O3054C42O3059C48O3091C64O3097C69O3091C70O3168C80O3220C90O3259C109O3226C114O3220C115O3296C120O3318C125O3331C141O3337C146O3331C148O3400,,
code-creation,LazyCompile,10,75545,0x24759bde33ae,9,isUint32 node:internal/validators:41:18,0x1d4983483d08,~
code-source-info,0x24759bde33ae,16,811,856,C0O823C2O847C5O836C8O854,,
code-creation,LazyCompile,10,75674,0x24759bde35e6,229,addRange node:internal/blocklist:72:11,0x24759bdddc60,~
code-source-info,0x24759bde35e6,119,1472,2142,C17O1508C22O1527C27O1527C34O1559C42O1559C47O1597C55O1597C60O1637C72O1682C78O1697C84O1645C90O1725C95O1744C100O1744C107O1774C115O1774C120O1808C128O1808C133O1848C145O1891C151O1904C157O1854C163O1944C165O1949C167O1948C171O1958C178O1980C180O1979C186O2013C188O2012C192O1958C199O2041C200O2049C205O2066C221O2072C226O2066C228O2141,,
code-creation,Eval,10,75831,0x24759bde3b46,5, node:internal/modules/esm/formats:1:1,0x24759bde39d0,~
script-source,121,node:internal/modules/esm/formats,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\nconst { getOptionValue } = require('internal/options');\n\n\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\n\nconst extensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'module'\x2C\n  '.json': 'json'\x2C\n  '.mjs': 'module'\x2C\n};\n\nconst legacyExtensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'commonjs'\x2C\n  '.json': 'commonjs'\x2C\n  '.mjs': 'module'\x2C\n  '.node': 'commonjs'\x2C\n};\n\nif (experimentalWasmModules) {\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\n}\n\n/**\n * @param {string} mime\n * @returns {string | null}\n */\nfunction mimeToFormat(mime) {\n  if (\n    RegExpPrototypeExec(\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\n      mime\n    ) !== null\n  ) return 'module';\n  if (mime === 'application/json') return 'json';\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\n  return null;\n}\n\nfunction getLegacyExtensionFormat(ext) {\n  return legacyExtensionFormatMap[ext];\n}\n\nmodule.exports = {\n  extensionFormatMap\x2C\n  getLegacyExtensionFormat\x2C\n  legacyExtensionFormatMap\x2C\n  mimeToFormat\x2C\n};\n
code-source-info,0x24759bde3b46,121,0,1199,C0O0C4O1199,,
code-creation,Function,10,75955,0x24759bde3dfe,120, node:internal/modules/esm/formats:1:1,0x24759bde3ac0,~
code-source-info,0x24759bde3dfe,121,0,1199,C0O0C24O25C30O90C33O90C38O71C43O153C46O153C50O153C52O228C57O368C61O368C63O504C67O537C73O601C79O565C83O1083C90O1104C96O1126C102O1154C108O1182C114O1098C119O1198,,
code-creation,Eval,10,76096,0x24759bde4566,5, node:internal/modules/esm/initialize_import_meta:1:1,0x24759bde43d0,~
script-source,122,node:internal/modules/esm/initialize_import_meta,'use strict';\n\nconst { getOptionValue } = require('internal/options');\nconst experimentalImportMetaResolve =\n  getOptionValue('--experimental-import-meta-resolve');\nconst {\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n} = primordials;\nconst asyncESM = require('internal/process/esm_loader');\n\nfunction createImportMetaResolve(defaultParentUrl) {\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\n    return PromisePrototypeThen(\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\n      ({ url }) => url\x2C\n      (error) => (\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\n          error.url : PromiseReject(error))\n    );\n  };\n}\n\n/**\n * @param {object} meta\n * @param {{url: string}} context\n */\nfunction initializeImportMeta(meta\x2C context) {\n  const { url } = context;\n\n  // Alphabetical\n  if (experimentalImportMetaResolve) {\n    meta.resolve = createImportMetaResolve(url);\n  }\n\n  meta.url = url;\n}\n\nmodule.exports = {\n  initializeImportMeta\n};\n
code-source-info,0x24759bde4566,122,0,980,C0O0C4O980,,
code-creation,Function,10,76208,0x24759bde472e,90, node:internal/modules/esm/initialize_import_meta:1:1,0x24759bde44e0,~
code-source-info,0x24759bde472e,122,0,980,C0O0C28O42C31O42C36O23C41O111C44O111C48O111C50O175C56O199C62O248C65O248C69O248C71O935C78O956C84O950C89O979,,
tick,0x1133ba1,76344,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,76468,0x24759bde4d96,5, node:internal/modules/esm/load:1:1,0x24759bde4b60,~
script-source,123,node:internal/modules/esm/load,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  RegExpPrototypeExec\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { validateAssertions } = require('internal/modules/esm/assert');\nconst { getOptionValue } = require('internal/options');\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\n\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\n\nconst { Buffer: { from: BufferFrom } } = require('buffer');\n\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\nconst { URL } = require('internal/url');\nconst {\n  ERR_INVALID_URL\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\n\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\n\nasync function getSource(url\x2C context) {\n  const parsed = new URL(url);\n  let responseURL = url;\n  let source;\n  if (parsed.protocol === 'file:') {\n    source = await readFileAsync(parsed);\n  } else if (parsed.protocol === 'data:') {\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\n    if (!match) {\n      throw new ERR_INVALID_URL(url);\n    }\n    const { 1: base64\x2C 2: body } = match;\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\n  } else if (experimentalNetworkImports && (\n    parsed.protocol === 'https:' ||\n    parsed.protocol === 'http:'\n  )) {\n    const res = await fetchModule(parsed\x2C context);\n    source = await res.body;\n    responseURL = res.resolvedHREF;\n  } else {\n    const supportedSchemes = ['file'\x2C 'data'];\n    if (experimentalNetworkImports) {\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\n    }\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\n  }\n  if (policy?.manifest) {\n    policy.manifest.assertIntegrity(parsed\x2C source);\n  }\n  return { responseURL\x2C source };\n}\n\n\n/**\n * Node.js default load hook.\n * @param {string} url\n * @param {object} context\n * @returns {object}\n */\nasync function defaultLoad(url\x2C context) {\n  let responseURL = url;\n  const { importAssertions } = context;\n  let {\n    format\x2C\n    source\x2C\n  } = context;\n\n  if (format == null) {\n    format = await defaultGetFormat(url\x2C context);\n  }\n\n  validateAssertions(url\x2C format\x2C importAssertions);\n\n  if (\n    format === 'builtin' ||\n    format === 'commonjs'\n  ) {\n    source = null;\n  } else if (source == null) {\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\n  }\n\n  return {\n    format\x2C\n    responseURL\x2C\n    source\x2C\n  };\n}\n\nmodule.exports = {\n  defaultLoad\x2C\n};\n
code-source-info,0x24759bde4d96,123,0,2745,C0O0C4O2745,,
code-creation,Function,10,76645,0x24759bde4fd6,263, node:internal/modules/esm/load:1:1,0x24759bde4d10,~
code-source-info,0x24759bde4fd6,123,0,2745,C0O0C58O25C64O47C70O70C76O137C79O137C84O116C90O212C93O212C98O189C104O279C107O279C112O260C117O332C120O332C125O316C131O445C134O445C143O489C150O445C152O571C155O571C159O571C161O663C164O663C169O663C174O646C180O719C183O719C188O750C193O701C199O776C202O776C207O768C213O866C216O866C221O892C226O811C232O830C238O926C242O926C244O2708C251O2729C257O2723C262O2744,,
code-creation,Eval,10,77207,0x24759bde658e,5, node:internal/fs/promises:1:1,0x24759bde5de0,~
script-source,124,node:internal/fs/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  NumberIsSafeInteger\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  SafeArrayIterator\x2C\n  SafePromisePrototypeFinally\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  F_OK\x2C\n  O_SYMLINK\x2C\n  O_WRONLY\x2C\n  S_IFMT\x2C\n  S_IFREG\n} = constants;\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\n\nconst {\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst { isArrayBufferView } = require('internal/util/types');\nconst { rimrafPromises } = require('internal/fs/rimraf');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  copyObject\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getStatsFromBinding\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validateRmOptions\x2C\n  validateRmdirOptions\x2C\n  validatePrimitiveStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst { opendir } = require('internal/fs/dir');\nconst {\n  parseFileMode\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst {\n  kEmptyObject\x2C\n  lazyDOMException\x2C\n  promisify\x2C\n} = require('internal/util');\nconst { EventEmitterMixin } = require('internal/event_target');\nconst { watch } = require('internal/fs/watchers');\nconst { isIterable } = require('internal/streams/utils');\nconst assert = require('internal/assert');\n\nconst kHandle = Symbol('kHandle');\nconst kFd = Symbol('kFd');\nconst kRefs = Symbol('kRefs');\nconst kClosePromise = Symbol('kClosePromise');\nconst kCloseResolve = Symbol('kCloseResolve');\nconst kCloseReject = Symbol('kCloseReject');\nconst kRef = Symbol('kRef');\nconst kUnref = Symbol('kUnref');\n\nconst { kUsePromises } = binding;\nconst {\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\n} = require('internal/worker/js_transferable');\n\nconst getDirectoryEntriesPromise = promisify(getDirents);\nconst validateRmOptionsPromise = promisify(validateRmOptions);\n\nlet cpPromises;\nfunction lazyLoadCpPromises() {\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\n}\n\n// Lazy loaded to avoid circular dependency.\nlet fsStreams;\nfunction lazyFsStreams() {\n  return fsStreams ??= require('internal/fs/streams');\n}\n\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\n  /**\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\n   */\n  constructor(filehandle) {\n    super();\n    this[kHandle] = filehandle;\n    this[kFd] = filehandle ? filehandle.fd : -1;\n\n    this[kRefs] = 1;\n    this[kClosePromise] = null;\n  }\n\n  getAsyncId() {\n    return this[kHandle].getAsyncId();\n  }\n\n  get fd() {\n    return this[kFd];\n  }\n\n  appendFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  chmod(mode) {\n    return fsCall(fchmod\x2C this\x2C mode);\n  }\n\n  chown(uid\x2C gid) {\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\n  }\n\n  datasync() {\n    return fsCall(fdatasync\x2C this);\n  }\n\n  sync() {\n    return fsCall(fsync\x2C this);\n  }\n\n  read(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  readv(buffers\x2C position) {\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\n  }\n\n  readFile(options) {\n    return fsCall(readFile\x2C this\x2C options);\n  }\n\n  stat(options) {\n    return fsCall(fstat\x2C this\x2C options);\n  }\n\n  truncate(len = 0) {\n    return fsCall(ftruncate\x2C this\x2C len);\n  }\n\n  utimes(atime\x2C mtime) {\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\n  }\n\n  write(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  writev(buffers\x2C position) {\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\n  }\n\n  writeFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  close = () => {\n    if (this[kFd] === -1) {\n      return PromiseResolve();\n    }\n\n    if (this[kClosePromise]) {\n      return this[kClosePromise];\n    }\n\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        this[kHandle].close()\x2C\n        () => { this[kClosePromise] = undefined; }\n      );\n    } else {\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        new Promise((resolve\x2C reject) => {\n          this[kCloseResolve] = resolve;\n          this[kCloseReject] = reject;\n        })\x2C () => {\n          this[kClosePromise] = undefined;\n          this[kCloseReject] = undefined;\n          this[kCloseResolve] = undefined;\n        }\n      );\n    }\n\n    this.emit('close');\n    return this[kClosePromise];\n  };\n\n  /**\n   * @typedef {import('./streams').ReadStream\n   * } ReadStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   end?: number;\n   *   highWaterMark?: number;\n   *   }} [options]\n   * @returns {ReadStream}\n   */\n  createReadStream(options = undefined) {\n    const { ReadStream } = lazyFsStreams();\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  /**\n   * @typedef {import('./streams').WriteStream\n   * } WriteStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   }} [options]\n   * @returns {WriteStream}\n   */\n  createWriteStream(options = undefined) {\n    const { WriteStream } = lazyFsStreams();\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  [kTransfer]() {\n    if (this[kClosePromise] || this[kRefs] > 1) {\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\n                             'DataCloneError');\n    }\n\n    const handle = this[kHandle];\n    this[kFd] = -1;\n    this[kHandle] = null;\n    this[kRefs] = 0;\n\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/fs/promises:FileHandle'\n    };\n  }\n\n  [kTransferList]() {\n    return [ this[kHandle] ];\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kFd] = handle.fd;\n  }\n\n  [kRef]() {\n    this[kRefs]++;\n  }\n\n  [kUnref]() {\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      PromisePrototypeThen(\n        this[kHandle].close()\x2C\n        this[kCloseResolve]\x2C\n        this[kCloseReject]\n      );\n    }\n  }\n}\n\nasync function fsCall(fn\x2C handle\x2C ...args) {\n  assert(handle[kRefs] !== undefined\x2C\n         'handle must be an instance of FileHandle');\n\n  if (handle.fd === -1) {\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error('file closed');\n    err.code = 'EBADF';\n    err.syscall = fn.name;\n    throw err;\n  }\n\n  try {\n    handle[kRef]();\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\n  } finally {\n    handle[kUnref]();\n  }\n}\n\nfunction checkAborted(signal) {\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n}\n\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\n  checkAborted(signal);\n  if (isCustomIterable(data)) {\n    for await (const buf of data) {\n      checkAborted(signal);\n      const toWrite =\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\n      let remaining = toWrite.byteLength;\n      while (remaining > 0) {\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\n        const { bytesWritten } = await write(\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\n        remaining -= bytesWritten;\n        checkAborted(signal);\n      }\n    }\n    return;\n  }\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\n  let remaining = data.byteLength;\n  if (remaining === 0) return;\n  do {\n    checkAborted(signal);\n    const { bytesWritten } =\n      await write(filehandle\x2C data\x2C 0\x2C\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\n    remaining -= bytesWritten;\n    data = new Uint8Array(\n      data.buffer\x2C\n      data.byteOffset + bytesWritten\x2C\n      data.byteLength - bytesWritten\n    );\n  } while (remaining > 0);\n}\n\nasync function readFileHandle(filehandle\x2C options) {\n  const signal = options?.signal;\n\n  checkAborted(signal);\n\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\n\n  checkAborted(signal);\n\n  let size;\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\n    size = statFields[8/* size */];\n  } else {\n    size = 0;\n  }\n\n  if (size > kIoMaxLength)\n    throw new ERR_FS_FILE_TOO_LARGE(size);\n\n  let endOfFile = false;\n  let totalRead = 0;\n  const noSize = size === 0;\n  const buffers = [];\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\n  do {\n    checkAborted(signal);\n    let buffer;\n    let offset;\n    let length;\n    if (noSize) {\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\n      offset = 0;\n      length = kReadFileUnknownBufferLength;\n    } else {\n      buffer = fullBuffer;\n      offset = totalRead;\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\n    }\n\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\n                                          length\x2C -1\x2C kUsePromises)) || 0;\n    totalRead += bytesRead;\n    endOfFile = bytesRead === 0 || totalRead === size;\n    if (noSize && bytesRead > 0) {\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\n    }\n  } while (!endOfFile);\n\n  let result;\n  if (size > 0) {\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\n  } else {\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\n                                                               totalRead);\n  }\n\n  return options.encoding ? result.toString(options.encoding) : result;\n}\n\n// All of the functions are defined as async in order to ensure that errors\n// thrown cause promise rejections rather than being thrown synchronously.\nasync function access(path\x2C mode = F_OK) {\n  path = getValidatedPath(path);\n\n  mode = getValidMode(mode\x2C 'access');\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\n                        kUsePromises);\n}\n\nasync function cp(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\n}\n\nasync function copyFile(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  mode = getValidMode(mode\x2C 'copyFile');\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\n                          pathModule.toNamespacedPath(dest)\x2C\n                          mode\x2C\n                          kUsePromises);\n}\n\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\n// fsPromises.open() uses the fs.FileHandle class.\nasync function open(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  return new FileHandle(\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\n                                 flagsNumber\x2C mode\x2C kUsePromises));\n}\n\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\n  let buffer = bufferOrParams;\n  if (!isArrayBufferView(buffer)) {\n    // This is fh.read(params)\n    ({\n      buffer = Buffer.alloc(16384)\x2C\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = bufferOrParams ?? kEmptyObject);\n\n    validateBuffer(buffer);\n  }\n\n  if (offset !== null && typeof offset === 'object') {\n    // This is fh.read(buffer\x2C options)\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offset);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0)\n    return { bytesRead: length\x2C buffer };\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (!NumberIsSafeInteger(position))\n    position = -1;\n\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\n                                        position\x2C kUsePromises)) || 0;\n\n  return { bytesRead\x2C buffer };\n}\n\nasync function readv(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                               kUsePromises)) || 0;\n  return { bytesRead\x2C buffers };\n}\n\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  if (buffer?.byteLength === 0)\n    return { bytesWritten: 0\x2C buffer };\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    const bytesWritten =\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\n                                 length\x2C position\x2C kUsePromises)) || 0;\n    return { bytesWritten\x2C buffer };\n  }\n\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\n  validateEncoding(buffer\x2C length);\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\n                                                  length\x2C kUsePromises)) || 0;\n  return { bytesWritten\x2C buffer };\n}\n\nasync function writev(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  if (buffers.length === 0) {\n    return { bytesWritten: 0\x2C buffers };\n  }\n\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                                   kUsePromises)) || 0;\n  return { bytesWritten\x2C buffers };\n}\n\nasync function rename(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                        pathModule.toNamespacedPath(newPath)\x2C\n                        kUsePromises);\n}\n\nasync function truncate(path\x2C len = 0) {\n  const fd = await open(path\x2C 'r+');\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\n}\n\nasync function ftruncate(handle\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\n}\n\nasync function rm(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\n  return rimrafPromises(path\x2C options);\n}\n\nasync function rmdir(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = validateRmdirOptions(options);\n\n  if (options.recursive) {\n    emitRecursiveRmdirWarning();\n    const stats = await stat(path);\n    if (stats.isDirectory()) {\n      return rimrafPromises(path\x2C options);\n    }\n  }\n\n  return binding.rmdir(path\x2C kUsePromises);\n}\n\nasync function fdatasync(handle) {\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\n}\n\nasync function fsync(handle) {\n  return binding.fsync(handle.fd\x2C kUsePromises);\n}\n\nasync function mkdir(path\x2C options) {\n  if (typeof options === 'number' || typeof options === 'string') {\n    options = { mode: options };\n  }\n  const {\n    recursive = false\x2C\n    mode = 0o777\n  } = options || kEmptyObject;\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\n                       kUsePromises);\n}\n\nasync function readdir(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                       options.encoding\x2C\n                                       !!options.withFileTypes\x2C\n                                       kUsePromises);\n  return options.withFileTypes ?\n    getDirectoryEntriesPromise(path\x2C result) :\n    result;\n}\n\nasync function readlink(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                          options.encoding\x2C kUsePromises);\n}\n\nasync function symlink(target\x2C path\x2C type_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                         pathModule.toNamespacedPath(path)\x2C\n                         stringToSymlinkType(type)\x2C\n                         kUsePromises);\n}\n\nasync function fstat(handle\x2C options = { bigint: false }) {\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function lstat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                                     options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function stat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\n                                    options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function link(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                      pathModule.toNamespacedPath(newPath)\x2C\n                      kUsePromises);\n}\n\nasync function unlink(path) {\n  path = getValidatedPath(path);\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\n}\n\nasync function fchmod(handle\x2C mode) {\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\n}\n\nasync function chmod(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\n}\n\nasync function lchmod(path\x2C mode) {\n  if (O_SYMLINK === undefined)\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\n\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\n}\n\nasync function lchown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\n                        uid\x2C gid\x2C kUsePromises);\n}\n\nasync function fchown(handle\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\n}\n\nasync function chown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\n                       uid\x2C gid\x2C kUsePromises);\n}\n\nasync function utimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                        toUnixTimestamp(atime)\x2C\n                        toUnixTimestamp(mtime)\x2C\n                        kUsePromises);\n}\n\nasync function futimes(handle\x2C atime\x2C mtime) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\n}\n\nasync function lutimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                         toUnixTimestamp(atime)\x2C\n                         toUnixTimestamp(mtime)\x2C\n                         kUsePromises);\n}\n\nasync function realpath(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function mkdtemp(prefix\x2C options) {\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix);\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function writeFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  validateAbortSignal(options.signal);\n  if (path instanceof FileHandle)\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C options.mode);\n  return SafePromisePrototypeFinally(\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\n}\n\nfunction isCustomIterable(obj) {\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\n}\n\nasync function appendFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n  options = copyObject(options);\n  options.flag = options.flag || 'a';\n  return writeFile(path\x2C data\x2C options);\n}\n\nasync function readFile(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const flag = options.flag || 'r';\n\n  if (path instanceof FileHandle)\n    return readFileHandle(path\x2C options);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C 0o666);\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\n}\n\nmodule.exports = {\n  exports: {\n    access\x2C\n    copyFile\x2C\n    cp\x2C\n    open\x2C\n    opendir: promisify(opendir)\x2C\n    rename\x2C\n    truncate\x2C\n    rm\x2C\n    rmdir\x2C\n    mkdir\x2C\n    readdir\x2C\n    readlink\x2C\n    symlink\x2C\n    lstat\x2C\n    stat\x2C\n    link\x2C\n    unlink\x2C\n    chmod\x2C\n    lchmod\x2C\n    lchown\x2C\n    chown\x2C\n    utimes\x2C\n    lutimes\x2C\n    realpath\x2C\n    mkdtemp\x2C\n    writeFile\x2C\n    appendFile\x2C\n    readFile\x2C\n    watch\x2C\n    constants\x2C\n  }\x2C\n\n  FileHandle\x2C\n  kRef\x2C\n  kUnref\x2C\n};\n
code-source-info,0x24759bde658e,124,0,23391,C0O0C4O23391,,
code-creation,Function,10,78327,0x24759bde8cde,1682, node:internal/fs/promises:1:1,0x24759bde6508,~
code-source-info,0x24759bde8cde
code-creation,Function,10,78467,0x24759bde969e,27,<instance_members_initializer> node:internal/fs/promises:195:3,0x24759bde7b68,~
code-source-info,0x24759bde969e,124,4267,5065,C0O4267C12O4275C26O5065,,
tick,0x7f407774b7e0,78610,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x24759bde508d,0x7f4060044ae0,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
tick,0x7f40773a70af,78660,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x24759bde508d,0x7f4060044ae0,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,78982,0x24759bdec20e,5, node:internal/fs/rimraf:1:1,0x24759bdebea8,~
script-source,125,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\n// modified in the following ways:\n// - Use of the assert module has been replaced with core's error system.\n// - All code related to the glob dependency has been removed.\n// - Bring your own custom fs module is not currently supported.\n// - Some basic code cleanup.\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst fs = require('fs');\nconst {\n  chmod\x2C\n  chmodSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  unlink\x2C\n  unlinkSync\n} = fs;\nconst { sep } = require('path');\nconst { setTimeout } = require('timers');\nconst { sleep } = require('internal/util');\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\nconst retryErrorCodes = new SafeSet(\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\nconst isWindows = process.platform === 'win32';\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\nconst readdirEncoding = 'buffer';\nconst separator = Buffer.from(sep);\n\n\nfunction rimraf(path\x2C options\x2C callback) {\n  let retries = 0;\n\n  _rimraf(path\x2C options\x2C function CB(err) {\n    if (err) {\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\n        retries++;\n        const delay = retries * options.retryDelay;\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\n      }\n\n      // The file is already gone.\n      if (err.code === 'ENOENT')\n        err = null;\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rimraf(path\x2C options\x2C callback) {\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\n  // it's not a directory.\n  lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (err.code === 'ENOENT')\n        return callback(null);\n\n      // Windows can EPERM on stat.\n      if (isWindows && err.code === 'EPERM')\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\n    } else if (stats.isDirectory()) {\n      return _rmdir(path\x2C options\x2C err\x2C callback);\n    }\n\n    unlink(path\x2C (err) => {\n      if (err) {\n        if (err.code === 'ENOENT')\n          return callback(null);\n        if (err.code === 'EISDIR')\n          return _rmdir(path\x2C options\x2C err\x2C callback);\n        if (err.code === 'EPERM') {\n          return epermHandler(path\x2C options\x2C err\x2C callback);\n        }\n      }\n\n      return callback(err);\n    });\n  });\n}\n\n\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\n  chmod(path\x2C 0o666\x2C (err) => {\n    if (err)\n      return callback(err.code === 'ENOENT' ? null : originalErr);\n\n    stat(path\x2C (err\x2C stats) => {\n      if (err)\n        return callback(err.code === 'ENOENT' ? null : originalErr);\n\n      if (stats.isDirectory())\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\n      else\n        unlink(path\x2C callback);\n    });\n  });\n}\n\n\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\n  rmdir(path\x2C (err) => {\n    if (err) {\n      if (notEmptyErrorCodes.has(err.code))\n        return _rmchildren(path\x2C options\x2C callback);\n      if (err.code === 'ENOTDIR')\n        return callback(originalErr);\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rmchildren(path\x2C options\x2C callback) {\n  const pathBuf = Buffer.from(path);\n\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\n    if (err)\n      return callback(err);\n\n    let numFiles = files.length;\n\n    if (numFiles === 0)\n      return rmdir(path\x2C callback);\n\n    let done = false;\n\n    ArrayPrototypeForEach(files\x2C (child) => {\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n      rimraf(childPath\x2C options\x2C (err) => {\n        if (done)\n          return;\n\n        if (err) {\n          done = true;\n          return callback(err);\n        }\n\n        numFiles--;\n        if (numFiles === 0)\n          rmdir(path\x2C callback);\n      });\n    });\n  });\n}\n\n\nfunction rimrafPromises(path\x2C options) {\n  return new Promise((resolve\x2C reject) => {\n    rimraf(path\x2C options\x2C (err) => {\n      if (err)\n        return reject(err);\n\n      resolve();\n    });\n  });\n}\n\n\nfunction rimrafSync(path\x2C options) {\n  let stats;\n\n  try {\n    stats = lstatSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    // Windows can EPERM on stat.\n    if (isWindows && err.code === 'EPERM')\n      fixWinEPERMSync(path\x2C options\x2C err);\n  }\n\n  try {\n    // SunOS lets the root user unlink directories.\n    if (stats?.isDirectory())\n      _rmdirSync(path\x2C options\x2C null);\n    else\n      _unlinkSync(path\x2C options);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'EPERM')\n      return epermHandlerSync(path\x2C options\x2C err);\n    if (err.code !== 'EISDIR')\n      throw err;\n\n    _rmdirSync(path\x2C options\x2C err);\n  }\n}\n\n\nfunction _unlinkSync(path\x2C options) {\n  const tries = options.maxRetries + 1;\n\n  for (let i = 1; i <= tries; i++) {\n    try {\n      return unlinkSync(path);\n    } catch (err) {\n      // Only sleep if this is not the last try\x2C and the delay is greater\n      // than zero\x2C and an error was encountered that warrants a retry.\n      if (retryErrorCodes.has(err.code) &&\n          i < tries &&\n          options.retryDelay > 0) {\n        sleep(i * options.retryDelay);\n      }\n    }\n  }\n}\n\n\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\n  try {\n    rmdirSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'ENOTDIR')\n      throw originalErr;\n\n    if (notEmptyErrorCodes.has(err.code)) {\n      // Removing failed. Try removing all children and then retrying the\n      // original removal. Windows has a habit of not closing handles promptly\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\n      // around that issue by retrying on Windows.\n      const pathBuf = Buffer.from(path);\n\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n        rimrafSync(childPath\x2C options);\n      });\n\n      const tries = options.maxRetries + 1;\n\n      for (let i = 1; i <= tries; i++) {\n        try {\n          return fs.rmdirSync(path);\n        } catch (err) {\n          // Only sleep if this is not the last try\x2C and the delay is greater\n          // than zero\x2C and an error was encountered that warrants a retry.\n          if (retryErrorCodes.has(err.code) &&\n              i < tries &&\n              options.retryDelay > 0) {\n            sleep(i * options.retryDelay);\n          }\n        }\n      }\n    }\n  }\n}\n\n\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\n  try {\n    chmodSync(path\x2C 0o666);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    throw originalErr;\n  }\n\n  let stats;\n\n  try {\n    stats = statSync(path\x2C { throwIfNoEntry: false });\n  } catch {\n    throw originalErr;\n  }\n\n  if (stats === undefined) return;\n\n  if (stats.isDirectory())\n    _rmdirSync(path\x2C options\x2C originalErr);\n  else\n    _unlinkSync(path\x2C options);\n}\n\n\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\n
code-source-info,0x24759bdec20e,125,0,7095,C0O0C4O7095,,
code-creation,Function,10,79320,0x24759bdec80e,409, node:internal/fs/rimraf:1:1,0x24759bdec188,~
code-source-info,0x24759bdec80e,125,0,7095,C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O642C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O662C257O662C262O654C267O702C270O702C275O687C281O739C284O739C289O729C295O792C302O792C307O792C309O863C316O863C321O863C323O958C330O967C333O950C335O1001C345O1001C347O1060C357O1060C359O1126C361O1126C363O1154C366O1161C371O1161C376O1154C378O7038C385O7057C391O7065C397O7081C403O7053C408O7094,,
code-creation,LazyCompile,10,79529,0x24759bded6a6,188,from node:buffer:301:28,0x1d49834b4600,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\n} = internalBinding('buffer');\nconst {\n  getOwnNonIndexProperties\x2C\n  propertyFilter: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\n  }\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\n} = require('internal/util/inspect');\nconst { encodings } = internalBinding('string_decoder');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_UNKNOWN_ENCODING\n  }\x2C\n  genericNodeError\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateNumber\x2C\n  validateInteger\x2C\n  validateString\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\n} = require('internal/buffer');\n\nconst {\n  Blob\x2C\n  resolveObjectURL\x2C\n} = require('internal/blob');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    __proto__: null\x2C\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\x2C\n  MAX_STRING_LENGTH: {\n    __proto__: null\x2C\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nconst encodingsMap = ObjectCreate(null);\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  if (sourceStart > source.length) {\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\n                               `<= ${source.length}`\x2C\n                               sourceStart);\n  }\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\n  );\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n// The 'assertSize' method will remove itself from the callstack when an error\n// occurs. This is done simply to keep the internal details of the\n// implementation from bleeding out to users.\nconst assertSize = hideStackFrames((size) => {\n  validateNumber(size\x2C 'size');\n  if (!(size >= 0 && size <= kMaxLength)) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\n  }\n});\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  assertSize(size);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  assertSize(size);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  assertSize(size);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(length) {\n  assertSize(length);\n  return createUnsafeBuffer(length);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n    encoding = undefined;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\n  }\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\n    );\n  }\n\n  const len = string.length;\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\n  if (!mustMatch && len === 0)\n    return 0;\n\n  if (!encoding)\n    return (mustMatch ? -1 : byteLengthUtf8(string));\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    return (mustMatch ? -1 : byteLengthUtf8(string));\n  return ops.byteLength(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n\n  if (this.byteLength !== otherBuffer.byteLength)\n    return false;\n\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = ObjectCreate(null);\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.subarray = function subarray(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  return this.subarray(start\x2C end);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    const err = genericNodeError(\n      `Unable to transcode Buffer [${code}]`\x2C\n      { code: code\x2C errno: result }\n    );\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (input[n].charCodeAt(0) > 0xff)\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  const buf = Buffer.from(input\x2C 'latin1');\n  return buf.toString('base64');\n}\n\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\nconst kForgivingBase64AllowedChars = [\n  // ASCII whitespace\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\n\n  // Uppercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\n\n  // Lowercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\n\n  // Decimal digits\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\n\n  0x2B\x2C // +\n  0x2F\x2C // /\n  0x3D\x2C // =\n];\n\nfunction atob(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (!ArrayPrototypeIncludes(kForgivingBase64AllowedChars\x2C\n                                StringPrototypeCharCodeAt(input\x2C n)))\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  return Buffer.from(input\x2C 'base64').toString('latin1');\n}\n\nmodule.exports = {\n  Blob\x2C\n  resolveObjectURL\x2C\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) { INSPECT_MAX_BYTES = val; }\n  }\n});\n
code-source-info,0x24759bded6a6,24,8546,9497,C3O8584C9O8619C12O8626C17O8662C18O8666C28O8721C33O8725C39O8756C51O8763C56O8812C57O8840C63O8857C68O8857C73O8872C78O8911C95O9002C104O9009C109O9049C110O9071C113O9071C118O9094C120O9107C122O9116C123O9122C125O9139C127O9138C134O9200C136O9206C138O9205C145O9224C151O9242C155O9287C158O9294C163O9334C164O9356C182O9362C187O9356,,
tick,0x7f407732864b,80995,0,0x0,3,0x11d7ee0,0x24759bdec981,0x7f4060044ae0,0x7f40600432df,0x24759bde8fa6,0x7f4060044ae0,0x7f40600432df,0x24759bde508d,0x7f4060044ae0,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
tick,0x7f407731c49c,81060,0,0x0,3,0x11d7ee0,0x24759bdec981,0x7f4060044ae0,0x7f40600432df,0x24759bde8fa6,0x7f4060044ae0,0x7f40600432df,0x24759bde508d,0x7f4060044ae0,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,81105,0x24759bdf01ae,110,fromString node:buffer:437:20,0x1d49834b49e8,~
code-source-info,0x24759bdf01ae,24,12597,13031,C0O12624C2O12631C8O12676C14O12683C19O12707C25O12714C30O12727C35O12734C40O12751C41O12756C46O12774C51O12784C56O12821C59O12827C64O12857C66O12886C73O12892C78O12886C79O12943C85O12950C90O12963C95O12970C100O12987C101O12994C104O13001C109O13029,,
code-creation,LazyCompile,10,81220,0x24759bdf0366,177,fromStringFast node:buffer:418:24,0x1d49834b4948,~
code-source-info,0x24759bdf0366,24,12053,12576,C0O12090C5O12090C11O12113C14O12135C18O12144C21O12124C26O12156C31O12192C36O12163C41O12205C42O12209C44O12223C49O12234C51O12232C54O12220C59O12251C62O12251C65O12275C72O12290C77O12301C85O12275C91O12343C110O12343C116O12374C118O12385C123O12469C130O12488C135O12499C143O12473C149O12526C156O12540C162O12537C168O12550C171O12550C174O12565C176O12574,,
code-creation,LazyCompile,10,81303,0x24759bdf0556,36,FastBuffer node:internal/buffer:958:14,0x3e83b61426a8,~
code-source-info,0x24759bdf0556,25,26364,26453,C3O26407C7O26441C20O26407C35O26452,,
code-creation,LazyCompile,10,81351,0x24759bdf0656,23,write node:buffer:598:12,0x1d49834b4d58,~
code-source-info,0x24759bdf0656,24,16665,16729,C0O16699C17O16699C22O16729,,
code-creation,LazyCompile,10,81410,0x24759bdf0746,42,alignPool node:buffer:163:19,0x1d49834b4380,~
code-source-info,0x24759bdf0746,24,4119,4223,C0O4153C4O4168C9O4181C19O4192C25O4204C34O4214C41O4222,,
code-creation,LazyCompile,10,81589,0x24759bdf0b06,251,promisify node:internal/util:324:19,0x2ac22107fe90,~
script-source,15,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  getHiddenValue\x2C\n  setHiddenValue\x2C\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\n  sleep: _sleep\x2C\n  toUSVString: _toUSVString\x2C\n} = internalBinding('util');\nconst { isNativeError } = internalBinding('types');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nconst unpairedSurrogateRe =\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\nfunction toUSVString(val) {\n  const str = `${val}`;\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\n  // slower than `unpairedSurrogateRe.exec()`.\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\n  if (!match)\n    return str;\n  return _toUSVString(str\x2C match.index);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  let warned = false;\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) ||\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\n    return;\n\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n          `${enc}`.toLowerCase() === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n          `${enc}`.toLowerCase() === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n        `${enc}`.toLowerCase() === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n          `${enc}`.toLowerCase() === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature. This feature could ` +\n       'change at any time';\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = ObjectCreate(null);\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      ReflectApply(original\x2C this\x2C args);\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n  });\n  return ObjectDefineProperties(\n    fn\x2C\n    ObjectGetOwnPropertyDescriptors(original)\n  );\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n      // If a filename does not start with / or contain \\\x2C\n      // it's likely from Node.js core.\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\n        continue;\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\n    }\n  }\n  return false;\n}\n\nfunction once(callback) {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    ReflectApply(callback\x2C this\x2C args);\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\n  });\n}\n\nlet DOMException;\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\n  if (DOMException === undefined)\n    DOMException = internalBinding('messaging').DOMException;\n  return new DOMException(message\x2C name);\n});\n\nfunction structuredClone(value) {\n  const {\n    DefaultSerializer\x2C\n    DefaultDeserializer\x2C\n  } = require('v8');\n  const ser = new DefaultSerializer();\n  ser._getDataCloneError = hideStackFrames((message) =>\n    lazyDOMException(message\x2C 'DataCloneError'));\n  ser.writeValue(value);\n  const serialized = ser.releaseBuffer();\n\n  const des = new DefaultDeserializer(serialized);\n  return des.readValue();\n}\n\nconst kEnumerableProperty = ObjectCreate(null);\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\n\nmodule.exports = {\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  exposeInterface\x2C\n  filterDuplicateStrings\x2C\n  getConstructorOf\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  sleep\x2C\n  spliceOne\x2C\n  structuredClone\x2C\n  toUSVString\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n};\n
code-source-info,0x24759bdf0b06,15,8873,10421,C0O8873C17O8935C25O8975C33O8999C38O8978C55O9035C68O9035C73O9078C80O9091C82O9090C87O9135C94O9144C96O9143C100O9176C110O9176C115O9228C126O9260C136O9324C143O9235C148O9390C149O9553C156O9562C158O9561C161O9553C163O10117C174O10142C180O10142C185O10117C190O10178C201O10203C211O10263C218O10178C223O10330C234O10373C240O10373C245O10337C250O10419,,
tick,0x7f407731c473,82290,0,0x0,3,0x11d7ee0,0x24759bde9196,0x7f4060044ae0,0x7f40600432df,0x24759bde508d,0x7f4060044ae0,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,82413,0x24759bdf2526,65,EventEmitterMixin node:internal/event_target:1020:27,0xe0292117f8,~
script-source,44,node:internal/event_target,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ReflectApply\x2C\n  SafeArrayIterator\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SafeWeakSet\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_EVENT_RECURSION\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_INVALID_THIS\x2C\n  }\n} = require('internal/errors');\nconst { validateObject\x2C validateString } = require('internal/validators');\n\nconst {\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('util');\n\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\n\nconst EventEmitter = require('events');\nconst {\n  kMaxEventTargetListeners\x2C\n  kMaxEventTargetListenersWarned\x2C\n} = EventEmitter;\n\nconst kEvents = Symbol('kEvents');\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\nconst kStop = Symbol('kStop');\nconst kTarget = Symbol('kTarget');\nconst kHandlers = Symbol('khandlers');\nconst kWeakHandler = Symbol('kWeak');\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kCreateEvent = Symbol('kCreateEvent');\nconst kNewListener = Symbol('kNewListener');\nconst kRemoveListener = Symbol('kRemoveListener');\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\nconst kTrustEvent = Symbol('kTrustEvent');\n\nconst { now } = require('internal/perf/utils');\n\n// TODO(joyeecheung): V8 snapshot does not support instance member\n// initializers for now:\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\nconst kType = Symbol('type');\nconst kDefaultPrevented = Symbol('defaultPrevented');\nconst kCancelable = Symbol('cancelable');\nconst kTimestamp = Symbol('timestamp');\nconst kBubbles = Symbol('bubbles');\nconst kComposed = Symbol('composed');\nconst kPropagationStopped = Symbol('propagationStopped');\nconst kDetail = Symbol('detail');\n\nconst isTrustedSet = new SafeWeakSet();\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return isTrustedSet.has(this);\n  }\n}\x2C 'isTrusted').get;\n\nfunction isEvent(value) {\n  return typeof value?.[kType] === 'string';\n}\n\nclass Event {\n  /**\n   * @param {string} type\n   * @param {{\n   *   bubbles?: boolean\x2C\n   *   cancelable?: boolean\x2C\n   *   composed?: boolean\x2C\n   * }} [options]\n   */\n  constructor(type\x2C options = kEmptyObject) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    validateObject(options\x2C 'options');\n    const { bubbles\x2C cancelable\x2C composed } = options;\n    this[kCancelable] = !!cancelable;\n    this[kBubbles] = !!bubbles;\n    this[kComposed] = !!composed;\n\n    this[kType] = `${type}`;\n    this[kDefaultPrevented] = false;\n    this[kTimestamp] = now();\n    this[kPropagationStopped] = false;\n    if (options?.[kTrustEvent]) {\n      isTrustedSet.add(this);\n    }\n\n    // isTrusted is special (LegacyUnforgeable)\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\n      __proto__: null\x2C\n      get: isTrusted\x2C\n      enumerable: true\x2C\n      configurable: false\n    });\n    this[kTarget] = null;\n    this[kIsBeingDispatched] = false;\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({\n      type: this[kType]\x2C\n      defaultPrevented: this[kDefaultPrevented]\x2C\n      cancelable: this[kCancelable]\x2C\n      timeStamp: this[kTimestamp]\x2C\n    }\x2C opts)}`;\n  }\n\n  stopImmediatePropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kStop] = true;\n  }\n\n  preventDefault() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kDefaultPrevented] = true;\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get target() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get currentTarget() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get srcElement() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {string}\n   */\n  get type() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kType];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get cancelable() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kCancelable];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get defaultPrevented() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kCancelable] && this[kDefaultPrevented];\n  }\n\n  /**\n   * @type {number}\n   */\n  get timeStamp() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTimestamp];\n  }\n\n\n  // The following are non-op and unused properties/methods from Web API Event.\n  // These are not supported in Node.js and are provided purely for\n  // API completeness.\n  /**\n   * @returns {EventTarget[]}\n   */\n  composedPath() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get returnValue() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return !this.defaultPrevented;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get bubbles() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kBubbles];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get composed() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kComposed];\n  }\n\n  /**\n   * @type {number}\n   */\n  get eventPhase() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get cancelBubble() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kPropagationStopped];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  set cancelBubble(value) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    if (value) {\n      this.stopPropagation();\n    }\n  }\n\n  stopPropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kPropagationStopped] = true;\n  }\n\n  static NONE = 0;\n  static CAPTURING_PHASE = 1;\n  static AT_TARGET = 2;\n  static BUBBLING_PHASE = 3;\n}\n\nObjectDefineProperties(\n  Event.prototype\x2C {\n    [SymbolToStringTag]: {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: 'Event'\x2C\n    }\x2C\n    stopImmediatePropagation: kEnumerableProperty\x2C\n    preventDefault: kEnumerableProperty\x2C\n    target: kEnumerableProperty\x2C\n    currentTarget: kEnumerableProperty\x2C\n    srcElement: kEnumerableProperty\x2C\n    type: kEnumerableProperty\x2C\n    cancelable: kEnumerableProperty\x2C\n    defaultPrevented: kEnumerableProperty\x2C\n    timeStamp: kEnumerableProperty\x2C\n    composedPath: kEnumerableProperty\x2C\n    returnValue: kEnumerableProperty\x2C\n    bubbles: kEnumerableProperty\x2C\n    composed: kEnumerableProperty\x2C\n    eventPhase: kEnumerableProperty\x2C\n    cancelBubble: kEnumerableProperty\x2C\n    stopPropagation: kEnumerableProperty\x2C\n  });\n\nfunction isCustomEvent(value) {\n  return isEvent(value) && (value?.[kDetail] !== undefined);\n}\n\nclass CustomEvent extends Event {\n  /**\n   * @constructor\n   * @param {string} type\n   * @param {{\n   *   bubbles?: boolean\x2C\n   *   cancelable?: boolean\x2C\n   *   composed?: boolean\x2C\n   *   detail?: any\x2C\n   * }} [options]\n   */\n  constructor(type\x2C options = kEmptyObject) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    super(type\x2C options);\n    this[kDetail] = options?.detail ?? null;\n  }\n\n  /**\n   * @type {any}\n   */\n  get detail() {\n    if (!isCustomEvent(this))\n      throw new ERR_INVALID_THIS('CustomEvent');\n    return this[kDetail];\n  }\n}\n\nObjectDefineProperties(CustomEvent.prototype\x2C {\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'CustomEvent'\x2C\n  }\x2C\n  detail: kEnumerableProperty\x2C\n});\n\nclass NodeCustomEvent extends Event {\n  constructor(type\x2C options) {\n    super(type\x2C options);\n    if (options?.detail) {\n      this.detail = options.detail;\n    }\n  }\n}\n\n// Weak listener cleanup\n// This has to be lazy for snapshots to work\nlet weakListenersState = null;\n// The resource needs to retain the callback so that it doesn't\n// get garbage collected now that it's weak.\nlet objectToWeakListenerMap = null;\nfunction weakListeners() {\n  weakListenersState ??= new SafeFinalizationRegistry(\n    (listener) => listener.remove()\n  );\n  objectToWeakListenerMap ??= new SafeWeakMap();\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\n}\n\n// The listeners for an EventTarget are maintained as a linked list.\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\n// use of capture or bubbling\x2C in order to be spec compliant we have to\n// take on the additional complexity of supporting it. Fortunately\x2C using\n// the linked list makes dispatching faster\x2C even if adding/removing is\n// slower.\nclass Listener {\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n              isNodeStyleListener\x2C weak) {\n    this.next = undefined;\n    if (previous !== undefined)\n      previous.next = this;\n    this.previous = previous;\n    this.listener = listener;\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\n    this.once = once;\n    this.capture = capture;\n    this.passive = passive;\n    this.isNodeStyleListener = isNodeStyleListener;\n    this.removed = false;\n    this.weak = Boolean(weak); // Don't retain the object\n\n    if (this.weak) {\n      this.callback = new SafeWeakRef(listener);\n      weakListeners().registry.register(listener\x2C this\x2C this);\n      // Make the retainer retain the listener in a WeakMap\n      weakListeners().map.set(weak\x2C listener);\n      this.listener = this.callback;\n    } else if (typeof listener === 'function') {\n      this.callback = listener;\n      this.listener = listener;\n    } else {\n      this.callback = async (...args) => {\n        if (listener.handleEvent)\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\n      };\n      this.listener = listener;\n    }\n  }\n\n  same(listener\x2C capture) {\n    const myListener = this.weak ? this.listener.deref() : this.listener;\n    return myListener === listener && this.capture === capture;\n  }\n\n  remove() {\n    if (this.previous !== undefined)\n      this.previous.next = this.next;\n    if (this.next !== undefined)\n      this.next.previous = this.previous;\n    this.removed = true;\n    if (this.weak)\n      weakListeners().registry.unregister(this);\n  }\n}\n\nfunction initEventTarget(self) {\n  self[kEvents] = new SafeMap();\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\n  self[kMaxEventTargetListenersWarned] = false;\n}\n\nclass EventTarget {\n  // Used in checking whether an object is an EventTarget. This is a well-known\n  // symbol as EventTarget may be used cross-realm.\n  // Ref: https://github.com/nodejs/node/pull/33661\n  static [kIsEventTarget] = true;\n\n  constructor() {\n    initEventTarget(this);\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    if (this[kMaxEventTargetListeners] > 0 &&\n        size > this[kMaxEventTargetListeners] &&\n        !this[kMaxEventTargetListenersWarned]) {\n      this[kMaxEventTargetListenersWarned] = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventTarget memory leak detected. ' +\n                          `${size} ${type} listeners ` +\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\n                          'events.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.target = this;\n      w.type = type;\n      w.count = size;\n      process.emitWarning(w);\n    }\n  }\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\n\n  /**\n   * @callback EventTargetCallback\n   * @param {Event} event\n   */\n\n  /**\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\n   */\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   *   once?: boolean\x2C\n   *   passive?: boolean\x2C\n   *   signal?: AbortSignal\n   * }} [options]\n   */\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (arguments.length < 2)\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\n\n    // We validateOptions before the validateListener check because the spec\n    // requires us to hit getters.\n    const {\n      once\x2C\n      capture\x2C\n      passive\x2C\n      signal\x2C\n      isNodeStyleListener\x2C\n      weak\x2C\n    } = validateEventListenerOptions(options);\n\n    if (!validateEventListener(listener)) {\n      // The DOM silently allows passing undefined as a second argument\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error(`addEventListener called with ${listener}` +\n                          ' which has no effect.');\n      w.name = 'AddEventListenerArgumentTypeWarning';\n      w.target = this;\n      w.type = type;\n      process.emitWarning(w);\n      return;\n    }\n    type = String(type);\n\n    if (signal) {\n      if (signal.aborted) {\n        return;\n      }\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\n      // not prevent the event target from GC.\n      signal.addEventListener('abort'\x2C () => {\n        this.removeEventListener(type\x2C listener\x2C options);\n      }\x2C { once: true\x2C [kWeakHandler]: this });\n    }\n\n    let root = this[kEvents].get(type);\n\n    if (root === undefined) {\n      root = { size: 1\x2C next: undefined };\n      // This is the first handler in our linked list.\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                   isNodeStyleListener\x2C weak);\n      this[kNewListener](\n        root.size\x2C\n        type\x2C\n        listener\x2C\n        once\x2C\n        capture\x2C\n        passive\x2C\n        weak);\n      this[kEvents].set(type\x2C root);\n      return;\n    }\n\n    let handler = root.next;\n    let previous = root;\n\n    // We have to walk the linked list to see if we have a match\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\n      previous = handler;\n      handler = handler.next;\n    }\n\n    if (handler !== undefined) { // Duplicate! Ignore\n      return;\n    }\n\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                 isNodeStyleListener\x2C weak);\n    root.size++;\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   */\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (!validateEventListener(listener))\n      return;\n\n    type = String(type);\n    const capture = options?.capture === true;\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return;\n\n    let handler = root.next;\n    while (handler !== undefined) {\n      if (handler.same(listener\x2C capture)) {\n        handler.remove();\n        root.size--;\n        if (root.size === 0)\n          this[kEvents].delete(type);\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n        break;\n      }\n      handler = handler.next;\n    }\n  }\n\n  /**\n   * @param {Event} event\n   */\n  dispatchEvent(event) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n\n    if (!(event instanceof Event))\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\n\n    if (event[kIsBeingDispatched])\n      throw new ERR_EVENT_RECURSION(event.type);\n\n    this[kHybridDispatch](event\x2C event.type\x2C event);\n\n    return event.defaultPrevented !== true;\n  }\n\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\n    const createEvent = () => {\n      if (event === undefined) {\n        event = this[kCreateEvent](nodeValue\x2C type);\n        event[kTarget] = this;\n        event[kIsBeingDispatched] = true;\n      }\n      return event;\n    };\n    if (event !== undefined) {\n      event[kTarget] = this;\n      event[kIsBeingDispatched] = true;\n    }\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined) {\n      if (event !== undefined)\n        event[kIsBeingDispatched] = false;\n      return true;\n    }\n\n    let handler = root.next;\n    let next;\n\n    while (handler !== undefined &&\n           (handler.passive || event?.[kStop] !== true)) {\n      // Cache the next item in case this iteration removes the current one\n      next = handler.next;\n\n      if (handler.removed) {\n        // Deal with the case an event is removed while event handlers are\n        // Being processed (removeEventListener called from a listener)\n        handler = next;\n        continue;\n      }\n      if (handler.once) {\n        handler.remove();\n        root.size--;\n        const { listener\x2C capture } = handler;\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n      }\n\n      try {\n        let arg;\n        if (handler.isNodeStyleListener) {\n          arg = nodeValue;\n        } else {\n          arg = createEvent();\n        }\n        const callback = handler.weak ?\n          handler.callback.deref() : handler.callback;\n        let result;\n        if (callback) {\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\n          if (!handler.isNodeStyleListener) {\n            arg[kIsBeingDispatched] = false;\n          }\n        }\n        if (result !== undefined && result !== null)\n          addCatch(result);\n      } catch (err) {\n        emitUncaughtException(err);\n      }\n\n      handler = next;\n    }\n\n    if (event !== undefined)\n      event[kIsBeingDispatched] = false;\n  }\n\n  [kCreateEvent](nodeValue\x2C type) {\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\n  }\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({}\x2C opts)}`;\n  }\n}\n\nObjectDefineProperties(EventTarget.prototype\x2C {\n  addEventListener: kEnumerableProperty\x2C\n  removeEventListener: kEnumerableProperty\x2C\n  dispatchEvent: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'EventTarget'\x2C\n  }\n});\n\nfunction initNodeEventTarget(self) {\n  initEventTarget(self);\n}\n\nclass NodeEventTarget extends EventTarget {\n  static [kIsNodeEventTarget] = true;\n  static defaultMaxListeners = 10;\n\n  constructor() {\n    super();\n    initNodeEventTarget(this);\n  }\n\n  /**\n   * @param {number} n\n   */\n  setMaxListeners(n) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    EventEmitter.setMaxListeners(n\x2C this);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getMaxListeners() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return this[kMaxEventTargetListeners];\n  }\n\n  /**\n   * @returns {string[]}\n   */\n  eventNames() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return ArrayFrom(this[kEvents].keys());\n  }\n\n  /**\n   * @param {string} [type]\n   * @returns {number}\n   */\n  listenerCount(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    const root = this[kEvents].get(String(type));\n    return root !== undefined ? root.size : 0;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   * @returns {NodeEventTarget}\n   */\n  off(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   * @returns {NodeEventTarget}\n   */\n  removeListener(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  on(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  addListener(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  emit(type\x2C arg) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    validateString(type\x2C 'type');\n    const hadListeners = this.listenerCount(type) > 0;\n    this[kHybridDispatch](arg\x2C type);\n    return hadListeners;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  once(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C\n                          { once: true\x2C [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @returns {NodeEventTarget}\n   */\n  removeAllListeners(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    if (type !== undefined) {\n      this[kEvents].delete(String(type));\n    } else {\n      this[kEvents].clear();\n    }\n\n    return this;\n  }\n}\n\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\n  setMaxListeners: kEnumerableProperty\x2C\n  getMaxListeners: kEnumerableProperty\x2C\n  eventNames: kEnumerableProperty\x2C\n  listenerCount: kEnumerableProperty\x2C\n  off: kEnumerableProperty\x2C\n  removeListener: kEnumerableProperty\x2C\n  on: kEnumerableProperty\x2C\n  addListener: kEnumerableProperty\x2C\n  once: kEnumerableProperty\x2C\n  emit: kEnumerableProperty\x2C\n  removeAllListeners: kEnumerableProperty\x2C\n});\n\n// EventTarget API\n\nfunction validateEventListener(listener) {\n  if (typeof listener === 'function' ||\n      typeof listener?.handleEvent === 'function') {\n    return true;\n  }\n\n  if (listener == null)\n    return false;\n\n  if (typeof listener === 'object') {\n    // Require `handleEvent` lazily.\n    return true;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\n}\n\nfunction validateEventListenerOptions(options) {\n  if (typeof options === 'boolean')\n    return { capture: options };\n\n  if (options === null)\n    return kEmptyObject;\n  validateObject(options\x2C 'options'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  return {\n    once: Boolean(options.once)\x2C\n    capture: Boolean(options.capture)\x2C\n    passive: Boolean(options.passive)\x2C\n    signal: options.signal\x2C\n    weak: options[kWeakHandler]\x2C\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\n  };\n}\n\n// Test whether the argument is an event object. This is far from a fool-proof\n// test\x2C for example this input will result in a false positive:\n// > isEventTarget({ constructor: EventTarget })\n// It stands in its current implementation as a compromise.\n// Ref: https://github.com/nodejs/node/pull/33661\nfunction isEventTarget(obj) {\n  return obj?.constructor?.[kIsEventTarget];\n}\n\nfunction isNodeEventTarget(obj) {\n  return obj?.constructor?.[kIsNodeEventTarget];\n}\n\nfunction addCatch(promise) {\n  const then = promise.then;\n  if (typeof then === 'function') {\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\n      // The callback is called with nextTick to avoid a follow-up\n      // rejection from this promise.\n      emitUncaughtException(err);\n    });\n  }\n}\n\nfunction emitUncaughtException(err) {\n  process.nextTick(() => { throw err; });\n}\n\nfunction makeEventHandler(handler) {\n  // Event handlers are dispatched in the order they were first set\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\n  function eventHandler(...args) {\n    if (typeof eventHandler.handler !== 'function') {\n      return;\n    }\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\n  }\n  eventHandler.handler = handler;\n  return eventHandler;\n}\n\nfunction defineEventHandler(emitter\x2C name) {\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n    __proto__: null\x2C\n    get() {\n      return this[kHandlers]?.get(name)?.handler ?? null;\n    }\x2C\n    set(value) {\n      if (!this[kHandlers]) {\n        this[kHandlers] = new SafeMap();\n      }\n      let wrappedHandler = this[kHandlers]?.get(name);\n      if (wrappedHandler) {\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size--;\n          const size = this[kEvents].get(name).size;\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\n        }\n        wrappedHandler.handler = value;\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size++;\n          const size = this[kEvents].get(name).size;\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\n        }\n      } else {\n        wrappedHandler = makeEventHandler(value);\n        this.addEventListener(name\x2C wrappedHandler);\n      }\n      this[kHandlers].set(name\x2C wrappedHandler);\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n}\n\nconst EventEmitterMixin = (Superclass) => {\n  class MixedEventEmitter extends Superclass {\n    constructor(...args) {\n      args = new SafeArrayIterator(args);\n      super(...args);\n      FunctionPrototypeCall(EventEmitter\x2C this);\n    }\n  }\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\n  delete protoProps.constructor;\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\n  return MixedEventEmitter;\n};\n\nmodule.exports = {\n  Event\x2C\n  CustomEvent\x2C\n  EventEmitterMixin\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initEventTarget\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kTrustEvent\x2C\n  kRemoveListener\x2C\n  kEvents\x2C\n  kWeakHandler\x2C\n  isEventTarget\x2C\n};\n
code-source-info,0x24759bdf2526,44,26886,27308,C0O26938C23O27122C30O27154C33O27167C38O27122C43O27181C47O27214C52O27255C57O27214C62O27281C64O27306,,
tick,0x7f40773a70af,83475,0,0x0,3,0x11d7ee0,0x24759bde91a8,0x7f4060044ae0,0x7f40600432df,0x24759bde508d,0x7f4060044ae0,0x7f40600432df,0xa26aabac4c,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,83872,0x24759bdf50e6,5, node:internal/modules/esm/translators:1:1,0x24759bdf4c80,~
script-source,126,node:internal/modules/esm/translators,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  Boolean\x2C\n  JSONParse\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectKeys\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  SyntaxErrorPrototype\x2C\n  globalThis: { WebAssembly }\x2C\n} = primordials;\n\nlet _TYPES = null;\nfunction lazyTypes() {\n  if (_TYPES !== null) return _TYPES;\n  return _TYPES = require('internal/util/types');\n}\n\nconst { readFileSync } = require('fs');\nconst { extname\x2C isAbsolute } = require('path');\nconst {\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst {\n  Module: CJSModule\x2C\n  cjsParseCache\n} = require('internal/modules/cjs/loader');\nconst internalURLModule = require('internal/url');\nconst createDynamicModule = require(\n  'internal/modules/esm/create_dynamic_module');\nconst { fileURLToPath\x2C URL } = require('url');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\n} = require('internal/errors').codes;\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\nconst moduleWrap = internalBinding('module_wrap');\nconst { ModuleWrap } = moduleWrap;\nconst asyncESM = require('internal/process/esm_loader');\nconst { emitWarningSync } = require('internal/process/warning');\nconst { TextDecoder } = require('internal/encoding');\n\nlet cjsParse;\nasync function initCJSParse() {\n  if (typeof WebAssembly === 'undefined') {\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n  } else {\n    const { parse\x2C init } =\n        require('internal/deps/cjs-module-lexer/dist/lexer');\n    try {\n      await init();\n      cjsParse = parse;\n    } catch {\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n    }\n  }\n}\n\nconst translators = new SafeMap();\nexports.translators = translators;\nexports.enrichCJSError = enrichCJSError;\n\nlet DECODER = null;\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\n  if (allowString && typeof body === 'string') {\n    return;\n  }\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\n    return;\n  }\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\n    hookName\x2C\n    'source'\x2C\n    body\n  );\n}\n\nfunction stringify(body) {\n  if (typeof body === 'string') return body;\n  assertBufferSource(body\x2C false\x2C 'transformSource');\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\n  return DECODER.decode(body);\n}\n\nfunction errPath(url) {\n  const parsed = new URL(url);\n  if (parsed.protocol === 'file:') {\n    return fileURLToPath(parsed);\n  }\n  return url;\n}\n\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\n}\n\n// Strategy for loading a standard JavaScript module.\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\n  assertBufferSource(source\x2C true\x2C 'load');\n  source = stringify(source);\n  maybeCacheSourceMap(url\x2C source);\n  debug(`Translating StandardModule ${url}`);\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n  moduleWrap.callbackMap.set(module\x2C {\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\n    importModuleDynamically\x2C\n  });\n  return module;\n});\n\n/**\n * @param {Error | any} err\n * @param {string} [content] Content of the file\x2C if known.\n * @param {string} [filename] Useful only if `content` is unknown.\n */\nfunction enrichCJSError(err\x2C content\x2C filename) {\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\n    // Emit the warning synchronously because we are in the middle of handling\n    // a SyntaxError that will throw and likely terminate the process before an\n    // asynchronous warning would be emitted.\n    emitWarningSync(\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\n      'the .mjs extension.'\n    );\n  }\n}\n\n// Strategy for loading a node-style CommonJS module\nconst isWindows = process.platform === 'win32';\nconst winSepRegEx = /\\//g;\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\n                                                            isMain) {\n  debug(`Translating CJSModule ${url}`);\n\n  let filename = internalURLModule.fileURLToPath(new URL(url));\n  if (isWindows)\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\n\n  if (!cjsParse) await initCJSParse();\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\n  const namesWithDefault = exportNames.has('default') ?\n    [...exportNames] : ['default'\x2C ...exportNames];\n\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\n    debug(`Loading CJSModule ${url}`);\n\n    let exports;\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\n      exports = asyncESM.esmLoader.cjsCache.get(module);\n      asyncESM.esmLoader.cjsCache.delete(module);\n    } else {\n      try {\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\n      } catch (err) {\n        enrichCJSError(err\x2C undefined\x2C filename);\n        throw err;\n      }\n    }\n\n    for (const exportName of exportNames) {\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\n          exportName === 'default')\n        continue;\n      // We might trigger a getter -> dont fail.\n      let value;\n      try {\n        value = exports[exportName];\n      } catch {\n        // Continue regardless of error.\n      }\n      this.setExport(exportName\x2C value);\n    }\n    this.setExport('default'\x2C exports);\n  });\n});\n\nfunction cjsPreparseModuleExports(filename) {\n  let module = CJSModule._cache[filename];\n  if (module) {\n    const cached = cjsParseCache.get(module);\n    if (cached)\n      return { module\x2C exportNames: cached.exportNames };\n  }\n  const loaded = Boolean(module);\n  if (!loaded) {\n    module = new CJSModule(filename);\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    CJSModule._cache[filename] = module;\n  }\n\n  let source;\n  try {\n    source = readFileSync(filename\x2C 'utf8');\n  } catch {\n    // Continue regardless of error.\n  }\n\n  let exports\x2C reexports;\n  try {\n    ({ exports\x2C reexports } = cjsParse(source || ''));\n  } catch {\n    exports = [];\n    reexports = [];\n  }\n\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\n\n  // Set first for cycles.\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\n\n  if (reexports.length) {\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n  }\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\n    let resolved;\n    try {\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\n    } catch {\n      return;\n    }\n    const ext = extname(resolved);\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\n        isAbsolute(resolved)) {\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\n      for (const name of reexportNames)\n        exportNames.add(name);\n    }\n  });\n\n  return { module\x2C exportNames };\n}\n\n// Strategy for loading a node builtin CommonJS module that isn't\n// through normal resolution\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\n  debug(`Translating BuiltinModule ${url}`);\n  // Slice 'node:' scheme\n  const id = StringPrototypeSlice(url\x2C 5);\n  const module = loadNativeModule(id\x2C url);\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\n  }\n  debug(`Loading BuiltinModule ${url}`);\n  return module.getESMFacade();\n});\n\n// Strategy for loading a JSON file\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\n  emitExperimentalWarning('Importing JSON modules');\n  assertBufferSource(source\x2C true\x2C 'load');\n  debug(`Loading JSONModule ${url}`);\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\n    fileURLToPath(url) : null;\n  let modulePath;\n  let module;\n  if (pathname) {\n    modulePath = isWindows ?\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  source = stringify(source);\n  if (pathname) {\n    // A require call could have been called on the same file during loading and\n    // that resolves synchronously. To make sure we always return the identical\n    // export\x2C we have to check again if the module already exists or not.\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  try {\n    const exports = JSONParse(stripBOM(source));\n    module = {\n      exports\x2C\n      loaded: true\n    };\n  } catch (err) {\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\n    // parse error instead of just manipulating the original error message.\n    // That would allow to add further properties and maybe additional\n    // debugging information.\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n  if (pathname) {\n    CJSModule._cache[modulePath] = module;\n  }\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n    debug(`Parsing JSONModule ${url}`);\n    this.setExport('default'\x2C module.exports);\n  });\n});\n\n// Strategy for loading a wasm module\ntranslators.set('wasm'\x2C async function(url\x2C source) {\n  emitExperimentalWarning('Importing WebAssembly modules');\n\n  assertBufferSource(source\x2C false\x2C 'load');\n\n  debug(`Translating WASMModule ${url}`);\n\n  let compiled;\n  try {\n    compiled = await WebAssembly.compile(source);\n  } catch (err) {\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n\n  const imports =\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\n                        ({ module }) => module);\n  const exports =\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\n                      ({ name }) => name);\n\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\n    for (const expt of ObjectKeys(exports))\n      reflect.exports[expt].set(exports[expt]);\n  }).module;\n});\n
code-source-info,0x24759bdf50e6,126,0,10763,C0O0C4O10763,,
code-creation,Function,10,84406,0x24759bdf5886,715, node:internal/modules/esm/translators:1:1,0x24759bdf5060,~
code-source-info,0x24759bdf5886,126,0,10763,C0O0C180O25C186O50C192O71C198O82C204O95C210O119C216O152C222O166C228O187C233O198C239O209C245O235C251O259C257O288C268O326C274O372C275O372C277O517C283O517C288O500C294O564C300O564C305O540C311O549C317O641C323O641C328O591C334O607C340O627C346O731C352O731C357O700C363O713C369O797C375O797C379O797C381O850C387O850C391O850C393O939C399O939C404O916C410O931C416O967C422O967C427O1000C440O1001C446O967C448O1081C454O1081C459O1053C465O1185C471O1185C476O1211C481O1117C487O1147C493O1251C499O1251C504O1227C510O1319C513O1319C517O1319C519O1374C522O1359C528O1403C534O1403C538O1403C540O1471C546O1471C551O1451C557O1532C563O1532C568O1516C574O1567C575O1567C577O1997C579O1997C585O2012C587O2032C591O2047C593O2070C597O2103C598O2103C600O3104C613O3104C619O4352C626O4361C629O4344C631O4394C635O4394C637O4413C650O4413C656O7505C669O7505C675O7954C688O7954C694O9902C707O9902C714O10762,,
tick,0x7f407731c473,84541,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0xa26aabac5d,0xa26aa8ba9d,0x7f40600432df,0xa26aab8b3f,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Eval,10,84662,0x24759bdf6d8e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x24759bdf6bb8,~
script-source,127,node:internal/modules/esm/create_dynamic_module,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  JSONStringify\x2C\n  ObjectCreate\x2C\n  SafeSet\x2C\n} = primordials;\n\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\n\nfunction createImport(impt\x2C index) {\n  const imptPath = JSONStringify(impt);\n  return `import * as $import_${index} from ${imptPath};\nimport.meta.imports[${imptPath}] = $import_${index};`;\n}\n\nfunction createExport(expt) {\n  const name = `${expt}`;\n  return `let $${name};\nexport { $${name} as ${name} };\nimport.meta.exports.${name} = {\n  get: () => $${name}\x2C\n  set: (v) => $${name} = v\x2C\n};`;\n}\n\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\n  const source = `\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\nimport.meta.done();\n`;\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\n\n  const readyfns = new SafeSet();\n  const reflect = {\n    exports: ObjectCreate(null)\x2C\n    onReady: (cb) => { readyfns.add(cb); }\x2C\n  };\n\n  if (imports.length)\n    reflect.imports = ObjectCreate(null);\n\n  callbackMap.set(m\x2C {\n    initializeImportMeta: (meta\x2C wrap) => {\n      meta.exports = reflect.exports;\n      if (reflect.imports)\n        meta.imports = reflect.imports;\n      meta.done = () => {\n        evaluate(reflect);\n        reflect.onReady = (cb) => cb(reflect);\n        for (const fn of readyfns) {\n          readyfns.delete(fn);\n          fn(reflect);\n        }\n      };\n    }\x2C\n  });\n\n  return {\n    module: m\x2C\n    reflect\x2C\n  };\n};\n\nmodule.exports = createDynamicModule;\n
code-source-info,0x24759bdf6d8e,127,0,1756,C0O0C4O1756,,
code-creation,Function,10,84831,0x24759bdf6fb6,111, node:internal/modules/esm/create_dynamic_module:1:1,0x24759bdf6d08,~
code-source-info,0x24759bdf6fb6,127,0,1756,C0O0C39O25C45O47C51O68C57O85C63O101C69O140C72O140C77O173C90O174C96O140C98O642C103O1718C105O1733C110O1755,,
code-creation,Eval,10,85277,0x24759bdf7ede,5, node:internal/vm/module:1:1,0x24759bdf7988,~
script-source,128,node:internal/vm/module,'use strict';\n\nconst assert = require('internal/assert');\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeSome\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  SafePromiseAll\x2C\n  SafeWeakMap\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nconst { isContext } = internalBinding('contextify');\nconst {\n  isModuleNamespaceObject\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  customInspectSymbol\x2C\n  emitExperimentalWarning\x2C\n  getConstructorOf\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\n  ERR_VM_MODULE_LINK_FAILURE\x2C\n  ERR_VM_MODULE_NOT_MODULE\x2C\n  ERR_VM_MODULE_STATUS\x2C\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst binding = internalBinding('module_wrap');\nconst {\n  ModuleWrap\x2C\n  kUninstantiated\x2C\n  kInstantiating\x2C\n  kInstantiated\x2C\n  kEvaluating\x2C\n  kEvaluated\x2C\n  kErrored\x2C\n} = binding;\n\nconst STATUS_MAP = {\n  [kUninstantiated]: 'unlinked'\x2C\n  [kInstantiating]: 'linking'\x2C\n  [kInstantiated]: 'linked'\x2C\n  [kEvaluating]: 'evaluating'\x2C\n  [kEvaluated]: 'evaluated'\x2C\n  [kErrored]: 'errored'\x2C\n};\n\nlet globalModuleId = 0;\nconst defaultModuleName = 'vm:module';\nconst wrapToModuleMap = new SafeWeakMap();\n\nconst kWrap = Symbol('kWrap');\nconst kContext = Symbol('kContext');\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\nconst kLink = Symbol('kLink');\n\nclass Module {\n  constructor(options) {\n    emitExperimentalWarning('VM Modules');\n\n    if (new.target === Module) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new TypeError('Module is not a constructor');\n    }\n\n    const {\n      context\x2C\n      sourceText\x2C\n      syntheticExportNames\x2C\n      syntheticEvaluationSteps\x2C\n    } = options;\n\n    if (context !== undefined) {\n      validateObject(context\x2C 'context');\n      if (!isContext(context)) {\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\n                                       context);\n      }\n    }\n\n    let { identifier } = options;\n    if (identifier !== undefined) {\n      validateString(identifier\x2C 'options.identifier');\n    } else if (context === undefined) {\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\n    } else if (context[kPerContextModuleId] !== undefined) {\n      const curId = context[kPerContextModuleId];\n      identifier = `${defaultModuleName}(${curId})`;\n      context[kPerContextModuleId] += 1;\n    } else {\n      identifier = `${defaultModuleName}(0)`;\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\n        __proto__: null\x2C\n        value: 1\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (sourceText !== undefined) {\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\n                                   options.lineOffset\x2C options.columnOffset\x2C\n                                   options.cachedData);\n\n      binding.callbackMap.set(this[kWrap]\x2C {\n        initializeImportMeta: options.initializeImportMeta\x2C\n        importModuleDynamically: options.importModuleDynamically ?\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\n          undefined\x2C\n      });\n    } else {\n      assert(syntheticEvaluationSteps);\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\n                                   syntheticExportNames\x2C\n                                   syntheticEvaluationSteps);\n    }\n\n    wrapToModuleMap.set(this[kWrap]\x2C this);\n\n    this[kContext] = context;\n  }\n\n  get identifier() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kWrap].url;\n  }\n\n  get context() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kContext];\n  }\n\n  get namespace() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\n    }\n    return this[kWrap].getNamespace();\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return STATUS_MAP[this[kWrap].getStatus()];\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS('must be errored');\n    }\n    return this[kWrap].getError();\n  }\n\n  async link(linker) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateFunction(linker\x2C 'linker');\n    if (this.status === 'linked') {\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\n    }\n    if (this.status !== 'unlinked') {\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\n    }\n    await this[kLink](linker);\n    this[kWrap].instantiate();\n  }\n\n  async evaluate(options = kEmptyObject) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n\n    validateObject(options\x2C 'options');\n\n    let timeout = options.timeout;\n    if (timeout === undefined) {\n      timeout = -1;\n    } else {\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\n    }\n    const { breakOnSigint = false } = options;\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n    const status = this[kWrap].getStatus();\n    if (status !== kInstantiated &&\n        status !== kEvaluated &&\n        status !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS(\n        'must be one of linked\x2C evaluated\x2C or errored'\n      );\n    }\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || Module;\n    const o = ObjectCreate({ constructor });\n    o.status = this.status;\n    o.identifier = this.identifier;\n    o.context = this.context;\n\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\n      __proto__: null\x2C\n      value: constructor.name\x2C\n      configurable: true\n    });\n\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return inspect(o\x2C { ...options\x2C customInspect: false });\n  }\n}\n\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\nconst kNoError = Symbol('kNoError');\n\nclass SourceTextModule extends Module {\n  #error = kNoError;\n  #statusOverride;\n\n  constructor(sourceText\x2C options = kEmptyObject) {\n    validateString(sourceText\x2C 'sourceText');\n    validateObject(options\x2C 'options');\n\n    const {\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n      context\x2C\n      identifier\x2C\n      cachedData\x2C\n    } = options;\n\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n\n    if (initializeImportMeta !== undefined &&\n        typeof initializeImportMeta !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\n    }\n\n    if (importModuleDynamically !== undefined &&\n        typeof importModuleDynamically !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.importModuleDynamically'\x2C 'function'\x2C\n        importModuleDynamically);\n    }\n\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n\n    super({\n      sourceText\x2C\n      context\x2C\n      identifier\x2C\n      lineOffset\x2C\n      columnOffset\x2C\n      cachedData\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n    });\n\n    this[kLink] = async (linker) => {\n      this.#statusOverride = 'linking';\n\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\n        const module = await linker(identifier\x2C this\x2C { assert });\n        if (module[kWrap] === undefined) {\n          throw new ERR_VM_MODULE_NOT_MODULE();\n        }\n        if (module.context !== this.context) {\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\n        }\n        if (module.status === 'errored') {\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\n        }\n        if (module.status === 'unlinked') {\n          await module[kLink](linker);\n        }\n        return module[kWrap];\n      });\n\n      try {\n        if (promises !== undefined) {\n          await SafePromiseAll(promises);\n        }\n      } catch (e) {\n        this.#error = e;\n        throw e;\n      } finally {\n        this.#statusOverride = undefined;\n      }\n    };\n\n    this[kDependencySpecifiers] = undefined;\n  }\n\n  get dependencySpecifiers() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kDependencySpecifiers] === undefined) {\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\n    }\n    return this[kDependencySpecifiers];\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return 'errored';\n    }\n    if (this.#statusOverride) {\n      return this.#statusOverride;\n    }\n    return super.status;\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return this.#error;\n    }\n    return super.error;\n  }\n\n  createCachedData() {\n    const { status } = this;\n    if (status === 'evaluating' ||\n        status === 'evaluated' ||\n        status === 'errored') {\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\n    }\n    return this[kWrap].createCachedData();\n  }\n}\n\nclass SyntheticModule extends Module {\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\n    if (!ArrayIsArray(exportNames) ||\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\n                                     'Array of unique strings'\x2C\n                                     exportNames);\n    } else {\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\n                                          name\x2C\n                                          'is duplicated');\n        }\n      });\n    }\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\n\n    validateObject(options\x2C 'options');\n\n    const { context\x2C identifier } = options;\n\n    super({\n      syntheticExportNames: exportNames\x2C\n      syntheticEvaluationSteps: evaluateCallback\x2C\n      context\x2C\n      identifier\x2C\n    });\n\n    this[kLink] = () => this[kWrap].link(() => {\n      assert.fail('link callback should not be called');\n    });\n  }\n\n  setExport(name\x2C value) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateString(name\x2C 'name');\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must be linked');\n    }\n    this[kWrap].setExport(name\x2C value);\n  }\n}\n\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\n  const importModuleDynamicallyWrapper = async (...args) => {\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\n    if (isModuleNamespaceObject(m)) {\n      return m;\n    }\n    if (!m || m[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (m.status === 'errored') {\n      throw m.error;\n    }\n    return m.namespace;\n  };\n  return importModuleDynamicallyWrapper;\n}\n\nmodule.exports = {\n  Module\x2C\n  SourceTextModule\x2C\n  SyntheticModule\x2C\n  importModuleDynamicallyWrap\x2C\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\n};\n
code-source-info,0x24759bdf7ede,128,0,12372,C0O0C4O12372,,
tick,0x10f59e0,85849,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0xa26aab8b72,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,Function,10,85979,0x24759bdf9146,881, node:internal/vm/module:1:1,0x24759bdf7e58,~
code-source-info,0x24759bdf
code-creation,Function,10,86074,0x24759bdf968e,30,<instance_members_initializer> node:internal/vm/module:259:3,0x24759bdf84c8,~
code-source-info,0x24759bdf968e,128,6871,6907,C3O6880C29O6907,,
tick,0xe6d62e,86417,0,0x0,0,0xf2fb90,0x24759bdf9465,0x7f4060044ae0,0x7f40600432df,0xa26aab8b72,0xa26aa8ba9d,0x7f40600432df,0xa26aab4095,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,86616,0x24759bdfabde,166,ESMLoader node:internal/modules/esm/loader:240:14,0xa26aaba248,~
code-source-info,0x24759bdfabde,109,6885,7491,C9O6885C28O6894C38O6898C43O6937C49O6945C54O6958C64O6958C68O7015C78O7019C84O7077C94O7077C98O7131C110O7186C116O7186C123O7240C128O7265C133O7273C144O7273C150O7440C156O7474C165O7490,,
code-creation,LazyCompile,10,86811,0x24759bdfc9e6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0xa26aabd2f0,~
code-source-info,0x24759bdfc9e6,110,518,535,C3O524C7O530C11O524C26O534,,
code-creation,LazyCompile,10,87017,0x24759bdfcc8e,13,desc.value node:internal/per_context/primordials:340:32,0x2ac22104a7c0,~
code-source-info,0x24759bdfcc8e,6,9873,9932,C0O9890C7O9897C12O9920,,
code-creation,LazyCompile,10,87095,0x24759bdfcd96,13,SafeIterator node:internal/per_context/primordials:285:16,0x2ac22104a210,~
code-source-info,0x24759bdfcd96,6,8138,8198,C0O8157C3O8174C7O8172C12O8197,,
code-creation,LazyCompile,10,87146,0x24759bdfcece,13,next node:internal/per_context/primordials:288:9,0x2ac22104a2d8,~
code-source-info,0x24759bdfcece,6,8207,8252,C0O8218C3O8235C8O8225C12O8246,,
code-creation,LazyCompile,10,87210,0x24759bdfcfbe,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x2ac221050a88,~
code-source-info,0x24759bdfcfbe,9,7775,7826,C0O7786C7O7814C12O7814C18O7822,,
code-creation,LazyCompile,10,87397,0x24759bdfd1f6,32, node:internal/modules/cjs/loader:192:41,0xa26aab24d8,~
code-source-info,0x24759bdfd1f6,106,5814,5840,C0O5822C9O5823C21O5835C31O5840,,
tick,0x1667ce5,87540,0,0x0,0,0x24759bdfd1f6,0x1595b58,0xa26aab41cd,0xa26aa8ba9d,0x7f40600432df,0xa26aaafc9c,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,87658,0x24759bdffcf6,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x2ac221050b08,~
code-source-info,0x24759bdffcf6,9,7861,7912,C0O7870C11O7887C14O7877C18O7908,,
code-creation,LazyCompile,10,87755,0x24759bdffe3e,26, node:internal/modules/cjs/loader:194:49,0xa26aab2528,~
code-source-info,0x24759bdffe3e,106,5893,5940,C0O5918C5O5918C15O5930C20O5918C25O5940,,
new,MemoryChunk,0x224cfd0c0000,262144
code-creation,LazyCompile,10,87987,0x224cfd0c1256,152,deprecate node:internal/util:96:19,0x2ac22107f718,~
code-source-info,0x224cfd0c1256,15,2401,3577,C0O2401C26O2421C31O2433C37O2447C42O2463C44O2473C45O2528C53O2566C61O2588C66O2569C83O2624C87O2652C100O2652C105O2698C106O2698C108O3273C121O3273C126O3313C129O3320C135O3513C141O3539C145O3534C149O3557C151O3575,,
code-creation,LazyCompile,10,88110,0x224cfd0c17f6,28,getEmbedderOptions node:internal/options:32:28,0x1d94759e5d50,~
code-source-info,0x224cfd0c17f6,95,760,877,C0O767C6O795C11O813C17O811C23O852C27O875,,
code-creation,LazyCompile,10,88228,0x224cfd0c1a9e,315,Module._initPaths node:internal/modules/cjs/loader:1254:29,0xa26aab3038,~
code-source-info,0x224cfd0c1a9e
code-creation,Eval,10,88483,0x224cfd0c221e,5, node:internal/modules/run_main:1:1,0x224cfd0c1ff8,~
script-source,129,node:internal/modules/run_main,'use strict';\n\nconst {\n  ObjectCreate\x2C\n  StringPrototypeEndsWith\x2C\n} = primordials;\nconst CJSLoader = require('internal/modules/cjs/loader');\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\nconst { getOptionValue } = require('internal/options');\nconst path = require('path');\nconst {\n  handleProcessExit\x2C\n} = require('internal/modules/esm/handle_process_exit');\n\nfunction resolveMainPath(main) {\n  // Note extension resolution for the main entry point can be deprecated in a\n  // future major.\n  // Module._findPath is monkey-patchable here.\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  if (!mainPath)\n    return;\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain)\n    mainPath = toRealPath(mainPath);\n\n  return mainPath;\n}\n\nfunction shouldUseESMLoader(mainPath) {\n  /**\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userLoaders = getOptionValue('--experimental-loader');\n  if (userLoaders.length > 0)\n    return true;\n  const esModuleSpecifierResolution =\n    getOptionValue('--experimental-specifier-resolution');\n  if (esModuleSpecifierResolution === 'node')\n    return true;\n  // Determine the module format of the main\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\n    return true;\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\n    return false;\n  const pkg = readPackageScope(mainPath);\n  return pkg && pkg.data.type === 'module';\n}\n\nfunction runMainESM(mainPath) {\n  const { loadESM } = require('internal/process/esm_loader');\n  const { pathToFileURL } = require('internal/url');\n\n  handleMainPromise(loadESM((esmLoader) => {\n    const main = path.isAbsolute(mainPath) ?\n      pathToFileURL(mainPath).href : mainPath;\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\n  }));\n}\n\nasync function handleMainPromise(promise) {\n  process.on('exit'\x2C handleProcessExit);\n  try {\n    return await promise;\n  } finally {\n    process.off('exit'\x2C handleProcessExit);\n  }\n}\n\n// For backwards compatibility\x2C we have to run a bunch of\n// monkey-patchable code that belongs to the CJS loader (exposed by\n// `require('module')`) even when the entry point is ESM.\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    runMainESM(resolvedMain || main);\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  handleMainPromise\x2C\n};\n
code-source-info,0x224cfd0c221e,129,0,2700,C0O0C4O2700,,
code-creation,Function,10,88732,0x224cfd0c2506,178, node:internal/modules/run_main:1:1,0x224cfd0c2198,~
code-source-info,0x224cfd0c2506,129,0,2700,C0O0C66O25C72O41C78O101C84O101C89O149C95O157C101O169C107O228C113O228C118O209C124O270C130O270C134O270C136O320C142O320C147O297C153O2632C160O2653C166O2678C172O2647C177O2699,,
tick,0x124aa70,88776,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0xa26aaafcc9,0xa26aa8f3b6,0xa26aa8aa6d
code-creation,LazyCompile,10,88895,0x224cfd0c2b16,163,initializeESMLoader node:internal/bootstrap/pre_execution:531:29,0xa26aa8d2c8,~
code-source-info,0x224cfd0c2b16,100,16751,17839,C0O16833C6O16833C13O16882C16O16878C21O16876C25O16900C30O16904C34O16924C40O16953C41O16960C42O17060C48O17060C53O16976C58O17016C63O17106C69O17106C74O17307C79O17265C83O17377C88O17338C92O17543C100O17547C106O17663C112O17663C117O17612C122O17620C127O17638C132O17709C138O17709C143O17728C145O17738C149O17752C151O17772C155O17796C157O17815C162O17838,,
code-creation,LazyCompile,10,88987,0x224cfd0c2d2e,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xa26aab2488,~
code-source-info,0x224cfd0c2d2e,106,2295,2335,C0O2300C4O2333,,
code-creation,LazyCompile,10,89038,0x224cfd0c2dd6,21,assert node:internal/assert:11:16,0x1d498349e8a0,~
script-source,21,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x224cfd0c2dd6,21,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,LazyCompile,10,89136,0x224cfd0c2fd6,53,loadPreloadModules node:internal/bootstrap/pre_execution:574:28,0xa26aa8d3b8,~
code-source-info,0x224cfd0c2fd6,100,18315,18635,C0O18402C8O18402C13O18433C15O18470C21O18477C26O18553C32O18553C37O18553C42O18520C47O18597C52O18634,,
code-creation,LazyCompile,10,89224,0x224cfd0c31c6,166,Module._preloadModules node:internal/modules/cjs/loader:1284:34,0xa26aab30c8,~
code-source-info,0x224cfd0c31c6,106,40265,40839,C0O40280C5O40285C11O40313C12O40320C13O40324C17O40337C23O40532C33O40532C42O40582C45O40604C53O40629C58O40629C63O40604C68O40595C85O40657C88O40663C95O40668C100O40690C106O40703C114O40718C116O40718C119O40752C121O40768C125O40757C130O40792C137O40808C141O40792C146O40777C151O40739C154O40816C158O40829C165O40838,,
code-creation,LazyCompile,10,89294,0x224cfd0c33e6,94,Module node:internal/modules/cjs/loader:172:16,0xa26aab1de8,~
code-source-info,0x224cfd0c33e6,106,5287,5524,C14O5309C16O5317C20O5325C22O5337C25O5342C30O5342C35O5335C39O5357C40O5370C44O5378C49O5396C54O5396C60O5417C71O5417C76O5456C77O5470C81O5480C82O5492C86O5503C88O5517C93O5523,,
code-creation,LazyCompile,10,89384,0x224cfd0c361e,162,dirname node:path:1275:10,0x3e83b617c6e8,~
code-source-info,0x224cfd0c361e,41,38741,39410,C0O38754C8O38754C13O38797C19O38804C24O38817C26O38828C27O38849C34O38849C42O38888C44O38884C48O38922C51O38949C53O38977C57O38984C61O38991C63O38991C68O39010C73O39014C81O39053C83O39049C88O39083C92O39114C97O39133C101O39220C103O38999C108O38959C111O39261C113O39269C118O39283C128O39310C129O39315C135O39334C140O39347C142O39359C143O39364C156O39371C161O39406,,
code-creation,LazyCompile,10,89452,0x224cfd0c37f6,45,updateChildren node:internal/modules/cjs/loader:165:24,0xa26aab1d98,~
code-source-info,0x224cfd0c37f6,106,5052,5225,C0O5095C7O5101C15O5115C19O5133C23O5141C26O5141C33O5187C38O5187C44O5224,,
code-creation,LazyCompile,10,89534,0x224cfd0c39b6,183,Module._nodeModulePaths node:internal/modules/cjs/loader:640:37,0xa26aab2968,~
code-source-info,0x224cfd0c39b6,106,19143,20274,C0O19198C5O19210C10O19210C17O19389C19O19398C24O19413C28O19438C29O19653C32O19679C36O19686C40O19695C42O19710C47O19720C48O19720C53O19752C58O19752C64O19794C66O19807C68O19803C73O19837C75O19847C77O19843C82O19864C89O19915C100O19915C108O19951C112O19864C117O19990C120O20008C124O20028C126O20034C131O20052C138O20063C144O20067C149O20089C156O20121C159O19728C164O19661C167O20208C175O20208C180O20257C182O20270,,
code-creation,Function,11,89666,0x7f4060044e80,1444,Module._nodeModulePaths node:internal/modules/cjs/loader:640:37,0xa26aab2968,^
code-source-info,0x7f4060044e80,106,19143,20274,,,
tick,0x7f40773a70af,89776,0,0x0,0,0x11e1260,0x224cfd0c3a5a,0x224cfd0c3205,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,11,89825,0x7f40600454a0,104,next node:internal/per_context/primordials:288:9,0x2ac22104a2d8,^
code-source-info,0x7f40600454a0,6,8207,8252,,,
code-creation,Function,11,89889,0x7f4060045580,188,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x2ac221050a88,^
code-source-info,0x7f4060045580,9,7775,7826,,,
code-creation,Function,11,89906,0x7f40600456a0,200, node:internal/modules/cjs/loader:192:41,0xa26aab24d8,^
code-source-info,0x7f40600456a0,106,5814,5840,,,
code-creation,Function,11,89923,0x7f40600457e0,1280,resolve node:path:1091:10,0x3e83b617c508,^
code-source-info,0x7f40600457e0,41,33781,34691,,,
code-creation,LazyCompile,10,89993,0x224cfd0c402e,127,Module.require node:internal/modules/cjs/loader:1020:36,0xa26aab2cc8,~
code-source-info,0x224cfd0c402e,106,31917,32208,C0O31926C8O31926C13O31954C15O31961C20O31975C36O31981C41O31975C42O32090C51O32102C60O32118C63O32132C76O32132C93O32187C102O32199C126O32207,,
code-creation,LazyCompile,10,90144,0x224cfd0c4326,636,Module._load node:internal/modules/cjs/loader:771:24,0xa26aab2b28,~
code-source-info,0x224cfd0c
code-creation,LazyCompile,10,90262,0x224cfd0c47d6,89,logger node:internal/util/debuglog:95:18,0x1d498349fe10,~
code-source-info,0x224cfd0c47d6,22,2869,3064,C0O2869C3O2901C24O2925C30O2942C34O2932C38O2947C39O2962C45O2979C51O2988C55O2969C60O2993C61O3009C65O3016C72O3029C77O3025C83O3016C88O3054,,
code-creation,LazyCompile,10,90331,0x224cfd0c4916,3, node:internal/per_context/primordials:291:21,0x2ac22104a380,~
code-source-info,0x224cfd0c4916,6,8273,8302,C0O8284C2O8296,,
code-creation,LazyCompile,10,90411,0x224cfd0c49ee,140,debug node:internal/util/debuglog:76:15,0x1d498349fd70,~
code-source-info,0x224cfd0c49ee,22,2357,2751,C0O2357C3O2376C6O2376C9O2484C16O2505C22O2492C30O2490C36O2524C42O2560C47O2563C50O2560C54O2588C75O2612C81O2629C85O2619C89O2634C90O2649C96O2666C102O2675C106O2656C111O2680C112O2696C116O2703C123O2716C128O2712C134O2703C139O2741,,
code-creation,LazyCompile,10,90475,0x224cfd0c4b9e,41,init node:internal/util/debuglog:72:16,0x1d498349fd20,~
code-source-info,0x224cfd0c4b9e,22,2259,2342,C0O2268C10O2274C14O2272C16O2311C26O2321C33O2319C40O2341,,
code-creation,LazyCompile,10,90537,0x224cfd0c4c8e,2,testEnabled node:internal/util/debuglog:32:19,0xa26aaa4840,~
code-source-info,0x224cfd0c4c8e,22,973,984,C0O979C1O984,,
code-creation,LazyCompile,10,90623,0x224cfd0c4e26,116,debuglogImpl node:internal/util/debuglog:49:22,0x1d498349fb70,~
code-source-info,0x224cfd0c4e26,22,1451,1995,C0O1451C9O1470C18O1484C23O1511C34O1544C39O1552C43O1544C45O1563C55O1563C59O1595C71O1606C75O1611C83O1934C97O1952C99O1950C103O1970C112O1987C115O1993,,
code-creation,LazyCompile,10,90692,0x224cfd0c4fde,10, node:internal/modules/cjs/loader:283:66,0xa26aab27f8,~
code-source-info,0x224cfd0c4fde,106,8043,8068,C0O8055C2O8061C9O8067,,
code-creation,LazyCompile,10,90750,0x224cfd0c508e,2,noop node:internal/util/debuglog:47:14,0x1d498349fb20,~
code-source-info,0x224cfd0c508e,22,1419,1427,C1O1426,,
tick,0x7f407731c3e1,90838,0,0x0,3,0x11d7ee0,0x224cfd0c4a74,0x224cfd0c4829,0x224cfd0c433d,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,90961,0x224cfd0c54f6,925,Module._resolveFilename node:internal/modules/cjs/loader:865:35,0xa26aab2bb0,~
code-source-info,0x224cfd0c54f
code-creation,LazyCompile,10,91074,0x224cfd0c5b4e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x2ac221050a10,~
code-source-info,0x224cfd0c5b4e,9,7502,7598,C0O7525C5O7538C10O7542C15O7542C21O7555C23O7573C27O7594,,
code-creation,LazyCompile,10,91170,0x224cfd0c5e0e,344,Module._resolveLookupPaths node:internal/modules/cjs/loader:678:38,0xa26aab29f8,~
code-source-info,0x224cfd0c5e0e
code-creation,LazyCompile,10,91257,0x224cfd0c6126,76,trySelfParentPath node:internal/modules/cjs/loader:438:27,0xa26aab2108,~
code-source-info,0x224cfd0c6126,106,12604,12867,C0O12617C4O12630C5O12643C6O12658C12O12688C16O12697C17O12718C24O12721C29O12744C36O12747C44O12789C47O12804C52O12804C59O12812C62O12817C66O12810C69O12821C72O12842C73O12855C75O12866,,
code-creation,LazyCompile,10,91341,0x224cfd0c6366,235,trySelf node:internal/modules/cjs/loader:452:17,0xa26aab2158,~
code-source-info,0x224cfd0c6366,106,12885,13718,C0O12911C4O12928C5O12941C6O12982C9O12982C17O12959C22O12970C27O13020C31O13036C37O13059C38O13072C39O13090C47O13109C48O13122C49O13130C51O13163C55O13155C60O13175C65O13201C70O13247C82O13205C89O13263C94O13281C97O13315C102O13320C107O13281C112O13279C118O13344C119O13357C123O13375C128O13404C133O13433C138O13455C142O13433C149O13497C152O13497C159O13524C168O13404C183O13382C188O13570C200O13591C203O13597C210O13602C215O13636C222O13680C226O13642C231O13636C232O13704C234O13704,,
code-creation,LazyCompile,10,91428,0x224cfd0c663e,129,readPackageScope node:internal/modules/cjs/loader:332:26,0xa26aab1f28,~
code-source-info,0x224cfd0c663e,106,9253,9771,C0O9296C7O9330C10O9296C16O9342C18O9369C25O9424C28O9386C34O9434C47O9446C54O9502C61O9541C66O9545C70O9506C77O9570C78O9583C79O9602C84O9626C86O9624C90O9602C95O9636C97O9647C104O9668C110O9687C116O9704C117O9731C119O9731C124O9360C127O9756C128O9769,,
code-creation,LazyCompile,10,91521,0x224cfd0c699e,234,readPackage node:internal/modules/cjs/loader:301:21,0xa26aab1ed8,~
code-source-info,0x224cfd0c699e,106,8436,9226,C0O8471C5O8476C13O8476C20O8534C25O8551C30O8551C36O8568C38O8596C40O8612C41O8631C46O8649C51O8649C57O8687C63O8700C72O8726C77O8736C79O8766C84O8783C91O8783C97O8809C98O8822C102O8855C107O8855C112O8893C117O8914C125O8939C133O8967C141O8998C149O9026C160O9042C165O9059C170O9059C176O9088C178O9104C190O9125C195O9132C199O9148C207O9177C213O9188C220O9199C224O9195C227O9158C231O9212C233O9212,,
code-creation,LazyCompile,10,91636,0x224cfd0c6ca6,199,read node:internal/modules/package_json_reader:16:14,0xa26aab7e60,~
code-source-info,0x224cfd0c6ca6,107,292,954,C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C53O384C59O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952,,
code-creation,LazyCompile,10,91690,0x224cfd0c6ff6,3,toNamespacedPath node:path:1266:19,0x3e83b617c698,~
code-source-info,0x224cfd0c6ff6,41,38608,38668,C0O38652C2O38664,,
code-creation,LazyCompile,10,91878,0x224cfd0c724e,438,Module._findPath node:internal/modules/cjs/loader:505:28,0xa26aab2848,~
code-source-info,0x224cfd0c724e
tick,0x7f40773a70af,91988,0,0x0,3,0x11d7ee0,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,92106,0x224cfd0c75fe,45,isAbsolute node:path:1156:13,0x3e83b617c5a8,~
code-source-info,0x224cfd0c75fe,41,35447,35593,C0O35460C8O35460C13O35506C19O35513C26O35531C31O35531C39O35570C41O35566C44O35589,,
code-creation,LazyCompile,10,92504,0x224cfd0c784e,85,stat node:internal/modules/cjs/loader:151:14,0xa26aab1d48,~
code-source-info,0x224cfd0c784e,106,4630,5027,C0O4645C5O4661C10O4661C17O4691C23O4736C28O4746C33O4746C39O4765C41O4791C43O4805C44O4827C49O4827C54O4859C61O4892C66O4972C71O4982C76O4982C82O5011C84O5025,,
code-creation,LazyCompile,10,92682,0x224cfd0c79ce,42,toRealPath node:internal/modules/cjs/loader:404:20,0xa26aab2018,~
code-source-info,0x224cfd0c79ce,106,11626,11738,C0O11644C5O11654C10O11667C17O11687C20O11698C28O11717C35O11654C41O11736,,
tick,0xf4aba7,93029,0,0x0,3,0x11d7ee0,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,93201,0x224cfd0c7df6,1079,realpathSync node:fs:2460:22,0x456f10bbac8,~
script-source,83,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\n// When using FSReqCallback\x2C make sure to create the object only *after* all\n// parameter validation has happened\x2C so that the objects are not kept in memory\n// in case they are created but never used due to an exception.\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\n} = constants;\n\nconst pathModule = require('path');\nconst { isArrayBufferView } = require('internal/util/types');\n\n// We need to get the statValues from the binding at the callsite since\n// it's re-initialized after deserialization.\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\n  }\x2C\n  AbortError\x2C\n  uvErrmapGet\x2C\n  uvException\n} = require('internal/errors');\n\nconst { FSReqCallback } = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  validatePrimitiveStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n} = require('internal/fs/utils');\nconst {\n  Dir\x2C\n  opendir\x2C\n  opendirSync\n} = require('internal/fs/dir');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isUint32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst watchers = require('internal/fs/watchers');\nconst ReadFileContext = require('internal/fs/read_file_context');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\nfunction maybeCallback(cb) {\n  validateCallback(cb);\n\n  return cb;\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateCallback(cb);\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateCallback(cb);\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isUint32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n\n  const ctx = { path };\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  maybeCallback(callback);\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n  const ctx = { path };\n  const nPath = pathModule.toNamespacedPath(path);\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\n\n  // In case of an invalid symlink\x2C `binding.access()` on win32\n  // will **not** return an error and is therefore not enough.\n  // Double check with `binding.stat()`.\n  if (isWindows && ctx.errno === undefined) {\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\n  }\n\n  return ctx.errno === undefined;\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { flag: 'r' });\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const ctx = {};\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\n  if (ctx.errno !== undefined && !isUserFd) {\n    fs.closeSync(fd);\n    throw uvException(ctx);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  fd = getValidatedFd(fd);\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  fd = getValidatedFd(fd);\n\n  const ctx = {};\n  binding.close(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n\n  const ctx = { path };\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\n                              flagsNumber\x2C mode\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number} offsetOrOptions\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  callback = maybeCallback(callback);\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offset]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  if (arguments.length <= 3) {\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\n    const options = offset || kEmptyObject;\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = options);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  const ctx = {};\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string | object} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback = maybeCallback(callback || position || length || offset);\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = String(buffer);\n  validateEncoding(str\x2C length);\n  callback = maybeCallback(position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const ctx = { path: oldPath\x2C dest: newPath };\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = maybeCallback(callback);\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  const ctx = {};\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          return binding.rmdir(path\x2C req);\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    return binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  const ctx = { path };\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  return handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  path = getValidatedPath(path);\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fsync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const ctx = { path };\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\n                               undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Direct[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                 options.encoding\x2C !!options.withFileTypes\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  fd = getValidatedFd(fd);\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction hasNoEntryError(ctx) {\n  if (ctx.errno) {\n    const uvErr = uvErrmapGet(ctx.errno);\n    return uvErr?.[0] === 'ENOENT';\n  }\n\n  if (ctx.error) {\n    return ctx.error.code === 'ENOENT';\n  }\n\n  return false;\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  fd = getValidatedFd(fd);\n  const ctx = { fd };\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                              options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\n                             options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const ctx = { path };\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                                  options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  const flags = stringToSymlinkType(type);\n\n  const ctx = { path: target\x2C dest: path };\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const ctx = { path: existingPath\x2C dest: newPath };\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                              pathModule.toNamespacedPath(newPath)\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  const ctx = {};\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  callback = maybeCallback(callback);\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  const ctx = { path };\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const ctx = {};\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\n                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  const ctx = {};\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (isUserFd) {\n        callback(null);\n      } else {\n        fs.close(fd\x2C callback);\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  const flag = options.flag || 'w';\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n  if (options.recursive && !(isOSX || isWindows))\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\n  const watcher = new watchers.FSWatcher();\n  watcher[watchers.kFSWatchStart](filename\x2C\n                                  options.persistent\x2C\n                                  options.recursive\x2C\n                                  options.encoding);\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      options.signal.addEventListener('abort'\x2C listener);\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const ctx = { path: base };\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n    handleErrorFromBinding(ctx);\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const ctx = { path: base };\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        const ctx = { path: base };\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const ctx = { path: base };\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  return binding.realpath(path\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const path = `${prefix}XXXXXX`;\n  const ctx = { path };\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  const ctx = { path: src\x2C dest };  // non-prefixed\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  opendir\x2C\n  opendirSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dir\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\n};\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\n  }\n});\n
code-source-info,0x224cfd0c7df6,83,65535,69426,C0O65552C6O65562C12O65585C18O65589C24O65611C28O65644C38O65659C44O65659C48O65678C54O65693C60O65693C67O65722C69O65730C71O65729C75O65777C79O65782C85O65784C94O65794C96O65823C98O65848C99O65874C105O65874C111O65909C117O65909C123O65943C126O65990C128O66065C130O66160C132O66236C134O66270C140O66287C146O66317C151O66399C157O66432C165O66440C172O66452C178O66460C186O66466C190O66477C196O66477C212O66460C217O66529C223O66529C227O66572C233O66572C238O66715C242O66711C247O66770C253O66770C259O66792C262O66816C264O66827C269O66856C275O66856C282O66892C284O66903C291O66915C293O66931C297O66953C304O66980C306O66991C312O67027C323O66991C335O67039C337O67057C350O67057C355O67055C359O67101C361O67114C365O67201C371O67201C385O67219C391O67221C403O67231C408O67249C414O67264C418O67272C426O67284C430O67253C443O67317C447O67325C455O67337C459O67306C466O67358C468O67379C470O67404C472O67450C479O67455C485O67457C494O67472C496O67505C503O67687C509O67698C515O67698C521O67740C529O67748C536O67776C542O67784C560O67784C566O67829C572O67829C576O67865C582O67888C586O67870C593O67918C599O67918C604O67937C611O67942C617O67944C626O67969C628O68123C631O68139C634O68149C640O68187C647O68216C656O68187C663O68246C671O68275C680O68246C687O68293C701O68308C707O68337C713O68337C720O68381C726O68381C733O68414C737O68461C745O68469C752O68485C758O68493C776O68493C781O68540C787O68540C791O68577C797O68598C815O68598C822O68653C828O68653C832O68696C838O68722C844O68722C851O68760C858O68765C864O68767C873O68798C879O68824C885O68824C891O68897C897O68912C905O68934C909O68934C916O68912C924O68993C930O69010C936O69042C941O69128C947O69156C953O69156C960O69187C968O69195C975O69209C981O69217C989O69223C993O69234C999O69234C1015O69217C1020O69288C1026O69288C1030O69333C1036O69333C1041O66700C1047O69357C1054O69362C1060O69364C1069O69384C1073O69391C1078O69424,,
tick,0x7f4077328658,96274,0,0x0,3,0x11d7ee0,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407774af35,96362,0,0x0,3,0x11d7ee0,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x10f59c4,96471,0,0x0,3,0x11d7ee0,0x224cfd0c7dfc,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,96583,0x224cfd0ce676,135,getOptions node:internal/fs/utils:318:20,0x1d94759c8d50,~
script-source,84,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  MathMin\x2C\n  ObjectIs\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  Symbol\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\n  }\x2C\n  hideStackFrames\x2C\n  uvException\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isDate\x2C\n  isBigUint64Array\n} = require('internal/util/types');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\n    }\n  }\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GiB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type) {\n    this.name = name;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats) {\n    super(name\x2C null);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\n    return new DirentFromStats(name\x2C stats);\n  } else {\n    return new Dirent(name\x2C type);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\n  if (options == null || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = uvException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\n// otherwise return silently.\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  const err = new ERR_INVALID_ARG_VALUE(\n    propName\x2C\n    path\x2C\n    'must be a string or Uint8Array without null bytes'\n  );\n  if (throwError) {\n    throw err;\n  }\n  return err;\n});\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() to the timestamp.\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\nfunction dateFromMs(ms) {\n  return new Date(Number(ms) + 0.5);\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\nStats.prototype.isFile = StatsBase.prototype.isFile;\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigUint64Array} stats\n * @param {number} offset\n * @returns {BigIntStats | Stats}\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigUint64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C\n                                 `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32(length\x2C 'length'\x2C 0);\n  }\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const err = nullCheck(path\x2C propName\x2C false);\n\n  if (err !== undefined) {\n    throw err;\n  }\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n  verbatimSymlinks: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\n  if (options.dereference === true && options.verbatimSymlinks === true) {\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\n  }\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      return cb(new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      }));\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned = process.noDeprecation;\nfunction emitRecursiveRmdirWarning() {\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean(options.recursive\x2C 'options.recursive');\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\n    return mode;\n  }\n  if (typeof mode !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\n  }\n  throw new ERR_OUT_OF_RANGE(\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer === 'string') {\n    return;\n  }\n\n  if (\n    typeof buffer === 'object' &&\n    buffer !== null &&\n    typeof buffer.toString === 'function' &&\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\n  ) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n    buffer\n  );\n});\n\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      buffer\n    );\n  }\n});\n\nconst validatePosition = hideStackFrames((position\x2C name) => {\n  if (typeof position === 'number') {\n    validateInteger(position\x2C 'position');\n  } else if (typeof position === 'bigint') {\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\n      throw new ERR_OUT_OF_RANGE('position'\x2C\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\n                                 position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\n                                   ['integer'\x2C 'bigint']\x2C\n                                   position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  validatePrimitiveStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n};\n
code-source-info,0x224cfd0ce676,84,7278,7884,C9O7305C16O7323C27O7383C29O7405C30O7413C36O7452C41O7496C43O7520C47O7535C54O7570C60O7609C78O7615C83O7609C84O7702C91O7711C96O7729C99O7752C104O7729C108O7778C114O7806C119O7834C127O7806C132O7867C134O7882,,
tick,0x7f407774af20,98167,0,0x0,3,0x11d7ee0,0x224cfd0c7dfc,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,98273,0x224cfd0d066e,48,assertEncoding node:internal/fs/utils:155:24,0x1d94759c8758,~
code-source-info,0x224cfd0d066e,84,3587,3764,C0O3602C6O3619C9O3626C14O3626C21O3669C24O3696C40O3702C45O3696C47O3763,,
code-creation,LazyCompile,10,98422,0x224cfd0d0786,20,toPathIfFileURL node:internal/url:1513:25,0x3e83b616f1e0,~
script-source,39,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  Int8Array\x2C\n  Number\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  toUSVString\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateCallback\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst {\n  domainToASCII: _domainToASCII\x2C\n  domainToUnicode: _domainToUnicode\x2C\n  encodeAuth\x2C\n  parse\x2C\n  setURLConstructor\x2C\n  URL_FLAGS_CANNOT_BE_BASE\x2C\n  URL_FLAGS_HAS_FRAGMENT\x2C\n  URL_FLAGS_HAS_HOST\x2C\n  URL_FLAGS_HAS_PASSWORD\x2C\n  URL_FLAGS_HAS_PATH\x2C\n  URL_FLAGS_HAS_QUERY\x2C\n  URL_FLAGS_HAS_USERNAME\x2C\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\n  URL_FLAGS_SPECIAL\x2C\n  kFragment\x2C\n  kHost\x2C\n  kHostname\x2C\n  kPathStart\x2C\n  kPort\x2C\n  kQuery\x2C\n  kSchemeStart\n} = internalBinding('url');\n\nconst {\n  storeDataObject\x2C\n  revokeDataObject\x2C\n} = internalBinding('blob');\n\nconst context = Symbol('context');\nconst cannotBeBase = Symbol('cannot-be-base');\nconst cannotHaveUsernamePasswordPort =\n    Symbol('cannot-have-username-password-port');\nconst special = Symbol('special');\nconst searchParams = Symbol('query');\nconst kFormat = Symbol('format');\n\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nconst IteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf([][SymbolIterator]())\n);\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\nconst kOpaqueOrigin = 'null';\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  constructor() {\n    this.flags = 0;\n    this.scheme = ':';\n    this.username = '';\n    this.password = '';\n    this.host = null;\n    this.port = null;\n    this.path = [];\n    this.query = null;\n    this.fragment = null;\n  }\n}\n\nfunction isURLSearchParams(self) {\n  return self && self[searchParams] && !self[searchParams][searchParams];\n}\n\nclass URLSearchParams {\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    if (init === null || init === undefined) {\n      this[searchParams] = [];\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator]) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init[searchParams];\n        this[searchParams] = childParams.slice();\n      } else if (method !== null && method !== undefined) {\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // Sequence<sequence<USVString>>\n        // Note: per spec we have to first exhaust the lists then process them\n        const pairs = [];\n        for (const pair of init) {\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\n              pair === null ||\n              typeof pair[SymbolIterator] !== 'function') {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          const convertedPair = [];\n          for (const element of pair)\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\n          ArrayPrototypePush(pairs\x2C convertedPair);\n        }\n\n        this[searchParams] = [];\n        for (const pair of pairs) {\n          if (pair.length !== 2) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = {};\n        this[searchParams] = [];\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = toUSVString(key);\n            const typedValue = toUSVString(init[key]);\n\n            // Two different key may result same after `toUSVString()`\x2C we only\n            // leave the later one. Refers to WPT.\n            if (visited[typedKey] !== undefined) {\n              this[searchParams][visited[typedKey]] = typedValue;\n            } else {\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\n                                                     typedKey\x2C\n                                                     typedValue) - 1;\n            }\n          }\n        }\n      }\n    } else {\n      // USVString\n      init = toUSVString(init);\n      if (init[0] === '?') init = init.slice(1);\n      initSearchParams(this\x2C init);\n    }\n\n    // "associated url object"\n    this[context] = null;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this[searchParams];\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  append(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = toUSVString(name);\n    value = toUSVString(value);\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\n    update(this[context]\x2C this);\n  }\n\n  delete(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        list.splice(i\x2C 2);\n      } else {\n        i += 2;\n      }\n    }\n    update(this[context]\x2C this);\n  }\n\n  get(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    const values = [];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    value = toUSVString(value);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  sort() {\n    const a = this[searchParams];\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateCallback(callback);\n\n    let list = this[searchParams];\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this[searchParams];\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this[searchParams]);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n  if (!this[searchParams]) { // Invoked from URL constructor\n    this[searchParams] = new URLSearchParams();\n    this[searchParams][context] = this;\n  }\n  initSearchParams(this[searchParams]\x2C query);\n}\n\nfunction onParseError(input\x2C flags) {\n  throw new ERR_INVALID_URL(input);\n}\n\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\n    ctx.flags |= URL_FLAGS_SPECIAL;\n  } else {\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\n  }\n  ctx.scheme = protocol;\n  ctx.port = port;\n}\n\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  } else {\n    ctx.host = null;\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].port = port;\n}\n\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\n}\n\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\n    ctx.path = path;\n    ctx.flags |= URL_FLAGS_HAS_PATH;\n  } else {\n    ctx.path = [];\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\n  }\n\n  // The C++ binding may set host to empty string.\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].query = query;\n}\n\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].fragment = fragment;\n}\n\nclass URL {\n  constructor(input\x2C base = undefined) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    let base_context;\n    if (base !== undefined) {\n      base_context = new URL(base)[context];\n    }\n    this[context] = new URLContext();\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\n  }\n\n  get [special]() {\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\n  }\n\n  get [cannotBeBase]() {\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\n  }\n\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  get [cannotHaveUsernamePasswordPort]() {\n    const { host\x2C scheme } = this[context];\n    return ((host == null || host === '') ||\n            this[cannotBeBase] ||\n            scheme === 'file:');\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (this == null ||\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\n      throw new ERR_INVALID_THIS('URL');\n    }\n\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = ObjectCreate({ constructor });\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj.cannotBeBase = this[cannotBeBase];\n      obj.special = this[special];\n      obj[context] = this[context];\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  [kFormat](options) {\n    if (options)\n      validateObject(options\x2C 'options');\n\n    options = {\n      fragment: true\x2C\n      unicode: false\x2C\n      search: true\x2C\n      auth: true\x2C\n      ...options\n    };\n    const ctx = this[context];\n    // https://url.spec.whatwg.org/#url-serializing\n    let ret = ctx.scheme;\n    if (ctx.host !== null) {\n      ret += '//';\n      const has_username = ctx.username !== '';\n      const has_password = ctx.password !== '';\n      if (options.auth && (has_username || has_password)) {\n        if (has_username)\n          ret += ctx.username;\n        if (has_password)\n          ret += `:${ctx.password}`;\n        ret += '@';\n      }\n      ret += options.unicode ?\n        domainToUnicode(ctx.host) : ctx.host;\n      if (ctx.port !== null)\n        ret += `:${ctx.port}`;\n    }\n    if (this[cannotBeBase]) {\n      ret += ctx.path[0];\n    } else {\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\n        ret += '/.';\n      }\n      if (ctx.path.length) {\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\n      }\n    }\n    if (options.search && ctx.query !== null)\n      ret += `?${ctx.query}`;\n    if (options.fragment && ctx.fragment !== null)\n      ret += `#${ctx.fragment}`;\n    return ret;\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  toString() {\n    return this[kFormat]({});\n  }\n\n  get href() {\n    return this[kFormat]({});\n  }\n\n  set href(input) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\n  }\n\n  // readonly\n  get origin() {\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\n    const ctx = this[context];\n    switch (ctx.scheme) {\n      case 'blob:':\n        if (ctx.path.length > 0) {\n          try {\n            return (new URL(ctx.path[0])).origin;\n          } catch {\n            // Fall through... do nothing\n          }\n        }\n        return kOpaqueOrigin;\n      case 'ftp:':\n      case 'http:':\n      case 'https:':\n      case 'ws:':\n      case 'wss:':\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\n    }\n    return kOpaqueOrigin;\n  }\n\n  get protocol() {\n    return this[context].scheme;\n  }\n\n  set protocol(scheme) {\n    // toUSVString is not needed.\n    scheme = `${scheme}`;\n    if (scheme.length === 0)\n      return;\n    const ctx = this[context];\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\n  }\n\n  get username() {\n    return this[context].username;\n  }\n\n  set username(username) {\n    // toUSVString is not needed.\n    username = `${username}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (username === '') {\n      ctx.username = '';\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\n      return;\n    }\n    ctx.username = encodeAuth(username);\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\n  }\n\n  get password() {\n    return this[context].password;\n  }\n\n  set password(password) {\n    // toUSVString is not needed.\n    password = `${password}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (password === '') {\n      ctx.password = '';\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\n      return;\n    }\n    ctx.password = encodeAuth(password);\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\n  }\n\n  get host() {\n    const ctx = this[context];\n    let ret = ctx.host || '';\n    if (ctx.port !== null)\n      ret += `:${ctx.port}`;\n    return ret;\n  }\n\n  set host(host) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\n  }\n\n  get hostname() {\n    return this[context].host || '';\n  }\n\n  set hostname(host) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\n  }\n\n  get port() {\n    const port = this[context].port;\n    return port === null ? '' : String(port);\n  }\n\n  set port(port) {\n    // toUSVString is not needed.\n    port = `${port}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (port === '') {\n      ctx.port = null;\n      return;\n    }\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\n  }\n\n  get pathname() {\n    const ctx = this[context];\n    if (this[cannotBeBase])\n      return ctx.path[0];\n    if (ctx.path.length === 0)\n      return '';\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\n  }\n\n  set pathname(path) {\n    // toUSVString is not needed.\n    path = `${path}`;\n    if (this[cannotBeBase])\n      return;\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\n          onParsePathComplete.bind(this));\n  }\n\n  get search() {\n    const { query } = this[context];\n    if (query === null || query === '')\n      return '';\n    return `?${query}`;\n  }\n\n  set search(search) {\n    const ctx = this[context];\n    search = toUSVString(search);\n    if (search === '') {\n      ctx.query = null;\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n    } else {\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\n      ctx.query = '';\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\n      if (search) {\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\n      }\n    }\n    initSearchParams(this[searchParams]\x2C search);\n  }\n\n  // readonly\n  get searchParams() {\n    return this[searchParams];\n  }\n\n  get hash() {\n    const { fragment } = this[context];\n    if (fragment === null || fragment === '')\n      return '';\n    return `#${fragment}`;\n  }\n\n  set hash(hash) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    hash = `${hash}`;\n    if (!hash) {\n      ctx.fragment = null;\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\n      return;\n    }\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\n    ctx.fragment = '';\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\n  }\n\n  toJSON() {\n    return this[kFormat]({});\n  }\n\n  static createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    // Yes\x2C lazy loading is annoying but because of circular\n    // references between the url\x2C internal/blob\x2C and buffer\n    // modules\x2C lazy loading here makes sure that things work.\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  static revokeObjectURL(url) {\n    url = `${url}`;\n    try {\n      const parsed = new URL(url);\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\n      if (split.length === 2)\n        revokeDataObject(split[1]);\n    } catch {\n      // If there's an error\x2C it's ignored.\n    }\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nfunction update(url\x2C params) {\n  if (!url)\n    return;\n\n  const ctx = url[context];\n  const serializedParams = params.toString();\n  if (serializedParams) {\n    ctx.query = serializedParams;\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\n  } else {\n    ctx.query = null;\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n  }\n}\n\nfunction initSearchParams(url\x2C init) {\n  if (!init) {\n    url[searchParams] = [];\n    return;\n  }\n  url[searchParams] = parseParams(init);\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let pairStart = 0;\n  let lastPos = 0;\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i;\n  for (i = 0; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// Mainly to mitigate func-name-matching ESLint rule\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\n  // https://heycam.github.io/webidl/#dfn-class-string\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: classStr\n  });\n\n  // https://heycam.github.io/webidl/#es-operations\n  for (const key of ObjectKeys(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\nfunction createSearchParamsIterator(target\x2C kind) {\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\n  iterator[context] = {\n    target\x2C\n    kind\x2C\n    index: 0\n  };\n  return iterator;\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\n\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\n  next() {\n    if (!this ||\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n    }\n\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const values = target[searchParams];\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this[context].index = index + 2;\n\n    let result;\n    if (kind === 'key') {\n      result = name;\n    } else if (kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\n    };\n  }\x2C\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (this == null || this[context] == null || this[context].target == null)\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\n    );\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n});\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToUnicode(`${domain}`);\n}\n\n// Utility function that converts a URL object into an ordinary\n// options object as expected by the http.request and https.request\n// APIs.\nfunction urlToHttpOptions(url) {\n  const options = {\n    protocol: url.protocol\x2C\n    hostname: typeof url.hostname === 'string' &&\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\n      url.hostname\x2C\n    hash: url.hash\x2C\n    search: url.search\x2C\n    pathname: url.pathname\x2C\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\n    href: url.href\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\n  }\n  return options;\n}\n\nconst forwardSlashRegEx = /\\//g;\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\n        );\n      }\n    }\n  }\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = pathname.codePointAt(1) | 0x20;\n  const sep = pathname[2];\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return pathname.slice(1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURLInstance(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\n\nfunction encodePathChars(filepath) {\n  if (StringPrototypeIncludes(filepath\x2C '%'))\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath) {\n  const outURL = new URL('file://');\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    // UNC path format: \\\\server\\share\\resource\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\n    if (paths.length <= 3) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\n      );\n    }\n    const hostname = paths[2];\n    if (hostname.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Empty UNC servername'\n      );\n    }\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\n  } else {\n    let resolved = path.resolve(filepath);\n    // path.resolve strips trailing slashes so we must add them back\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                   filepath.length - 1);\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\n        resolved[resolved.length - 1] !== path.sep)\n      resolved += '/';\n    outURL.pathname = encodePathChars(resolved);\n  }\n  return outURL;\n}\n\nfunction isURLInstance(fileURLOrPath) {\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURLInstance(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = new URLContext();\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n\n  const url = ObjectCreate(URL.prototype);\n  url[context] = ctx;\n  const params = new URLSearchParams();\n  url[searchParams] = params;\n  params[context] = url;\n  initSearchParams(params\x2C query);\n  return url;\n}\nsetURLConstructor(constructUrl);\n\nmodule.exports = {\n  toUSVString\x2C\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  isURLInstance\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  formatSymbol: kFormat\x2C\n  searchParamsSymbol: searchParams\x2C\n  encodeStr\n};\n
code-source-info,0x224cfd0d0786,39,42148,42269,C0O42168C3O42173C9O42207C11O42228C12O42231C15O42238C19O42267,,
tick,0x7f407774b821,100034,0,0x0,3,0x11d7ee0,0x224cfd0c7e08,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,100149,0x224cfd0d393e,17,isURLInstance node:internal/url:1509:23,0x3e83b616f190,~
code-source-info,0x224cfd0d393e,39,42025,42122,C0O42045C3O42066C6O42091C12O42113C16O42120,,
tick,0x7f407774b7e0,100279,0,0x0,3,0x11d7ee0,0x224cfd0c7e08,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,100395,0x224cfd0d3a9e,81, node:internal/fs/utils:671:38,0x1d94759c9778,~
code-source-info,0x224cfd0d3a9e,84,18212,18482,C14O18245C22O18278C25O18278C31O18304C36O18335C49O18310C54O18304C55O18400C68O18400C74O18437C76O18466C78O18466C80O18481,,
code-creation,LazyCompile,10,100475,0x224cfd0d3cae,110, node:internal/fs/utils:360:35,0x1d94759c8df0,~
code-source-info,0x224cfd0d3cae,84,8612,9201,C16O8676C21O8729C26O8729C31O8823C37O8846C41O8874C45O8891C51O8891C60O8942C64O8963C69O8963C76O9008C77O9015C78O9035C94O9035C100O9149C104O9171C106O9171C107O9188C109O9199,,
code-creation,LazyCompile,10,100553,0x224cfd0d3e26,16,isUint8Array node:internal/util/types:13:22,0x1d4983485250,~
script-source,17,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\x2C\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\n  }\x2C\n  isCryptoKey: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\n  }\n});\n
code-source-info,0x224cfd0d3e26,17,257,342,C0O269C5O276C12O323C15O340,,
code-creation,LazyCompile,10,100732,0x224cfd0d42ae,61,splitRoot node:fs:2416:33,0x456f10bb9d8,~
code-source-info,0x224cfd0d42ae,83,64375,64567,C0O64400C2O64411C6O64405C11O64432C16O64436C24O64474C26O64470C31O64502C44O64509C49O64541C50O64421C55O64387C58O64552C60O64563,,
tick,0x7f40773a70af,100840,0,0x0,3,0x11d7ee0,0x224cfd0c7e82,0x224cfd0c79f1,0x224cfd0c7359,0x224cfd0c57f8,0x224cfd0c43f8,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,100968,0x224cfd0d43e6,20,nextPart node:fs:2449:31,0x456f10bba78,~
code-source-info,0x224cfd0d43e6,83,65282,65340,C0O65295C14O65302C19O65336,,
code-creation,LazyCompile,10,101094,0x224cfd0d44ee,63,handleErrorFromBinding node:internal/fs/utils:343:32,0x1d94759c8da0,~
code-source-info,0x224cfd0d44ee,84,7973,8471,C0O7991C6O8054C11O8054C16O8076C24O8076C29O8133C31O8133C32O8158C38O8386C43O8413C51O8386C56O8459C60O8449C62O8470,,
code-creation,LazyCompile,10,101169,0x224cfd0d463e,34,isFileType node:fs:213:20,0x456f10b9778,~
code-source-info,0x224cfd0d463e,83,5461,5702,C0O5595C2O5600C6O5607C10O5641C15O5648C20O5664C22O5679C24O5677C30O5687C33O5700,,
code-creation,LazyCompile,10,101299,0x224cfd0d4856,72,encodeRealpathResult node:fs:2425:30,0x456f10bba28,~
code-source-info,0x224cfd0d4856,83,64601,64859,C0O64623C4O64648C10O64668C17O64677C22O64693C24O64707C25O64727C30O64734C35O64734C41O64762C48O64771C53O64791C55O64807C56O64830C61O64847C66O64830C71O64857,,
code-creation,LazyCompile,10,101398,0x224cfd0d4a6e,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0xa26aaacfb8,~
code-source-info,0x224cfd0d4a6e,105,1151,1431,C0O1187C5O1200C10O1204C15O1204C21O1221C26O1228C35O1258C43O1258C48O1384C53O1384C57O1414C59O1425C61O1430,,
code-creation,LazyCompile,10,101513,0x224cfd0d5436,246,Module.load node:internal/modules/cjs/loader:992:33,0xa26aab2c40,~
code-source-info,0x224cfd0d5436,106,30978,31791,C0O30993C8O31039C16O30993C21O31047C26O31060C32O31047C36O31071C38O31085C42O31099C45O31119C52O31136C55O31141C60O31141C66O31119C71O31110C75O31182C78O31182C83O31259C91O31263C101O31316C106O31327C112O31341C124O31347C129O31341C130O31387C133O31394C140O31405C144O31416C150O31436C151O31448C155O31477C160O31486C165O31588C170O31623C175O31634C187O31674C192O31681C197O31681C204O31695C206O31693C211O31727C216O31736C221O31736C228O31761C233O31770C238O31770C245O31790,,
code-creation,LazyCompile,10,101646,0x224cfd0d57a6,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:424:40,0xa26aab20b8,~
code-source-info,0x224cfd0d57a6,106,12147,12576,C0O12175C5O12180C10O12180C16O12206C18O12230C20O12256C22O12324C36O12277C44O12324C49O12338C51O12357C55O12366C56O12376C61O12383C63O12430C68O12449C74O12488C77O12499C84O12510C89O12530C91O12554C92O12261C95O12561C97O12574,,
code-creation,LazyCompile,10,101762,0x224cfd0d5986,353,basename node:path:1306:11,0x3e83b617c738,~
code-source-info,0x224cfd0d
tick,0xd08700,101880,0,0x0,2,0x11d7ee0,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,101958,0x224cfd0d5e46,485,Module._extensions..js node:internal/modules/cjs/loader:1135:37,0xa26aab2de0,~
code-source-info,0x224cfd0d5e
code-creation,LazyCompile,10,102088,0x224cfd0d62a6,376,readFileSync node:fs:459:22,0x456f10b9bf8,~
code-source-info,0x224cfd0d62a
code-creation,LazyCompile,10,102183,0x224cfd0d6736,30,isEncoding node:buffer:535:40,0x1d49834b4c30,~
code-source-info,0x224cfd0d6736,24,14914,15046,C0O14929C6O14977C12O14984C20O15002C23O15002C28O15030C29O15044,,
code-creation,LazyCompile,10,102236,0x224cfd0d683e,30,normalizeEncoding node:internal/util:160:27,0x2ac22107f9c8,~
code-source-info,0x224cfd0d683e,15,4199,4304,C0O4209C7O4232C14O4250C19O4263C21O4277C22O4280C25O4287C29O4302,,
code-creation,LazyCompile,10,102298,0x224cfd0d69b6,113,openSync node:fs:585:18,0x456f10b9de0,~
code-source-info,0x224cfd0d69b6,83,14699,15078,C0O14723C5O14730C11O14776C16O14776C21O14800C37O14807C44O14858C51O14860C58O14885C63O14893C70O14898C73O14909C78O14909C95O14893C101O15031C106O15031C110O15062C112O15076,,
code-creation,LazyCompile,10,102356,0x224cfd0d6b36,37, node:internal/fs/utils:683:42,0x1d94759c97c8,~
code-source-info,0x224cfd0d6b36,84,18527,18662,C14O18582C19O18582C24O18616C29O18616C34O18648C36O18660,,
code-creation,LazyCompile,10,102446,0x224cfd0d6f0e,515,stringToFlags node:internal/fs/utils:558:23,0x1d94759c95e8,~
code-source-info,0x224cfd0d6f0e
code-creation,LazyCompile,10,102519,0x224cfd0d72fe,97,parseFileMode node:internal/validators:60:23,0x1d4983483d58,~
code-source-info,0x224cfd0d72fe,16,1502,1806,C0O1525C11O1542C17O1579C24O1603C27O1583C34O1638C41O1683C52O1644C57O1638C58O1704C66O1712C73O1745C89O1745C94O1791C96O1804,,
code-creation,LazyCompile,10,102554,0x224cfd0d7496,206, node:internal/validators:85:3,0x1d4983483e18,~
code-source-info,0x224cfd0d7496,16,2278,2853,C36O2419C42O2458C58O2464C63O2458C64O2523C67O2528C73O2552C78O2557C84O2591C100O2597C105O2591C106O2660C116O2699C129O2712C142O2666C147O2660C148O2737C150O2747C157O2762C162O2777C172O2816C185O2829C198O2783C203O2777C205O2852,,
code-creation,LazyCompile,10,102571,0x224cfd0d765e,9,isInt32 node:internal/validators:37:17,0x1d4983483880,~
code-source-info,0x224cfd0d765e,16,749,792,C0O761C2O785C5O774C8O790,,
code-creation,LazyCompile,10,102624,0x224cfd0d7766,66,tryStatSync node:fs:413:21,0x456f10b9b08,~
code-source-info,0x224cfd0d7766,83,10603,10813,C0O10634C2O10654C7O10662C22O10662C28O10706C36O10730C38O10746C43O10749C48O10749C53O10768C58O10774C62O10768C63O10798C65O10811,,
code-creation,LazyCompile,10,102673,0x224cfd0d78de,96,tryCreateBuffer node:fs:423:25,0x456f10b9b58,~
code-source-info,0x224cfd0d78de,83,10839,11126,C0O10876C2O10888C7O10908C9O10919C11O10917C16O10941C23O10947C28O10941C29O10990C34O11006C39O11006C45O11029C57O11035C58O11062C65O11076C67O11086C72O11089C77O11089C93O11110C95O11124,,
code-creation,LazyCompile,10,102691,0x224cfd0d7a36,17,allocUnsafe node:buffer:378:42,0x1d49834b47a8,~
code-source-info,0x224cfd0d7a36,24,11011,11066,C0O11022C5O11022C9O11042C12O11049C16O11064,,
code-creation,LazyCompile,10,102709,0x224cfd0d7b3e,54, node:buffer:354:36,0x1d49834b46f0,~
code-source-info,0x224cfd0d7b3e,24,10309,10464,C0O10323C8O10323C13O10355C14O10366C21O10382C23O10379C28O10401C33O10433C46O10407C51O10401C53O10463,,
code-creation,LazyCompile,10,102738,0x224cfd0d7cc6,177,validateNumber node:internal/validators:124:24,0x1d4983483f58,~
code-source-info,0x224cfd0d7cc6,16,3562,4007,C19O3602C25O3637C41O3643C46O3637C47O3695C54O3721C66O3753C83O3802C86O3802C92O3829C110O3898C136O3930C151O3974C169O3835C174O3829C176O4006,,
code-creation,LazyCompile,10,102766,0x224cfd0d7e8e,119,allocate node:buffer:403:18,0x1d49834b48f8,~
code-source-info,0x224cfd0d7e8e,24,11713,12028,C0O11724C1O11733C6O11745C11O11752C16O11769C17O11776C20O11795C24O11804C27O11785C32O11818C34O11830C39O11841C41O11839C44O11827C49O11860C52O11860C55O11888C62O11903C67O11914C75O11888C81O11937C88O11951C94O11948C100O11961C103O11961C106O11978C108O11987C109O11994C114O12001C118O12026,,
code-creation,LazyCompile,10,102853,0x224cfd0d8056,71,createUnsafeBuffer node:internal/buffer:1059:28,0x3e83b61428c0,~
code-source-info,0x224cfd0d8056,25,30321,30430,C0O30332C8O30344C15O30361C22O30368C39O30408C48O30420C70O30429,,
code-creation,LazyCompile,10,102946,0x224cfd0d81ae,86,tryReadSync node:fs:438:21,0x456f10b9ba8,~
code-source-info,0x224cfd0d81ae,83,11148,11383,C0O11197C2O11209C7O11232C12O11247C29O11247C35O11283C47O11289C48O11316C55O11330C57O11340C62O11343C67O11343C83O11364C85O11381,,
tick,0x1130301,103045,0,0x0,2,0x11d7ee0,0x224cfd0d81cb,0x224cfd0d6345,0x224cfd0d5e82,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,103073,0x224cfd0d839e,251,readSync node:fs:699:18,0x456f10b9eb0,~
code-source-info,0x224cfd0d839e,83,17764,18748,C0O17764C2O17807C7O17812C13O17835C18O17835C22O17876C29O17883C34O17958C40O17968C43O17996C55O18014C61O18030C68O18041C73O18057C82O18099C87O18125C92O18152C105O18152C110O18197C117O18213C118O18224C123O18237C124O18246C125O18265C131O18276C136O18289C152O18295C157O18289C158O18417C163O18465C174O18417C179O18481C184O18507C188O18525C196O18525C201O18580C203O18601C208O18609C233O18609C239O18701C244O18701C248O18732C250O18746,,
code-creation,LazyCompile,10,103108,0x224cfd0d8606,52, node:internal/fs/utils:689:40,0x1d94759c9818,~
code-source-info,0x224cfd0d8606,84,18705,18826,C14O18734C22O18738C29O18762C30O18771C31O18779C44O18779C49O18814C51O18824,,
code-creation,LazyCompile,10,103131,0x224cfd0d8776,51, node:internal/validators:200:40,0x1d4983484180,~
code-source-info,0x224cfd0d8776,16,6028,6258,C14O6061C19O6066C25O6099C30O6130C43O6105C48O6099C50O6257,,
code-creation,LazyCompile,10,103157,0x224cfd0d88ce,151, node:internal/validators:74:3,0x1d4983483dc8,~
code-source-info,0x224cfd0d88ce,16,1851,2232,C12O1871C25O1901C32O1934C38O1971C54O1977C59O1971C60O2030C65O2035C71O2065C87O2071C92O2065C93O2124C95O2134C102O2149C107O2162C117O2201C130O2214C143O2168C148O2162C150O2231,,
code-creation,LazyCompile,10,103231,0x224cfd0d8abe,103, node:internal/fs/utils:639:3,0x1d94759c96d8,~
code-source-info,0x224cfd0d8abe,84,17329,17708,C0O17369C1O17380C6O17393C22O17399C27O17393C28O17457C29O17468C34O17481C50O17487C55O17481C56O17545C58O17556C64O17565C69O17589C82O17678C95O17595C100O17589C102O17707,,
code-creation,LazyCompile,10,103269,0x224cfd0d8dc6,151, node:internal/fs/utils:904:42,0x1d94759c9b88,~
code-source-info,0x224cfd0d8dc6,84,24549,25107,C0O24573C6O24613C14O24613C21O24661C27O24701C32O24724C35O24719C37O24716C47O24750C53O24757C56O24744C61O24772C77O24855C80O24850C98O24875C104O24882C117O24778C122O24772C125O24955C143O24961C148O24955C150O25106,,
code-creation,LazyCompile,10,103325,0x224cfd0d8f7e,47,closeSync node:fs:535:19,0x456f10b9d08,~
code-source-info,0x224cfd0d8f7e,83,13568,13690,C0O13577C5O13582C11O13617C13O13623C18O13631C31O13631C36O13660C41O13660C46O13689,,
code-creation,LazyCompile,10,103408,0x224cfd0d90b6,162,toString node:buffer:790:46,0x1d49834b6630,~
code-source-info,0x224cfd0d90b6,24,23442,24004,C0O23442C2O23483C8O23490C13O23515C20O23533C25O23515C31O23541C32O23566C37O23577C38O23587C43O23597C48O23615C50O23625C55O23637C57O23647C58O23659C65O23674C71O23703C76O23714C83O23736C90O23749C92O23757C97O23771C99O23781C100O23785C104O23829C109O23829C115O23851C116O23867C119O23867C124O23895C126O23922C133O23928C138O23922C139O23978C156O23978C161O24002,,
code-creation,LazyCompile,10,103507,0x224cfd0d9376,499,getEncodingOps node:buffer:684:24,0x1d49834b6488,~
code-source-info,0x224cfd0d
code-creation,LazyCompile,10,103578,0x224cfd0d975e,12,slice node:buffer:599:12,0x1d49834b4e50,~
code-source-info,0x224cfd0d975e,24,16742,16788,C0O16767C5O16767C11O16788,,
code-creation,LazyCompile,10,103932,0x224cfd0d99de,499,Module._compile node:internal/modules/cjs/loader:1080:37,0xa26aab2d50,~
code-source-info,0x224cfd0d99de
code-creation,LazyCompile,10,104063,0x224cfd0d9f9e,274,maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29,0xa26aaa9ef0,~
code-source-info,0x224cfd0d9f9e,103,2489,3717,C0O2577C3O2577C7O2603C10O2617C15O2621C23O2641C25O2661C26O2668C30O2681C35O2692C44O2690C54O2825C64O2825C68O2841C69O2848C70O2869C80O2869C86O2972C88O3002C91O3030C96O3037C101O3002C107O3072C112O3092C117O3099C122O3121C126O3152C131O3170C136O3174C143O3203C150O3234C160O3264C166O3278C170O3170C178O3303C182O3334C187O3358C192O3362C200O3395C210O3425C216O3439C220O3358C228O3593C233O3611C238O3615C246O3648C256O3678C262O3692C266O3611C273O3716,,
code-creation,LazyCompile,10,104090,0x224cfd0dab86,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30,0xa26aaa9e50,~
code-source-info,0x224cfd0dab86,103,1668,1813,C0O1675C6O1718C11O1739C17O1739C22O1718C26O1786C30O1811,,
code-creation,LazyCompile,10,104123,0x224cfd0dacfe,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30,0xa26aaa9ea0,~
code-source-info,0x224cfd0dacfe,103,1844,2459,C0O1854C8O1854C13O1959C19O1959C24O1898C29O1924C34O1988C38O2017C42O2072C48O2072C53O2046C58O2128C64O2186C70O2345C76O2345C81O2318C86O2377C90O2433C92O2451C99O2458,,
tick,0x7f40773a70af,104242,0,0x0,3,0x11d7ee0,0x224cfd0dab9c,0x224cfd0d9fa1,0x224cfd0d9a34,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,104336,0x224cfd0dae76,30,validateBoolean node:internal/validators:148:25,0x1d4983483ff8,~
code-source-info,0x224cfd0dae76,16,4408,4519,C0O4426C6O4462C22O4468C27O4462C29O4518,,
code-creation,LazyCompile,10,104456,0x224cfd0db26e,165,wrapSafe node:internal/modules/cjs/loader:1040:18,0xa26aab2338,~
code-source-info,0x224cfd0db26e,106,32405,33401,C0O32405C9O32448C17O32483C22O32490C27O32490C33O32509C40O32519C45O32536C52O32553C56O32642C64O32519C70O32865C74O32882C81O32892C86O32908C98O33023C102O33039C113O32892C118O33276C130O33299C135O33311C142O33322C147O33351C157O33351C162O33385C164O33385,,
code-creation,LazyCompile,10,104634,0x224cfd0dba4e,475,compileFunction node:vm:316:25,0x1d94759dcba8,~
script-source,92,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Symbol\x2C\n  PromiseReject\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  ContextifyScript\x2C\n  MicrotaskQueue\x2C\n  makeContext\x2C\n  isContext: _isContext\x2C\n  constants\x2C\n  compileFunction: _compileFunction\x2C\n  measureMemory: _measureMemory\x2C\n} = internalBinding('contextify');\nconst {\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n} = require('internal/errors').codes;\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  emitExperimentalWarning\x2C\n  kEmptyObject\x2C\n  kVmBreakFirstLineSymbol\x2C\n} = require('internal/util');\nconst kParsingContext = Symbol('script parsing context');\n\nclass Script extends ContextifyScript {\n  constructor(code\x2C options = kEmptyObject) {\n    code = `${code}`;\n    if (typeof options === 'string') {\n      options = { filename: options };\n    } else {\n      validateObject(options\x2C 'options');\n    }\n\n    const {\n      filename = 'evalmachine.<anonymous>'\x2C\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      cachedData\x2C\n      produceCachedData = false\x2C\n      importModuleDynamically\x2C\n      [kParsingContext]: parsingContext\x2C\n    } = options;\n\n    validateString(filename\x2C 'options.filename');\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\n    // protects against that.\n    try { // eslint-disable-line no-useless-catch\n      super(code\x2C\n            filename\x2C\n            lineOffset\x2C\n            columnOffset\x2C\n            cachedData\x2C\n            produceCachedData\x2C\n            parsingContext);\n    } catch (e) {\n      throw e; /* node-do-not-add-exception-line */\n    }\n\n    if (importModuleDynamically !== undefined) {\n      validateFunction(importModuleDynamically\x2C\n                       'options.importModuleDynamically');\n      const { importModuleDynamicallyWrap } =\n        require('internal/vm/module');\n      const { callbackMap } = internalBinding('module_wrap');\n      callbackMap.set(this\x2C {\n        importModuleDynamically:\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\n      });\n    }\n  }\n\n  runInThisContext(options) {\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\n    }\n    return ReflectApply(super.runInContext\x2C this\x2C args);\n  }\n\n  runInContext(contextifiedObject\x2C options) {\n    validateContext(contextifiedObject);\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\n      contextifiedObject\x2C\n      options\x2C\n    );\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\n    }\n    return ReflectApply(super.runInContext\x2C this\x2C args);\n  }\n\n  runInNewContext(contextObject\x2C options) {\n    const context = createContext(contextObject\x2C getContextOptions(options));\n    return this.runInContext(context\x2C options);\n  }\n}\n\nfunction validateContext(contextifiedObject) {\n  if (!isContext(contextifiedObject)) {\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\n                                   contextifiedObject);\n  }\n}\n\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n\n  let timeout = options.timeout;\n  if (timeout === undefined) {\n    timeout = -1;\n  } else {\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\n  }\n\n  const {\n    displayErrors = true\x2C\n    breakOnSigint = false\x2C\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\n  } = options;\n\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n\n  return {\n    breakOnSigint\x2C\n    args: [\n      contextifiedObject\x2C\n      timeout\x2C\n      displayErrors\x2C\n      breakOnSigint\x2C\n      breakFirstLine\x2C\n    ]\x2C\n  };\n}\n\nfunction getContextOptions(options) {\n  if (!options)\n    return {};\n  const contextOptions = {\n    name: options.contextName\x2C\n    origin: options.contextOrigin\x2C\n    codeGeneration: undefined\x2C\n    microtaskMode: options.microtaskMode\x2C\n  };\n  if (contextOptions.name !== undefined)\n    validateString(contextOptions.name\x2C 'options.contextName');\n  if (contextOptions.origin !== undefined)\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\n  if (options.contextCodeGeneration !== undefined) {\n    validateObject(options.contextCodeGeneration\x2C\n                   'options.contextCodeGeneration');\n    const { strings\x2C wasm } = options.contextCodeGeneration;\n    if (strings !== undefined)\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\n    if (wasm !== undefined)\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\n    contextOptions.codeGeneration = { strings\x2C wasm };\n  }\n  if (options.microtaskMode !== undefined)\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\n  return contextOptions;\n}\n\nfunction isContext(object) {\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\n\n  return _isContext(object);\n}\n\nlet defaultContextNameIndex = 1;\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\n  if (isContext(contextObject)) {\n    return contextObject;\n  }\n\n  validateObject(options\x2C 'options');\n\n  const {\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\n    origin\x2C\n    codeGeneration\x2C\n    microtaskMode\n  } = options;\n\n  validateString(name\x2C 'options.name');\n  if (origin !== undefined)\n    validateString(origin\x2C 'options.origin');\n  if (codeGeneration !== undefined)\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\n\n  let strings = true;\n  let wasm = true;\n  if (codeGeneration !== undefined) {\n    ({ strings = true\x2C wasm = true } = codeGeneration);\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\n  }\n\n  let microtaskQueue = null;\n  if (microtaskMode !== undefined) {\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\n                  ['afterEvaluate'\x2C undefined]);\n\n    if (microtaskMode === 'afterEvaluate')\n      microtaskQueue = new MicrotaskQueue();\n  }\n\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\n  return contextObject;\n}\n\nfunction createScript(code\x2C options) {\n  return new Script(code\x2C options);\n}\n\n// Remove all SIGINT listeners and re-attach them after the wrapped function\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\n  const sigintListeners = process.rawListeners('SIGINT');\n\n  process.removeAllListeners('SIGINT');\n\n  try {\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\n  } finally {\n    // Add using the public methods so that the `newListener` handler of\n    // process can re-attach the listeners.\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\n      process.addListener('SIGINT'\x2C listener);\n    });\n  }\n}\n\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\n  validateContext(contextifiedObject);\n  if (typeof options === 'string') {\n    options = {\n      filename: options\x2C\n      [kParsingContext]: contextifiedObject\n    };\n  } else {\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\n  }\n  return createScript(code\x2C options)\n    .runInContext(contextifiedObject\x2C options);\n}\n\nfunction runInNewContext(code\x2C contextObject\x2C options) {\n  if (typeof options === 'string') {\n    options = { filename: options };\n  }\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\n  options = { ...options\x2C [kParsingContext]: contextObject };\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\n}\n\nfunction runInThisContext(code\x2C options) {\n  if (typeof options === 'string') {\n    options = { filename: options };\n  }\n  return createScript(code\x2C options).runInThisContext(options);\n}\n\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\n  validateString(code\x2C 'code');\n  if (params !== undefined) {\n    validateArray(params\x2C 'params');\n    ArrayPrototypeForEach(params\x2C\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\n  }\n\n  const {\n    filename = ''\x2C\n    columnOffset = 0\x2C\n    lineOffset = 0\x2C\n    cachedData = undefined\x2C\n    produceCachedData = false\x2C\n    parsingContext = undefined\x2C\n    contextExtensions = []\x2C\n    importModuleDynamically\x2C\n  } = options;\n\n  validateString(filename\x2C 'options.filename');\n  validateUint32(columnOffset\x2C 'options.columnOffset');\n  validateUint32(lineOffset\x2C 'options.lineOffset');\n  if (cachedData !== undefined)\n    validateBuffer(cachedData\x2C 'options.cachedData');\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n  if (parsingContext !== undefined) {\n    if (\n      typeof parsingContext !== 'object' ||\n      parsingContext === null ||\n      !isContext(parsingContext)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.parsingContext'\x2C\n        'Context'\x2C\n        parsingContext\n      );\n    }\n  }\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\n    const name = `options.contextExtensions[${i}]`;\n    validateObject(extension\x2C name\x2C { nullable: true });\n  });\n\n  const result = _compileFunction(\n    code\x2C\n    filename\x2C\n    lineOffset\x2C\n    columnOffset\x2C\n    cachedData\x2C\n    produceCachedData\x2C\n    parsingContext\x2C\n    contextExtensions\x2C\n    params\n  );\n\n  if (produceCachedData) {\n    result.function.cachedDataProduced = result.cachedDataProduced;\n  }\n\n  if (result.cachedData) {\n    result.function.cachedData = result.cachedData;\n  }\n\n  if (importModuleDynamically !== undefined) {\n    validateFunction(importModuleDynamically\x2C\n                     'options.importModuleDynamically');\n    const { importModuleDynamicallyWrap } =\n      require('internal/vm/module');\n    const { callbackMap } = internalBinding('module_wrap');\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\n    const func = result.function;\n    callbackMap.set(result.cacheKey\x2C {\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\n    });\n  }\n\n  return result.function;\n}\n\nconst measureMemoryModes = {\n  summary: constants.measureMemory.mode.SUMMARY\x2C\n  detailed: constants.measureMemory.mode.DETAILED\x2C\n};\n\nconst measureMemoryExecutions = {\n  default: constants.measureMemory.execution.DEFAULT\x2C\n  eager: constants.measureMemory.execution.EAGER\x2C\n};\n\nfunction measureMemory(options = kEmptyObject) {\n  emitExperimentalWarning('vm.measureMemory');\n  validateObject(options\x2C 'options');\n  const { mode = 'summary'\x2C execution = 'default' } = options;\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\n                                measureMemoryExecutions[execution]);\n  if (result === undefined) {\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\n  }\n  return result;\n}\n\nmodule.exports = {\n  Script\x2C\n  createContext\x2C\n  createScript\x2C\n  runInContext\x2C\n  runInNewContext\x2C\n  runInThisContext\x2C\n  isContext\x2C\n  compileFunction\x2C\n  measureMemory\x2C\n};\n\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\n// and vm.SyntheticModule in the pre-execution phase when\n// --experimental-vm-modules is on.\n
code-source-info,0x224cfd0dba4e
code-creation,LazyCompile,10,105221,0x224cfd0dcc5e,95, node:internal/validators:177:39,0x1d49834840b8,~
code-source-info,0x224cfd0dcc5e,16,5332,5610,C16O5368C21O5373C27O5400C43O5406C48O5400C49O5470C56O5477C61O5511C66O5534C71O5551C87O5557C92O5551C94O5609,,
code-creation,LazyCompile,10,105317,0x224cfd0dcdbe,27, node:vm:321:27,0x224cfd0db718,~
code-source-info,0x224cfd0dcdbe,92,9845,9896,C0O9859C10O9891C21O9859C26O9896,,
tick,0x157052d,105421,0,0x0,0,0x224cfd0dcc8f,0x224cfd0dba7c,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x115c648,106414,1,0xaf61c0,2,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0xd241a9,107492,1,0xaf61c0,2,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,108414,0x224cfd0e2566,5, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:1:1,0x224cfd0e2308,~
script-source,130,/home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js,/*! For license information please see bootloader.bundle.js.LICENSE.txt */\n(()=>{var __webpack_modules__={8586:(e\x2Ct\x2Cr)=>{"use strict";const s=r(3837)\x2Co=r(3610)\x2Cn=r(7514)\x2Ci=r(5266)\x2Ca=e=>""===e||"./"===e\x2Cc=(e\x2Ct\x2Cr)=>{t=[].concat(t)\x2Ce=[].concat(e);let s=new Set\x2Co=new Set\x2Ci=new Set\x2Ca=0\x2Cc=e=>{i.add(e.output)\x2Cr&&r.onResult&&r.onResult(e)};for(let i=0;i<t.length;i++){let l=n(String(t[i])\x2C{...r\x2ConResult:c}\x2C!0)\x2Cu=l.state.negated||l.state.negatedExtglob;u&&a++;for(let t of e){let e=l(t\x2C!0);(u?!e.isMatch:e.isMatch)&&(u?s.add(e.output):(s.delete(e.output)\x2Co.add(e.output)))}}let l=(a===t.length?[...i]:[...o]).filter((e=>!s.has(e)));if(r&&0===l.length){if(!0===r.failglob)throw new Error(`No matches found for "${t.join("\x2C ")}"`);if(!0===r.nonull||!0===r.nullglob)return r.unescape?t.map((e=>e.replace(/\\\\/g\x2C""))):t}return l};c.match=c\x2Cc.matcher=(e\x2Ct)=>n(e\x2Ct)\x2Cc.any=c.isMatch=(e\x2Ct\x2Cr)=>n(t\x2Cr)(e)\x2Cc.not=(e\x2Ct\x2Cr={})=>{t=[].concat(t).map(String);let s=new Set\x2Co=[]\x2Cn=new Set(c(e\x2Ct\x2C{...r\x2ConResult:e=>{r.onResult&&r.onResult(e)\x2Co.push(e.output)}}));for(let e of o)n.has(e)||s.add(e);return[...s]}\x2Cc.contains=(e\x2Ct\x2Cr)=>{if("string"!=typeof e)throw new TypeError(`Expected a string: "${s.inspect(e)}"`);if(Array.isArray(t))return t.some((t=>c.contains(e\x2Ct\x2Cr)));if("string"==typeof t){if(a(e)||a(t))return!1;if(e.includes(t)||e.startsWith("./")&&e.slice(2).includes(t))return!0}return c.isMatch(e\x2Ct\x2C{...r\x2Ccontains:!0})}\x2Cc.matchKeys=(e\x2Ct\x2Cr)=>{if(!i.isObject(e))throw new TypeError("Expected the first argument to be an object");let s=c(Object.keys(e)\x2Ct\x2Cr)\x2Co={};for(let t of s)o[t]=e[t];return o}\x2Cc.some=(e\x2Ct\x2Cr)=>{let s=[].concat(e);for(let e of[].concat(t)){let t=n(String(e)\x2Cr);if(s.some((e=>t(e))))return!0}return!1}\x2Cc.every=(e\x2Ct\x2Cr)=>{let s=[].concat(e);for(let e of[].concat(t)){let t=n(String(e)\x2Cr);if(!s.every((e=>t(e))))return!1}return!0}\x2Cc.all=(e\x2Ct\x2Cr)=>{if("string"!=typeof e)throw new TypeError(`Expected a string: "${s.inspect(e)}"`);return[].concat(t).every((t=>n(t\x2Cr)(e)))}\x2Cc.capture=(e\x2Ct\x2Cr)=>{let s=i.isWindows(r)\x2Co=n.makeRe(String(e)\x2C{...r\x2Ccapture:!0}).exec(s?i.toPosixSlashes(t):t);if(o)return o.slice(1).map((e=>void 0===e?"":e))}\x2Cc.makeRe=(...e)=>n.makeRe(...e)\x2Cc.scan=(...e)=>n.scan(...e)\x2Cc.parse=(e\x2Ct)=>{let r=[];for(let s of[].concat(e||[]))for(let e of o(String(s)\x2Ct))r.push(n.parse(e\x2Ct));return r}\x2Cc.braces=(e\x2Ct)=>{if("string"!=typeof e)throw new TypeError("Expected a string");return t&&!0===t.nobrace||!/\\{.*\\}/.test(e)?[e]:o(e\x2Ct)}\x2Cc.braceExpand=(e\x2Ct)=>{if("string"!=typeof e)throw new TypeError("Expected a string");return c.braces(e\x2C{...t\x2Cexpand:!0})}\x2Ce.exports=c}\x2C3610:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5226)\x2Co=r(7104)\x2Cn=r(5341)\x2Ci=r(8707)\x2Ca=(e\x2Ct={})=>{let r=[];if(Array.isArray(e))for(let s of e){let e=a.create(s\x2Ct);Array.isArray(e)?r.push(...e):r.push(e)}else r=[].concat(a.create(e\x2Ct));return t&&!0===t.expand&&!0===t.nodupes&&(r=[...new Set(r)])\x2Cr};a.parse=(e\x2Ct={})=>i(e\x2Ct)\x2Ca.stringify=(e\x2Ct={})=>s("string"==typeof e?a.parse(e\x2Ct):e\x2Ct)\x2Ca.compile=(e\x2Ct={})=>("string"==typeof e&&(e=a.parse(e\x2Ct))\x2Co(e\x2Ct))\x2Ca.expand=(e\x2Ct={})=>{"string"==typeof e&&(e=a.parse(e\x2Ct));let r=n(e\x2Ct);return!0===t.noempty&&(r=r.filter(Boolean))\x2C!0===t.nodupes&&(r=[...new Set(r)])\x2Cr}\x2Ca.create=(e\x2Ct={})=>""===e||e.length<3?[e]:!0!==t.expand?a.compile(e\x2Ct):a.expand(e\x2Ct)\x2Ce.exports=a}\x2C7104:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8459)\x2Co=r(3991);e.exports=(e\x2Ct={})=>{let r=(e\x2Cn={})=>{let i=o.isInvalidBrace(n)\x2Ca=!0===e.invalid&&!0===t.escapeInvalid\x2Cc=!0===i||!0===a\x2Cl=!0===t.escapeInvalid?"\\\\":""\x2Cu="";if(!0===e.isOpen)return l+e.value;if(!0===e.isClose)return l+e.value;if("open"===e.type)return c?l+e.value:"(";if("close"===e.type)return c?l+e.value:")";if("comma"===e.type)return"comma"===e.prev.type?"":c?e.value:"|";if(e.value)return e.value;if(e.nodes&&e.ranges>0){let r=o.reduce(e.nodes)\x2Cn=s(...r\x2C{...t\x2Cwrap:!1\x2CtoRegex:!0});if(0!==n.length)return r.length>1&&n.length>1?`(${n})`:n}if(e.nodes)for(let t of e.nodes)u+=r(t\x2Ce);return u};return r(e)}}\x2C7874:e=>{"use strict";e.exports={MAX_LENGTH:65536\x2CCHAR_0:"0"\x2CCHAR_9:"9"\x2CCHAR_UPPERCASE_A:"A"\x2CCHAR_LOWERCASE_A:"a"\x2CCHAR_UPPERCASE_Z:"Z"\x2CCHAR_LOWERCASE_Z:"z"\x2CCHAR_LEFT_PARENTHESES:"("\x2CCHAR_RIGHT_PARENTHESES:")"\x2CCHAR_ASTERISK:"*"\x2CCHAR_AMPERSAND:"&"\x2CCHAR_AT:"@"\x2CCHAR_BACKSLASH:"\\\\"\x2CCHAR_BACKTICK:"`"\x2CCHAR_CARRIAGE_RETURN:"\\r"\x2CCHAR_CIRCUMFLEX_ACCENT:"^"\x2CCHAR_COLON:":"\x2CCHAR_COMMA:"\x2C"\x2CCHAR_DOLLAR:"$"\x2CCHAR_DOT:"."\x2CCHAR_DOUBLE_QUOTE:'"'\x2CCHAR_EQUAL:"="\x2CCHAR_EXCLAMATION_MARK:"!"\x2CCHAR_FORM_FEED:"\\f"\x2CCHAR_FORWARD_SLASH:"/"\x2CCHAR_HASH:"#"\x2CCHAR_HYPHEN_MINUS:"-"\x2CCHAR_LEFT_ANGLE_BRACKET:"<"\x2CCHAR_LEFT_CURLY_BRACE:"{"\x2CCHAR_LEFT_SQUARE_BRACKET:"["\x2CCHAR_LINE_FEED:"\\n"\x2CCHAR_NO_BREAK_SPACE:"\xa0"\x2CCHAR_PERCENT:"%"\x2CCHAR_PLUS:"+"\x2CCHAR_QUESTION_MARK:"?"\x2CCHAR_RIGHT_ANGLE_BRACKET:">"\x2CCHAR_RIGHT_CURLY_BRACE:"}"\x2CCHAR_RIGHT_SQUARE_BRACKET:"]"\x2CCHAR_SEMICOLON:";"\x2CCHAR_SINGLE_QUOTE:"'"\x2CCHAR_SPACE:" "\x2CCHAR_TAB:"\\t"\x2CCHAR_UNDERSCORE:"_"\x2CCHAR_VERTICAL_LINE:"|"\x2CCHAR_ZERO_WIDTH_NOBREAK_SPACE:"\\ufeff"}}\x2C5341:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8459)\x2Co=r(5226)\x2Cn=r(3991)\x2Ci=(e=""\x2Ct=""\x2Cr=!1)=>{let s=[];if(e=[].concat(e)\x2C!(t=[].concat(t)).length)return e;if(!e.length)return r?n.flatten(t).map((e=>`{${e}}`)):t;for(let o of e)if(Array.isArray(o))for(let e of o)s.push(i(e\x2Ct\x2Cr));else for(let e of t)!0===r&&"string"==typeof e&&(e=`{${e}}`)\x2Cs.push(Array.isArray(e)?i(o\x2Ce\x2Cr):o+e);return n.flatten(s)};e.exports=(e\x2Ct={})=>{let r=void 0===t.rangeLimit?1e3:t.rangeLimit\x2Ca=(e\x2Cc={})=>{e.queue=[];let l=c\x2Cu=c.queue;for(;"brace"!==l.type&&"root"!==l.type&&l.parent;)l=l.parent\x2Cu=l.queue;if(e.invalid||e.dollar)return void u.push(i(u.pop()\x2Co(e\x2Ct)));if("brace"===e.type&&!0!==e.invalid&&2===e.nodes.length)return void u.push(i(u.pop()\x2C["{}"]));if(e.nodes&&e.ranges>0){let a=n.reduce(e.nodes);if(n.exceedsLimit(...a\x2Ct.step\x2Cr))throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");let c=s(...a\x2Ct);return 0===c.length&&(c=o(e\x2Ct))\x2Cu.push(i(u.pop()\x2Cc))\x2Cvoid(e.nodes=[])}let p=n.encloseBrace(e)\x2Ch=e.queue\x2Cd=e;for(;"brace"!==d.type&&"root"!==d.type&&d.parent;)d=d.parent\x2Ch=d.queue;for(let t=0;t<e.nodes.length;t++){let r=e.nodes[t];"comma"!==r.type||"brace"!==e.type?"close"!==r.type?r.value&&"open"!==r.type?h.push(i(h.pop()\x2Cr.value)):r.nodes&&a(r\x2Ce):u.push(i(u.pop()\x2Ch\x2Cp)):(1===t&&h.push("")\x2Ch.push(""))}return h};return n.flatten(a(e))}}\x2C8707:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5226)\x2C{MAX_LENGTH:o\x2CCHAR_BACKSLASH:n\x2CCHAR_BACKTICK:i\x2CCHAR_COMMA:a\x2CCHAR_DOT:c\x2CCHAR_LEFT_PARENTHESES:l\x2CCHAR_RIGHT_PARENTHESES:u\x2CCHAR_LEFT_CURLY_BRACE:p\x2CCHAR_RIGHT_CURLY_BRACE:h\x2CCHAR_LEFT_SQUARE_BRACKET:d\x2CCHAR_RIGHT_SQUARE_BRACKET:f\x2CCHAR_DOUBLE_QUOTE:_\x2CCHAR_SINGLE_QUOTE:g\x2CCHAR_NO_BREAK_SPACE:m\x2CCHAR_ZERO_WIDTH_NOBREAK_SPACE:y}=r(7874);e.exports=(e\x2Ct={})=>{if("string"!=typeof e)throw new TypeError("Expected a string");let r=t||{}\x2Cv="number"==typeof r.maxLength?Math.min(o\x2Cr.maxLength):o;if(e.length>v)throw new SyntaxError(`Input length (${e.length})\x2C exceeds max characters (${v})`);let b\x2CE={type:"root"\x2Cinput:e\x2Cnodes:[]}\x2CS=[E]\x2Cx=E\x2CR=E\x2CC=0\x2Cw=e.length\x2Ck=0\x2CA=0;const O=()=>e[k++]\x2CT=e=>{if("text"===e.type&&"dot"===R.type&&(R.type="text")\x2C!R||"text"!==R.type||"text"!==e.type)return x.nodes.push(e)\x2Ce.parent=x\x2Ce.prev=R\x2CR=e\x2Ce;R.value+=e.value};for(T({type:"bos"});k<w;)if(x=S[S.length-1]\x2Cb=O()\x2Cb!==y&&b!==m)if(b!==n)if(b!==f)if(b!==d)if(b!==l)if(b!==u)if(b!==_&&b!==g&&b!==i)if(b!==p)if(b!==h)if(b===a&&A>0){if(x.ranges>0){x.ranges=0;let e=x.nodes.shift();x.nodes=[e\x2C{type:"text"\x2Cvalue:s(x)}]}T({type:"comma"\x2Cvalue:b})\x2Cx.commas++}else if(b===c&&A>0&&0===x.commas){let e=x.nodes;if(0===A||0===e.length){T({type:"text"\x2Cvalue:b});continue}if("dot"===R.type){if(x.range=[]\x2CR.value+=b\x2CR.type="range"\x2C3!==x.nodes.length&&5!==x.nodes.length){x.invalid=!0\x2Cx.ranges=0\x2CR.type="text";continue}x.ranges++\x2Cx.args=[];continue}if("range"===R.type){e.pop();let t=e[e.length-1];t.value+=R.value+b\x2CR=t\x2Cx.ranges--;continue}T({type:"dot"\x2Cvalue:b})}else T({type:"text"\x2Cvalue:b});else{if("brace"!==x.type){T({type:"text"\x2Cvalue:b});continue}let e="close";x=S.pop()\x2Cx.close=!0\x2CT({type:e\x2Cvalue:b})\x2CA--\x2Cx=S[S.length-1]}else{A++;let e=R.value&&"$"===R.value.slice(-1)||!0===x.dollar;x=T({type:"brace"\x2Copen:!0\x2Cclose:!1\x2Cdollar:e\x2Cdepth:A\x2Ccommas:0\x2Cranges:0\x2Cnodes:[]})\x2CS.push(x)\x2CT({type:"open"\x2Cvalue:b})}else{let e\x2Cr=b;for(!0!==t.keepQuotes&&(b="");k<w&&(e=O());)if(e!==n){if(e===r){!0===t.keepQuotes&&(b+=e);break}b+=e}else b+=e+O();T({type:"text"\x2Cvalue:b})}else{if("paren"!==x.type){T({type:"text"\x2Cvalue:b});continue}x=S.pop()\x2CT({type:"text"\x2Cvalue:b})\x2Cx=S[S.length-1]}else x=T({type:"paren"\x2Cnodes:[]})\x2CS.push(x)\x2CT({type:"text"\x2Cvalue:b});else{let e;for(C++;k<w&&(e=O());)if(b+=e\x2Ce!==d)if(e!==n){if(e===f&&(C--\x2C0===C))break}else b+=O();else C++;T({type:"text"\x2Cvalue:b})}else T({type:"text"\x2Cvalue:"\\\\"+b});else T({type:"text"\x2Cvalue:(t.keepEscaping?b:"")+O()});do{if(x=S.pop()\x2C"root"!==x.type){x.nodes.forEach((e=>{e.nodes||("open"===e.type&&(e.isOpen=!0)\x2C"close"===e.type&&(e.isClose=!0)\x2Ce.nodes||(e.type="text")\x2Ce.invalid=!0)}));let e=S[S.length-1]\x2Ct=e.nodes.indexOf(x);e.nodes.splice(t\x2C1\x2C...x.nodes)}}while(S.length>0);return T({type:"eos"})\x2CE}}\x2C5226:(e\x2Ct\x2Cr)=>{"use strict";const s=r(3991);e.exports=(e\x2Ct={})=>{let r=(e\x2Co={})=>{let n=t.escapeInvalid&&s.isInvalidBrace(o)\x2Ci=!0===e.invalid&&!0===t.escapeInvalid\x2Ca="";if(e.value)return(n||i)&&s.isOpenOrClose(e)?"\\\\"+e.value:e.value;if(e.value)return e.value;if(e.nodes)for(let t of e.nodes)a+=r(t);return a};return r(e)}}\x2C3991:(e\x2Ct)=>{"use strict";t.isInteger=e=>"number"==typeof e?Number.isInteger(e):"string"==typeof e&&""!==e.trim()&&Number.isInteger(Number(e))\x2Ct.find=(e\x2Ct)=>e.nodes.find((e=>e.type===t))\x2Ct.exceedsLimit=(e\x2Cr\x2Cs=1\x2Co)=>!1!==o&&!(!t.isInteger(e)||!t.isInteger(r))&&(Number(r)-Number(e))/Number(s)>=o\x2Ct.escapeNode=(e\x2Ct=0\x2Cr)=>{let s=e.nodes[t];s&&(r&&s.type===r||"open"===s.type||"close"===s.type)&&!0!==s.escaped&&(s.value="\\\\"+s.value\x2Cs.escaped=!0)}\x2Ct.encloseBrace=e=>"brace"===e.type&&e.commas>>0+e.ranges>>0==0&&(e.invalid=!0\x2C!0)\x2Ct.isInvalidBrace=e=>!("brace"!==e.type||!0!==e.invalid&&!e.dollar&&(e.commas>>0+e.ranges>>0!=0&&!0===e.open&&!0===e.close||(e.invalid=!0\x2C0)))\x2Ct.isOpenOrClose=e=>"open"===e.type||"close"===e.type||!0===e.open||!0===e.close\x2Ct.reduce=e=>e.reduce(((e\x2Ct)=>("text"===t.type&&e.push(t.value)\x2C"range"===t.type&&(t.type="text")\x2Ce))\x2C[])\x2Ct.flatten=(...e)=>{const t=[]\x2Cr=e=>{for(let s=0;s<e.length;s++){let o=e[s];Array.isArray(o)?r(o\x2Ct):void 0!==o&&t.push(o)}return t};return r(e)\x2Ct}}\x2C8459:(e\x2Ct\x2Cr)=>{"use strict";const s=r(3837)\x2Co=r(5109)\x2Cn=e=>null!==e&&"object"==typeof e&&!Array.isArray(e)\x2Ci=e=>"number"==typeof e||"string"==typeof e&&""!==e\x2Ca=e=>Number.isInteger(+e)\x2Cc=e=>{let t=`${e}`\x2Cr=-1;if("-"===t[0]&&(t=t.slice(1))\x2C"0"===t)return!1;for(;"0"===t[++r];);return r>0}\x2Cl=(e\x2Ct\x2Cr)=>{if(t>0){let r="-"===e[0]?"-":"";r&&(e=e.slice(1))\x2Ce=r+e.padStart(r?t-1:t\x2C"0")}return!1===r?String(e):e}\x2Cu=(e\x2Ct)=>{let r="-"===e[0]?"-":"";for(r&&(e=e.slice(1)\x2Ct--);e.length<t;)e="0"+e;return r?"-"+e:e}\x2Cp=(e\x2Ct\x2Cr\x2Cs)=>{if(r)return o(e\x2Ct\x2C{wrap:!1\x2C...s});let n=String.fromCharCode(e);return e===t?n:`[${n}-${String.fromCharCode(t)}]`}\x2Ch=(e\x2Ct\x2Cr)=>{if(Array.isArray(e)){let t=!0===r.wrap\x2Cs=r.capture?"":"?:";return t?`(${s}${e.join("|")})`:e.join("|")}return o(e\x2Ct\x2Cr)}\x2Cd=(...e)=>new RangeError("Invalid range arguments: "+s.inspect(...e))\x2Cf=(e\x2Ct\x2Cr)=>{if(!0===r.strictRanges)throw d([e\x2Ct]);return[]}\x2C_=(e\x2Ct\x2Cr\x2Cs={})=>{if(null==t&&i(e))return[e];if(!i(e)||!i(t))return f(e\x2Ct\x2Cs);if("function"==typeof r)return _(e\x2Ct\x2C1\x2C{transform:r});if(n(r))return _(e\x2Ct\x2C0\x2Cr);let o={...s};return!0===o.capture&&(o.wrap=!0)\x2Cr=r||o.step||1\x2Ca(r)?a(e)&&a(t)?((e\x2Ct\x2Cr=1\x2Cs={})=>{let o=Number(e)\x2Cn=Number(t);if(!Number.isInteger(o)||!Number.isInteger(n)){if(!0===s.strictRanges)throw d([e\x2Ct]);return[]}0===o&&(o=0)\x2C0===n&&(n=0);let i=o>n\x2Ca=String(e)\x2Cf=String(t)\x2C_=String(r);r=Math.max(Math.abs(r)\x2C1);let g=c(a)||c(f)||c(_)\x2Cm=g?Math.max(a.length\x2Cf.length\x2C_.length):0\x2Cy=!1===g&&!1===((e\x2Ct\x2Cr)=>"string"==typeof e||"string"==typeof t||!0===r.stringify)(e\x2Ct\x2Cs)\x2Cv=s.transform||(e=>t=>!0===e?Number(t):String(t))(y);if(s.toRegex&&1===r)return p(u(e\x2Cm)\x2Cu(t\x2Cm)\x2C!0\x2Cs);let b={negatives:[]\x2Cpositives:[]}\x2CE=[]\x2CS=0;for(;i?o>=n:o<=n;)!0===s.toRegex&&r>1?b[(x=o)<0?"negatives":"positives"].push(Math.abs(x)):E.push(l(v(o\x2CS)\x2Cm\x2Cy))\x2Co=i?o-r:o+r\x2CS++;var x;return!0===s.toRegex?r>1?((e\x2Ct)=>{e.negatives.sort(((e\x2Ct)=>e<t?-1:e>t?1:0))\x2Ce.positives.sort(((e\x2Ct)=>e<t?-1:e>t?1:0));let r\x2Cs=t.capture?"":"?:"\x2Co=""\x2Cn="";return e.positives.length&&(o=e.positives.join("|"))\x2Ce.negatives.length&&(n=`-(${s}${e.negatives.join("|")})`)\x2Cr=o&&n?`${o}|${n}`:o||n\x2Ct.wrap?`(${s}${r})`:r})(b\x2Cs):h(E\x2Cnull\x2C{wrap:!1\x2C...s}):E})(e\x2Ct\x2Cr\x2Co):((e\x2Ct\x2Cr=1\x2Cs={})=>{if(!a(e)&&e.length>1||!a(t)&&t.length>1)return f(e\x2Ct\x2Cs);let o=s.transform||(e=>String.fromCharCode(e))\x2Cn=`${e}`.charCodeAt(0)\x2Ci=`${t}`.charCodeAt(0)\x2Cc=n>i\x2Cl=Math.min(n\x2Ci)\x2Cu=Math.max(n\x2Ci);if(s.toRegex&&1===r)return p(l\x2Cu\x2C!1\x2Cs);let d=[]\x2C_=0;for(;c?n>=i:n<=i;)d.push(o(n\x2C_))\x2Cn=c?n-r:n+r\x2C_++;return!0===s.toRegex?h(d\x2Cnull\x2C{wrap:!1\x2Coptions:s}):d})(e\x2Ct\x2CMath.max(Math.abs(r)\x2C1)\x2Co):null==r||n(r)?_(e\x2Ct\x2C1\x2Cr):((e\x2Ct)=>{if(!0===t.strictRanges)throw new TypeError(`Expected step "${e}" to be a number`);return[]})(r\x2Co)};e.exports=_}\x2C535:e=>{"use strict";e.exports=function(e){return"number"==typeof e?e-e==0:"string"==typeof e&&""!==e.trim()&&(Number.isFinite?Number.isFinite(+e):isFinite(+e))}}\x2C5109:(e\x2Ct\x2Cr)=>{"use strict";const s=r(535)\x2Co=(e\x2Ct\x2Cr)=>{if(!1===s(e))throw new TypeError("toRegexRange: expected the first argument to be a number");if(void 0===t||e===t)return String(e);if(!1===s(t))throw new TypeError("toRegexRange: expected the second argument to be a number.");let n={relaxZeros:!0\x2C...r};"boolean"==typeof n.strictZeros&&(n.relaxZeros=!1===n.strictZeros);let c=e+":"+t+"="+String(n.relaxZeros)+String(n.shorthand)+String(n.capture)+String(n.wrap);if(o.cache.hasOwnProperty(c))return o.cache[c].result;let l=Math.min(e\x2Ct)\x2Cu=Math.max(e\x2Ct);if(1===Math.abs(l-u)){let r=e+"|"+t;return n.capture?`(${r})`:!1===n.wrap?r:`(?:${r})`}let p=d(e)||d(t)\x2Ch={min:e\x2Cmax:t\x2Ca:l\x2Cb:u}\x2Cf=[]\x2C_=[];return p&&(h.isPadded=p\x2Ch.maxLen=String(h.max).length)\x2Cl<0&&(_=i(u<0?Math.abs(u):1\x2CMath.abs(l)\x2Ch\x2Cn)\x2Cl=h.a=0)\x2Cu>=0&&(f=i(l\x2Cu\x2Ch\x2Cn))\x2Ch.negatives=_\x2Ch.positives=f\x2Ch.result=function(e\x2Ct\x2Cr){let s=a(e\x2Ct\x2C"-"\x2C!1)||[]\x2Co=a(t\x2Ce\x2C""\x2C!1)||[]\x2Cn=a(e\x2Ct\x2C"-?"\x2C!0)||[];return s.concat(n).concat(o).join("|")}(_\x2Cf)\x2C!0===n.capture?h.result=`(${h.result})`:!1!==n.wrap&&f.length+_.length>1&&(h.result=`(?:${h.result})`)\x2Co.cache[c]=h\x2Ch.result};function n(e\x2Ct\x2Cr){if(e===t)return{pattern:e\x2Ccount:[]\x2Cdigits:0};let s=function(e\x2Ct){let r=[];for(let s=0;s<e.length;s++)r.push([e[s]\x2Ct[s]]);return r}(e\x2Ct)\x2Co=s.length\x2Cn=""\x2Ci=0;for(let e=0;e<o;e++){let[t\x2Cr]=s[e];t===r?n+=t:"0"!==t||"9"!==r?n+=`[${a=t}${(c=r)-a==1?"":"-"}${c}]`:i++}var a\x2Cc;return i&&(n+=!0===r.shorthand?"\\\\d":"[0-9]")\x2C{pattern:n\x2Ccount:[i]\x2Cdigits:o}}function i(e\x2Ct\x2Cr\x2Cs){let o\x2Ci=function(e\x2Ct){let r=1\x2Cs=1\x2Co=u(e\x2Cr)\x2Cn=new Set([t]);for(;e<=o&&o<=t;)n.add(o)\x2Cr+=1\x2Co=u(e\x2Cr);for(o=p(t+1\x2Cs)-1;e<o&&o<=t;)n.add(o)\x2Cs+=1\x2Co=p(t+1\x2Cs)-1;return n=[...n]\x2Cn.sort(c)\x2Cn}(e\x2Ct)\x2Ca=[]\x2Cl=e;for(let e=0;e<i.length;e++){let t=i[e]\x2Cc=n(String(l)\x2CString(t)\x2Cs)\x2Cu="";r.isPadded||!o||o.pattern!==c.pattern?(r.isPadded&&(u=f(t\x2Cr\x2Cs))\x2Cc.string=u+c.pattern+h(c.count)\x2Ca.push(c)\x2Cl=t+1\x2Co=c):(o.count.length>1&&o.count.pop()\x2Co.count.push(c.count[0])\x2Co.string=o.pattern+h(o.count)\x2Cl=t+1)}return a}function a(e\x2Ct\x2Cr\x2Cs\x2Co){let n=[];for(let o of e){let{string:e}=o;s||l(t\x2C"string"\x2Ce)||n.push(r+e)\x2Cs&&l(t\x2C"string"\x2Ce)&&n.push(r+e)}return n}function c(e\x2Ct){return e>t?1:t>e?-1:0}function l(e\x2Ct\x2Cr){return e.some((e=>e[t]===r))}function u(e\x2Ct){return Number(String(e).slice(0\x2C-t)+"9".repeat(t))}function p(e\x2Ct){return e-e%Math.pow(10\x2Ct)}function h(e){let[t=0\x2Cr=""]=e;return r||t>1?`{${t+(r?"\x2C"+r:"")}}`:""}function d(e){return/^-?(0+)\\d/.test(e)}function f(e\x2Ct\x2Cr){if(!t.isPadded)return e;let s=Math.abs(t.maxLen-String(e).length)\x2Co=!1!==r.relaxZeros;switch(s){case 0:return"";case 1:return o?"0?":"0";case 2:return o?"0{0\x2C2}":"00";default:return o?`0{0\x2C${s}}`:`0{${s}}`}}o.cache={}\x2Co.clearCache=()=>o.cache={}\x2Ce.exports=o}\x2C7514:(e\x2Ct\x2Cr)=>{"use strict";e.exports=r(3442)}\x2C7654:(e\x2Ct\x2Cr)=>{"use strict";const s=r(1017)\x2Co="\\\\.{1\x2C2}(?:\\\\/|$)"\x2Cn={DOT_LITERAL:"\\\\."\x2CPLUS_LITERAL:"\\\\+"\x2CQMARK_LITERAL:"\\\\?"\x2CSLASH_LITERAL:"\\\\/"\x2CONE_CHAR:"(?=.)"\x2CQMARK:"[^/]"\x2CEND_ANCHOR:"(?:\\\\/|$)"\x2CDOTS_SLASH:o\x2CNO_DOT:"(?!\\\\.)"\x2CNO_DOTS:`(?!(?:^|\\\\/)${o})`\x2CNO_DOT_SLASH:"(?!\\\\.{0\x2C1}(?:\\\\/|$))"\x2CNO_DOTS_SLASH:`(?!${o})`\x2CQMARK_NO_DOT:"[^.\\\\/]"\x2CSTAR:"[^/]*?"\x2CSTART_ANCHOR:"(?:^|\\\\/)"}\x2Ci={...n\x2CSLASH_LITERAL:"[\\\\\\\\/]"\x2CQMARK:"[^\\\\\\\\/]"\x2CSTAR:"[^\\\\\\\\/]*?"\x2CDOTS_SLASH:"\\\\.{1\x2C2}(?:[\\\\\\\\/]|$)"\x2CNO_DOT:"(?!\\\\.)"\x2CNO_DOTS:"(?!(?:^|[\\\\\\\\/])\\\\.{1\x2C2}(?:[\\\\\\\\/]|$))"\x2CNO_DOT_SLASH:"(?!\\\\.{0\x2C1}(?:[\\\\\\\\/]|$))"\x2CNO_DOTS_SLASH:"(?!\\\\.{1\x2C2}(?:[\\\\\\\\/]|$))"\x2CQMARK_NO_DOT:"[^.\\\\\\\\/]"\x2CSTART_ANCHOR:"(?:^|[\\\\\\\\/])"\x2CEND_ANCHOR:"(?:[\\\\\\\\/]|$)"};e.exports={MAX_LENGTH:65536\x2CPOSIX_REGEX_SOURCE:{alnum:"a-zA-Z0-9"\x2Calpha:"a-zA-Z"\x2Cascii:"\\\\x00-\\\\x7F"\x2Cblank:" \\\\t"\x2Ccntrl:"\\\\x00-\\\\x1F\\\\x7F"\x2Cdigit:"0-9"\x2Cgraph:"\\\\x21-\\\\x7E"\x2Clower:"a-z"\x2Cprint:"\\\\x20-\\\\x7E "\x2Cpunct:"\\\\-!\\"#$%&'()\\\\*+\x2C./:;<=>?@[\\\\]^_`{|}~"\x2Cspace:" \\\\t\\\\r\\\\n\\\\v\\\\f"\x2Cupper:"A-Z"\x2Cword:"A-Za-z0-9_"\x2Cxdigit:"A-Fa-f0-9"}\x2CREGEX_BACKSLASH:/\\\\(?![*+?^${}(|)[\\]])/g\x2CREGEX_NON_SPECIAL_CHARS:/^[^@![\\].\x2C$*+?^{}()|\\\\/]+/\x2CREGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\\]]/\x2CREGEX_SPECIAL_CHARS_BACKREF:/(\\\\?)((\\W)(\\3*))/g\x2CREGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\\]])/g\x2CREGEX_REMOVE_BACKSLASH:/(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g\x2CREPLACEMENTS:{"***":"*"\x2C"**/**":"**"\x2C"**/**/**":"**"}\x2CCHAR_0:48\x2CCHAR_9:57\x2CCHAR_UPPERCASE_A:65\x2CCHAR_LOWERCASE_A:97\x2CCHAR_UPPERCASE_Z:90\x2CCHAR_LOWERCASE_Z:122\x2CCHAR_LEFT_PARENTHESES:40\x2CCHAR_RIGHT_PARENTHESES:41\x2CCHAR_ASTERISK:42\x2CCHAR_AMPERSAND:38\x2CCHAR_AT:64\x2CCHAR_BACKWARD_SLASH:92\x2CCHAR_CARRIAGE_RETURN:13\x2CCHAR_CIRCUMFLEX_ACCENT:94\x2CCHAR_COLON:58\x2CCHAR_COMMA:44\x2CCHAR_DOT:46\x2CCHAR_DOUBLE_QUOTE:34\x2CCHAR_EQUAL:61\x2CCHAR_EXCLAMATION_MARK:33\x2CCHAR_FORM_FEED:12\x2CCHAR_FORWARD_SLASH:47\x2CCHAR_GRAVE_ACCENT:96\x2CCHAR_HASH:35\x2CCHAR_HYPHEN_MINUS:45\x2CCHAR_LEFT_ANGLE_BRACKET:60\x2CCHAR_LEFT_CURLY_BRACE:123\x2CCHAR_LEFT_SQUARE_BRACKET:91\x2CCHAR_LINE_FEED:10\x2CCHAR_NO_BREAK_SPACE:160\x2CCHAR_PERCENT:37\x2CCHAR_PLUS:43\x2CCHAR_QUESTION_MARK:63\x2CCHAR_RIGHT_ANGLE_BRACKET:62\x2CCHAR_RIGHT_CURLY_BRACE:125\x2CCHAR_RIGHT_SQUARE_BRACKET:93\x2CCHAR_SEMICOLON:59\x2CCHAR_SINGLE_QUOTE:39\x2CCHAR_SPACE:32\x2CCHAR_TAB:9\x2CCHAR_UNDERSCORE:95\x2CCHAR_VERTICAL_LINE:124\x2CCHAR_ZERO_WIDTH_NOBREAK_SPACE:65279\x2CSEP:s.sep\x2CextglobChars:e=>({"!":{type:"negate"\x2Copen:"(?:(?!(?:"\x2Cclose:`))${e.STAR})`}\x2C"?":{type:"qmark"\x2Copen:"(?:"\x2Cclose:")?"}\x2C"+":{type:"plus"\x2Copen:"(?:"\x2Cclose:")+"}\x2C"*":{type:"star"\x2Copen:"(?:"\x2Cclose:")*"}\x2C"@":{type:"at"\x2Copen:"(?:"\x2Cclose:")"}})\x2CglobChars:e=>!0===e?i:n}}\x2C1159:(e\x2Ct\x2Cr)=>{"use strict";const s=r(7654)\x2Co=r(5266)\x2C{MAX_LENGTH:n\x2CPOSIX_REGEX_SOURCE:i\x2CREGEX_NON_SPECIAL_CHARS:a\x2CREGEX_SPECIAL_CHARS_BACKREF:c\x2CREPLACEMENTS:l}=s\x2Cu=(e\x2Ct)=>{if("function"==typeof t.expandRange)return t.expandRange(...e\x2Ct);e.sort();const r=`[${e.join("-")}]`;try{new RegExp(r)}catch(t){return e.map((e=>o.escapeRegex(e))).join("..")}return r}\x2Cp=(e\x2Ct)=>`Missing ${e}: "${t}" - use "\\\\\\\\${t}" to match literal characters`\x2Ch=(e\x2Ct)=>{if("string"!=typeof e)throw new TypeError("Expected a string");e=l[e]||e;const r={...t}\x2Cd="number"==typeof r.maxLength?Math.min(n\x2Cr.maxLength):n;let f=e.length;if(f>d)throw new SyntaxError(`Input length: ${f}\x2C exceeds maximum allowed length: ${d}`);const _={type:"bos"\x2Cvalue:""\x2Coutput:r.prepend||""}\x2Cg=[_]\x2Cm=r.capture?"":"?:"\x2Cy=o.isWindows(t)\x2Cv=s.globChars(y)\x2Cb=s.extglobChars(v)\x2C{DOT_LITERAL:E\x2CPLUS_LITERAL:S\x2CSLASH_LITERAL:x\x2CONE_CHAR:R\x2CDOTS_SLASH:C\x2CNO_DOT:w\x2CNO_DOT_SLASH:k\x2CNO_DOTS_SLASH:A\x2CQMARK:O\x2CQMARK_NO_DOT:T\x2CSTAR:N\x2CSTART_ANCHOR:L}=v\x2CP=e=>`(${m}(?:(?!${L}${e.dot?C:E}).)*?)`\x2CI=r.dot?"":w\x2CH=r.dot?O:T;let $=!0===r.bash?P(r):N;r.capture&&($=`(${$})`)\x2C"boolean"==typeof r.noext&&(r.noextglob=r.noext);const M={input:e\x2Cindex:-1\x2Cstart:0\x2Cdot:!0===r.dot\x2Cconsumed:""\x2Coutput:""\x2Cprefix:""\x2Cbacktrack:!1\x2Cnegated:!1\x2Cbrackets:0\x2Cbraces:0\x2Cparens:0\x2Cquotes:0\x2Cglobstar:!1\x2Ctokens:g};e=o.removePrefix(e\x2CM)\x2Cf=e.length;const B=[]\x2CD=[]\x2CU=[];let j\x2CF=_;const G=()=>M.index===f-1\x2CW=M.peek=(t=1)=>e[M.index+t]\x2Cq=M.advance=()=>e[++M.index]||""\x2CK=()=>e.slice(M.index+1)\x2CV=(e=""\x2Ct=0)=>{M.consumed+=e\x2CM.index+=t}\x2CQ=e=>{M.output+=null!=e.output?e.output:e.value\x2CV(e.value)}\x2Cz=()=>{let e=1;for(;"!"===W()&&("("!==W(2)||"?"===W(3));)q()\x2CM.start++\x2Ce++;return e%2!=0&&(M.negated=!0\x2CM.start++\x2C!0)}\x2CX=e=>{M[e]++\x2CU.push(e)}\x2CY=e=>{M[e]--\x2CU.pop()}\x2CZ=e=>{if("globstar"===F.type){const t=M.braces>0&&("comma"===e.type||"brace"===e.type)\x2Cr=!0===e.extglob||B.length&&("pipe"===e.type||"paren"===e.type);"slash"===e.type||"paren"===e.type||t||r||(M.output=M.output.slice(0\x2C-F.output.length)\x2CF.type="star"\x2CF.value="*"\x2CF.output=$\x2CM.output+=F.output)}if(B.length&&"paren"!==e.type&&(B[B.length-1].inner+=e.value)\x2C(e.value||e.output)&&Q(e)\x2CF&&"text"===F.type&&"text"===e.type)return F.value+=e.value\x2Cvoid(F.output=(F.output||"")+e.value);e.prev=F\x2Cg.push(e)\x2CF=e}\x2CJ=(e\x2Ct)=>{const s={...b[t]\x2Cconditions:1\x2Cinner:""};s.prev=F\x2Cs.parens=M.parens\x2Cs.output=M.output;const o=(r.capture?"(":"")+s.open;X("parens")\x2CZ({type:e\x2Cvalue:t\x2Coutput:M.output?"":R})\x2CZ({type:"paren"\x2Cextglob:!0\x2Cvalue:q()\x2Coutput:o})\x2CB.push(s)}\x2Cee=e=>{let s\x2Co=e.close+(r.capture?")":"");if("negate"===e.type){let n=$;if(e.inner&&e.inner.length>1&&e.inner.includes("/")&&(n=P(r))\x2C(n!==$||G()||/^\\)+$/.test(K()))&&(o=e.close=`)$))${n}`)\x2Ce.inner.includes("*")&&(s=K())&&/^\\.[^\\\\/.]+$/.test(s)){const r=h(s\x2C{...t\x2Cfastpaths:!1}).output;o=e.close=`)${r})${n})`}"bos"===e.prev.type&&(M.negatedExtglob=!0)}Z({type:"paren"\x2Cextglob:!0\x2Cvalue:j\x2Coutput:o})\x2CY("parens")};if(!1!==r.fastpaths&&!/(^[*!]|[/()[\\]{}"])/.test(e)){let s=!1\x2Cn=e.replace(c\x2C((e\x2Ct\x2Cr\x2Co\x2Cn\x2Ci)=>"\\\\"===o?(s=!0\x2Ce):"?"===o?t?t+o+(n?O.repeat(n.length):""):0===i?H+(n?O.repeat(n.length):""):O.repeat(r.length):"."===o?E.repeat(r.length):"*"===o?t?t+o+(n?$:""):$:t?e:`\\\\${e}`));return!0===s&&(n=!0===r.unescape?n.replace(/\\\\/g\x2C""):n.replace(/\\\\+/g\x2C(e=>e.length%2==0?"\\\\\\\\":e?"\\\\":"")))\x2Cn===e&&!0===r.contains?(M.output=e\x2CM):(M.output=o.wrapOutput(n\x2CM\x2Ct)\x2CM)}for(;!G();){if(j=q()\x2C"\\0"===j)continue;if("\\\\"===j){const e=W();if("/"===e&&!0!==r.bash)continue;if("."===e||";"===e)continue;if(!e){j+="\\\\"\x2CZ({type:"text"\x2Cvalue:j});continue}const t=/^\\\\+/.exec(K());let s=0;if(t&&t[0].length>2&&(s=t[0].length\x2CM.index+=s\x2Cs%2!=0&&(j+="\\\\"))\x2C!0===r.unescape?j=q():j+=q()\x2C0===M.brackets){Z({type:"text"\x2Cvalue:j});continue}}if(M.brackets>0&&("]"!==j||"["===F.value||"[^"===F.value)){if(!1!==r.posix&&":"===j){const e=F.value.slice(1);if(e.includes("[")&&(F.posix=!0\x2Ce.includes(":"))){const e=F.value.lastIndexOf("[")\x2Ct=F.value.slice(0\x2Ce)\x2Cr=F.value.slice(e+2)\x2Cs=i[r];if(s){F.value=t+s\x2CM.backtrack=!0\x2Cq()\x2C_.output||1!==g.indexOf(F)||(_.output=R);continue}}}("["===j&&":"!==W()||"-"===j&&"]"===W())&&(j=`\\\\${j}`)\x2C"]"!==j||"["!==F.value&&"[^"!==F.value||(j=`\\\\${j}`)\x2C!0===r.posix&&"!"===j&&"["===F.value&&(j="^")\x2CF.value+=j\x2CQ({value:j});continue}if(1===M.quotes&&'"'!==j){j=o.escapeRegex(j)\x2CF.value+=j\x2CQ({value:j});continue}if('"'===j){M.quotes=1===M.quotes?0:1\x2C!0===r.keepQuotes&&Z({type:"text"\x2Cvalue:j});continue}if("("===j){X("parens")\x2CZ({type:"paren"\x2Cvalue:j});continue}if(")"===j){if(0===M.parens&&!0===r.strictBrackets)throw new SyntaxError(p("opening"\x2C"("));const e=B[B.length-1];if(e&&M.parens===e.parens+1){ee(B.pop());continue}Z({type:"paren"\x2Cvalue:j\x2Coutput:M.parens?")":"\\\\)"})\x2CY("parens");continue}if("["===j){if(!0!==r.nobracket&&K().includes("]"))X("brackets");else{if(!0!==r.nobracket&&!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C"]"));j=`\\\\${j}`}Z({type:"bracket"\x2Cvalue:j});continue}if("]"===j){if(!0===r.nobracket||F&&"bracket"===F.type&&1===F.value.length){Z({type:"text"\x2Cvalue:j\x2Coutput:`\\\\${j}`});continue}if(0===M.brackets){if(!0===r.strictBrackets)throw new SyntaxError(p("opening"\x2C"["));Z({type:"text"\x2Cvalue:j\x2Coutput:`\\\\${j}`});continue}Y("brackets");const e=F.value.slice(1);if(!0===F.posix||"^"!==e[0]||e.includes("/")||(j=`/${j}`)\x2CF.value+=j\x2CQ({value:j})\x2C!1===r.literalBrackets||o.hasRegexChars(e))continue;const t=o.escapeRegex(F.value);if(M.output=M.output.slice(0\x2C-F.value.length)\x2C!0===r.literalBrackets){M.output+=t\x2CF.value=t;continue}F.value=`(${m}${t}|${F.value})`\x2CM.output+=F.value;continue}if("{"===j&&!0!==r.nobrace){X("braces");const e={type:"brace"\x2Cvalue:j\x2Coutput:"("\x2CoutputIndex:M.output.length\x2CtokensIndex:M.tokens.length};D.push(e)\x2CZ(e);continue}if("}"===j){const e=D[D.length-1];if(!0===r.nobrace||!e){Z({type:"text"\x2Cvalue:j\x2Coutput:j});continue}let t=")";if(!0===e.dots){const e=g.slice()\x2Cs=[];for(let t=e.length-1;t>=0&&(g.pop()\x2C"brace"!==e[t].type);t--)"dots"!==e[t].type&&s.unshift(e[t].value);t=u(s\x2Cr)\x2CM.backtrack=!0}if(!0!==e.comma&&!0!==e.dots){const r=M.output.slice(0\x2Ce.outputIndex)\x2Cs=M.tokens.slice(e.tokensIndex);e.value=e.output="\\\\{"\x2Cj=t="\\\\}"\x2CM.output=r;for(const e of s)M.output+=e.output||e.value}Z({type:"brace"\x2Cvalue:j\x2Coutput:t})\x2CY("braces")\x2CD.pop();continue}if("|"===j){B.length>0&&B[B.length-1].conditions++\x2CZ({type:"text"\x2Cvalue:j});continue}if("\x2C"===j){let e=j;const t=D[D.length-1];t&&"braces"===U[U.length-1]&&(t.comma=!0\x2Ce="|")\x2CZ({type:"comma"\x2Cvalue:j\x2Coutput:e});continue}if("/"===j){if("dot"===F.type&&M.index===M.start+1){M.start=M.index+1\x2CM.consumed=""\x2CM.output=""\x2Cg.pop()\x2CF=_;continue}Z({type:"slash"\x2Cvalue:j\x2Coutput:x});continue}if("."===j){if(M.braces>0&&"dot"===F.type){"."===F.value&&(F.output=E);const e=D[D.length-1];F.type="dots"\x2CF.output+=j\x2CF.value+=j\x2Ce.dots=!0;continue}if(M.braces+M.parens===0&&"bos"!==F.type&&"slash"!==F.type){Z({type:"text"\x2Cvalue:j\x2Coutput:E});continue}Z({type:"dot"\x2Cvalue:j\x2Coutput:E});continue}if("?"===j){if((!F||"("!==F.value)&&!0!==r.noextglob&&"("===W()&&"?"!==W(2)){J("qmark"\x2Cj);continue}if(F&&"paren"===F.type){const e=W();let t=j;if("<"===e&&!o.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");("("===F.value&&!/[!=<:]/.test(e)||"<"===e&&!/<([!=]|\\w+>)/.test(K()))&&(t=`\\\\${j}`)\x2CZ({type:"text"\x2Cvalue:j\x2Coutput:t});continue}if(!0!==r.dot&&("slash"===F.type||"bos"===F.type)){Z({type:"qmark"\x2Cvalue:j\x2Coutput:T});continue}Z({type:"qmark"\x2Cvalue:j\x2Coutput:O});continue}if("!"===j){if(!0!==r.noextglob&&"("===W()&&("?"!==W(2)||!/[!=<:]/.test(W(3)))){J("negate"\x2Cj);continue}if(!0!==r.nonegate&&0===M.index){z();continue}}if("+"===j){if(!0!==r.noextglob&&"("===W()&&"?"!==W(2)){J("plus"\x2Cj);continue}if(F&&"("===F.value||!1===r.regex){Z({type:"plus"\x2Cvalue:j\x2Coutput:S});continue}if(F&&("bracket"===F.type||"paren"===F.type||"brace"===F.type)||M.parens>0){Z({type:"plus"\x2Cvalue:j});continue}Z({type:"plus"\x2Cvalue:S});continue}if("@"===j){if(!0!==r.noextglob&&"("===W()&&"?"!==W(2)){Z({type:"at"\x2Cextglob:!0\x2Cvalue:j\x2Coutput:""});continue}Z({type:"text"\x2Cvalue:j});continue}if("*"!==j){"$"!==j&&"^"!==j||(j=`\\\\${j}`);const e=a.exec(K());e&&(j+=e[0]\x2CM.index+=e[0].length)\x2CZ({type:"text"\x2Cvalue:j});continue}if(F&&("globstar"===F.type||!0===F.star)){F.type="star"\x2CF.star=!0\x2CF.value+=j\x2CF.output=$\x2CM.backtrack=!0\x2CM.globstar=!0\x2CV(j);continue}let t=K();if(!0!==r.noextglob&&/^\\([^?]/.test(t)){J("star"\x2Cj);continue}if("star"===F.type){if(!0===r.noglobstar){V(j);continue}const s=F.prev\x2Co=s.prev\x2Cn="slash"===s.type||"bos"===s.type\x2Ci=o&&("star"===o.type||"globstar"===o.type);if(!0===r.bash&&(!n||t[0]&&"/"!==t[0])){Z({type:"star"\x2Cvalue:j\x2Coutput:""});continue}const a=M.braces>0&&("comma"===s.type||"brace"===s.type)\x2Cc=B.length&&("pipe"===s.type||"paren"===s.type);if(!n&&"paren"!==s.type&&!a&&!c){Z({type:"star"\x2Cvalue:j\x2Coutput:""});continue}for(;"/**"===t.slice(0\x2C3);){const r=e[M.index+4];if(r&&"/"!==r)break;t=t.slice(3)\x2CV("/**"\x2C3)}if("bos"===s.type&&G()){F.type="globstar"\x2CF.value+=j\x2CF.output=P(r)\x2CM.output=F.output\x2CM.globstar=!0\x2CV(j);continue}if("slash"===s.type&&"bos"!==s.prev.type&&!i&&G()){M.output=M.output.slice(0\x2C-(s.output+F.output).length)\x2Cs.output=`(?:${s.output}`\x2CF.type="globstar"\x2CF.output=P(r)+(r.strictSlashes?")":"|$)")\x2CF.value+=j\x2CM.globstar=!0\x2CM.output+=s.output+F.output\x2CV(j);continue}if("slash"===s.type&&"bos"!==s.prev.type&&"/"===t[0]){const e=void 0!==t[1]?"|$":"";M.output=M.output.slice(0\x2C-(s.output+F.output).length)\x2Cs.output=`(?:${s.output}`\x2CF.type="globstar"\x2CF.output=`${P(r)}${x}|${x}${e})`\x2CF.value+=j\x2CM.output+=s.output+F.output\x2CM.globstar=!0\x2CV(j+q())\x2CZ({type:"slash"\x2Cvalue:"/"\x2Coutput:""});continue}if("bos"===s.type&&"/"===t[0]){F.type="globstar"\x2CF.value+=j\x2CF.output=`(?:^|${x}|${P(r)}${x})`\x2CM.output=F.output\x2CM.globstar=!0\x2CV(j+q())\x2CZ({type:"slash"\x2Cvalue:"/"\x2Coutput:""});continue}M.output=M.output.slice(0\x2C-F.output.length)\x2CF.type="globstar"\x2CF.output=P(r)\x2CF.value+=j\x2CM.output+=F.output\x2CM.globstar=!0\x2CV(j);continue}const s={type:"star"\x2Cvalue:j\x2Coutput:$};!0!==r.bash?!F||"bracket"!==F.type&&"paren"!==F.type||!0!==r.regex?(M.index!==M.start&&"slash"!==F.type&&"dot"!==F.type||("dot"===F.type?(M.output+=k\x2CF.output+=k):!0===r.dot?(M.output+=A\x2CF.output+=A):(M.output+=I\x2CF.output+=I)\x2C"*"!==W()&&(M.output+=R\x2CF.output+=R))\x2CZ(s)):(s.output=j\x2CZ(s)):(s.output=".*?"\x2C"bos"!==F.type&&"slash"!==F.type||(s.output=I+s.output)\x2CZ(s))}for(;M.brackets>0;){if(!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C"]"));M.output=o.escapeLast(M.output\x2C"[")\x2CY("brackets")}for(;M.parens>0;){if(!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C")"));M.output=o.escapeLast(M.output\x2C"(")\x2CY("parens")}for(;M.braces>0;){if(!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C"}"));M.output=o.escapeLast(M.output\x2C"{")\x2CY("braces")}if(!0===r.strictSlashes||"star"!==F.type&&"bracket"!==F.type||Z({type:"maybe_slash"\x2Cvalue:""\x2Coutput:`${x}?`})\x2C!0===M.backtrack){M.output="";for(const e of M.tokens)M.output+=null!=e.output?e.output:e.value\x2Ce.suffix&&(M.output+=e.suffix)}return M};h.fastpaths=(e\x2Ct)=>{const r={...t}\x2Ci="number"==typeof r.maxLength?Math.min(n\x2Cr.maxLength):n\x2Ca=e.length;if(a>i)throw new SyntaxError(`Input length: ${a}\x2C exceeds maximum allowed length: ${i}`);e=l[e]||e;const c=o.isWindows(t)\x2C{DOT_LITERAL:u\x2CSLASH_LITERAL:p\x2CONE_CHAR:h\x2CDOTS_SLASH:d\x2CNO_DOT:f\x2CNO_DOTS:_\x2CNO_DOTS_SLASH:g\x2CSTAR:m\x2CSTART_ANCHOR:y}=s.globChars(c)\x2Cv=r.dot?_:f\x2Cb=r.dot?g:f\x2CE=r.capture?"":"?:";let S=!0===r.bash?".*?":m;r.capture&&(S=`(${S})`);const x=e=>!0===e.noglobstar?S:`(${E}(?:(?!${y}${e.dot?d:u}).)*?)`\x2CR=e=>{switch(e){case"*":return`${v}${h}${S}`;case".*":return`${u}${h}${S}`;case"*.*":return`${v}${S}${u}${h}${S}`;case"*/*":return`${v}${S}${p}${h}${b}${S}`;case"**":return v+x(r);case"**/*":return`(?:${v}${x(r)}${p})?${b}${h}${S}`;case"**/*.*":return`(?:${v}${x(r)}${p})?${b}${S}${u}${h}${S}`;case"**/.*":return`(?:${v}${x(r)}${p})?${u}${h}${S}`;default:{const t=/^(.*?)\\.(\\w+)$/.exec(e);if(!t)return;const r=R(t[1]);if(!r)return;return r+u+t[2]}}}\x2CC=o.removePrefix(e\x2C{negated:!1\x2Cprefix:""});let w=R(C);return w&&!0!==r.strictSlashes&&(w+=`${p}?`)\x2Cw}\x2Ce.exports=h}\x2C3442:(e\x2Ct\x2Cr)=>{"use strict";const s=r(1017)\x2Co=r(7965)\x2Cn=r(1159)\x2Ci=r(5266)\x2Ca=r(7654)\x2Cc=(e\x2Ct\x2Cr=!1)=>{if(Array.isArray(e)){const s=e.map((e=>c(e\x2Ct\x2Cr)))\x2Co=e=>{for(const t of s){const r=t(e);if(r)return r}return!1};return o}const s=(o=e)&&"object"==typeof o&&!Array.isArray(o)&&e.tokens&&e.input;var o;if(""===e||"string"!=typeof e&&!s)throw new TypeError("Expected pattern to be a non-empty string");const n=t||{}\x2Ca=i.isWindows(t)\x2Cl=s?c.compileRe(e\x2Ct):c.makeRe(e\x2Ct\x2C!1\x2C!0)\x2Cu=l.state;delete l.state;let p=()=>!1;if(n.ignore){const e={...t\x2Cignore:null\x2ConMatch:null\x2ConResult:null};p=c(n.ignore\x2Ce\x2Cr)}const h=(r\x2Cs=!1)=>{const{isMatch:o\x2Cmatch:i\x2Coutput:h}=c.test(r\x2Cl\x2Ct\x2C{glob:e\x2Cposix:a})\x2Cd={glob:e\x2Cstate:u\x2Cregex:l\x2Cposix:a\x2Cinput:r\x2Coutput:h\x2Cmatch:i\x2CisMatch:o};return"function"==typeof n.onResult&&n.onResult(d)\x2C!1===o?(d.isMatch=!1\x2C!!s&&d):p(r)?("function"==typeof n.onIgnore&&n.onIgnore(d)\x2Cd.isMatch=!1\x2C!!s&&d):("function"==typeof n.onMatch&&n.onMatch(d)\x2C!s||d)};return r&&(h.state=u)\x2Ch};c.test=(e\x2Ct\x2Cr\x2C{glob:s\x2Cposix:o}={})=>{if("string"!=typeof e)throw new TypeError("Expected input to be a string");if(""===e)return{isMatch:!1\x2Coutput:""};const n=r||{}\x2Ca=n.format||(o?i.toPosixSlashes:null);let l=e===s\x2Cu=l&&a?a(e):e;return!1===l&&(u=a?a(e):e\x2Cl=u===s)\x2C!1!==l&&!0!==n.capture||(l=!0===n.matchBase||!0===n.basename?c.matchBase(e\x2Ct\x2Cr\x2Co):t.exec(u))\x2C{isMatch:Boolean(l)\x2Cmatch:l\x2Coutput:u}}\x2Cc.matchBase=(e\x2Ct\x2Cr\x2Co=i.isWindows(r))=>(t instanceof RegExp?t:c.makeRe(t\x2Cr)).test(s.basename(e))\x2Cc.isMatch=(e\x2Ct\x2Cr)=>c(t\x2Cr)(e)\x2Cc.parse=(e\x2Ct)=>Array.isArray(e)?e.map((e=>c.parse(e\x2Ct))):n(e\x2C{...t\x2Cfastpaths:!1})\x2Cc.scan=(e\x2Ct)=>o(e\x2Ct)\x2Cc.compileRe=(e\x2Ct\x2Cr=!1\x2Cs=!1)=>{if(!0===r)return e.output;const o=t||{}\x2Cn=o.contains?"":"^"\x2Ci=o.contains?"":"$";let a=`${n}(?:${e.output})${i}`;e&&!0===e.negated&&(a=`^(?!${a}).*$`);const l=c.toRegex(a\x2Ct);return!0===s&&(l.state=e)\x2Cl}\x2Cc.makeRe=(e\x2Ct={}\x2Cr=!1\x2Cs=!1)=>{if(!e||"string"!=typeof e)throw new TypeError("Expected a non-empty string");let o={negated:!1\x2Cfastpaths:!0};return!1===t.fastpaths||"."!==e[0]&&"*"!==e[0]||(o.output=n.fastpaths(e\x2Ct))\x2Co.output||(o=n(e\x2Ct))\x2Cc.compileRe(o\x2Ct\x2Cr\x2Cs)}\x2Cc.toRegex=(e\x2Ct)=>{try{const r=t||{};return new RegExp(e\x2Cr.flags||(r.nocase?"i":""))}catch(e){if(t&&!0===t.debug)throw e;return/$^/}}\x2Cc.constants=a\x2Ce.exports=c}\x2C7965:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5266)\x2C{CHAR_ASTERISK:o\x2CCHAR_AT:n\x2CCHAR_BACKWARD_SLASH:i\x2CCHAR_COMMA:a\x2CCHAR_DOT:c\x2CCHAR_EXCLAMATION_MARK:l\x2CCHAR_FORWARD_SLASH:u\x2CCHAR_LEFT_CURLY_BRACE:p\x2CCHAR_LEFT_PARENTHESES:h\x2CCHAR_LEFT_SQUARE_BRACKET:d\x2CCHAR_PLUS:f\x2CCHAR_QUESTION_MARK:_\x2CCHAR_RIGHT_CURLY_BRACE:g\x2CCHAR_RIGHT_PARENTHESES:m\x2CCHAR_RIGHT_SQUARE_BRACKET:y}=r(7654)\x2Cv=e=>e===u||e===i\x2Cb=e=>{!0!==e.isPrefix&&(e.depth=e.isGlobstar?1/0:1)};e.exports=(e\x2Ct)=>{const r=t||{}\x2CE=e.length-1\x2CS=!0===r.parts||!0===r.scanToEnd\x2Cx=[]\x2CR=[]\x2CC=[];let w\x2Ck\x2CA=e\x2CO=-1\x2CT=0\x2CN=0\x2CL=!1\x2CP=!1\x2CI=!1\x2CH=!1\x2C$=!1\x2CM=!1\x2CB=!1\x2CD=!1\x2CU=!1\x2Cj=!1\x2CF=0\x2CG={value:""\x2Cdepth:0\x2CisGlob:!1};const W=()=>O>=E\x2Cq=()=>(w=k\x2CA.charCodeAt(++O));for(;O<E;){let e;if(k=q()\x2Ck!==i){if(!0===M||k===p){for(F++;!0!==W()&&(k=q());)if(k!==i)if(k!==p){if(!0!==M&&k===c&&(k=q())===c){if(L=G.isBrace=!0\x2CI=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(!0!==M&&k===a){if(L=G.isBrace=!0\x2CI=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(k===g&&(F--\x2C0===F)){M=!1\x2CL=G.isBrace=!0\x2Cj=!0;break}}else F++;else B=G.backslashes=!0\x2Cq();if(!0===S)continue;break}if(k!==u){if(!0!==r.noext&&!0==(k===f||k===n||k===o||k===_||k===l)&&A.charCodeAt(O+1)===h){if(I=G.isGlob=!0\x2CH=G.isExtglob=!0\x2Cj=!0\x2Ck===l&&O===T&&(U=!0)\x2C!0===S){for(;!0!==W()&&(k=q());)if(k!==i){if(k===m){I=G.isGlob=!0\x2Cj=!0;break}}else B=G.backslashes=!0\x2Ck=q();continue}break}if(k===o){if(w===o&&($=G.isGlobstar=!0)\x2CI=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(k===_){if(I=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(k===d){for(;!0!==W()&&(e=q());)if(e!==i){if(e===y){P=G.isBracket=!0\x2CI=G.isGlob=!0\x2Cj=!0;break}}else B=G.backslashes=!0\x2Cq();if(!0===S)continue;break}if(!0===r.nonegate||k!==l||O!==T){if(!0!==r.noparen&&k===h){if(I=G.isGlob=!0\x2C!0===S){for(;!0!==W()&&(k=q());)if(k!==h){if(k===m){j=!0;break}}else B=G.backslashes=!0\x2Ck=q();continue}break}if(!0===I){if(j=!0\x2C!0===S)continue;break}}else D=G.negated=!0\x2CT++}else{if(x.push(O)\x2CR.push(G)\x2CG={value:""\x2Cdepth:0\x2CisGlob:!1}\x2C!0===j)continue;if(w===c&&O===T+1){T+=2;continue}N=O+1}}else B=G.backslashes=!0\x2Ck=q()\x2Ck===p&&(M=!0)}!0===r.noext&&(H=!1\x2CI=!1);let K=A\x2CV=""\x2CQ="";T>0&&(V=A.slice(0\x2CT)\x2CA=A.slice(T)\x2CN-=T)\x2CK&&!0===I&&N>0?(K=A.slice(0\x2CN)\x2CQ=A.slice(N)):!0===I?(K=""\x2CQ=A):K=A\x2CK&&""!==K&&"/"!==K&&K!==A&&v(K.charCodeAt(K.length-1))&&(K=K.slice(0\x2C-1))\x2C!0===r.unescape&&(Q&&(Q=s.removeBackslashes(Q))\x2CK&&!0===B&&(K=s.removeBackslashes(K)));const z={prefix:V\x2Cinput:e\x2Cstart:T\x2Cbase:K\x2Cglob:Q\x2CisBrace:L\x2CisBracket:P\x2CisGlob:I\x2CisExtglob:H\x2CisGlobstar:$\x2Cnegated:D\x2CnegatedExtglob:U};if(!0===r.tokens&&(z.maxDepth=0\x2Cv(k)||R.push(G)\x2Cz.tokens=R)\x2C!0===r.parts||!0===r.tokens){let t;for(let s=0;s<x.length;s++){const o=t?t+1:T\x2Cn=x[s]\x2Ci=e.slice(o\x2Cn);r.tokens&&(0===s&&0!==T?(R[s].isPrefix=!0\x2CR[s].value=V):R[s].value=i\x2Cb(R[s])\x2Cz.maxDepth+=R[s].depth)\x2C0===s&&""===i||C.push(i)\x2Ct=n}if(t&&t+1<e.length){const s=e.slice(t+1);C.push(s)\x2Cr.tokens&&(R[R.length-1].value=s\x2Cb(R[R.length-1])\x2Cz.maxDepth+=R[R.length-1].depth)}z.slashes=x\x2Cz.parts=C}return z}}\x2C5266:(e\x2Ct\x2Cr)=>{"use strict";const s=r(1017)\x2Co="win32"===process.platform\x2C{REGEX_BACKSLASH:n\x2CREGEX_REMOVE_BACKSLASH:i\x2CREGEX_SPECIAL_CHARS:a\x2CREGEX_SPECIAL_CHARS_GLOBAL:c}=r(7654);t.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e)\x2Ct.hasRegexChars=e=>a.test(e)\x2Ct.isRegexChar=e=>1===e.length&&t.hasRegexChars(e)\x2Ct.escapeRegex=e=>e.replace(c\x2C"\\\\$1")\x2Ct.toPosixSlashes=e=>e.replace(n\x2C"/")\x2Ct.removeBackslashes=e=>e.replace(i\x2C(e=>"\\\\"===e?"":e))\x2Ct.supportsLookbehinds=()=>{const e=process.version.slice(1).split(".").map(Number);return 3===e.length&&e[0]>=9||8===e[0]&&e[1]>=10}\x2Ct.isWindows=e=>e&&"boolean"==typeof e.windows?e.windows:!0===o||"\\\\"===s.sep\x2Ct.escapeLast=(e\x2Cr\x2Cs)=>{const o=e.lastIndexOf(r\x2Cs);return-1===o?e:"\\\\"===e[o-1]?t.escapeLast(e\x2Cr\x2Co-1):`${e.slice(0\x2Co)}\\\\${e.slice(o)}`}\x2Ct.removePrefix=(e\x2Ct={})=>{let r=e;return r.startsWith("./")&&(r=r.slice(2)\x2Ct.prefix="./")\x2Cr}\x2Ct.wrapOutput=(e\x2Ct={}\x2Cr={})=>{let s=`${r.contains?"":"^"}(?:${e})${r.contains?"":"$"}`;return!0===t.negated&&(s=`(?:^(?!${s}).*$)`)\x2Cs}}\x2C8681:(e\x2Ct\x2Cr)=>{"use strict";const s=r(2982);s.createWebSocketStream=r(5519)\x2Cs.Server=r(58)\x2Cs.Receiver=r(3091)\x2Cs.Sender=r(2091)\x2Cs.WebSocket=s\x2Cs.WebSocketServer=s.Server\x2Ce.exports=s}\x2C4847:(e\x2Ct\x2Cr)=>{"use strict";const{EMPTY_BUFFER:s}=r(9864);function o(e\x2Ct){if(0===e.length)return s;if(1===e.length)return e[0];const r=Buffer.allocUnsafe(t);let o=0;for(let t=0;t<e.length;t++){const s=e[t];r.set(s\x2Co)\x2Co+=s.length}return o<t?r.slice(0\x2Co):r}function n(e\x2Ct\x2Cr\x2Cs\x2Co){for(let n=0;n<o;n++)r[s+n]=e[n]^t[3&n]}function i(e\x2Ct){for(let r=0;r<e.length;r++)e[r]^=t[3&r]}function a(e){return e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset\x2Ce.byteOffset+e.byteLength)}function c(e){if(c.readOnly=!0\x2CBuffer.isBuffer(e))return e;let t;return e instanceof ArrayBuffer?t=Buffer.from(e):ArrayBuffer.isView(e)?t=Buffer.from(e.buffer\x2Ce.byteOffset\x2Ce.byteLength):(t=Buffer.from(e)\x2Cc.readOnly=!1)\x2Ct}try{const t=r(Object(function(){var e=new Error("Cannot find module 'bufferutil'");throw e.code="MODULE_NOT_FOUND"\x2Ce}()));e.exports={concat:o\x2Cmask(e\x2Cr\x2Cs\x2Co\x2Ci){i<48?n(e\x2Cr\x2Cs\x2Co\x2Ci):t.mask(e\x2Cr\x2Cs\x2Co\x2Ci)}\x2CtoArrayBuffer:a\x2CtoBuffer:c\x2Cunmask(e\x2Cr){e.length<32?i(e\x2Cr):t.unmask(e\x2Cr)}}}catch(t){e.exports={concat:o\x2Cmask:n\x2CtoArrayBuffer:a\x2CtoBuffer:c\x2Cunmask:i}}}\x2C9864:e=>{"use strict";e.exports={BINARY_TYPES:["nodebuffer"\x2C"arraybuffer"\x2C"fragments"]\x2CEMPTY_BUFFER:Buffer.alloc(0)\x2CGUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11"\x2CkForOnEventAttribute:Symbol("kIsForOnEventAttribute")\x2CkListener:Symbol("kListener")\x2CkStatusCode:Symbol("status-code")\x2CkWebSocket:Symbol("websocket")\x2CNOOP:()=>{}}}\x2C5831:(e\x2Ct\x2Cr)=>{"use strict";const{kForOnEventAttribute:s\x2CkListener:o}=r(9864)\x2Cn=Symbol("kCode")\x2Ci=Symbol("kData")\x2Ca=Symbol("kError")\x2Cc=Symbol("kMessage")\x2Cl=Symbol("kReason")\x2Cu=Symbol("kTarget")\x2Cp=Symbol("kType")\x2Ch=Symbol("kWasClean");class d{constructor(e){this[u]=null\x2Cthis[p]=e}get target(){return this[u]}get type(){return this[p]}}Object.defineProperty(d.prototype\x2C"target"\x2C{enumerable:!0})\x2CObject.defineProperty(d.prototype\x2C"type"\x2C{enumerable:!0});class f extends d{constructor(e\x2Ct={}){super(e)\x2Cthis[n]=void 0===t.code?0:t.code\x2Cthis[l]=void 0===t.reason?"":t.reason\x2Cthis[h]=void 0!==t.wasClean&&t.wasClean}get code(){return this[n]}get reason(){return this[l]}get wasClean(){return this[h]}}Object.defineProperty(f.prototype\x2C"code"\x2C{enumerable:!0})\x2CObject.defineProperty(f.prototype\x2C"reason"\x2C{enumerable:!0})\x2CObject.defineProperty(f.prototype\x2C"wasClean"\x2C{enumerable:!0});class _ extends d{constructor(e\x2Ct={}){super(e)\x2Cthis[a]=void 0===t.error?null:t.error\x2Cthis[c]=void 0===t.message?"":t.message}get error(){return this[a]}get message(){return this[c]}}Object.defineProperty(_.prototype\x2C"error"\x2C{enumerable:!0})\x2CObject.defineProperty(_.prototype\x2C"message"\x2C{enumerable:!0});class g extends d{constructor(e\x2Ct={}){super(e)\x2Cthis[i]=void 0===t.data?null:t.data}get data(){return this[i]}}Object.defineProperty(g.prototype\x2C"data"\x2C{enumerable:!0});const m={addEventListener(e\x2Ct\x2Cr={}){let n;if("message"===e)n=function(e\x2Cr){const s=new g("message"\x2C{data:r?e:e.toString()});s[u]=this\x2Ct.call(this\x2Cs)};else if("close"===e)n=function(e\x2Cr){const s=new f("close"\x2C{code:e\x2Creason:r.toString()\x2CwasClean:this._closeFrameReceived&&this._closeFrameSent});s[u]=this\x2Ct.call(this\x2Cs)};else if("error"===e)n=function(e){const r=new _("error"\x2C{error:e\x2Cmessage:e.message});r[u]=this\x2Ct.call(this\x2Cr)};else{if("open"!==e)return;n=function(){const e=new d("open");e[u]=this\x2Ct.call(this\x2Ce)}}n[s]=!!r[s]\x2Cn[o]=t\x2Cr.once?this.once(e\x2Cn):this.on(e\x2Cn)}\x2CremoveEventListener(e\x2Ct){for(const r of this.listeners(e))if(r[o]===t&&!r[s]){this.removeListener(e\x2Cr);break}}};e.exports={CloseEvent:f\x2CErrorEvent:_\x2CEvent:d\x2CEventTarget:m\x2CMessageEvent:g}}\x2C3071:(e\x2Ct\x2Cr)=>{"use strict";const{tokenChars:s}=r(1607);function o(e\x2Ct\x2Cr){void 0===e[t]?e[t]=[r]:e[t].push(r)}e.exports={format:function(e){return Object.keys(e).map((t=>{let r=e[t];return Array.isArray(r)||(r=[r])\x2Cr.map((e=>[t].concat(Object.keys(e).map((t=>{let r=e[t];return Array.isArray(r)||(r=[r])\x2Cr.map((e=>!0===e?t:`${t}=${e}`)).join("; ")}))).join("; "))).join("\x2C ")})).join("\x2C ")}\x2Cparse:function(e){const t=Object.create(null);let r\x2Cn\x2Ci=Object.create(null)\x2Ca=!1\x2Cc=!1\x2Cl=!1\x2Cu=-1\x2Cp=-1\x2Ch=-1\x2Cd=0;for(;d<e.length;d++)if(p=e.charCodeAt(d)\x2Cvoid 0===r)if(-1===h&&1===s[p])-1===u&&(u=d);else if(0===d||32!==p&&9!==p){if(59!==p&&44!==p)throw new SyntaxError(`Unexpected character at index ${d}`);{if(-1===u)throw new SyntaxError(`Unexpected character at index ${d}`);-1===h&&(h=d);const s=e.slice(u\x2Ch);44===p?(o(t\x2Cs\x2Ci)\x2Ci=Object.create(null)):r=s\x2Cu=h=-1}}else-1===h&&-1!==u&&(h=d);else if(void 0===n)if(-1===h&&1===s[p])-1===u&&(u=d);else if(32===p||9===p)-1===h&&-1!==u&&(h=d);else if(59===p||44===p){if(-1===u)throw new SyntaxError(`Unexpected character at index ${d}`);-1===h&&(h=d)\x2Co(i\x2Ce.slice(u\x2Ch)\x2C!0)\x2C44===p&&(o(t\x2Cr\x2Ci)\x2Ci=Object.create(null)\x2Cr=void 0)\x2Cu=h=-1}else{if(61!==p||-1===u||-1!==h)throw new SyntaxError(`Unexpected character at index ${d}`);n=e.slice(u\x2Cd)\x2Cu=h=-1}else if(c){if(1!==s[p])throw new SyntaxError(`Unexpected character at index ${d}`);-1===u?u=d:a||(a=!0)\x2Cc=!1}else if(l)if(1===s[p])-1===u&&(u=d);else if(34===p&&-1!==u)l=!1\x2Ch=d;else{if(92!==p)throw new SyntaxError(`Unexpected character at index ${d}`);c=!0}else if(34===p&&61===e.charCodeAt(d-1))l=!0;else if(-1===h&&1===s[p])-1===u&&(u=d);else if(-1===u||32!==p&&9!==p){if(59!==p&&44!==p)throw new SyntaxError(`Unexpected character at index ${d}`);{if(-1===u)throw new SyntaxError(`Unexpected character at index ${d}`);-1===h&&(h=d);let s=e.slice(u\x2Ch);a&&(s=s.replace(/\\\\/g\x2C"")\x2Ca=!1)\x2Co(i\x2Cn\x2Cs)\x2C44===p&&(o(t\x2Cr\x2Ci)\x2Ci=Object.create(null)\x2Cr=void 0)\x2Cn=void 0\x2Cu=h=-1}}else-1===h&&(h=d);if(-1===u||l||32===p||9===p)throw new SyntaxError("Unexpected end of input");-1===h&&(h=d);const f=e.slice(u\x2Ch);return void 0===r?o(t\x2Cf\x2Ci):(void 0===n?o(i\x2Cf\x2C!0):o(i\x2Cn\x2Ca?f.replace(/\\\\/g\x2C""):f)\x2Co(t\x2Cr\x2Ci))\x2Ct}}}\x2C8528:e=>{"use strict";const t=Symbol("kDone")\x2Cr=Symbol("kRun");e.exports=class{constructor(e){this[t]=()=>{this.pending--\x2Cthis[r]()}\x2Cthis.concurrency=e||1/0\x2Cthis.jobs=[]\x2Cthis.pending=0}add(e){this.jobs.push(e)\x2Cthis[r]()}[r](){if(this.pending!==this.concurrency&&this.jobs.length){const e=this.jobs.shift();this.pending++\x2Ce(this[t])}}}}\x2C7567:(e\x2Ct\x2Cr)=>{"use strict";const s=r(9796)\x2Co=r(4847)\x2Cn=r(8528)\x2C{kStatusCode:i}=r(9864)\x2Ca=Buffer.from([0\x2C0\x2C255\x2C255])\x2Cc=Symbol("permessage-deflate")\x2Cl=Symbol("total-length")\x2Cu=Symbol("callback")\x2Cp=Symbol("buffers")\x2Ch=Symbol("error");let d;function f(e){this[p].push(e)\x2Cthis[l]+=e.length}function _(e){this[l]+=e.length\x2Cthis[c]._maxPayload<1||this[l]<=this[c]._maxPayload?this[p].push(e):(this[h]=new RangeError("Max payload size exceeded")\x2Cthis[h].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"\x2Cthis[h][i]=1009\x2Cthis.removeListener("data"\x2C_)\x2Cthis.reset())}function g(e){this[c]._inflate=null\x2Ce[i]=1007\x2Cthis[u](e)}e.exports=class{constructor(e\x2Ct\x2Cr){if(this._maxPayload=0|r\x2Cthis._options=e||{}\x2Cthis._threshold=void 0!==this._options.threshold?this._options.threshold:1024\x2Cthis._isServer=!!t\x2Cthis._deflate=null\x2Cthis._inflate=null\x2Cthis.params=null\x2C!d){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;d=new n(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0)\x2Cthis._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0)\x2Cthis._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits)\x2Cthis._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0)\x2Ce}accept(e){return e=this.normalizeParams(e)\x2Cthis.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e)\x2Cthis.params}cleanup(){if(this._inflate&&(this._inflate.close()\x2Cthis._inflate=null)\x2Cthis._deflate){const e=this._deflate[u];this._deflate.close()\x2Cthis._deflate=null\x2Ce&&e(new Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){const t=this._options\x2Cr=e.find((e=>!(!1===t.serverNoContextTakeover&&e.server_no_context_takeover||e.server_max_window_bits&&(!1===t.serverMaxWindowBits||"number"==typeof t.serverMaxWindowBits&&t.serverMaxWindowBits>e.server_max_window_bits)||"number"==typeof t.clientMaxWindowBits&&!e.client_max_window_bits)));if(!r)throw new Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(r.server_no_context_takeover=!0)\x2Ct.clientNoContextTakeover&&(r.client_no_context_takeover=!0)\x2C"number"==typeof t.serverMaxWindowBits&&(r.server_max_window_bits=t.serverMaxWindowBits)\x2C"number"==typeof t.clientMaxWindowBits?r.client_max_window_bits=t.clientMaxWindowBits:!0!==r.client_max_window_bits&&!1!==t.clientMaxWindowBits||delete r.client_max_window_bits\x2Cr}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach((e=>{Object.keys(e).forEach((t=>{let r=e[t];if(r.length>1)throw new Error(`Parameter "${t}" must have only a single value`);if(r=r[0]\x2C"client_max_window_bits"===t){if(!0!==r){const e=+r;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${r}`);r=e}else if(!this._isServer)throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}else if("server_max_window_bits"===t){const e=+r;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${r}`);r=e}else{if("client_no_context_takeover"!==t&&"server_no_context_takeover"!==t)throw new Error(`Unknown parameter "${t}"`);if(!0!==r)throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}e[t]=r}))}))\x2Ce}decompress(e\x2Ct\x2Cr){d.add((s=>{this._decompress(e\x2Ct\x2C((e\x2Ct)=>{s()\x2Cr(e\x2Ct)}))}))}compress(e\x2Ct\x2Cr){d.add((s=>{this._compress(e\x2Ct\x2C((e\x2Ct)=>{s()\x2Cr(e\x2Ct)}))}))}_decompress(e\x2Ct\x2Cr){const n=this._isServer?"client":"server";if(!this._inflate){const e=`${n}_max_window_bits`\x2Ct="number"!=typeof this.params[e]?s.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=s.createInflateRaw({...this._options.zlibInflateOptions\x2CwindowBits:t})\x2Cthis._inflate[c]=this\x2Cthis._inflate[l]=0\x2Cthis._inflate[p]=[]\x2Cthis._inflate.on("error"\x2Cg)\x2Cthis._inflate.on("data"\x2C_)}this._inflate[u]=r\x2Cthis._inflate.write(e)\x2Ct&&this._inflate.write(a)\x2Cthis._inflate.flush((()=>{const e=this._inflate[h];if(e)return this._inflate.close()\x2Cthis._inflate=null\x2Cvoid r(e);const s=o.concat(this._inflate[p]\x2Cthis._inflate[l]);this._inflate._readableState.endEmitted?(this._inflate.close()\x2Cthis._inflate=null):(this._inflate[l]=0\x2Cthis._inflate[p]=[]\x2Ct&&this.params[`${n}_no_context_takeover`]&&this._inflate.reset())\x2Cr(null\x2Cs)}))}_compress(e\x2Ct\x2Cr){const n=this._isServer?"server":"client";if(!this._deflate){const e=`${n}_max_window_bits`\x2Ct="number"!=typeof this.params[e]?s.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=s.createDeflateRaw({...this._options.zlibDeflateOptions\x2CwindowBits:t})\x2Cthis._deflate[l]=0\x2Cthis._deflate[p]=[]\x2Cthis._deflate.on("data"\x2Cf)}this._deflate[u]=r\x2Cthis._deflate.write(e)\x2Cthis._deflate.flush(s.Z_SYNC_FLUSH\x2C(()=>{if(!this._deflate)return;let e=o.concat(this._deflate[p]\x2Cthis._deflate[l]);t&&(e=e.slice(0\x2Ce.length-4))\x2Cthis._deflate[u]=null\x2Cthis._deflate[l]=0\x2Cthis._deflate[p]=[]\x2Ct&&this.params[`${n}_no_context_takeover`]&&this._deflate.reset()\x2Cr(null\x2Ce)}))}}}\x2C3091:(e\x2Ct\x2Cr)=>{"use strict";const{Writable:s}=r(2781)\x2Co=r(7567)\x2C{BINARY_TYPES:n\x2CEMPTY_BUFFER:i\x2CkStatusCode:a\x2CkWebSocket:c}=r(9864)\x2C{concat:l\x2CtoArrayBuffer:u\x2Cunmask:p}=r(4847)\x2C{isValidStatusCode:h\x2CisValidUTF8:d}=r(1607);function f(e\x2Ct\x2Cr\x2Cs\x2Co){const n=new e(r?`Invalid WebSocket frame: ${t}`:t);return Error.captureStackTrace(n\x2Cf)\x2Cn.code=o\x2Cn[a]=s\x2Cn}e.exports=class extends s{constructor(e={}){super()\x2Cthis._binaryType=e.binaryType||n[0]\x2Cthis._extensions=e.extensions||{}\x2Cthis._isServer=!!e.isServer\x2Cthis._maxPayload=0|e.maxPayload\x2Cthis._skipUTF8Validation=!!e.skipUTF8Validation\x2Cthis[c]=void 0\x2Cthis._bufferedBytes=0\x2Cthis._buffers=[]\x2Cthis._compressed=!1\x2Cthis._payloadLength=0\x2Cthis._mask=void 0\x2Cthis._fragmented=0\x2Cthis._masked=!1\x2Cthis._fin=!1\x2Cthis._opcode=0\x2Cthis._totalPayloadLength=0\x2Cthis._messageLength=0\x2Cthis._fragments=[]\x2Cthis._state=0\x2Cthis._loop=!1}_write(e\x2Ct\x2Cr){if(8===this._opcode&&0==this._state)return r();this._bufferedBytes+=e.length\x2Cthis._buffers.push(e)\x2Cthis.startLoop(r)}consume(e){if(this._bufferedBytes-=e\x2Ce===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];return this._buffers[0]=t.slice(e)\x2Ct.slice(0\x2Ce)}const t=Buffer.allocUnsafe(e);do{const r=this._buffers[0]\x2Cs=t.length-e;e>=r.length?t.set(this._buffers.shift()\x2Cs):(t.set(new Uint8Array(r.buffer\x2Cr.byteOffset\x2Ce)\x2Cs)\x2Cthis._buffers[0]=r.slice(e))\x2Ce-=r.length}while(e>0);return t}startLoop(e){let t;this._loop=!0;do{switch(this._state){case 0:t=this.getInfo();break;case 1:t=this.getPayloadLength16();break;case 2:t=this.getPayloadLength64();break;case 3:this.getMask();break;case 4:t=this.getData(e);break;default:return void(this._loop=!1)}}while(this._loop);e(t)}getInfo(){if(this._bufferedBytes<2)return void(this._loop=!1);const e=this.consume(2);if(0!=(48&e[0]))return this._loop=!1\x2Cf(RangeError\x2C"RSV2 and RSV3 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_2_3");const t=64==(64&e[0]);if(t&&!this._extensions[o.extensionName])return this._loop=!1\x2Cf(RangeError\x2C"RSV1 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_1");if(this._fin=128==(128&e[0])\x2Cthis._opcode=15&e[0]\x2Cthis._payloadLength=127&e[1]\x2C0===this._opcode){if(t)return this._loop=!1\x2Cf(RangeError\x2C"RSV1 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_1");if(!this._fragmented)return this._loop=!1\x2Cf(RangeError\x2C"invalid opcode 0"\x2C!0\x2C1002\x2C"WS_ERR_INVALID_OPCODE");this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented)return this._loop=!1\x2Cf(RangeError\x2C`invalid opcode ${this._opcode}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_OPCODE");this._compressed=t}else{if(!(this._opcode>7&&this._opcode<11))return this._loop=!1\x2Cf(RangeError\x2C`invalid opcode ${this._opcode}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_OPCODE");if(!this._fin)return this._loop=!1\x2Cf(RangeError\x2C"FIN must be set"\x2C!0\x2C1002\x2C"WS_ERR_EXPECTED_FIN");if(t)return this._loop=!1\x2Cf(RangeError\x2C"RSV1 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_1");if(this._payloadLength>125)return this._loop=!1\x2Cf(RangeError\x2C`invalid payload length ${this._payloadLength}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH")}if(this._fin||this._fragmented||(this._fragmented=this._opcode)\x2Cthis._masked=128==(128&e[1])\x2Cthis._isServer){if(!this._masked)return this._loop=!1\x2Cf(RangeError\x2C"MASK must be set"\x2C!0\x2C1002\x2C"WS_ERR_EXPECTED_MASK")}else if(this._masked)return this._loop=!1\x2Cf(RangeError\x2C"MASK must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_MASK");if(126===this._payloadLength)this._state=1;else{if(127!==this._payloadLength)return this.haveLength();this._state=2}}getPayloadLength16(){if(!(this._bufferedBytes<2))return this._payloadLength=this.consume(2).readUInt16BE(0)\x2Cthis.haveLength();this._loop=!1}getPayloadLength64(){if(this._bufferedBytes<8)return void(this._loop=!1);const e=this.consume(8)\x2Ct=e.readUInt32BE(0);return t>Math.pow(2\x2C21)-1?(this._loop=!1\x2Cf(RangeError\x2C"Unsupported WebSocket frame: payload length > 2^53 - 1"\x2C!1\x2C1009\x2C"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH")):(this._payloadLength=t*Math.pow(2\x2C32)+e.readUInt32BE(4)\x2Cthis.haveLength())}haveLength(){if(this._payloadLength&&this._opcode<8&&(this._totalPayloadLength+=this._payloadLength\x2Cthis._totalPayloadLength>this._maxPayload&&this._maxPayload>0))return this._loop=!1\x2Cf(RangeError\x2C"Max payload size exceeded"\x2C!1\x2C1009\x2C"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");this._masked?this._state=3:this._state=4}getMask(){this._bufferedBytes<4?this._loop=!1:(this._mask=this.consume(4)\x2Cthis._state=4)}getData(e){let t=i;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength)return void(this._loop=!1);t=this.consume(this._payloadLength)\x2Cthis._masked&&0!=(this._mask[0]|this._mask[1]|this._mask[2]|this._mask[3])&&p(t\x2Cthis._mask)}return this._opcode>7?this.controlMessage(t):this._compressed?(this._state=5\x2Cvoid this.decompress(t\x2Ce)):(t.length&&(this._messageLength=this._totalPayloadLength\x2Cthis._fragments.push(t))\x2Cthis.dataMessage())}decompress(e\x2Ct){this._extensions[o.extensionName].decompress(e\x2Cthis._fin\x2C((e\x2Cr)=>{if(e)return t(e);if(r.length){if(this._messageLength+=r.length\x2Cthis._messageLength>this._maxPayload&&this._maxPayload>0)return t(f(RangeError\x2C"Max payload size exceeded"\x2C!1\x2C1009\x2C"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"));this._fragments.push(r)}const s=this.dataMessage();if(s)return t(s);this.startLoop(t)}))}dataMessage(){if(this._fin){const e=this._messageLength\x2Ct=this._fragments;if(this._totalPayloadLength=0\x2Cthis._messageLength=0\x2Cthis._fragmented=0\x2Cthis._fragments=[]\x2C2===this._opcode){let r;r="nodebuffer"===this._binaryType?l(t\x2Ce):"arraybuffer"===this._binaryType?u(l(t\x2Ce)):t\x2Cthis.emit("message"\x2Cr\x2C!0)}else{const r=l(t\x2Ce);if(!this._skipUTF8Validation&&!d(r))return this._loop=!1\x2Cf(Error\x2C"invalid UTF-8 sequence"\x2C!0\x2C1007\x2C"WS_ERR_INVALID_UTF8");this.emit("message"\x2Cr\x2C!1)}}this._state=0}controlMessage(e){if(8===this._opcode)if(this._loop=!1\x2C0===e.length)this.emit("conclude"\x2C1005\x2Ci)\x2Cthis.end();else{if(1===e.length)return f(RangeError\x2C"invalid payload length 1"\x2C!0\x2C1002\x2C"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");{const t=e.readUInt16BE(0);if(!h(t))return f(RangeError\x2C`invalid status code ${t}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_CLOSE_CODE");const r=e.slice(2);if(!this._skipUTF8Validation&&!d(r))return f(Error\x2C"invalid UTF-8 sequence"\x2C!0\x2C1007\x2C"WS_ERR_INVALID_UTF8");this.emit("conclude"\x2Ct\x2Cr)\x2Cthis.end()}}else 9===this._opcode?this.emit("ping"\x2Ce):this.emit("pong"\x2Ce);this._state=0}}}\x2C2091:(e\x2Ct\x2Cr)=>{"use strict";r(1808)\x2Cr(4404);const{randomFillSync:s}=r(6113)\x2Co=r(7567)\x2C{EMPTY_BUFFER:n}=r(9864)\x2C{isValidStatusCode:i}=r(1607)\x2C{mask:a\x2CtoBuffer:c}=r(4847)\x2Cl=Symbol("kByteLength")\x2Cu=Buffer.alloc(4);class p{constructor(e\x2Ct\x2Cr){this._extensions=t||{}\x2Cr&&(this._generateMask=r\x2Cthis._maskBuffer=Buffer.alloc(4))\x2Cthis._socket=e\x2Cthis._firstFragment=!0\x2Cthis._compress=!1\x2Cthis._bufferedBytes=0\x2Cthis._deflating=!1\x2Cthis._queue=[]}static frame(e\x2Ct){let r\x2Co\x2Cn=!1\x2Ci=2\x2Cc=!1;t.mask&&(r=t.maskBuffer||u\x2Ct.generateMask?t.generateMask(r):s(r\x2C0\x2C4)\x2Cc=0==(r[0]|r[1]|r[2]|r[3])\x2Ci=6)\x2C"string"==typeof e?o=t.mask&&!c||void 0===t[l]?(e=Buffer.from(e)).length:t[l]:(o=e.length\x2Cn=t.mask&&t.readOnly&&!c);let p=o;o>=65536?(i+=8\x2Cp=127):o>125&&(i+=2\x2Cp=126);const h=Buffer.allocUnsafe(n?o+i:i);return h[0]=t.fin?128|t.opcode:t.opcode\x2Ct.rsv1&&(h[0]|=64)\x2Ch[1]=p\x2C126===p?h.writeUInt16BE(o\x2C2):127===p&&(h[2]=h[3]=0\x2Ch.writeUIntBE(o\x2C4\x2C6))\x2Ct.mask?(h[1]|=128\x2Ch[i-4]=r[0]\x2Ch[i-3]=r[1]\x2Ch[i-2]=r[2]\x2Ch[i-1]=r[3]\x2Cc?[h\x2Ce]:n?(a(e\x2Cr\x2Ch\x2Ci\x2Co)\x2C[h]):(a(e\x2Cr\x2Ce\x2C0\x2Co)\x2C[h\x2Ce])):[h\x2Ce]}close(e\x2Ct\x2Cr\x2Cs){let o;if(void 0===e)o=n;else{if("number"!=typeof e||!i(e))throw new TypeError("First argument must be a valid error code number");if(void 0!==t&&t.length){const r=Buffer.byteLength(t);if(r>123)throw new RangeError("The message must not be greater than 123 bytes");o=Buffer.allocUnsafe(2+r)\x2Co.writeUInt16BE(e\x2C0)\x2C"string"==typeof t?o.write(t\x2C2):o.set(t\x2C2)}else o=Buffer.allocUnsafe(2)\x2Co.writeUInt16BE(e\x2C0)}const a={[l]:o.length\x2Cfin:!0\x2CgenerateMask:this._generateMask\x2Cmask:r\x2CmaskBuffer:this._maskBuffer\x2Copcode:8\x2CreadOnly:!1\x2Crsv1:!1};this._deflating?this.enqueue([this.dispatch\x2Co\x2C!1\x2Ca\x2Cs]):this.sendFrame(p.frame(o\x2Ca)\x2Cs)}ping(e\x2Ct\x2Cr){let s\x2Co;if("string"==typeof e?(s=Buffer.byteLength(e)\x2Co=!1):(s=(e=c(e)).length\x2Co=c.readOnly)\x2Cs>125)throw new RangeError("The data size must not be greater than 125 bytes");const n={[l]:s\x2Cfin:!0\x2CgenerateMask:this._generateMask\x2Cmask:t\x2CmaskBuffer:this._maskBuffer\x2Copcode:9\x2CreadOnly:o\x2Crsv1:!1};this._deflating?this.enqueue([this.dispatch\x2Ce\x2C!1\x2Cn\x2Cr]):this.sendFrame(p.frame(e\x2Cn)\x2Cr)}pong(e\x2Ct\x2Cr){let s\x2Co;if("string"==typeof e?(s=Buffer.byteLength(e)\x2Co=!1):(s=(e=c(e)).length\x2Co=c.readOnly)\x2Cs>125)throw new RangeError("The data size must not be greater than 125 bytes");const n={[l]:s\x2Cfin:!0\x2CgenerateMask:this._generateMask\x2Cmask:t\x2CmaskBuffer:this._maskBuffer\x2Copcode:10\x2CreadOnly:o\x2Crsv1:!1};this._deflating?this.enqueue([this.dispatch\x2Ce\x2C!1\x2Cn\x2Cr]):this.sendFrame(p.frame(e\x2Cn)\x2Cr)}send(e\x2Ct\x2Cr){const s=this._extensions[o.extensionName];let n\x2Ci\x2Ca=t.binary?2:1\x2Cu=t.compress;if("string"==typeof e?(n=Buffer.byteLength(e)\x2Ci=!1):(n=(e=c(e)).length\x2Ci=c.readOnly)\x2Cthis._firstFragment?(this._firstFragment=!1\x2Cu&&s&&s.params[s._isServer?"server_no_context_takeover":"client_no_context_takeover"]&&(u=n>=s._threshold)\x2Cthis._compress=u):(u=!1\x2Ca=0)\x2Ct.fin&&(this._firstFragment=!0)\x2Cs){const s={[l]:n\x2Cfin:t.fin\x2CgenerateMask:this._generateMask\x2Cmask:t.mask\x2CmaskBuffer:this._maskBuffer\x2Copcode:a\x2CreadOnly:i\x2Crsv1:u};this._deflating?this.enqueue([this.dispatch\x2Ce\x2Cthis._compress\x2Cs\x2Cr]):this.dispatch(e\x2Cthis._compress\x2Cs\x2Cr)}else this.sendFrame(p.frame(e\x2C{[l]:n\x2Cfin:t.fin\x2CgenerateMask:this._generateMask\x2Cmask:t.mask\x2CmaskBuffer:this._maskBuffer\x2Copcode:a\x2CreadOnly:i\x2Crsv1:!1})\x2Cr)}dispatch(e\x2Ct\x2Cr\x2Cs){if(!t)return void this.sendFrame(p.frame(e\x2Cr)\x2Cs);const n=this._extensions[o.extensionName];this._bufferedBytes+=r[l]\x2Cthis._deflating=!0\x2Cn.compress(e\x2Cr.fin\x2C((e\x2Ct)=>{if(this._socket.destroyed){const e=new Error("The socket was closed while data was being compressed");"function"==typeof s&&s(e);for(let t=0;t<this._queue.length;t++){const r=this._queue[t]\x2Cs=r[r.length-1];"function"==typeof s&&s(e)}}else this._bufferedBytes-=r[l]\x2Cthis._deflating=!1\x2Cr.readOnly=!1\x2Cthis.sendFrame(p.frame(t\x2Cr)\x2Cs)\x2Cthis.dequeue()}))}dequeue(){for(;!this._deflating&&this._queue.length;){const e=this._queue.shift();this._bufferedBytes-=e[3][l]\x2CReflect.apply(e[0]\x2Cthis\x2Ce.slice(1))}}enqueue(e){this._bufferedBytes+=e[3][l]\x2Cthis._queue.push(e)}sendFrame(e\x2Ct){2===e.length?(this._socket.cork()\x2Cthis._socket.write(e[0])\x2Cthis._socket.write(e[1]\x2Ct)\x2Cthis._socket.uncork()):this._socket.write(e[0]\x2Ct)}}e.exports=p}\x2C5519:(e\x2Ct\x2Cr)=>{"use strict";const{Duplex:s}=r(2781);function o(e){e.emit("close")}function n(){!this.destroyed&&this._writableState.finished&&this.destroy()}function i(e){this.removeListener("error"\x2Ci)\x2Cthis.destroy()\x2C0===this.listenerCount("error")&&this.emit("error"\x2Ce)}e.exports=function(e\x2Ct){let r=!0;const a=new s({...t\x2CautoDestroy:!1\x2CemitClose:!1\x2CobjectMode:!1\x2CwritableObjectMode:!1});return e.on("message"\x2C(function(t\x2Cr){const s=!r&&a._readableState.objectMode?t.toString():t;a.push(s)||e.pause()}))\x2Ce.once("error"\x2C(function(e){a.destroyed||(r=!1\x2Ca.destroy(e))}))\x2Ce.once("close"\x2C(function(){a.destroyed||a.push(null)}))\x2Ca._destroy=function(t\x2Cs){if(e.readyState===e.CLOSED)return s(t)\x2Cvoid process.nextTick(o\x2Ca);let n=!1;e.once("error"\x2C(function(e){n=!0\x2Cs(e)}))\x2Ce.once("close"\x2C(function(){n||s(t)\x2Cprocess.nextTick(o\x2Ca)}))\x2Cr&&e.terminate()}\x2Ca._final=function(t){e.readyState!==e.CONNECTING?null!==e._socket&&(e._socket._writableState.finished?(t()\x2Ca._readableState.endEmitted&&a.destroy()):(e._socket.once("finish"\x2C(function(){t()}))\x2Ce.close())):e.once("open"\x2C(function(){a._final(t)}))}\x2Ca._read=function(){e.isPaused&&e.resume()}\x2Ca._write=function(t\x2Cr\x2Cs){e.readyState!==e.CONNECTING?e.send(t\x2Cs):e.once("open"\x2C(function(){a._write(t\x2Cr\x2Cs)}))}\x2Ca.on("end"\x2Cn)\x2Ca.on("error"\x2Ci)\x2Ca}}\x2C2217:(e\x2Ct\x2Cr)=>{"use strict";const{tokenChars:s}=r(1607);e.exports={parse:function(e){const t=new Set;let r=-1\x2Co=-1\x2Cn=0;for(;n<e.length;n++){const i=e.charCodeAt(n);if(-1===o&&1===s[i])-1===r&&(r=n);else if(0===n||32!==i&&9!==i){if(44!==i)throw new SyntaxError(`Unexpected character at index ${n}`);{if(-1===r)throw new SyntaxError(`Unexpected character at index ${n}`);-1===o&&(o=n);const s=e.slice(r\x2Co);if(t.has(s))throw new SyntaxError(`The "${s}" subprotocol is duplicated`);t.add(s)\x2Cr=o=-1}}else-1===o&&-1!==r&&(o=n)}if(-1===r||-1!==o)throw new SyntaxError("Unexpected end of input");const i=e.slice(r\x2Cn);if(t.has(i))throw new SyntaxError(`The "${i}" subprotocol is duplicated`);return t.add(i)\x2Ct}}}\x2C1607:(e\x2Ct\x2Cr)=>{"use strict";const s=[0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C1\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C0\x2C1\x2C1\x2C0\x2C1\x2C1\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C0\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C1\x2C0\x2C1\x2C0];function o(e){return e>=1e3&&e<=1014&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999}function n(e){const t=e.length;let r=0;for(;r<t;)if(0==(128&e[r]))r++;else if(192==(224&e[r])){if(r+1===t||128!=(192&e[r+1])||192==(254&e[r]))return!1;r+=2}else if(224==(240&e[r])){if(r+2>=t||128!=(192&e[r+1])||128!=(192&e[r+2])||224===e[r]&&128==(224&e[r+1])||237===e[r]&&160==(224&e[r+1]))return!1;r+=3}else{if(240!=(248&e[r]))return!1;if(r+3>=t||128!=(192&e[r+1])||128!=(192&e[r+2])||128!=(192&e[r+3])||240===e[r]&&128==(240&e[r+1])||244===e[r]&&e[r+1]>143||e[r]>244)return!1;r+=4}return!0}try{const t=r(Object(function(){var e=new Error("Cannot find module 'utf-8-validate'");throw e.code="MODULE_NOT_FOUND"\x2Ce}()));e.exports={isValidStatusCode:o\x2CisValidUTF8:e=>e.length<150?n(e):t(e)\x2CtokenChars:s}}catch(t){e.exports={isValidStatusCode:o\x2CisValidUTF8:n\x2CtokenChars:s}}}\x2C58:(e\x2Ct\x2Cr)=>{"use strict";const s=r(2361)\x2Co=r(3685)\x2C{createHash:n}=(r(5687)\x2Cr(1808)\x2Cr(4404)\x2Cr(6113))\x2Ci=r(3071)\x2Ca=r(7567)\x2Cc=r(2217)\x2Cl=r(2982)\x2C{GUID:u\x2CkWebSocket:p}=r(9864)\x2Ch=/^[+/0-9A-Za-z]{22}==$/;function d(e){e._state=2\x2Ce.emit("close")}function f(){this.destroy()}function _(e\x2Ct\x2Cr\x2Cs){e.writable&&(r=r||o.STATUS_CODES[t]\x2Cs={Connection:"close"\x2C"Content-Type":"text/html"\x2C"Content-Length":Buffer.byteLength(r)\x2C...s}\x2Ce.write(`HTTP/1.1 ${t} ${o.STATUS_CODES[t]}\\r\\n`+Object.keys(s).map((e=>`${e}: ${s[e]}`)).join("\\r\\n")+"\\r\\n\\r\\n"+r))\x2Ce.removeListener("error"\x2Cf)\x2Ce.destroy()}e.exports=class extends s{constructor(e\x2Ct){if(super()\x2Cnull==(e={maxPayload:104857600\x2CskipUTF8Validation:!1\x2CperMessageDeflate:!1\x2ChandleProtocols:null\x2CclientTracking:!0\x2CverifyClient:null\x2CnoServer:!1\x2Cbacklog:null\x2Cserver:null\x2Chost:null\x2Cpath:null\x2Cport:null\x2CWebSocket:l\x2C...e}).port&&!e.server&&!e.noServer||null!=e.port&&(e.server||e.noServer)||e.server&&e.noServer)throw new TypeError('One and only one of the "port"\x2C "server"\x2C or "noServer" options must be specified');if(null!=e.port?(this._server=o.createServer(((e\x2Ct)=>{const r=o.STATUS_CODES[426];t.writeHead(426\x2C{"Content-Length":r.length\x2C"Content-Type":"text/plain"})\x2Ct.end(r)}))\x2Cthis._server.listen(e.port\x2Ce.host\x2Ce.backlog\x2Ct)):e.server&&(this._server=e.server)\x2Cthis._server){const e=this.emit.bind(this\x2C"connection");this._removeListeners=function(e\x2Ct){for(const r of Object.keys(t))e.on(r\x2Ct[r]);return function(){for(const r of Object.keys(t))e.removeListener(r\x2Ct[r])}}(this._server\x2C{listening:this.emit.bind(this\x2C"listening")\x2Cerror:this.emit.bind(this\x2C"error")\x2Cupgrade:(t\x2Cr\x2Cs)=>{this.handleUpgrade(t\x2Cr\x2Cs\x2Ce)}})}!0===e.perMessageDeflate&&(e.perMessageDeflate={})\x2Ce.clientTracking&&(this.clients=new Set\x2Cthis._shouldEmitClose=!1)\x2Cthis.options=e\x2Cthis._state=0}address(){if(this.options.noServer)throw new Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(2===this._state)return e&&this.once("close"\x2C(()=>{e(new Error("The server is not running"))}))\x2Cvoid process.nextTick(d\x2Cthis);if(e&&this.once("close"\x2Ce)\x2C1!==this._state)if(this._state=1\x2Cthis.options.noServer||this.options.server)this._server&&(this._removeListeners()\x2Cthis._removeListeners=this._server=null)\x2Cthis.clients&&this.clients.size?this._shouldEmitClose=!0:process.nextTick(d\x2Cthis);else{const e=this._server;this._removeListeners()\x2Cthis._removeListeners=this._server=null\x2Ce.close((()=>{d(this)}))}}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");if((-1!==t?e.url.slice(0\x2Ct):e.url)!==this.options.path)return!1}return!0}handleUpgrade(e\x2Ct\x2Cr\x2Cs){t.on("error"\x2Cf);const o=void 0!==e.headers["sec-websocket-key"]&&e.headers["sec-websocket-key"]\x2Cn=+e.headers["sec-websocket-version"];if("GET"!==e.method||"websocket"!==e.headers.upgrade.toLowerCase()||!o||!h.test(o)||8!==n&&13!==n||!this.shouldHandle(e))return _(t\x2C400);const l=e.headers["sec-websocket-protocol"];let u=new Set;if(void 0!==l)try{u=c.parse(l)}catch(e){return _(t\x2C400)}const p=e.headers["sec-websocket-extensions"]\x2Cd={};if(this.options.perMessageDeflate&&void 0!==p){const e=new a(this.options.perMessageDeflate\x2C!0\x2Cthis.options.maxPayload);try{const t=i.parse(p);t[a.extensionName]&&(e.accept(t[a.extensionName])\x2Cd[a.extensionName]=e)}catch(e){return _(t\x2C400)}}if(this.options.verifyClient){const i={origin:e.headers[8===n?"sec-websocket-origin":"origin"]\x2Csecure:!(!e.socket.authorized&&!e.socket.encrypted)\x2Creq:e};if(2===this.options.verifyClient.length)return void this.options.verifyClient(i\x2C((n\x2Ci\x2Ca\x2Cc)=>{if(!n)return _(t\x2Ci||401\x2Ca\x2Cc);this.completeUpgrade(d\x2Co\x2Cu\x2Ce\x2Ct\x2Cr\x2Cs)}));if(!this.options.verifyClient(i))return _(t\x2C401)}this.completeUpgrade(d\x2Co\x2Cu\x2Ce\x2Ct\x2Cr\x2Cs)}completeUpgrade(e\x2Ct\x2Cr\x2Cs\x2Co\x2Cc\x2Cl){if(!o.readable||!o.writable)return o.destroy();if(o[p])throw new Error("server.handleUpgrade() was called more than once with the same socket\x2C possibly due to a misconfiguration");if(this._state>0)return _(o\x2C503);const h=["HTTP/1.1 101 Switching Protocols"\x2C"Upgrade: websocket"\x2C"Connection: Upgrade"\x2C`Sec-WebSocket-Accept: ${n("sha1").update(t+u).digest("base64")}`]\x2Cg=new this.options.WebSocket(null);if(r.size){const e=this.options.handleProtocols?this.options.handleProtocols(r\x2Cs):r.values().next().value;e&&(h.push(`Sec-WebSocket-Protocol: ${e}`)\x2Cg._protocol=e)}if(e[a.extensionName]){const t=e[a.extensionName].params\x2Cr=i.format({[a.extensionName]:[t]});h.push(`Sec-WebSocket-Extensions: ${r}`)\x2Cg._extensions=e}this.emit("headers"\x2Ch\x2Cs)\x2Co.write(h.concat("\\r\\n").join("\\r\\n"))\x2Co.removeListener("error"\x2Cf)\x2Cg.setSocket(o\x2Cc\x2C{maxPayload:this.options.maxPayload\x2CskipUTF8Validation:this.options.skipUTF8Validation})\x2Cthis.clients&&(this.clients.add(g)\x2Cg.on("close"\x2C(()=>{this.clients.delete(g)\x2Cthis._shouldEmitClose&&!this.clients.size&&process.nextTick(d\x2Cthis)})))\x2Cl(g\x2Cs)}}}\x2C2982:(e\x2Ct\x2Cr)=>{"use strict";const s=r(2361)\x2Co=r(5687)\x2Cn=r(3685)\x2Ci=r(1808)\x2Ca=r(4404)\x2C{randomBytes:c\x2CcreateHash:l}=r(6113)\x2C{Readable:u}=r(2781)\x2C{URL:p}=r(7310)\x2Ch=r(7567)\x2Cd=r(3091)\x2Cf=r(2091)\x2C{BINARY_TYPES:_\x2CEMPTY_BUFFER:g\x2CGUID:m\x2CkForOnEventAttribute:y\x2CkListener:v\x2CkStatusCode:b\x2CkWebSocket:E\x2CNOOP:S}=r(9864)\x2C{EventTarget:{addEventListener:x\x2CremoveEventListener:R}}=r(5831)\x2C{format:C\x2Cparse:w}=r(3071)\x2C{toBuffer:k}=r(4847)\x2CA=["CONNECTING"\x2C"OPEN"\x2C"CLOSING"\x2C"CLOSED"]\x2CO=/^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/\x2CT=[8\x2C13];class N extends s{constructor(e\x2Ct\x2Cr){super()\x2Cthis._binaryType=_[0]\x2Cthis._closeCode=1006\x2Cthis._closeFrameReceived=!1\x2Cthis._closeFrameSent=!1\x2Cthis._closeMessage=g\x2Cthis._closeTimer=null\x2Cthis._extensions={}\x2Cthis._paused=!1\x2Cthis._protocol=""\x2Cthis._readyState=N.CONNECTING\x2Cthis._receiver=null\x2Cthis._sender=null\x2Cthis._socket=null\x2Cnull!==e?(this._bufferedAmount=0\x2Cthis._isServer=!1\x2Cthis._redirects=0\x2Cvoid 0===t?t=[]:Array.isArray(t)||("object"==typeof t&&null!==t?(r=t\x2Ct=[]):t=[t])\x2CL(this\x2Ce\x2Ct\x2Cr)):this._isServer=!0}get binaryType(){return this._binaryType}set binaryType(e){_.includes(e)&&(this._binaryType=e\x2Cthis._receiver&&(this._receiver._binaryType=e))}get bufferedAmount(){return this._socket?this._socket._writableState.length+this._sender._bufferedBytes:this._bufferedAmount}get extensions(){return Object.keys(this._extensions).join()}get isPaused(){return this._paused}get onclose(){return null}get onerror(){return null}get onopen(){return null}get onmessage(){return null}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e\x2Ct\x2Cr){const s=new d({binaryType:this.binaryType\x2Cextensions:this._extensions\x2CisServer:this._isServer\x2CmaxPayload:r.maxPayload\x2CskipUTF8Validation:r.skipUTF8Validation});this._sender=new f(e\x2Cthis._extensions\x2Cr.generateMask)\x2Cthis._receiver=s\x2Cthis._socket=e\x2Cs[E]=this\x2Ce[E]=this\x2Cs.on("conclude"\x2CB)\x2Cs.on("drain"\x2CD)\x2Cs.on("error"\x2CU)\x2Cs.on("message"\x2CF)\x2Cs.on("ping"\x2CG)\x2Cs.on("pong"\x2CW)\x2Ce.setTimeout(0)\x2Ce.setNoDelay()\x2Ct.length>0&&e.unshift(t)\x2Ce.on("close"\x2CK)\x2Ce.on("data"\x2CV)\x2Ce.on("end"\x2CQ)\x2Ce.on("error"\x2Cz)\x2Cthis._readyState=N.OPEN\x2Cthis.emit("open")}emitClose(){if(!this._socket)return this._readyState=N.CLOSED\x2Cvoid this.emit("close"\x2Cthis._closeCode\x2Cthis._closeMessage);this._extensions[h.extensionName]&&this._extensions[h.extensionName].cleanup()\x2Cthis._receiver.removeAllListeners()\x2Cthis._readyState=N.CLOSED\x2Cthis.emit("close"\x2Cthis._closeCode\x2Cthis._closeMessage)}close(e\x2Ct){if(this.readyState!==N.CLOSED){if(this.readyState===N.CONNECTING){const e="WebSocket was closed before the connection was established";return $(this\x2Cthis._req\x2Ce)}this.readyState!==N.CLOSING?(this._readyState=N.CLOSING\x2Cthis._sender.close(e\x2Ct\x2C!this._isServer\x2C(e=>{e||(this._closeFrameSent=!0\x2C(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end())}))\x2Cthis._closeTimer=setTimeout(this._socket.destroy.bind(this._socket)\x2C3e4)):this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end()}}pause(){this.readyState!==N.CONNECTING&&this.readyState!==N.CLOSED&&(this._paused=!0\x2Cthis._socket.pause())}ping(e\x2Ct\x2Cr){if(this.readyState===N.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(r=e\x2Ce=t=void 0):"function"==typeof t&&(r=t\x2Ct=void 0)\x2C"number"==typeof e&&(e=e.toString())\x2Cthis.readyState===N.OPEN?(void 0===t&&(t=!this._isServer)\x2Cthis._sender.ping(e||g\x2Ct\x2Cr)):M(this\x2Ce\x2Cr)}pong(e\x2Ct\x2Cr){if(this.readyState===N.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(r=e\x2Ce=t=void 0):"function"==typeof t&&(r=t\x2Ct=void 0)\x2C"number"==typeof e&&(e=e.toString())\x2Cthis.readyState===N.OPEN?(void 0===t&&(t=!this._isServer)\x2Cthis._sender.pong(e||g\x2Ct\x2Cr)):M(this\x2Ce\x2Cr)}resume(){this.readyState!==N.CONNECTING&&this.readyState!==N.CLOSED&&(this._paused=!1\x2Cthis._receiver._writableState.needDrain||this._socket.resume())}send(e\x2Ct\x2Cr){if(this.readyState===N.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof t&&(r=t\x2Ct={})\x2C"number"==typeof e&&(e=e.toString())\x2Cthis.readyState!==N.OPEN)return void M(this\x2Ce\x2Cr);const s={binary:"string"!=typeof e\x2Cmask:!this._isServer\x2Ccompress:!0\x2Cfin:!0\x2C...t};this._extensions[h.extensionName]||(s.compress=!1)\x2Cthis._sender.send(e||g\x2Cs\x2Cr)}terminate(){if(this.readyState!==N.CLOSED){if(this.readyState===N.CONNECTING){const e="WebSocket was closed before the connection was established";return $(this\x2Cthis._req\x2Ce)}this._socket&&(this._readyState=N.CLOSING\x2Cthis._socket.destroy())}}}function L(e\x2Ct\x2Cr\x2Cs){const i={protocolVersion:T[1]\x2CmaxPayload:104857600\x2CskipUTF8Validation:!1\x2CperMessageDeflate:!0\x2CfollowRedirects:!1\x2CmaxRedirects:10\x2C...s\x2CcreateConnection:void 0\x2CsocketPath:void 0\x2Chostname:void 0\x2Cprotocol:void 0\x2Ctimeout:void 0\x2Cmethod:void 0\x2Chost:void 0\x2Cpath:void 0\x2Cport:void 0};if(!T.includes(i.protocolVersion))throw new RangeError(`Unsupported protocol version: ${i.protocolVersion} (supported versions: ${T.join("\x2C ")})`);let a;if(t instanceof p)a=t\x2Ce._url=t.href;else{try{a=new p(t)}catch(e){throw new SyntaxError(`Invalid URL: ${t}`)}e._url=t}const u="wss:"===a.protocol\x2Cd="ws+unix:"===a.protocol;let f;if("ws:"===a.protocol||u||d?d&&!a.pathname?f="The URL's pathname is empty":a.hash&&(f="The URL contains a fragment identifier"):f='The URL\\'s protocol must be one of "ws:"\x2C "wss:"\x2C or "ws+unix:"'\x2Cf){const t=new SyntaxError(f);if(0===e._redirects)throw t;return void P(e\x2Ct)}const _=u?443:80\x2Cg=c(16).toString("base64")\x2Cy=u?o.get:n.get\x2Cv=new Set;let b;if(i.createConnection=u?H:I\x2Ci.defaultPort=i.defaultPort||_\x2Ci.port=a.port||_\x2Ci.host=a.hostname.startsWith("[")?a.hostname.slice(1\x2C-1):a.hostname\x2Ci.headers={"Sec-WebSocket-Version":i.protocolVersion\x2C"Sec-WebSocket-Key":g\x2CConnection:"Upgrade"\x2CUpgrade:"websocket"\x2C...i.headers}\x2Ci.path=a.pathname+a.search\x2Ci.timeout=i.handshakeTimeout\x2Ci.perMessageDeflate&&(b=new h(!0!==i.perMessageDeflate?i.perMessageDeflate:{}\x2C!1\x2Ci.maxPayload)\x2Ci.headers["Sec-WebSocket-Extensions"]=C({[h.extensionName]:b.offer()}))\x2Cr.length){for(const e of r){if("string"!=typeof e||!O.test(e)||v.has(e))throw new SyntaxError("An invalid or duplicated subprotocol was specified");v.add(e)}i.headers["Sec-WebSocket-Protocol"]=r.join("\x2C")}if(i.origin&&(i.protocolVersion<13?i.headers["Sec-WebSocket-Origin"]=i.origin:i.headers.Origin=i.origin)\x2C(a.username||a.password)&&(i.auth=`${a.username}:${a.password}`)\x2Cd){const e=i.path.split(":");i.socketPath=e[0]\x2Ci.path=e[1]}if(i.followRedirects){if(0===e._redirects){e._originalHost=a.host;const t=s&&s.headers;if(s={...s\x2Cheaders:{}}\x2Ct)for(const[e\x2Cr]of Object.entries(t))s.headers[e.toLowerCase()]=r}else a.host!==e._originalHost&&(delete i.headers.authorization\x2Cdelete i.headers.cookie\x2Cdelete i.headers.host\x2Ci.auth=void 0);i.auth&&!s.headers.authorization&&(s.headers.authorization="Basic "+Buffer.from(i.auth).toString("base64"))}let E=e._req=y(i);i.timeout&&E.on("timeout"\x2C(()=>{$(e\x2CE\x2C"Opening handshake has timed out")}))\x2CE.on("error"\x2C(t=>{null===E||E.aborted||(E=e._req=null\x2CP(e\x2Ct))}))\x2CE.on("response"\x2C(o=>{const n=o.headers.location\x2Ca=o.statusCode;if(n&&i.followRedirects&&a>=300&&a<400){if(++e._redirects>i.maxRedirects)return void $(e\x2CE\x2C"Maximum redirects exceeded");let o;E.abort();try{o=new p(n\x2Ct)}catch(t){const r=new SyntaxError(`Invalid URL: ${n}`);return void P(e\x2Cr)}L(e\x2Co\x2Cr\x2Cs)}else e.emit("unexpected-response"\x2CE\x2Co)||$(e\x2CE\x2C`Unexpected server response: ${o.statusCode}`)}))\x2CE.on("upgrade"\x2C((t\x2Cr\x2Cs)=>{if(e.emit("upgrade"\x2Ct)\x2Ce.readyState!==N.CONNECTING)return;E=e._req=null;const o=l("sha1").update(g+m).digest("base64");if(t.headers["sec-websocket-accept"]!==o)return void $(e\x2Cr\x2C"Invalid Sec-WebSocket-Accept header");const n=t.headers["sec-websocket-protocol"];let a;if(void 0!==n?v.size?v.has(n)||(a="Server sent an invalid subprotocol"):a="Server sent a subprotocol but none was requested":v.size&&(a="Server sent no subprotocol")\x2Ca)return void $(e\x2Cr\x2Ca);n&&(e._protocol=n);const c=t.headers["sec-websocket-extensions"];if(void 0!==c){if(!b)return void $(e\x2Cr\x2C"Server sent a Sec-WebSocket-Extensions header but no extension was requested");let t;try{t=w(c)}catch(t){return void $(e\x2Cr\x2C"Invalid Sec-WebSocket-Extensions header")}const s=Object.keys(t);if(1!==s.length||s[0]!==h.extensionName)return void $(e\x2Cr\x2C"Server indicated an extension that was not requested");try{b.accept(t[h.extensionName])}catch(t){return void $(e\x2Cr\x2C"Invalid Sec-WebSocket-Extensions header")}e._extensions[h.extensionName]=b}e.setSocket(r\x2Cs\x2C{generateMask:i.generateMask\x2CmaxPayload:i.maxPayload\x2CskipUTF8Validation:i.skipUTF8Validation})}))}function P(e\x2Ct){e._readyState=N.CLOSING\x2Ce.emit("error"\x2Ct)\x2Ce.emitClose()}function I(e){return e.path=e.socketPath\x2Ci.connect(e)}function H(e){return e.path=void 0\x2Ce.servername||""===e.servername||(e.servername=i.isIP(e.host)?"":e.host)\x2Ca.connect(e)}function $(e\x2Ct\x2Cr){e._readyState=N.CLOSING;const s=new Error(r);Error.captureStackTrace(s\x2C$)\x2Ct.setHeader?(t.abort()\x2Ct.socket&&!t.socket.destroyed&&t.socket.destroy()\x2Ct.once("abort"\x2Ce.emitClose.bind(e))\x2Ce.emit("error"\x2Cs)):(t.destroy(s)\x2Ct.once("error"\x2Ce.emit.bind(e\x2C"error"))\x2Ct.once("close"\x2Ce.emitClose.bind(e)))}function M(e\x2Ct\x2Cr){if(t){const r=k(t).length;e._socket?e._sender._bufferedBytes+=r:e._bufferedAmount+=r}r&&r(new Error(`WebSocket is not open: readyState ${e.readyState} (${A[e.readyState]})`))}function B(e\x2Ct){const r=this[E];r._closeFrameReceived=!0\x2Cr._closeMessage=t\x2Cr._closeCode=e\x2Cvoid 0!==r._socket[E]&&(r._socket.removeListener("data"\x2CV)\x2Cprocess.nextTick(q\x2Cr._socket)\x2C1005===e?r.close():r.close(e\x2Ct))}function D(){const e=this[E];e.isPaused||e._socket.resume()}function U(e){const t=this[E];void 0!==t._socket[E]&&(t._socket.removeListener("data"\x2CV)\x2Cprocess.nextTick(q\x2Ct._socket)\x2Ct.close(e[b]))\x2Ct.emit("error"\x2Ce)}function j(){this[E].emitClose()}function F(e\x2Ct){this[E].emit("message"\x2Ce\x2Ct)}function G(e){const t=this[E];t.pong(e\x2C!t._isServer\x2CS)\x2Ct.emit("ping"\x2Ce)}function W(e){this[E].emit("pong"\x2Ce)}function q(e){e.resume()}function K(){const e=this[E];let t;this.removeListener("close"\x2CK)\x2Cthis.removeListener("data"\x2CV)\x2Cthis.removeListener("end"\x2CQ)\x2Ce._readyState=N.CLOSING\x2Cthis._readableState.endEmitted||e._closeFrameReceived||e._receiver._writableState.errorEmitted||null===(t=e._socket.read())||e._receiver.write(t)\x2Ce._receiver.end()\x2Cthis[E]=void 0\x2CclearTimeout(e._closeTimer)\x2Ce._receiver._writableState.finished||e._receiver._writableState.errorEmitted?e.emitClose():(e._receiver.on("error"\x2Cj)\x2Ce._receiver.on("finish"\x2Cj))}function V(e){this[E]._receiver.write(e)||this.pause()}function Q(){const e=this[E];e._readyState=N.CLOSING\x2Ce._receiver.end()\x2Cthis.end()}function z(){const e=this[E];this.removeListener("error"\x2Cz)\x2Cthis.on("error"\x2CS)\x2Ce&&(e._readyState=N.CLOSING\x2Cthis.destroy())}Object.defineProperty(N\x2C"CONNECTING"\x2C{enumerable:!0\x2Cvalue:A.indexOf("CONNECTING")})\x2CObject.defineProperty(N.prototype\x2C"CONNECTING"\x2C{enumerable:!0\x2Cvalue:A.indexOf("CONNECTING")})\x2CObject.defineProperty(N\x2C"OPEN"\x2C{enumerable:!0\x2Cvalue:A.indexOf("OPEN")})\x2CObject.defineProperty(N.prototype\x2C"OPEN"\x2C{enumerable:!0\x2Cvalue:A.indexOf("OPEN")})\x2CObject.defineProperty(N\x2C"CLOSING"\x2C{enumerable:!0\x2Cvalue:A.indexOf("CLOSING")})\x2CObject.defineProperty(N.prototype\x2C"CLOSING"\x2C{enumerable:!0\x2Cvalue:A.indexOf("CLOSING")})\x2CObject.defineProperty(N\x2C"CLOSED"\x2C{enumerable:!0\x2Cvalue:A.indexOf("CLOSED")})\x2CObject.defineProperty(N.prototype\x2C"CLOSED"\x2C{enumerable:!0\x2Cvalue:A.indexOf("CLOSED")})\x2C["binaryType"\x2C"bufferedAmount"\x2C"extensions"\x2C"isPaused"\x2C"protocol"\x2C"readyState"\x2C"url"].forEach((e=>{Object.defineProperty(N.prototype\x2Ce\x2C{enumerable:!0})}))\x2C["open"\x2C"error"\x2C"close"\x2C"message"].forEach((e=>{Object.defineProperty(N.prototype\x2C`on${e}`\x2C{enumerable:!0\x2Cget(){for(const t of this.listeners(e))if(t[y])return t[v];return null}\x2Cset(t){for(const t of this.listeners(e))if(t[y]){this.removeListener(e\x2Ct);break}"function"==typeof t&&this.addEventListener(e\x2Ct\x2C{[y]:!0})}})}))\x2CN.prototype.addEventListener=x\x2CN.prototype.removeEventListener=R\x2Ce.exports=N}\x2C5370:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.CancellationTokenSource=t.Cancelled=t.NeverCancelled=t.cancellableRace=t.timeoutPromise=t.TaskCancelledError=void 0;const s=r(1032)\x2Co=r(4936)\x2Cn=r(8986);class i extends s.ProtocolError{constructor(e){super({id:9243\x2Cformat:e\x2CshowUser:!0})\x2Cthis._cause={id:9243\x2Cformat:e\x2CshowUser:!0}}}t.TaskCancelledError=i\x2Ct.timeoutPromise=function(e\x2Ct\x2Cr){if(t.isCancellationRequested)return Promise.reject(new i(r||"Task cancelled"));const s=(0\x2Cn.getDeferred)()\x2Co=t.onCancellationRequested(s.resolve);return Promise.race([s.promise.then((()=>{throw new i(r||"Task cancelled")}))\x2Ce.then((e=>(o.dispose()\x2Ce))).catch((e=>{throw o.dispose()\x2Ce}))])}\x2Ct.cancellableRace=function(e\x2Ct){const r=new c(t)\x2Cs=e.map((async e=>{try{return await e(r.token)}finally{r.cancel()}}));return Promise.race(s)};const a=Object.freeze((function(e\x2Ct){const r=setTimeout(e.bind(t)\x2C0);return{dispose(){clearTimeout(r)}}}));t.NeverCancelled=Object.freeze({isCancellationRequested:!1\x2ConCancellationRequested:()=>({dispose:()=>{}})})\x2Ct.Cancelled=Object.freeze({isCancellationRequested:!0\x2ConCancellationRequested:a});class c{constructor(e){this._token=void 0\x2Cthis._parentListener=void 0\x2Cthis._parentListener=e&&e.onCancellationRequested(this.cancel\x2Cthis)}static withTimeout(e\x2Ct){const r=new c(t)\x2Cs=r._token=new l\x2Co=setTimeout((()=>s.cancel())\x2Ce);return s.onCancellationRequested((()=>clearTimeout(o)))\x2Cr}get token(){return this._token||(this._token=new l)\x2Cthis._token}cancel(){this._token?this._token instanceof l&&this._token.cancel():this._token=t.Cancelled}dispose(e=!1){e&&this.cancel()\x2Cthis._parentListener&&this._parentListener.dispose()\x2Cthis._token?this._token instanceof l&&this._token.dispose():this._token=t.NeverCancelled}}t.CancellationTokenSource=c;class l{constructor(){this._isCancelled=!1\x2Cthis._emitter=null}cancel(){this._isCancelled||(this._isCancelled=!0\x2Cthis._emitter&&(this._emitter.fire(void 0)\x2Cthis.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?a:(this._emitter||(this._emitter=new o.EventEmitter)\x2Cthis._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose()\x2Cthis._emitter=null)}}}\x2C4936:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.ListenerMap=t.EventEmitter=void 0;const s=r(7678);class o{constructor(){this._listeners=new Set\x2Cthis.event=(e\x2Ct\x2Cr)=>{const s={listener:e\x2CthisArg:t};this._listeners.add(s);const o={dispose:()=>{o.dispose=()=>{}\x2Cthis._listeners.delete(s)}};return r&&r.push(o)\x2Co}}get size(){return this._listeners.size}fire(e){const t=!this._deliveryQueue;this._deliveryQueue||(this._deliveryQueue=[]);for(const t of this._listeners)this._deliveryQueue.push({data:t\x2Cevent:e});if(t){for(let e=0;e<this._deliveryQueue.length;e++){const{data:t\x2Cevent:r}=this._deliveryQueue[e];t.listener.call(t.thisArg\x2Cr)}this._deliveryQueue=void 0}}dispose(){this._listeners.clear()\x2Cthis._deliveryQueue&&(this._deliveryQueue=[])}}t.EventEmitter=o\x2Ct.ListenerMap=class{constructor(){this.map=new Map\x2Cthis.listeners=this.map}listen(e\x2Ct){let r=this.map.get(e);r||(r=new o\x2Cthis.map.set(e\x2Cr));const n=r.event(t);return{dispose:(0\x2Cs.once)((()=>{n.dispose()\x2C0===(null==r?void 0:r.size)&&this.map.delete(e)}))}}emit(e\x2Ct){var r;null===(r=this.listeners.get(e))||void 0===r||r.fire(t)}}}\x2C7551:function(e\x2Ct\x2Cr){"use strict";var s=this&&this.__createBinding||(Object.create?function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r);var o=Object.getOwnPropertyDescriptor(t\x2Cr);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0\x2Cget:function(){return t[r]}})\x2CObject.defineProperty(e\x2Cs\x2Co)}:function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2Ce[s]=t[r]})\x2Co=this&&this.__setModuleDefault||(Object.create?function(e\x2Ct){Object.defineProperty(e\x2C"default"\x2C{enumerable:!0\x2Cvalue:t})}:function(e\x2Ct){e.default=t})\x2Cn=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e\x2Cr)&&s(t\x2Ce\x2Cr);return o(t\x2Ce)\x2Ct};Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.waitForServerToListen=t.makeAcquireWebSocketServer=t.makeAcquireTcpServer=t.acquirePortNumber=t.isPortOpen=t.findOpenPort=void 0;const i=n(r(1808))\x2Ca=n(r(8681))\x2Cc=r(5370)\x2Cl=r(7999);function u(e\x2Ct=c.NeverCancelled){let r;return new Promise(((s\x2Co)=>{const n=i.createServer();n.listen(e\x2C"127.0.0.1"\x2C(()=>{const e=n.address();n.close((()=>s(e.port)))}))\x2Cn.on("error"\x2Co)\x2Cr=t.onCancellationRequested((()=>{n.close()\x2Co(new c.TaskCancelledError("Port open lookup cancelled"))}))})).finally((()=>null==r?void 0:r.dispose()))}t.findOpenPort=async function({min:e=53e3\x2Cmax:t=54e3\x2Cattempts:r=1e3\x2Ctester:s=u}={}\x2Co=c.NeverCancelled){let n=(0\x2Cl.randomInRange)(e\x2Ct);for(let i=Math.min(r\x2Ct-e);;i--)try{return await s(n\x2Co)}catch(r){if(0===i||r instanceof c.TaskCancelledError)throw r;n=n===t-1?e:n+1}}\x2Ct.isPortOpen=async function(e\x2Ct){try{return await u(e\x2Ct)\x2C!0}catch(e){return!1}}\x2Ct.acquirePortNumber=u\x2Ct.makeAcquireTcpServer=(e\x2Cr)=>(s\x2Co)=>{const n=i.createServer(e);return n.listen(s\x2Cr)\x2C(0\x2Ct.waitForServerToListen)(n\x2Co)}\x2Ct.makeAcquireWebSocketServer=e=>(r\x2Cs)=>(0\x2Ct.waitForServerToListen)(new a.Server({host:"127.0.0.1"\x2C...e\x2Cport:r})\x2Cs)\x2Ct.waitForServerToListen=(e\x2Ct)=>{let r;return new Promise(((s\x2Co)=>{e.on("error"\x2Co)\x2Ce.on("listening"\x2C(()=>s(e)))\x2Cr=t.onCancellationRequested((()=>{e.close()\x2Co(new c.TaskCancelledError("Port open lookup cancelled"))}))})).finally((()=>null==r?void 0:r.dispose()))}}\x2C9140:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.findOpenPortSync=t.acquirePortNumber=void 0;const s=r(2081)\x2Co=r(7999);var n=r(7551);Object.defineProperty(t\x2C"acquirePortNumber"\x2C{enumerable:!0\x2Cget:function(){return n.acquirePortNumber}})\x2Ct.findOpenPortSync=function({min:e=53e3\x2Cmax:t=54e3\x2Cattempts:r=1e3}={}){const s=i();let n=(0\x2Co.randomInRange)(e\x2Ct);for(let o=Math.min(r\x2Ct-e);o>=0;o--){if(s(n))return n;n=n===t-1?e:n+1}throw new Error("No open port found")};const i=()=>{const e=e=>0===(0\x2Cs.spawnSync)(process.execPath\x2C["-e"\x2C'require("net").createServer().on("listening"\x2C()=>process.exit(0)).on("error"\x2C()=>process.exit(1)).listen(+process.env.PORT)']\x2C{env:{...process.env\x2CPORT:String(e)\x2CNODE_OPTIONS:void 0\x2CELECTRON_RUN_AS_NODE:"1"}}).status;let t="win32"===process.platform?e:r=>{var o;const n=(0\x2Cs.spawnSync)("nc"\x2C["-z"\x2C"127.0.0.1"\x2CString(r)]);return"ENOENT"===(null===(o=n.error)||void 0===o?void 0:o.code)&&(t=e)\x2C1===n.status};return e=>t(e)}}\x2C7873:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.knownToolGlob=t.knownToolToken=void 0;const r=new Set(["mocha"\x2C"jest"\x2C"jest-cli"\x2C"ava"\x2C"tape"\x2C"tap"\x2C"ts-node"\x2C"babel-node"]);t.knownToolToken="$KNOWN_TOOLS$"\x2Ct.knownToolGlob=`{${[...r].join("\x2C")}}`}\x2C7678:(e\x2Ct)=>{"use strict";function r(e\x2Ct){const r={};for(const s of Object.keys(e)){const o=e[s];t(o\x2Cs)&&(r[s]=o)}return r}Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.posInt32Counter=t.invertMap=t.upcastPartial=t.pick=t.flatten=t.bisectArray=t.trailingEdgeThrottle=t.debounce=t.memoizeWeak=t.memoize=t.once=t.getCaseInsensitiveProperty=t.caseInsensitiveMerge=t.walkObject=t.sortKeys=t.filterObject=t.mapKeys=t.mapValues=t.filterValues=t.assertNever=t.isInstanceOf=t.removeUndefined=t.removeNulls=t.truthy=void 0\x2Ct.truthy=e=>!!e\x2Ct.removeNulls=e=>r(e\x2C(e=>null!==e))\x2Ct.removeUndefined=e=>r(e\x2C(e=>void 0!==e))\x2Ct.isInstanceOf=e=>t=>t instanceof e\x2Ct.assertNever=(e\x2Ct)=>{throw new Error(t.replace("{value}"\x2CJSON.stringify(e)))}\x2Ct.filterValues=r\x2Ct.mapValues=function(e\x2Ct){const r={};for(const s of Object.keys(e)){const o=e[s];r[s]=t(o\x2Cs)}return r}\x2Ct.mapKeys=function(e\x2Ct){const r={};for(const s of Object.keys(e)){const o=t(s\x2Ce[s]);void 0!==o&&(r[o]=e[s])}return r}\x2Ct.filterObject=function(e\x2Ct){const r={};for(const s of Object.keys(e))t(s\x2Ce[s])&&(r[s]=e[s]);return r}\x2Ct.sortKeys=function(e\x2Ct){if(!e||"object"!=typeof e||e instanceof Array)return e;const r={};for(const s of Object.keys(e).sort(t))r[s]=e[s];return r}\x2Ct.walkObject=function e(t\x2Cr){if(t=r(t))if(t instanceof Array)t=t.map((t=>e(t\x2Cr)));else if("object"==typeof t&&t)for(const s of Object.keys(t))t[s]=e(t[s]\x2Cr);return t}\x2Ct.caseInsensitiveMerge=function(...e){if(0===e.length)return{};const t={}\x2Cr=Object.create(null);for(const s of e)if(s)for(const e of Object.keys(s)){const o=e.toLowerCase();r[o]?t[r[o]]=s[e]:(r[o]=e\x2Ct[e]=s[e])}return t}\x2Ct.getCaseInsensitiveProperty=function(e\x2Ct){if(e.hasOwnProperty(t))return e[t];const r=t.toLowerCase();for(const t of Object.keys(e))if(t.toLowerCase()===r)return e[t]};const s=Symbol("unset");t.once=function(e){let t=s;const r=(...o)=>(t===s&&(r.value=t=e(...o))\x2Ct);return r.forget=()=>{t=s\x2Cr.value=void 0}\x2Cr.value=void 0\x2Cr}\x2Ct.memoize=function(e){const t=new Map\x2Cr=r=>{if(t.has(r))return t.get(r);const s=e(r);return t.set(r\x2Cs)\x2Cs};return r.clear=()=>t.clear()\x2Cr}\x2Ct.memoizeWeak=function(e){const t=new WeakMap;return r=>{if(t.has(r))return t.get(r);const s=e(r);return t.set(r\x2Cs)\x2Cs}}\x2Ct.debounce=function(e\x2Ct){let r;const s=()=>{void 0!==r&&clearTimeout(r)\x2Cr=setTimeout((()=>{r=void 0\x2Ct()})\x2Ce)};return s.clear=()=>{r&&(clearTimeout(r)\x2Cr=void 0)}\x2Cs}\x2Ct.trailingEdgeThrottle=function(e\x2Ct){let r;const s=()=>{void 0===r&&(r=setTimeout((()=>{r=void 0\x2Ct()})\x2Ce))};return s.queued=()=>!!r\x2Cs.clear=()=>{r&&(clearTimeout(r)\x2Cr=void 0)}\x2Cs}\x2Ct.bisectArray=function(e\x2Ct){const r=[]\x2Cs=[];for(const o of e)t(o)?r.push(o):s.push(o);return[r\x2Cs]}\x2Ct.flatten=function(e){let t=[];for(const r of e)t=t.concat(r);return t}\x2Ct.pick=function(e\x2Ct){const r={};for(const s of t)r[s]=e[s];return r}\x2Ct.upcastPartial=e=>e\x2Ct.invertMap=function(e){const t=new Map;for(const[r\x2Cs]of e)t.set(s\x2Cr);return t}\x2Ct.posInt32Counter=()=>{let e=0;return()=>2147483647&e++}}\x2C8986:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.getDeferred=t.some=t.disposableTimeout=t.delay=void 0\x2Ct.delay=e=>isFinite(e)?new Promise((t=>setTimeout(t\x2Ce))):new Promise((()=>{}))\x2Ct.disposableTimeout=(e\x2Ct)=>{const r=setTimeout(e\x2Ct);return{dispose:()=>clearTimeout(r)}}\x2Ct.some=function(e){return new Promise(((t\x2Cr)=>{let s=e.length;for(const o of e)o.then((e=>{e?(t(e)\x2Cs=-1):0==--s&&t(void 0)})).catch(r)}))}\x2Ct.getDeferred=function(){let e\x2Ct=null\x2Cr=null\x2Cs=!1;const o=new Promise(((o\x2Cn)=>{t=t=>{s=!0\x2Ce=t\x2Co(t)}\x2Cr=e=>{s=!0\x2Cn(e)}}));return{resolve:t\x2Creject:r\x2Cpromise:o\x2Cget settledValue(){return e}\x2ChasSettled:()=>s}}}\x2C7999:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.randomInRange=void 0\x2Ct.randomInRange=(e\x2Ct)=>e+Math.floor(Math.random()*(t-e))}\x2C1032:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.ProtocolError=void 0;class r extends Error{constructor(e){super("__errorMarker"in e?e.error.format:e.format)\x2Cthis._cause="__errorMarker"in e?e.error:e}get cause(){return this._cause}}t.ProtocolError=r}\x2C7207:function(e\x2Ct\x2Cr){"use strict";var s=this&&this.__createBinding||(Object.create?function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r);var o=Object.getOwnPropertyDescriptor(t\x2Cr);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0\x2Cget:function(){return t[r]}})\x2CObject.defineProperty(e\x2Cs\x2Co)}:function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2Ce[s]=t[r]})\x2Co=this&&this.__setModuleDefault||(Object.create?function(e\x2Ct){Object.defineProperty(e\x2C"default"\x2C{enumerable:!0\x2Cvalue:t})}:function(e\x2Ct){e.default=t})\x2Cn=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e\x2Cr)&&s(t\x2Ce\x2Cr);return o(t\x2Ce)\x2Ct}\x2Ci=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t\x2C"__esModule"\x2C{value:!0});const a=r(2081)\x2Cc=n(r(7147))\x2Cl=n(r(1405))\x2Cu=i(r(8586))\x2Cp=n(r(1017))\x2Ch=r(9140)\x2Cd=r(7873)\x2Cf=r(3915)\x2C_=r(1465)\x2Cg=r(8745)\x2Cm=r(3783)\x2Cy=r(1446)\x2Cv={cwd:process.cwd()\x2CprocessId:process.pid\x2CnodeVersion:process.version\x2Carchitecture:process.arch}\x2Cb="$jsDebugIsRegistered";(()=>{try{if(b in global)return;const e=new f.BootloaderEnvironment(process.env)\x2Ct=e.inspectorOptions;if(g.bootloaderLogger.enabled=!!(null==t?void 0:t.verbose)\x2Cg.bootloaderLogger.info("runtime.launch"\x2C"Bootloader imported"\x2C{env:t\x2Cargs:process.argv})\x2CObject.defineProperty(global\x2Cb\x2C{value:!0\x2Cenumerable:!1})\x2C!(0\x2C_.checkAll)(t))return void e.unsetForTree();try{if(!r(1267).isMainThread)return}catch(e){}!function(e){var t;const r=null===(t=e.inspectorOptions)||void 0===t?void 0:t.fileCallback;r&&(c.writeFileSync(r\x2CJSON.stringify(v))\x2Ce.updateInspectorOption("fileCallback"\x2Cvoid 0))}(e)\x2C/(\\\\|\\/|^)node(64)?(.exe)?$/.test(process.execPath)&&(t.execPath=process.execPath);const s=(0\x2Cy.createTargetId)()\x2Co=function(e\x2Ct){const r=function(e){if(!e)return!1;try{return c.readdirSync(p.dirname(e)).includes(p.basename(e))}catch(e){return!1}}(e.inspectorIpc)?e.deferredMode?1:0:2;if(g.bootloaderLogger.info("runtime"\x2C"Set debug mode"\x2C{mode:r})\x2C2===r)return!1;const s=void 0!==l.url();if(!s){if(!function(e){switch(e.autoAttachMode){case"always":return!0;case"smart":return function(e){const t=process.argv[1];return!t||function(e\x2Ct){return!!t.aaPatterns&&(0\x2Cu.default)([e.replace(/\\\\/g\x2C"/")]\x2C[...t.aaPatterns.map((e=>e.replace(d.knownToolToken\x2Cd.knownToolGlob)))]\x2C{dot:!0\x2Cnocase:!0}).length>0}(t\x2Ce)}(e);default:return!1}}(e))return!1;l.open(function(e){if(!e.mandatePortTracking)return 0;try{return(0\x2Ch.findOpenPortSync)({attempts:20})}catch(e){return 0}}(e)\x2Cvoid 0\x2C!1)}const o={ipcAddress:e.inspectorIpc||""\x2Cpid:String(process.pid)\x2Ctelemetry:v\x2CscriptName:process.argv[1]\x2CinspectorURL:l.url()\x2CwaitForDebugger:!0\x2CownId:t\x2CopenerId:e.openerId};if(0===r)n=e.execPath||process.execPath\x2Ci=o\x2C(0\x2Ca.spawn)(n\x2C[m.watchdogPath]\x2C{env:{NODE_INSPECTOR_INFO:JSON.stringify(i)\x2CNODE_SKIP_PLATFORM_CHECK:process.env.NODE_SKIP_PLATFORM_CHECK}\x2Cstdio:"ignore"\x2Cdetached:!0}).unref();else{const{status:t\x2Cstderr:r}=(0\x2Ca.spawnSync)(e.execPath||process.execPath\x2C["-e"\x2C'const c=require("net").createConnection(process.env.NODE_INSPECTOR_IPC);setTimeout(()=>{console.error("timeout")\x2Cprocess.exit(1)}\x2C10000)\x2Cc.on("error"\x2Ce=>{console.error(e)\x2Cprocess.exit(1)})\x2Cc.on("connect"\x2C()=>{c.write(process.env.NODE_INSPECTOR_INFO\x2C"utf-8")\x2Cc.write(Buffer.from([0]))\x2Cc.on("data"\x2Ce=>{console.error("read byte"\x2Ce[0])\x2Cprocess.exit(e[0])})});']\x2C{env:{NODE_SKIP_PLATFORM_CHECK:process.env.NODE_SKIP_PLATFORM_CHECK\x2CNODE_INSPECTOR_INFO:JSON.stringify(o)\x2CNODE_INSPECTOR_IPC:e.inspectorIpc}});if(t)return console.error(r.toString())\x2Cconsole.error("Error activating auto attach\x2C please report to https://aka.ms/js-dbg-issue")\x2C!1}var n\x2Ci;const f=l;return f.waitForDebugger?f.waitForDebugger():l.open(s?void 0:0\x2Cvoid 0\x2C!0)\x2C!0}(t\x2Cs);t.onlyEntrypoint?e.unsetForTree():o&&e.updateInspectorOption("openerId"\x2Cs)}catch(e){console.error(`Error in the js-debug bootloader\x2C please report to https://aka.ms/js-dbg-issue: ${e.stack}`)}})()}\x2C3915:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.BootloaderEnvironment=t.variableDelimiter=void 0\x2Ct.variableDelimiter=":::"\x2Ct.BootloaderEnvironment=class{constructor(e){this.processEnv=e}get nodeOptions(){return this.processEnv.NODE_OPTIONS}set nodeOptions(e){void 0===e?delete this.processEnv.NODE_OPTIONS:this.processEnv.NODE_OPTIONS=e}get inspectorOptions(){const e=this.processEnv.VSCODE_INSPECTOR_OPTIONS;if(!e)return;const r=e.split(t.variableDelimiter).find((e=>!!e));if(r)try{return JSON.parse(r)}catch(e){return}}set inspectorOptions(e){void 0===e?delete this.processEnv.VSCODE_INSPECTOR_OPTIONS:this.processEnv.VSCODE_INSPECTOR_OPTIONS=JSON.stringify(e)}unsetForTree(){delete this.processEnv.VSCODE_INSPECTOR_OPTIONS}updateInspectorOption(e\x2Ct){const r=this.inspectorOptions;r&&(this.inspectorOptions={...r\x2C[e]:t})}}}\x2C1465:(__unused_webpack_module\x2Cexports\x2C__webpack_require__)=>{"use strict";Object.defineProperty(exports\x2C"__esModule"\x2C{value:!0})\x2Cexports.checkAll=exports.checkIsNotNodeGyp=exports.checkNotNpmPrefixCheckOnWindows=exports.checkProcessFilter=exports.checkNotElectron=exports.checkLeaseFile=exports.checkIsDebugMode=void 0;const path_1=__webpack_require__(1017)\x2Clease_file_1=__webpack_require__(9597)\x2Clogger_1=__webpack_require__(8745)\x2CcheckIsDebugMode=e=>!(!e||!e.inspectorIpc)||(logger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling due to lack of IPC server")\x2C!1);exports.checkIsDebugMode=checkIsDebugMode;const checkLeaseFile=e=>{const t=e.requireLease;return!(t&&!lease_file_1.LeaseFile.isValid(t)&&(logger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling due to invalid lease file")\x2C1))};exports.checkLeaseFile=checkLeaseFile;const checkNotElectron=()=>{try{return eval("window")\x2Clogger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling in Electron (window is set)")\x2C!1}catch(e){return!0}};exports.checkNotElectron=checkNotElectron;const checkProcessFilter=e=>{let t\x2Cr="";try{r=__webpack_require__(3121).resolve(process.argv[1])}catch(e){r=process.argv[1]}try{t=new RegExp(e.waitForDebugger||"").test(r)}catch(e){t=!0}return t||logger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling due to not matching pattern"\x2C{pattern:e.waitForDebugger\x2CscriptName:r})\x2Ct};exports.checkProcessFilter=checkProcessFilter;const checkNotNpmPrefixCheckOnWindows=()=>{const e=process.argv;return!(4===e.length&&"npm-cli.js"===(0\x2Cpath_1.basename)(e[1])&&"prefix"===e[2]&&"-g"===e[3])};exports.checkNotNpmPrefixCheckOnWindows=checkNotNpmPrefixCheckOnWindows;const checkIsNotNodeGyp=e=>!(e.deferredMode&&process.argv.length>=2&&"node-gyp.js"===(0\x2Cpath_1.basename)(process.argv[1]));exports.checkIsNotNodeGyp=checkIsNotNodeGyp;const allChecks=[exports.checkIsNotNodeGyp\x2Cexports.checkIsDebugMode\x2Cexports.checkLeaseFile\x2Cexports.checkNotElectron\x2Cexports.checkProcessFilter\x2Cexports.checkNotNpmPrefixCheckOnWindows]\x2CcheckAll=e=>!!e&&!allChecks.some((t=>!t(e)));exports.checkAll=checkAll}\x2C8745:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.bootloaderLogger=void 0\x2Ct.bootloaderLogger={enabled:!1\x2Cinfo:(...e)=>{t.bootloaderLogger.enabled&&console.log(...e)}}}\x2C3783:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.bootloaderDefaultPath=t.watchdogPath=void 0;const s=r(1017);t.watchdogPath=(0\x2Cs.join)(__dirname\x2C"watchdog.bundle.js")\x2Ct.bootloaderDefaultPath=(0\x2Cs.join)(__dirname\x2C"bootloader.bundle.js")}\x2C1446:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.createTargetId=void 0;const s=r(6113);t.createTargetId=()=>(0\x2Cs.randomBytes)(12).toString("hex")}\x2C9597:function(e\x2Ct\x2Cr){"use strict";var s=this&&this.__createBinding||(Object.create?function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r);var o=Object.getOwnPropertyDescriptor(t\x2Cr);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0\x2Cget:function(){return t[r]}})\x2CObject.defineProperty(e\x2Cs\x2Co)}:function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2Ce[s]=t[r]})\x2Co=this&&this.__setModuleDefault||(Object.create?function(e\x2Ct){Object.defineProperty(e\x2C"default"\x2C{enumerable:!0\x2Cvalue:t})}:function(e\x2Ct){e.default=t})\x2Cn=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e\x2Cr)&&s(t\x2Ce\x2Cr);return o(t\x2Ce)\x2Ct};Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.LeaseFile=void 0;const i=r(6113)\x2Ca=r(7147)\x2Cc=r(2037)\x2Cl=n(r(1017));class u{constructor(){this.disposed=!1\x2Cthis.path=l.join((0\x2Cc.tmpdir)()\x2C`node-debug-callback-${(0\x2Ci.randomBytes)(8).toString("hex")}`)\x2Cthis.file=a.promises.open(this.path\x2C"w")}static isValid(e){try{const t=(0\x2Ca.readFileSync)(e);return!!t.length&&t.readDoubleBE()>Date.now()-u.recencyDeadline}catch(e){return!1}}async startTouchLoop(){await this.touch()\x2Cthis.disposed||(this.updateInterval=setInterval((()=>this.touch())\x2Cu.updateInterval))}async touch(e=(()=>Date.now())){const t=await this.file\x2Cr=Buffer.alloc(8);r.writeDoubleBE(e())\x2Cawait t.write(r\x2C0\x2Cr.length\x2C0)}async dispose(){if(!this.disposed){this.disposed=!0\x2Cthis.updateInterval&&clearInterval(this.updateInterval);try{const e=await this.file;await e.close()\x2Cawait a.promises.unlink(this.path)}catch(e){}}}}t.LeaseFile=u\x2Cu.updateInterval=1e3\x2Cu.recencyDeadline=2e3}\x2C3121:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND"\x2Ct}t.keys=()=>[]\x2Ct.resolve=t\x2Ct.id=3121\x2Ce.exports=t}\x2C2081:e=>{"use strict";e.exports=require("child_process")}\x2C6113:e=>{"use strict";e.exports=require("crypto")}\x2C2361:e=>{"use strict";e.exports=require("events")}\x2C7147:e=>{"use strict";e.exports=require("fs")}\x2C3685:e=>{"use strict";e.exports=require("http")}\x2C5687:e=>{"use strict";e.exports=require("https")}\x2C1405:e=>{"use strict";e.exports=require("inspector")}\x2C1808:e=>{"use strict";e.exports=require("net")}\x2C2037:e=>{"use strict";e.exports=require("os")}\x2C1017:e=>{"use strict";e.exports=require("path")}\x2C2781:e=>{"use strict";e.exports=require("stream")}\x2C4404:e=>{"use strict";e.exports=require("tls")}\x2C7310:e=>{"use strict";e.exports=require("url")}\x2C3837:e=>{"use strict";e.exports=require("util")}\x2C1267:e=>{"use strict";e.exports=require("worker_threads")}\x2C9796:e=>{"use strict";e.exports=require("zlib")}}\x2C__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports\x2Cr\x2Cr.exports\x2C__webpack_require__)\x2Cr.exports}__webpack_require__.o=(e\x2Ct)=>Object.prototype.hasOwnProperty.call(e\x2Ct);var __webpack_exports__=__webpack_require__(7207)})();\n//# sourceURL=bootloader.bundle.cdp
code-source-info,0x224cfd0e2566,130,0,99866,C0O0C4O99866,,
code-creation,Function,10,111889,0x224cfd0e2626,46, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:1:1,0x224cfd0e24e0,~
code-source-info,0x224cfd0e2626,130,0,99866,C0O0C36O75C41O99827C45O99865,,
code-creation,Function,10,111958,0x224cfd0e5236,1011, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:2,0x224cfd0e2598,~
code-source-info,0x224cfd0e
tick,0x7f407774b7e0,112080,1,0xaf61c0,3,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773a70af,112185,1,0xaf61c0,3,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773a70af,112236,1,0xaf61c0,3,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773a70af,112283,1,0xaf61c0,3,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,112396,0x224cfd0e5cb6,19,importModuleDynamicallyWrap node:internal/vm/module:436:37,0x24759bdf7f10,~
code-source-info,0x224cfd0e5cb6,128,11767,12210,C0O11767C13O11836C18O12208,,
code-creation,LazyCompile,10,112540,0x224cfd0e6e96,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0xa26aaad008,~
code-source-info,0x224cfd0e6e96,105,1708,3678,C0O1708C22O1744C25O1748C29O1744C31O1768C33O1779C53O1811C58O1815C69O1831C73O1811C75O1858C81O1858C83O1885C89O1894C95O1922C104O3082C109O3313C111O3329C115O3469C117O3483C121O3495C126O3518C130O3508C134O3583C137O3611C141O3602C145O3627C148O3650C152O3641C156O3661C158O3676,,
code-creation,LazyCompile,10,112679,0x224cfd0e79fe,71,__webpack_require__ /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99427,0x224cfd0e2690,~
code-source-info,0x224cfd0e79fe,130,99501,99705,C0O99511C5O99535C9O99539C11O99562C15O99570C16O99576C19O99601C24O99603C31O99617C36O99643C40O99647C45O99654C50O99666C61O99647C66O99697C70O99704,,
code-creation,LazyCompile,10,112862,0x224cfd0e830e,434,7207 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89296,0x224cfd0e3cc0,~
code-source-info,0x224cfd0e830e,130,89370,93296,C0O89370C51O89397C55O89408C61O89426C65O89433C81O89397C83O89705C87O89716C93O89737C97O89744C113O89705C115O89855C119O89866C130O90041C134O90052C145O90119C149O90126C157O90141C165O90126C170O90176C178O90176C182O90176C184O90186C192O90188C197O90186C201O90186C203O90199C211O90201C216O90199C220O90199C222O90212C230O90214C235O90212C239O90212C241O90225C249O90227C254O90225C258O90225C260O90238C268O90238C272O90238C274O90248C282O90248C286O90248C288O90258C296O90258C300O90258C302O90268C310O90268C314O90268C316O90278C324O90278C328O90278C330O90288C338O90288C342O90288C344O90298C352O90298C356O90298C358O90308C363O90313C367O90321C372O90321C380O90337C384O90345C392O90361C396O90369C404O90390C408O90398C418O90308C420O90406C422O90406C424O90429C429O93293C433O93295,,
code-creation,LazyCompile,10,112940,0x224cfd0e886e,377, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:90356,0x224cfd0e8138,~
code-source-info,0x224cfd0e886e
code-creation,LazyCompile,10,113033,0x224cfd0e8b5e,75, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:90766,0x224cfd0e85b8,~
code-source-info,0x224cfd0e8b5e,130,90840,91011,C0O90870C14O90909C19O90922C23O90926C26O90928C31O90944C35O90949C42O90959C45O90949C51O90928C57O90965C67O90965C74O91010,,
tick,0x7f40773a70af,113142,0,0x0,3,0x11d7ee0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,113172,0x224cfd0e8d9e,18,2081 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98567,0x224cfd0e42a0,~
code-source-info,0x224cfd0e8d9e,130,98641,98693,C0O98658C8O98668C12O98667C17O98692,,
code-creation,LazyCompile,10,113199,0x224cfd0e8e86,14,require node:internal/modules/cjs/helpers:101:31,0x224cfd0e6d68,~
code-source-info,0x224cfd0e8e86,105,3108,3154,C0O3123C3O3134C8O3134C13O3148,,
code-creation,LazyCompile,10,113248,0x224cfd0e8ff6,10, node:internal/modules/cjs/helpers:29:66,0xa26aaad1d8,~
code-source-info,0x224cfd0e8ff6,105,810,835,C0O822C2O828C9O834,,
code-creation,LazyCompile,10,113337,0x224cfd0e916e,129,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x2ac221050b80,~
code-source-info,0x224cfd0e916e,9,8006,8678,C0O8025C6O8169C16O8212C33O8175C38O8169C39O8249C44O8249C48O8291C54O8480C61O8511C69O8480C75O8535C80O8553C90O8569C93O8585C98O8569C102O8551C106O8610C111O8610C115O8635C120O8635C124O8666C128O8674,,
code-creation,Eval,10,113810,0x224cfd0e9e46,5, node:child_process:1:1,0x224cfd0e9960,~
script-source,131,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst {\n  convertToValidSignal\x2C\n  createDeferredPromise\x2C\n  getSystemErrorName\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: errorCodes\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = errorCodes;\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string|URL} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   detached?: boolean;\n *   env?: Record<string\x2C string>;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath\x2C args = []\x2C options) {\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n\n  if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\n  } else if (!ArrayIsArray(args)) {\n    options = args;\n    args = [];\n  }\n\n  if (options == null) {\n    options = {};\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n  } else {\n    options = { ...options };\n  }\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  options.execPath = options.execPath || process.execPath;\n  options.shell = false;\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return (...args) => {\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  };\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\n});\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\n  if (args == null) {\n    args = [];\n  } else if (typeof args === 'object') {\n    if (!ArrayIsArray(args)) {\n      callback = options;\n      options = args;\n      args = [];\n    }\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = {};\n    args = [];\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\n  }\n\n  if (options == null) {\n    options = {};\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n  }\n\n  if (callback && typeof callback !== 'function') {\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\n  }\n\n  options = {\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout &&\n        child.stdout.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr &&\n        child.stderr.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args.length !== 0)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    if (!ex) {\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\n        killed: child.killed || killed\x2C\n        signal: signal\n      });\n    }\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\n});\n\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  if (options === undefined)\n    options = kEmptyObject;\n  else\n    validateObject(options\x2C 'options');\n\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  const env = options.env || process.env;\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  if (process.env.NODE_V8_COVERAGE &&\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError());\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Record<string\x2C string>;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\n      child.once('exit'\x2C\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i] && options.stdio[i].input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} command\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(command\x2C args\x2C options) {\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(options.file\x2C\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\n};\n
code-source-info,0x224cfd0e9e46,131,0,24984,C0O0C4O24984,,
code-creation,Function,10,114951,0x224cfd0ea8ae,757, node:child_process:1:1,0x224cfd0e9dc0,~
code-source-info,0x224cfd0ea8ae
tick,0x7f407774b6c5,115082,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x1093be1,115254,0,0x0,0,0xd60b10,0xa26aaab488,0x224cfd0eaa4f,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,115797,0x224cfd0edebe,5, node:internal/child_process:1:1,0x224cfd0ed7c0,~
script-source,132,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\n  }\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\nconst kPendingMessages = Symbol('kPendingMessages');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\n        });\n      }\n\n      emit(socket);\n    }\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\n  }\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = errnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw errnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      // When i === 0 - we're dealing with stdin\n      // (which is the only one writable pipe).\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw errnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\n\nChildProcess.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n    this[kPendingMessages] = [];\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n      this.emit('unref');\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    __proto__: null\x2C\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.on('newListener'\x2C function() {\n\n    process.nextTick(() => {\n      if (!target.channel || !target.listenerCount('message'))\n        return;\n\n      const messages = target.channel[kPendingMessages];\n      const { length } = messages;\n      if (!length) return;\n\n      for (let i = 0; i < length; i++) {\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\n      }\n\n      target.channel[kPendingMessages] = [];\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        if (!this._handleQueue)\n          this._handleQueue = [];\n        if (obj && obj.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj && obj.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = errnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    if ('internalMessage' === event || target.listenerCount('message')) {\n      target.emit(event\x2C message\x2C handle);\n      return;\n    }\n\n    ArrayPrototypePush(\n      target.channel[kPendingMessages]\x2C\n      [event\x2C message\x2C handle]\n    );\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    if (stdio == null) {\n      stdio = i < 3 ? 'pipe' : 'ignore';\n    }\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output && result.output[1];\n  result.stderr = result.output && result.output[2];\n\n  if (result.error) {\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\n};\n
code-source-info,0x224cfd0edebe,132,0,31545,C0O0C4O31545,,
code-creation,Function,10,117101,0x224cfd0ef4de,1265, node:internal/child_process:1:1,0x224cfd0ede38,~
code-source-info,0x224cfd0ef4de
code-creation,Function,10,117202,0x224cfd0efc56,35,<instance_members_initializer> node:internal/child_process:525:3,0x224cfd0eeba0,~
code-source-info,0x224cfd0efc56,132,13707,13764,C3O13718C16O13734C26O13759C34O13764,,
tick,0x7f40773a70af,117273,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x224cfd0eaafb,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x1638741,117425,0,0x0,0,0x7f40600432df,0x224cfd0ef6d8,0x7f4060044ae0,0x7f40600432df,0x224cfd0eaafb,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,117882,0x224cfd0f37fe,5, node:dgram:1:1,0x224cfd0f3288,~
script-source,133,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MISSING_ARGS\x2C\n  ERR_SOCKET_ALREADY_BOUND\x2C\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n  ERR_SOCKET_BUFFER_SIZE\x2C\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  ERR_INVALID_FD_TYPE\n} = errors.codes;\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY }\x2C\n  UDP\x2C\n  SendWrap\n} = internalBinding('udp_wrap');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  if (!_cluster) _cluster = require('cluster');\n  return _cluster;\n}\n\nconst errnoException = errors.errnoException;\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\n\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    ipv6Only: options && options.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      signal.addEventListener('abort'\x2C onAborted);\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n    }\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  state.handle.onerror = onError;\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      errCb(err);\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = errnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      if (!state.handle)\n        return; // Handle has been closed in the mean time\n\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw errnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n  if (offset > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n  }\n\n  if (offset + length > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n  }\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address && typeof address !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw errnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw errnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nfunction onError(nread\x2C handle\x2C error) {\n  const self = handle[owner_symbol];\n  return self.emit('error'\x2C error);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\n  )\x2C\n  createSocket\x2C\n  Socket\n};\n
code-source-info,0x224cfd0f37fe,133,0,27523,C0O0C4O27523,,
code-creation,Function,10,119073,0x224cfd0f5766,1507, node:dgram:1:1,0x224cfd0f3778,~
code-source-info,0x224cfd0f
tick,0x7f40773a70af,119229,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x224cfd0ef6d8,0x7f4060044ae0,0x7f40600432df,0x224cfd0eaafb,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,119411,0x224cfd0f8bf6,5, node:internal/dgram:1:1,0x224cfd0f89f0,~
script-source,134,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst {\n  ERR_SOCKET_BAD_TYPE\x2C\n} = codes;\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\n};\n
code-source-info,0x224cfd0f8bf6,134,0,1849,C0O0C4O1849,,
code-creation,Function,10,119576,0x224cfd0f8ebe,196, node:internal/dgram:1:1,0x224cfd0f8b70,~
code-source-info,0x224cfd0f8ebe,134,0,1849,C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C100O195C105O175C111O263C117O263C122O230C128O241C134O317C137O317C142O303C148O350C154O403C157O403C162O431C163O431C165O1776C172O1797C178O1813C184O1836C190O1791C195O1848,,
tick,0x7f40773a70af,119624,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x224cfd0f58b9,0x7f4060044ae0,0x7f40600432df,0x224cfd0ef6d8,0x7f4060044ae0,0x7f40600432df,0x224cfd0eaafb,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,11,119852,0x7f4060045d40,1340,deprecate node:internal/util:96:19,0x2ac22107f718,^
code-source-info,0x7f4060045d40,15,2401,3577,,,
code-creation,Function,11,119911,0x7f40600462e0,44,toNamespacedPath node:path:1266:19,0x3e83b617c698,^
code-source-info,0x7f40600462e0,41,38608,38668,,,
code-creation,Function,11,119923,0x7f4060046380,172,nextPart node:fs:2449:31,0x456f10bba78,^
code-source-info,0x7f4060046380,83,65282,65340,,,
code-creation,Function,11,119960,0x7f40600464a0,316,isFileType node:fs:213:20,0x456f10b9778,^
code-source-info,0x7f40600464a0,83,5461,5702,,,
code-creation,Function,11,119997,0x7f4060046640,268,validateString node:internal/validators:119:24,0x1d4983483eb8,^
code-source-info,0x7f4060046640,16,3428,3537,,,
code-creation,Function,11,120041,0x7f40600467c0,1300,dirname node:path:1275:10,0x3e83b617c6e8,^
code-source-info,0x7f40600467c0,41,38741,39410,,,
code-creation,Eval,10,120279,0x224cfd0fcd9e,5, node:internal/socket_list:1:1,0x224cfd0fcc48,~
script-source,135,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0x224cfd0fcd9e,135,0,2705,C0O0C4O2705,,
code-creation,Function,10,120448,0x224cfd0fd3de,126, node:internal/socket_list:1:1,0x224cfd0fcd18,~
code-source-info,0x224cfd0fd3de,135,0,2705,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C73O1525C101O2649C108O2668C114O2684C120O2664C125O2704,,
code-creation,LazyCompile,10,120622,0x224cfd0fe10e,14,customPromiseExecFunction node:child_process:231:35,0x224cfd0ea428,~
code-source-info,0x224cfd0fe10e,131,6623,6987,C0O6623C9O6637C13O6985,,
tick,0x7f40773a70af,120734,0,0x0,3,0x11d7ee0,0x224cfd0eab33,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x224cfd0e8da6,0x224cfd0e7a3b,0x224cfd0e83c0,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
new,MemoryChunk,0x2a1384e00000,262144
code-creation,LazyCompile,10,120980,0x2a1384e012be,151,getESMFacade node:internal/bootstrap/loaders:281:15,0x2ac221050bf8,~
code-source-info,0x2a1384e012be,9,8694,9323,C0O8694C8O8712C14O8732C18O8739C19O8767C29O8767C34O8752C39O8815C42O8828C51O8859C53O8859C55O8889C62O8914C67O8889C72O8931C82O8931C87O8979C89O9031C102O8993C107O8991C111O9237C116O9244C121O9244C125O9268C130O9275C140O9275C146O9312C150O9319,,
code-creation,LazyCompile,10,121089,0x2a1384e01636,40, node:internal/bootstrap/loaders:290:15,0x2a1384e011b8,~
code-source-info,0x2a1384e01636,9,9058,9163,C0O9071C5O9084C10O9084C14O9112C24O9133C27O9146C32O9112C39O9162,,
code-creation,LazyCompile,10,121175,0x2a1384e0178e,89,syncExports node:internal/bootstrap/loaders:304:14,0x2ac221050c68,~
code-source-info,0x2a1384e0178e,9,9630,9963,C0O9658C5O9683C11O9712C13O9725C17O9717C22O9767C24O9772C28O9785C30O9800C35O9815C37O9838C42O9845C51O9897C54O9909C59O9935C67O9897C73O9845C79O9734C84O9699C88O9962,,
code-creation,LazyCompile,10,121242,0x2a1384e018f6,35,getOwn node:internal/bootstrap/loaders:187:16,0x2ac221050808,~
code-source-info,0x2a1384e018f6,9,5646,5800,C0O5682C5O5689C14O5743C26O5743C34O5798,,
code-creation,LazyCompile,10,121351,0x2a1384e01b6e,18,7147 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98727,0x224cfd0e4438,~
code-source-info,0x2a1384e01b6e,130,98801,98842,C0O98818C8O98828C12O98827C17O98841,,
code-creation,LazyCompile,10,121494,0x2a1384e023a6,11,get ReadStream node:fs:3036:17,0x456f10bc068,~
code-source-info,0x2a1384e023a6,83,80448,80502,C0O80457C3O80457C6O80480C10O80498,,
code-creation,LazyCompile,10,121564,0x2a1384e024d6,71,lazyLoadStreams node:fs:2893:25,0x456f10bbf30,~
code-source-info,0x2a1384e024d6,83,78052,78219,C0O78059C6O78082C12O78113C17O78085C30O78097C43O78150C50O78165C56O78183C63O78199C70O78218,,
tick,0x115118b,121783,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e024e2,0x2a1384e023a9,0x162283f,0x2a1384e01910,0x2a1384e017d1,0x2a1384e01640,0xac2380,0x2a1384e0134a,0x224cfd0e91dd,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e01b76,0x224cfd0e7a3b,0x224cfd0e83ce,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,121971,0x2a1384e02d1e,5, node:internal/fs/streams:1:1,0x2a1384e02988,~
script-source,136,node:internal/fs/streams,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n  MathMin\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromisePrototypeThen\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst {\n  deprecate\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  validateFunction\x2C\n  validateInteger\x2C\n} = require('internal/validators');\nconst { errorOrDestroy } = require('internal/streams/destroy');\nconst fs = require('fs');\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\nconst { Buffer } = require('buffer');\nconst {\n  copyObject\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  validatePath\x2C\n} = require('internal/fs/utils');\nconst { Readable\x2C Writable\x2C finished } = require('stream');\nconst { toPathIfFileURL } = require('internal/url');\nconst kIoDone = Symbol('kIoDone');\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\n\nconst kFs = Symbol('kFs');\nconst kHandle = Symbol('kHandle');\n\nfunction _construct(callback) {\n  const stream = this;\n  if (typeof stream.fd === 'number') {\n    callback();\n    return;\n  }\n\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\n    // Backwards compat for monkey patching open().\n    const orgEmit = stream.emit;\n    stream.emit = function(...args) {\n      if (args[0] === 'open') {\n        this.emit = orgEmit;\n        callback();\n        ReflectApply(orgEmit\x2C this\x2C args);\n      } else if (args[0] === 'error') {\n        this.emit = orgEmit;\n        callback(args[1]);\n      } else {\n        ReflectApply(orgEmit\x2C this\x2C args);\n      }\n    };\n    stream.open();\n  } else {\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\n      if (er) {\n        callback(er);\n      } else {\n        stream.fd = fd;\n        callback();\n        stream.emit('open'\x2C stream.fd);\n        stream.emit('ready');\n      }\n    });\n  }\n}\n\n// This generates an fs operations structure for a FileHandle\nconst FileHandleOperations = (handle) => {\n  return {\n    open: (path\x2C flags\x2C mode\x2C cb) => {\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\n    }\x2C\n    close: (fd\x2C cb) => {\n      handle[kUnref]();\n      PromisePrototypeThen(handle.close()\x2C\n                           () => cb()\x2C cb);\n    }\x2C\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\n                           (err) => cb(err\x2C 0\x2C buffers));\n    }\n  };\n};\n\nfunction close(stream\x2C err\x2C cb) {\n  if (!stream.fd) {\n    // TODO(ronag)\n    // stream.closed = true;\n    cb(err);\n  } else {\n    stream[kFs].close(stream.fd\x2C (er) => {\n      stream.closed = true;\n      cb(er || err);\n    });\n    stream.fd = null;\n  }\n}\n\nfunction importFd(stream\x2C options) {\n  if (typeof options.fd === 'number') {\n    // When fd is a raw descriptor\x2C we must keep our fingers crossed\n    // that the descriptor won't get closed\x2C or worse\x2C replaced with\n    // another one\n    // https://github.com/nodejs/node/issues/35862\n    stream[kFs] = options.fs || fs;\n    return options.fd;\n  } else if (typeof options.fd === 'object' &&\n             options.fd instanceof FileHandle) {\n    // When fd is a FileHandle we can listen for 'close' events\n    if (options.fs) {\n      // FileHandle is not supported with custom fs operations\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\n    }\n    stream[kHandle] = options.fd;\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\n    stream[kHandle][kRef]();\n    options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\n    return options.fd.fd;\n  }\n\n  throw ERR_INVALID_ARG_TYPE('options.fd'\x2C\n                             ['number'\x2C 'FileHandle']\x2C options.fd);\n}\n\nfunction ReadStream(path\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(path\x2C options);\n\n  // A little bit bigger buffer and water marks by default\n  options = copyObject(getOptions(options\x2C kEmptyObject));\n  if (options.highWaterMark === undefined)\n    options.highWaterMark = 64 * 1024;\n\n  if (options.autoDestroy === undefined) {\n    options.autoDestroy = false;\n  }\n\n  if (options.fd == null) {\n    this.fd = null;\n    this[kFs] = options.fs || fs;\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n    // Path will be ignored when fd is specified\x2C so it can be falsy\n    this.path = toPathIfFileURL(path);\n    this.flags = options.flags === undefined ? 'r' : options.flags;\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n    validatePath(this.path);\n  } else {\n    this.fd = getValidatedFd(importFd(this\x2C options));\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\n\n  if (options.autoDestroy) {\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\n  }\n\n  this.start = options.start;\n  this.end = options.end;\n  this.pos = undefined;\n  this.bytesRead = 0;\n  this.closed = false;\n  this[kIsPerformingIO] = false;\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n\n  if (this.end === undefined) {\n    this.end = Infinity;\n  } else if (this.end !== Infinity) {\n    validateInteger(this.end\x2C 'end'\x2C 0);\n\n    if (this.start !== undefined && this.start > this.end) {\n      throw new ERR_OUT_OF_RANGE(\n        'start'\x2C\n        `<= "end" (here: ${this.end})`\x2C\n        this.start\n      );\n    }\n  }\n\n  ReflectApply(Readable\x2C this\x2C [options]);\n}\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(ReadStream\x2C Readable);\n\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this._readableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._readableState.autoDestroy = val;\n  }\n});\n\nconst openReadFs = deprecate(function() {\n  // Noop.\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\nReadStream.prototype.open = openReadFs;\n\nReadStream.prototype._construct = _construct;\n\nReadStream.prototype._read = function(n) {\n  n = this.pos !== undefined ?\n    MathMin(this.end - this.pos + 1\x2C n) :\n    MathMin(this.end - this.bytesRead + 1\x2C n);\n\n  if (n <= 0) {\n    this.push(null);\n    return;\n  }\n\n  const buf = Buffer.allocUnsafeSlow(n);\n\n  this[kIsPerformingIO] = true;\n  this[kFs]\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\n      this[kIsPerformingIO] = false;\n\n      // Tell ._destroy() that it's safe to close the fd now.\n      if (this.destroyed) {\n        this.emit(kIoDone\x2C er);\n        return;\n      }\n\n      if (er) {\n        errorOrDestroy(this\x2C er);\n      } else if (bytesRead > 0) {\n        if (this.pos !== undefined) {\n          this.pos += bytesRead;\n        }\n\n        this.bytesRead += bytesRead;\n\n        if (bytesRead !== buf.length) {\n          // Slow path. Shrink to fit.\n          // Copy instead of slice so that we don't retain\n          // large backing buffer for small reads.\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\n          buf = dst;\n        }\n\n        this.push(buf);\n      } else {\n        this.push(null);\n      }\n    });\n};\n\nReadStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nReadStream.prototype.close = function(cb) {\n  if (typeof cb === 'function') finished(this\x2C cb);\n  this.destroy();\n};\n\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nfunction WriteStream(path\x2C options) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(path\x2C options);\n\n  options = copyObject(getOptions(options\x2C kEmptyObject));\n\n  // Only buffers are supported.\n  options.decodeStrings = true;\n\n  if (options.fd == null) {\n    this.fd = null;\n    this[kFs] = options.fs || fs;\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n    // Path will be ignored when fd is specified\x2C so it can be falsy\n    this.path = toPathIfFileURL(path);\n    this.flags = options.flags === undefined ? 'w' : options.flags;\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n    validatePath(this.path);\n  } else {\n    this.fd = getValidatedFd(importFd(this\x2C options));\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  if (!this[kFs].write && !this[kFs].writev) {\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\n                                   this[kFs].write);\n  }\n\n  if (this[kFs].write) {\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\n  }\n\n  if (this[kFs].writev) {\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\n  }\n\n  if (options.autoDestroy) {\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\n  }\n\n  // It's enough to override either\x2C in which case only one will be used.\n  if (!this[kFs].write) {\n    this._write = null;\n  }\n  if (!this[kFs].writev) {\n    this._writev = null;\n  }\n\n  this.start = options.start;\n  this.pos = undefined;\n  this.bytesWritten = 0;\n  this.closed = false;\n  this[kIsPerformingIO] = false;\n\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n\n  if (options.encoding)\n    this.setDefaultEncoding(options.encoding);\n}\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(WriteStream\x2C Writable);\n\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this._writableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._writableState.autoDestroy = val;\n  }\n});\n\nconst openWriteFs = deprecate(function() {\n  // Noop.\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\nWriteStream.prototype.open = openWriteFs;\n\nWriteStream.prototype._construct = _construct;\n\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\n  this[kIsPerformingIO] = true;\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C data.length\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += data.length;\n};\n\nWriteStream.prototype._writev = function(data\x2C cb) {\n  const len = data.length;\n  const chunks = new Array(len);\n  let size = 0;\n\n  for (let i = 0; i < len; i++) {\n    const chunk = data[i].chunk;\n\n    chunks[i] = chunk;\n    size += chunk.length;\n  }\n\n  this[kIsPerformingIO] = true;\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += size;\n};\n\nWriteStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nWriteStream.prototype.close = function(cb) {\n  if (cb) {\n    if (this.closed) {\n      process.nextTick(cb);\n      return;\n    }\n    this.on('close'\x2C cb);\n  }\n\n  // If we are not autoClosing\x2C we should call\n  // destroy on 'finish'.\n  if (!this.autoClose) {\n    this.on('finish'\x2C this.destroy);\n  }\n\n  // We use end() instead of destroy() because of\n  // https://github.com/nodejs/node/issues/2006\n  this.end();\n};\n\n// There is no shutdown() for files.\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\n\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nmodule.exports = {\n  ReadStream\x2C\n  WriteStream\n};\n
code-source-info,0x2a1384e02d1e,136,0,13381,C0O0C4O13381,,
code-creation,Function,10,122589,0x2a1384e039ce,875, node:internal/fs/streams:1:1,0x2a1384e02c98,~
code-source-info,0x2a1384e039ce
code-creation,LazyCompile,10,122804,0x2a1384e0556e,11,get WriteStream node:fs:3045:18,0x456f10bc148,~
code-source-info,0x2a1384e0556e,83,80574,80629,C0O80583C3O80583C6O80606C10O80625,,
tick,0x7f40773a70af,122907,0,0x0,3,0x11d7ee0,0x162283f,0x2a1384e01910,0x2a1384e017d1,0x2a1384e01640,0xac2380,0x2a1384e0134a,0x224cfd0e91dd,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e01b76,0x224cfd0e7a3b,0x224cfd0e83ce,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,122994,0x2a1384e0567e,11,get FileReadStream node:fs:3056:21,0x456f10bc228,~
code-source-info,0x2a1384e0567e,83,80839,80897,C0O80848C3O80848C6O80871C10O80893,,
code-creation,LazyCompile,10,123024,0x2a1384e0578e,11,get FileWriteStream node:fs:3065:22,0x456f10bc318,~
code-source-info,0x2a1384e0578e,83,80981,81040,C0O80990C3O80990C6O81013C10O81036,,
code-creation,LazyCompile,10,123053,0x2a1384e05886,37,get node:fs:3093:8,0x456f10bc408,~
code-source-info,0x2a1384e05886,83,81646,81739,C0O81657C14O81670C19O81701C26O81666C32O81717C36O81733,,
code-creation,LazyCompile,10,123284,0x2a1384e059b6,119,n /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89814,0x224cfd0e8098,~
code-source-info,0x2a1384e059b6,130,89888,90038,C0O89892C4O89900C10O89911C12O89920C13O89926C15O89929C20O89953C33O89948C46O89948C47O89955C52O89964C58O89970C62O89977C67O89987C72O90002C77O90002C97O90013C105O89940C108O90022C111O90029C118O90037,,
code-creation,LazyCompile,10,123500,0x2a1384e05c4e,122,s /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89374,0x224cfd0e7f50,~
code-source-info,0x2a1384e05c4e,130,89448,89654,C0O89448C13O89458C22O89482C26O89489C37O89489C44O89519C51O89529C59O89537C66O89550C72O89562C84O89599C97O89625C101O89632C115O89632C121O89653,,
tick,0x15bbc16,123979,0,0x0,0,0x2a1384e05c73,0x2a1384e05a17,0x224cfd0e83d3,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,124094,0x2a1384e06996,33,o /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89685,0x224cfd0e7ff8,~
code-source-info,0x2a1384e06996,130,89759,89824,C0O89765C4O89772C12O89787C19O89820C26O89772C32O89823,,
code-creation,LazyCompile,10,124197,0x2a1384e06ade,18,1405 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98873,0x224cfd0e45d0,~
code-source-info,0x2a1384e06ade,130,98947,98995,C0O98964C8O98974C12O98973C17O98994,,
code-creation,Eval,10,124428,0x2a1384e071d6,5, node:inspector:1:1,0x2a1384e06f00,~
script-source,137,node:inspector,'use strict';\n\nconst {\n  JSONParse\x2C\n  JSONStringify\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ERR_INSPECTOR_ALREADY_ACTIVATED\x2C\n  ERR_INSPECTOR_ALREADY_CONNECTED\x2C\n  ERR_INSPECTOR_CLOSED\x2C\n  ERR_INSPECTOR_COMMAND\x2C\n  ERR_INSPECTOR_NOT_AVAILABLE\x2C\n  ERR_INSPECTOR_NOT_CONNECTED\x2C\n  ERR_INSPECTOR_NOT_ACTIVE\x2C\n  ERR_INSPECTOR_NOT_WORKER\x2C\n} = require('internal/errors').codes;\n\nconst { hasInspector } = internalBinding('config');\nif (!hasInspector)\n  throw new ERR_INSPECTOR_NOT_AVAILABLE();\n\nconst EventEmitter = require('events');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst {\n  validateCallback\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst { isMainThread } = require('worker_threads');\n\nconst {\n  Connection\x2C\n  MainThreadConnection\x2C\n  open\x2C\n  url\x2C\n  isEnabled\x2C\n  waitForDebugger\n} = internalBinding('inspector');\n\nconst connectionSymbol = Symbol('connectionProperty');\nconst messageCallbacksSymbol = Symbol('messageCallbacks');\nconst nextIdSymbol = Symbol('nextId');\nconst onMessageSymbol = Symbol('onMessage');\n\nclass Session extends EventEmitter {\n  constructor() {\n    super();\n    this[connectionSymbol] = null;\n    this[nextIdSymbol] = 1;\n    this[messageCallbacksSymbol] = new SafeMap();\n  }\n\n  /**\n   * Connects the session to the inspector back-end.\n   * @returns {void}\n   */\n  connect() {\n    if (this[connectionSymbol])\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\n    this[connectionSymbol] =\n      new Connection((message) => this[onMessageSymbol](message));\n  }\n\n  /**\n   * Connects the session to the main thread\n   * inspector back-end.\n   * @returns {void}\n   */\n  connectToMainThread() {\n    if (isMainThread)\n      throw new ERR_INSPECTOR_NOT_WORKER();\n    if (this[connectionSymbol])\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\n    this[connectionSymbol] =\n      new MainThreadConnection(\n        (message) => queueMicrotask(() => this[onMessageSymbol](message)));\n  }\n\n  [onMessageSymbol](message) {\n    const parsed = JSONParse(message);\n    try {\n      if (parsed.id) {\n        const callback = this[messageCallbacksSymbol].get(parsed.id);\n        this[messageCallbacksSymbol].delete(parsed.id);\n        if (callback) {\n          if (parsed.error) {\n            return callback(new ERR_INSPECTOR_COMMAND(parsed.error.code\x2C\n                                                      parsed.error.message));\n          }\n\n          callback(null\x2C parsed.result);\n        }\n      } else {\n        this.emit(parsed.method\x2C parsed);\n        this.emit('inspectorNotification'\x2C parsed);\n      }\n    } catch (error) {\n      process.emitWarning(error);\n    }\n  }\n\n  /**\n   * Posts a message to the inspector back-end.\n   * @param {string} method\n   * @param {Record<unknown\x2C unknown>} [params]\n   * @param {Function} [callback]\n   * @returns {void}\n   */\n  post(method\x2C params\x2C callback) {\n    validateString(method\x2C 'method');\n    if (!callback && typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n    if (params) {\n      validateObject(params\x2C 'params');\n    }\n    if (callback) {\n      validateCallback(callback);\n    }\n\n    if (!this[connectionSymbol]) {\n      throw new ERR_INSPECTOR_NOT_CONNECTED();\n    }\n    const id = this[nextIdSymbol]++;\n    const message = { id\x2C method };\n    if (params) {\n      message.params = params;\n    }\n    if (callback) {\n      this[messageCallbacksSymbol].set(id\x2C callback);\n    }\n    this[connectionSymbol].dispatch(JSONStringify(message));\n  }\n\n  /**\n   * Immediately closes the session\x2C all pending\n   * message callbacks will be called with an\n   * error.\n   * @returns {void}\n   */\n  disconnect() {\n    if (!this[connectionSymbol])\n      return;\n    this[connectionSymbol].disconnect();\n    this[connectionSymbol] = null;\n    const remainingCallbacks = this[messageCallbacksSymbol].values();\n    for (const callback of remainingCallbacks) {\n      process.nextTick(callback\x2C new ERR_INSPECTOR_CLOSED());\n    }\n    this[messageCallbacksSymbol].clear();\n    this[nextIdSymbol] = 1;\n  }\n}\n\n/**\n * Activates inspector on host and port.\n * @param {number} [port]\n * @param {string} [host]\n * @param {boolean} [wait]\n * @returns {void}\n */\nfunction inspectorOpen(port\x2C host\x2C wait) {\n  if (isEnabled()) {\n    throw new ERR_INSPECTOR_ALREADY_ACTIVATED();\n  }\n  open(port\x2C host);\n  if (wait)\n    waitForDebugger();\n}\n\n/**\n * Blocks until a client (existing or connected later)\n * has sent the `Runtime.runIfWaitingForDebugger`\n * command.\n * @returns {void}\n */\nfunction inspectorWaitForDebugger() {\n  if (!waitForDebugger())\n    throw new ERR_INSPECTOR_NOT_ACTIVE();\n}\n\nmodule.exports = {\n  open: inspectorOpen\x2C\n  close: process._debugEnd\x2C\n  url\x2C\n  waitForDebugger: inspectorWaitForDebugger\x2C\n  // This is dynamically added during bootstrap\x2C\n  // where the console from the VM is still available\n  console: require('internal/util/inspector').consoleFromVM\x2C\n  Session\n};\n
code-source-info,0x2a1384e071d6,137,0,4970,C0O0C4O4970,,
code-creation,Function,10,124672,0x2a1384e07a5e,457, node:inspector:1:1,0x2a1384e07150,~
code-source-info,0x2a1384e07a5e,137,0,4970,C0O0C91O25C97O38C103O55C109O66C114O341C117O341C122O367C127O102C133O137C139O172C145O196C151O221C156O252C162O283C168O311C174O401C177O401C182O384C187O428C189O449C191O455C196O449C197O512C200O512C205O558C208O558C213O539C219O667C222O667C227O609C233O629C239O647C245O724C248O724C253O707C259O848C262O848C267O762C273O776C279O800C285O808C290O815C296O828C302O904C305O904C309O904C311O965C314O965C318O965C320O1014C323O1014C327O1014C329O1056C332O1056C336O1056C338O1100C356O2017C393O4671C400O4698C407O4730C417O4743C423O4767C430O4907C435O4941C445O4959C451O4686C456O4969,,
code-creation,Eval,10,124849,0x2a1384e0877e,5, node:worker_threads:1:1,0x2a1384e08638,~
script-source,138,node:worker_threads,'use strict';\n\nconst {\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  threadId\x2C\n  Worker\n} = require('internal/worker');\n\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  BroadcastChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable\x2C\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  resourceLimits\x2C\n  threadId\x2C\n  SHARE_ENV\x2C\n  Worker\x2C\n  parentPort: null\x2C\n  workerData: null\x2C\n  BroadcastChannel\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n};\n
code-source-info,0x2a1384e0877e,138,0,686,C0O0C4O686,,
code-creation,Function,10,124946,0x2a1384e0898e,180, node:worker_threads:1:1,0x2a1384e086f8,~
code-source-info,0x2a1384e0898e,138,0,686,C0O139C3O139C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O285C46O285C51O178C56O193C61O211C66O239C71O263C76O353C79O353C84O327C89O382C96O403C102O419C108O434C114O452C120O476C126O504C132O528C138O546C144O558C150O571C156O621C162O641C168O663C174O397C179O685,,
tick,0x1151238,125093,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e08991,0x7f4060044ae0,0x7f40600432df,0x2a1384e07b56,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e06ae6,0x224cfd0e7a3b,0x224cfd0e83e1,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,125386,0x2a1384e09906,5, node:internal/worker:1:1,0x2a1384e09318,~
script-source,139,node:internal/worker,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  JSONStringify\x2C\n  MathMax\x2C\n  ObjectCreate\x2C\n  ObjectEntries\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst assert = require('internal/assert');\nconst path = require('path');\nconst { now } = require('internal/perf/utils');\n\nconst errorCodes = require('internal/errors').codes;\nconst {\n  ERR_WORKER_NOT_RUNNING\x2C\n  ERR_WORKER_PATH\x2C\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = errorCodes;\nconst { getOptionValue } = require('internal/options');\n\nconst workerIo = require('internal/worker/io');\nconst {\n  drainMessagePort\x2C\n  MessageChannel\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\n} = workerIo;\nconst { deserializeError } = require('internal/error_serdes');\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\nconst { kEmptyObject } = require('internal/util');\nconst { validateArray } = require('internal/validators');\n\nconst {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  resourceLimits: resourceLimitsRaw\x2C\n  threadId\x2C\n  Worker: WorkerImpl\x2C\n  kMaxYoungGenerationSizeMb\x2C\n  kMaxOldGenerationSizeMb\x2C\n  kCodeRangeSizeMb\x2C\n  kStackSizeMb\x2C\n  kTotalResourceLimitCount\n} = internalBinding('worker');\n\nconst kHandle = Symbol('kHandle');\nconst kPublicPort = Symbol('kPublicPort');\nconst kDispose = Symbol('kDispose');\nconst kOnExit = Symbol('kOnExit');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\nconst kParentSideStdio = Symbol('kParentSideStdio');\nconst kLoopStartTime = Symbol('kLoopStartTime');\nconst kIsOnline = Symbol('kIsOnline');\n\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\n  debug = fn;\n});\n\nlet cwdCounter;\n\nconst environmentData = new SafeMap();\n\nif (isMainThread) {\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\n  const originalChdir = process.chdir;\n  process.chdir = function(path) {\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\n    originalChdir(path);\n  };\n}\n\nfunction setEnvironmentData(key\x2C value) {\n  if (value === undefined)\n    environmentData.delete(key);\n  else\n    environmentData.set(key\x2C value);\n}\n\nfunction getEnvironmentData(key) {\n  return environmentData.get(key);\n}\n\nfunction assignEnvironmentData(data) {\n  if (data === undefined) return;\n  data.forEach((value\x2C key) => {\n    environmentData.set(key\x2C value);\n  });\n}\n\nclass Worker extends EventEmitter {\n  constructor(filename\x2C options = kEmptyObject) {\n    super();\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\n    if (options.execArgv)\n      validateArray(options.execArgv\x2C 'options.execArgv');\n\n    let argv;\n    if (options.argv) {\n      validateArray(options.argv\x2C 'options.argv');\n      argv = ArrayPrototypeMap(options.argv\x2C String);\n    }\n\n    let url\x2C doEval;\n    if (options.eval) {\n      if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.eval'\x2C\n          options.eval\x2C\n          'must be false when \\'filename\\' is not a string'\n        );\n      }\n      url = null;\n      doEval = 'classic';\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\n      url = null;\n      doEval = 'module';\n      filename = `import ${JSONStringify(`${filename}`)}`;\n    } else {\n      doEval = false;\n      if (isURLInstance(filename)) {\n        url = filename;\n        filename = fileURLToPath(filename);\n      } else if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE(\n          'filename'\x2C\n          ['string'\x2C 'URL']\x2C\n          filename\n        );\n      } else if (path.isAbsolute(filename) ||\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\n        filename = path.resolve(filename);\n        url = pathToFileURL(filename);\n      } else {\n        throw new ERR_WORKER_PATH(filename);\n      }\n    }\n\n    let env;\n    if (typeof options.env === 'object' && options.env !== null) {\n      env = ObjectCreate(null);\n      ArrayPrototypeForEach(\n        ObjectEntries(options.env)\x2C\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\n      );\n    } else if (options.env == null) {\n      env = process.env;\n    } else if (options.env !== SHARE_ENV) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.env'\x2C\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\n        options.env);\n    }\n\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\n    this[kHandle] = new WorkerImpl(url\x2C\n                                   env === process.env ? null : env\x2C\n                                   options.execArgv\x2C\n                                   parseResourceLimits(options.resourceLimits)\x2C\n                                   !!(options.trackUnmanagedFds ?? true));\n    if (this[kHandle].invalidExecArgv) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\n    }\n    if (this[kHandle].invalidNodeOptions) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\n    }\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\n    };\n    this[kPort] = this[kHandle].messagePort;\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\n    this[kPort].start();\n    this[kPort].unref();\n    this[kPort][kWaitingStreams] = 0;\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\n\n    let stdin = null;\n    if (options.stdin)\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\n    if (!options.stdout) {\n      stdout[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stdout\x2C process.stdout);\n    }\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\n    if (!options.stderr) {\n      stderr[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stderr\x2C process.stderr);\n    }\n\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\n\n    const { port1\x2C port2 } = new MessageChannel();\n    const transferList = [port2];\n    // If transferList is provided.\n    if (options.transferList)\n      ArrayPrototypePush(transferList\x2C\n                         ...new SafeArrayIterator(options.transferList));\n\n    this[kPublicPort] = port1;\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\n    });\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\n    this[kPort].postMessage({\n      argv\x2C\n      type: messageTypes.LOAD_SCRIPT\x2C\n      filename\x2C\n      doEval\x2C\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\n      workerData: options.workerData\x2C\n      environmentData\x2C\n      publicPort: port2\x2C\n      manifestURL: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').url :\n        null\x2C\n      manifestSrc: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').src :\n        null\x2C\n      hasStdin: !!options.stdin\n    }\x2C transferList);\n    // Use this to cache the Worker's loopStart value once available.\n    this[kLoopStartTime] = -1;\n    this[kIsOnline] = false;\n    this.performance = {\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\n    };\n    // Actually start the new thread now that everything is in place.\n    this[kHandle].startThread();\n\n    process.nextTick(() => process.emit('worker'\x2C this));\n  }\n\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\n    drainMessagePort(this[kPublicPort]);\n    drainMessagePort(this[kPort]);\n    this.removeAllListeners('message');\n    this.removeAllListeners('messageerrors');\n    this[kPublicPort].unref();\n    this[kPort].unref();\n    this[kDispose]();\n    if (customErr) {\n      debug(`[${threadId}] failing with custom error ${customErr} \\\n        and with reason ${customErrReason}`);\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\n    }\n    this.emit('exit'\x2C code);\n    this.removeAllListeners();\n  }\n\n  [kOnCouldNotSerializeErr]() {\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\n  }\n\n  [kOnErrorMessage](serialized) {\n    // This is what is called for uncaught exceptions.\n    const error = deserializeError(serialized);\n    this.emit('error'\x2C error);\n  }\n\n  [kOnMessage](message) {\n    switch (message.type) {\n      case messageTypes.UP_AND_RUNNING:\n        this[kIsOnline] = true;\n        return this.emit('online');\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\n        return this[kOnCouldNotSerializeErr]();\n      case messageTypes.ERROR_MESSAGE:\n        return this[kOnErrorMessage](message.error);\n      case messageTypes.STDIO_PAYLOAD:\n      {\n        const { stream\x2C chunks } = message;\n        const readable = this[kParentSideStdio][stream];\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\n          readable.push(chunk\x2C encoding);\n        });\n        return;\n      }\n      case messageTypes.STDIO_WANTS_MORE_DATA:\n      {\n        const { stream } = message;\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\n      }\n    }\n\n    assert.fail(`Unknown worker message type ${message.type}`);\n  }\n\n  [kDispose]() {\n    this[kHandle].onexit = null;\n    this[kHandle] = null;\n    this[kPort] = null;\n    this[kPublicPort] = null;\n\n    const { stdout\x2C stderr } = this[kParentSideStdio];\n\n    if (!stdout.readableEnded) {\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\n      stdout.push(null);\n    }\n    if (!stderr.readableEnded) {\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\n      stderr.push(null);\n    }\n  }\n\n  postMessage(...args) {\n    if (this[kPublicPort] === null) return;\n\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\n  }\n\n  terminate(callback) {\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\n\n    this.ref();\n\n    if (typeof callback === 'function') {\n      process.emitWarning(\n        'Passing a callback to worker.terminate() is deprecated. ' +\n        'It returns a Promise instead.'\x2C\n        'DeprecationWarning'\x2C 'DEP0132');\n      if (this[kHandle] === null) return PromiseResolve();\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\n    }\n\n    if (this[kHandle] === null) return PromiseResolve();\n\n    this[kHandle].stopThread();\n\n    // Do not use events.once() here\x2C because the 'exit' event will always be\n    // emitted regardless of any errors\x2C and the point is to only resolve\n    // once the thread has actually stopped.\n    return new Promise((resolve) => {\n      this.once('exit'\x2C resolve);\n    });\n  }\n\n  ref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].ref();\n    this[kPublicPort].ref();\n  }\n\n  unref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].unref();\n    this[kPublicPort].unref();\n  }\n\n  get threadId() {\n    if (this[kHandle] === null) return -1;\n\n    return this[kHandle].threadId;\n  }\n\n  get stdin() {\n    return this[kParentSideStdio].stdin;\n  }\n\n  get stdout() {\n    return this[kParentSideStdio].stdout;\n  }\n\n  get stderr() {\n    return this[kParentSideStdio].stderr;\n  }\n\n  get resourceLimits() {\n    if (this[kHandle] === null) return {};\n\n    return makeResourceLimits(this[kHandle].getResourceLimits());\n  }\n\n  getHeapSnapshot() {\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\n    return new Promise((resolve\x2C reject) => {\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\n      heapSnapshotTaker.ondone = (handle) => {\n        const { HeapSnapshotStream } = require('internal/heap_utils');\n        resolve(new HeapSnapshotStream(handle));\n      };\n    });\n  }\n}\n\nfunction pipeWithoutWarning(source\x2C dest) {\n  const sourceMaxListeners = source._maxListeners;\n  const destMaxListeners = dest._maxListeners;\n  source.setMaxListeners(Infinity);\n  dest.setMaxListeners(Infinity);\n\n  source.pipe(dest);\n\n  source._maxListeners = sourceMaxListeners;\n  dest._maxListeners = destMaxListeners;\n}\n\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\nfunction parseResourceLimits(obj) {\n  const ret = resourceLimitsArray;\n  TypedArrayPrototypeFill(ret\x2C -1);\n  if (typeof obj !== 'object' || obj === null) return ret;\n\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\n  if (typeof obj.codeRangeSizeMb === 'number')\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\n  if (typeof obj.stackSizeMb === 'number')\n    ret[kStackSizeMb] = obj.stackSizeMb;\n  return ret;\n}\n\nfunction makeResourceLimits(float64arr) {\n  return {\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\n    stackSizeMb: float64arr[kStackSizeMb]\n  };\n}\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\n  // has had a chance to turn. So it will be impossible to read the ELU of\n  // a worker thread immediately after it's been created.\n  if (!this[kIsOnline] || !this[kHandle]) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  // Cache loopStart\x2C since it's only written to once.\n  if (this[kLoopStartTime] === -1) {\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\n    if (this[kLoopStartTime] === -1)\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  if (util2) {\n    const idle = util1.idle - util2.idle;\n    const active = util1.active - util2.active;\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  const idle = this[kHandle].loopIdleTime();\n\n  // Using performance.now() here is fine since it's always the time from\n  // the beginning of the process\x2C and is why it needs to be offset by the\n  // loopStart time (which is also calculated from the beginning of the\n  // process).\n  const active = now() - this[kLoopStartTime] - idle;\n\n  if (!util1) {\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  const idle_delta = idle - util1.idle;\n  const active_delta = active - util1.active;\n  const utilization = active_delta / (idle_delta + active_delta);\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\n}\n\nmodule.exports = {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits:\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  assignEnvironmentData\x2C\n  threadId\x2C\n  Worker\x2C\n};\n
code-source-info,0x2a1384e09906,139,0,15418,C0O0C4O15418,,
code-creation,Function,10,126007,0x2a1384e0ac66,1208, node:internal/worker:1:1,0x2a1384e09880,~
code-source-info,0x2a1384e0ac
tick,0x15ae8f7,126192,0,0x0,0,0x15b085b,0x7f40600431be,0x2a1384e0aec4,0x7f4060044ae0,0x7f40600432df,0x2a1384e08991,0x7f4060044ae0,0x7f40600432df,0x2a1384e07b56,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e06ae6,0x224cfd0e7a3b,0x224cfd0e83e1,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,126326,0x2a1384e0cbd6,5, node:internal/error_serdes:1:1,0x2a1384e0c910,~
script-source,140,node:internal/error_serdes,'use strict';\n\nconst Buffer = require('buffer').Buffer;\nconst {\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  EvalError\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  RangeError\x2C\n  ReferenceError\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kSerializedError = 0;\nconst kSerializedObject = 1;\nconst kInspectedError = 2;\n\nconst errors = {\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\n};\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\n\nfunction TryGetAllProperties(object\x2C target = object) {\n  const all = ObjectCreate(null);\n  if (object === null)\n    return all;\n  ObjectAssign(all\x2C\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\n  const keys = ObjectGetOwnPropertyNames(object);\n  ArrayPrototypeForEach(keys\x2C (key) => {\n    let descriptor;\n    try {\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\n    } catch { return; }\n    const getter = descriptor.get;\n    if (getter && key !== '__proto__') {\n      try {\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\n      } catch {\n        // Continue regardless of error.\n      }\n    }\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\n      delete descriptor.get;\n      delete descriptor.set;\n      all[key] = descriptor;\n    }\n  });\n  return all;\n}\n\nfunction GetConstructors(object) {\n  const constructors = [];\n\n  for (let current = object;\n    current !== null;\n    current = ObjectGetPrototypeOf(current)) {\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\n    if (desc && desc.value) {\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\n        __proto__: null\x2C\n        value: desc.value\x2C enumerable: true\n      });\n    }\n  }\n\n  return constructors;\n}\n\nfunction GetName(object) {\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\n  return desc && desc.value;\n}\n\nlet internalUtilInspect;\nfunction inspect(...args) {\n  if (!internalUtilInspect) {\n    internalUtilInspect = require('internal/util/inspect');\n  }\n  return internalUtilInspect.inspect(...args);\n}\n\nlet serialize;\nfunction serializeError(error) {\n  if (!serialize) serialize = require('v8').serialize;\n  try {\n    if (typeof error === 'object' &&\n        ObjectPrototypeToString(error) === '[object Error]') {\n      const constructors = GetConstructors(error);\n      for (let i = 0; i < constructors.length; i++) {\n        const name = GetName(constructors[i]);\n        if (errorConstructorNames.has(name)) {\n          const serialized = serialize({\n            constructor: name\x2C\n            properties: TryGetAllProperties(error)\n          });\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\n        }\n      }\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    const serialized = serialize(error);\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\n  } catch {\n    // Continue regardless of error.\n  }\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\n}\n\nlet deserialize;\nfunction deserializeError(error) {\n  if (!deserialize) deserialize = require('v8').deserialize;\n  switch (error[0]) {\n    case kSerializedError: {\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\n      const ctor = errors[constructor];\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\n        __proto__: null\x2C\n        value: { value: 'Error'\x2C configurable: true }\x2C\n        enumerable: true\n      });\n      return ObjectCreate(ctor.prototype\x2C properties);\n    }\n    case kSerializedObject:\n      return deserialize(error.subarray(1));\n    case kInspectedError: {\n      const buf = Buffer.from(error.buffer\x2C\n                              error.byteOffset + 1\x2C\n                              error.byteLength - 1);\n      return buf.toString('utf8');\n    }\n  }\n  require('assert').fail('This should not happen');\n}\n\nmodule.exports = { serializeError\x2C deserializeError };\n
code-source-info,0x2a1384e0cbd6,140,0,4224,C0O0C4O4224,,
code-creation,Function,10,126565,0x2a1384e0cff6,335, node:internal/error_serdes:1:1,0x2a1384e0cb50,~
code-source-info,0x2a1384e0cff6,140,0,4224,C0O0C100O30C106O30C111O47C115O30C117O66C123O91C128O100C133O113C139O138C145O154C151O170C157O194C163O228C169O257C175O281C180O295C186O322C191O336C196O354C201O365C207O386C212O401C217O414C222O467C223O467C225O496C227O496C229O523C231O523C233O542C240O546C246O553C252O564C258O576C264O586C270O599C276O615C282O542C284O658C287O670C294O658C299O658C301O2111C302O2111C304O2308C305O2308C307O3309C308O3309C310O4169C317O4188C323O4204C329O4184C334O4223,,
code-creation,Function,11,126704,0x7f4060046d40,244,SafeSet node:internal/per_context/primordials:379:16,0x2ac22104a9f0,^
code-source-info,0x7f4060046d40,6,10928,10945,,,
code-creation,Function,11,126765,0x7f4060046ea0,304,getOwn node:internal/bootstrap/loaders:187:16,0x2ac221050808,^
code-source-info,0x7f4060046ea0,9,5646,5800,,,
code-creation,Function,11,126808,0x7f4060047040,664,syncExports node:internal/bootstrap/loaders:304:14,0x2ac221050c68,^
code-source-info,0x7f4060047040,9,9630,9963,,,
code-creation,Function,11,126879,0x7f4060047340,908,s /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89374,0x224cfd0e7f50,^
code-source-info,0x7f4060047340,130,89448,89654,,,
code-creation,Function,11,126940,0x7f4060047740,916,n /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89814,0x224cfd0e8098,^
code-source-info,0x7f4060047740,130,89888,90038,,,
code-creation,Function,11,127007,0x7f4060047b40,40,noop node:internal/util/debuglog:47:14,0x1d498349fb20,^
code-source-info,0x7f4060047b40,22,1419,1427,,,
code-creation,LazyCompile,10,127157,0x2a1384e0ded6,5,get consoleFromVM node:internal/util/inspector:71:20,0x3e83b6161340,~
script-source,38,node:internal/util/inspector,'use strict';\n\nconst {\n  ArrayPrototypeConcat\x2C\n  FunctionPrototypeBind\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n} = primordials;\n\nlet session;\nfunction sendInspectorCommand(cb\x2C onError) {\n  const { hasInspector } = internalBinding('config');\n  if (!hasInspector) return onError();\n  const inspector = require('inspector');\n  if (session === undefined) session = new inspector.Session();\n  session.connect();\n  try {\n    return cb(session);\n  } finally {\n    session.disconnect();\n  }\n}\n\n// Create a special require function for the inspector command line API\nfunction installConsoleExtensions(commandLineApi) {\n  if (commandLineApi.require) { return; }\n  const { tryGetCwd } = require('internal/process/execution');\n  const CJSModule = require('internal/modules/cjs/loader').Module;\n  const { makeRequireFunction } = require('internal/modules/cjs/helpers');\n  const consoleAPIModule = new CJSModule('<inspector console>');\n  const cwd = tryGetCwd();\n  consoleAPIModule.paths = ArrayPrototypeConcat(\n    CJSModule._nodeModulePaths(cwd)\x2C\n    CJSModule.globalPaths\n  );\n  commandLineApi.require = makeRequireFunction(consoleAPIModule);\n}\n\n// Wrap a console implemented by Node.js with features from the VM inspector\nfunction wrapConsole(consoleFromNode\x2C consoleFromVM) {\n  const { consoleCall } = internalBinding('inspector');\n  for (const key of ObjectKeys(consoleFromVM)) {\n    // If global console has the same method as inspector console\x2C\n    // then wrap these two methods into one. Native wrapper will preserve\n    // the original stack.\n    if (ObjectPrototypeHasOwnProperty(consoleFromNode\x2C key)) {\n      consoleFromNode[key] = FunctionPrototypeBind(\n        consoleCall\x2C\n        consoleFromNode\x2C\n        consoleFromVM[key]\x2C\n        consoleFromNode[key]\n      );\n      ObjectDefineProperty(consoleFromNode[key]\x2C 'name'\x2C {\n        __proto__: null\x2C\n        value: key\n      });\n    } else {\n      // Add additional console APIs from the inspector\n      consoleFromNode[key] = consoleFromVM[key];\n    }\n  }\n}\n\n// Stores the console from VM\x2C should be set during bootstrap.\nlet consoleFromVM;\nmodule.exports = {\n  installConsoleExtensions\x2C\n  sendInspectorCommand\x2C\n  wrapConsole\x2C\n  get consoleFromVM() {\n    return consoleFromVM;\n  }\x2C\n  set consoleFromVM(val) {\n    consoleFromVM = val;\n  }\n};\n
code-source-info,0x2a1384e0ded6,38,2230,2264,C0O2239C4O2260,,
tick,0x7f407774af35,127373,0,0x0,3,0x11d7ee0,0x2a1384e07c11,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e06ae6,0x224cfd0e7a3b,0x224cfd0e83e1,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,127584,0x2a1384e0ed6e,260,8586 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:37,0x224cfd0e26e0,~
code-source-info,0x2a1384e0ed6e,130,111,2570,C0O111C23O142C28O142C32O142C34O152C39O152C43O152C45O162C50O162C54O162C56O172C61O172C65O172C67O182C71O182C73O204C77O204C79O819C84O826C91O829C95O838C105O859C110O868C116O858C123O888C127O893C134O1083C138O1093C145O1402C149O1413C156O1577C160O1583C167O1700C171O1707C178O1826C182O1831C189O1966C193O1975C200O2127C204O2135C211O2159C215O2165C222O2187C226O2194C233O2300C237O2308C244O2436C248O2449C254O2567C259O2569,,
code-creation,LazyCompile,10,127671,0x2a1384e0f1e6,18,3837 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99218,0x224cfd0e4988,~
code-source-info,0x2a1384e0f1e6,130,99292,99335,C0O99309C8O99319C12O99318C17O99334,,
code-creation,LazyCompile,10,127827,0x2a1384e0f9ae,133,3610 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:2502,0x224cfd0e2768,~
code-source-info,0x2a1384e0f9ae,130,2576,3261,C0O2576C20O2607C25O2607C29O2607C31O2617C36O2617C40O2617C42O2627C47O2627C51O2627C53O2637C58O2637C62O2637C64O2647C68O2647C70O2859C77O2866C84O2884C88O2895C95O2945C99O2954C106O3011C110O3019C117O3164C121O3172C127O3258C132O3260,,
code-creation,LazyCompile,10,127919,0x2a1384e0fcbe,29,5226 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:8958,0x224cfd0e2a10,~
code-source-info,0x2a1384e0fcbe,130,9032,9350,C0O9032C8O9063C13O9063C17O9063C19O9071C23O9080C28O9349,,
code-creation,LazyCompile,10,128024,0x2a1384e10376,110,3991 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:9282,0x224cfd0e2a98,~
code-source-info,0x2a1384e10376,130,9356,10351,C0O9356C9O9377C16O9388C23O9494C27O9500C34O9538C38O9552C45O9646C49O9658C56O9796C60O9810C67O9878C71O9894C78O10020C82O10035C89O10100C93O10108C100O10205C104O10214C109O10350,,
code-creation,LazyCompile,10,128137,0x2a1384e10906,43,7104 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:3193,0x224cfd0e27f0,~
code-source-info,0x2a1384e10906,130,3267,3923,C0O3267C11O3298C16O3298C20O3298C22O3308C27O3308C31O3308C33O3316C37O3325C42O3922,,
code-creation,LazyCompile,10,128332,0x2a1384e10ee6,140,8459 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:10283,0x224cfd0e2b20,~
code-source-info,0x2a1384e10ee6,130,10357,13045,C0O10357C44O10388C49O10388C53O10388C55O10398C60O10398C64O10398C66O10408C70O10408C72O10461C76O10461C78O10513C82O10513C84O10539C88O10539C90O10642C94O10642C96O10758C100O10758C102O10856C106O10856C108O10984C112O10984C114O11116C118O11116C120O11186C124O11186C126O11246C130O11246C132O13033C134O13042C139O13044,,
tick,0x7f40773a70af,128452,0,0x0,3,0x11d7ee0,0x224cfd0e7a3b,0x2a1384e10916,0x224cfd0e7a3b,0x2a1384e0f9d2,0x224cfd0e7a3b,0x2a1384e0ed95,0x224cfd0e7a3b,0x224cfd0e83f4,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,128583,0x2a1384e1182e,115,5109 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:13140,0x224cfd0e2c30,~
code-source-info,0x2a1384e1182e,130,13214,15909,C0O13214C71O13245C76O13245C80O13245C82O13254C86O13254C88O15858C92O15865C99O15869C103O15881C109O15906C114O15908,,
code-creation,LazyCompile,10,128664,0x2a1384e11bae,10,535 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:12976,0x224cfd0e2ba8,~
code-source-info,0x2a1384e11bae,130,13050,13208,C0O13067C4O13076C9O13207,,
code-creation,LazyCompile,10,128805,0x2a1384e11fbe,66,5341 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:4826,0x224cfd0e2900,~
code-source-info,0x2a1384e11fbe,130,4900,6277,C0O4900C17O4931C22O4931C26O4931C28O4941C33O4941C37O4941C39O4951C44O4951C48O4951C50O4961C54O4961C56O5284C60O5293C65O6276,,
code-creation,LazyCompile,10,128971,0x2a1384e1240e,174,8707 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:6209,0x224cfd0e2988,~
code-source-info,0x2a1384e1240e,130,6283,9026,C0O6283C53O6314C58O6314C62O6314C64O6641C69O6641C74O6334C80O6351C86O6367C92O6380C98O6391C104O6415C110O6440C116O6464C122O6489C128O6516C134O6544C140O6564C146O6584C152O6606C158O6638C164O6649C168O6658C173O9025,,
code-creation,LazyCompile,10,129065,0x2a1384e128ee,10,7874 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:3855,0x224cfd0e2878,~
code-source-info,0x2a1384e128ee,130,3929,4894,C0O3946C4O3955C9O4893,,
code-creation,LazyCompile,10,129189,0x2a1384e12b7e,15,7514 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:15841,0x224cfd0e2cb8,~
code-source-info,0x2a1384e12b7e,130,15915,15956,C0O15938C5O15948C9O15947C14O15955,,
code-creation,LazyCompile,10,129363,0x2a1384e131ce,185,3442 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:30399,0x224cfd0e2e50,~
code-source-info,0x2a1384e131ce,130,30473,32715,C0O30473C20O30504C25O30504C29O30504C31O30514C36O30514C40O30514C42O30524C47O30524C51O30524C53O30534C58O30534C62O30534C64O30544C69O30544C74O30554C78O30554C80O31442C87O31448C94O31838C98O31849C105O31934C109O31943C116O31963C120O31970C127O32045C131O32051C138O32066C142O32077C149O32298C153O32306C160O32556C164O32565C173O32700C179O32712C184O32714,,
code-creation,LazyCompile,10,129438,0x2a1384e134ee,18,1017 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99022,0x224cfd0e4768,~
code-source-info,0x2a1384e134ee,130,99096,99139,C0O99113C8O99123C12O99122C17O99138,,
tick,0x7f40773a70af,129578,0,0x0,3,0x11d7ee0,0x224cfd0e7a3b,0x2a1384e131e7,0x224cfd0e7a3b,0x2a1384e12b83,0x224cfd0e7a3b,0x2a1384e0eda0,0x224cfd0e7a3b,0x224cfd0e83f4,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,129752,0x2a1384e13aae,192,7965 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:32647,0x224cfd0e2ed8,~
code-source-info,0x2a1384e13aae,130,32721,35646,C0O32721C59O32752C64O32752C68O32752C70O33065C75O33065C80O32775C86O32785C92O32807C98O32820C104O32831C110O32855C116O32876C122O32900C128O32924C134O32951C140O32963C146O32984C152O33009C158O33034C164O33062C170O33075C174O33075C176O33093C180O33093C182O33144C186O33153C191O35645,,
code-creation,LazyCompile,10,129890,0x2a1384e1447e,211,5266 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:35578,0x224cfd0e2f60,~
code-source-info,0x2a1384e1447e,130,35652,36666,C0O35652C27O35683C32O35683C36O35683C38O35693C41O35703C45O35711C49O35700C52O35693C54O35816C59O35816C64O35737C70O35762C76O35784C82O35813C88O35824C95O35834C102O35886C106O35901C113O35915C117O35928C124O35965C128O35978C135O36002C139O36018C146O36039C150O36058C157O36094C161O36115C168O36227C172O36238C179O36304C183O36316C190O36439C194O36453C201O36532C205O36544C210O36665,,
code-creation,LazyCompile,10,129967,0x2a1384e14806,5,get node:internal/bootstrap/pre_execution:413:8,0xa26aaaebf8,~
code-source-info,0x2a1384e14806,100,13112,13145,C0O13123C4O13139,,
code-creation,LazyCompile,10,130107,0x2a1384e151ce,240,7654 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:15888,0x224cfd0e2d40,~
code-source-info,0x2a1384e151ce,130,15962,18471,C0O15962C11O15993C16O15993C21O16003C24O16025C31O16167C40O16209C59O16271C75O16025C77O16341C87O16361C93O16377C99O16393C105O16417C111O16448C117O16466C123O16520C129O16562C135O16603C141O16628C147O16655C153O16341C155O16672C160O17014C168O17063C176O17111C184O17159C192O17206C200O17252C208O18206C216O18223C224O18456C234O16681C239O18470,,
tick,0x10eae32,130649,0,0x0,2,0x11d7ee0,0x224cfd0e7a3b,0x2a1384e131fd,0x224cfd0e7a3b,0x2a1384e12b83,0x224cfd0e7a3b,0x2a1384e0eda0,0x224cfd0e7a3b,0x224cfd0e83f4,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,130795,0x2a1384e159b6,127,1159 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:18403,0x224cfd0e2dc8,~
code-source-info,0x2a1384e159b6,130,18477,30467,C0O18477C35O18508C40O18508C44O18508C46O18518C51O18518C55O18518C57O18633C60O18538C66O18559C72O18585C78O18615C84O18630C90O18637C94O18637C96O18832C100O18832C102O18909C106O18909C108O29389C115O29400C121O30464C126O30466,,
code-creation,LazyCompile,10,131129,0x2a1384e16196,28,i /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:90003,0x224cfd0e80e8,~
code-source-info,0x2a1384e16196,130,90077,90118,C0O90081C4O90093C14O90104C21O90115C27O90117,,
code-creation,LazyCompile,10,131367,0x2a1384e1670e,133,9140 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:84024,0x224cfd0e3990,~
code-source-info,0x2a1384e1670e,130,84098,85072,C0O84098C14O84121C18O84128C26O84143C34O84128C41O84208C47O84188C51O84224C56O84224C60O84224C62O84234C67O84234C71O84234C73O84248C78O84248C82O84248C84O84256C88O84263C96O84278C101O84319C112O84263C117O84360C121O84378C125O84590C129O84590C132O85071,,
code-creation,LazyCompile,10,131460,0x2a1384e169f6,40,7999 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:88853,0x224cfd0e3bb0,~
code-source-info,0x2a1384e169f6,130,88927,89077,C0O88948C4O88955C12O88970C20O88955C26O89012C30O89020C34O89035C39O89076,,
code-creation,LazyCompile,10,131600,0x2a1384e172e6,305,7551 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:81916,0x224cfd0e3868,~
code-source-info,0x2a1384e172e6,130,81990,84092,C0O81990C27O82017C31O82028C37O82046C41O82053C57O82017C59O82325C63O82336C69O82357C73O82364C89O82325C91O82475C95O82486C106O82659C110O82666C121O82681C126O82666C151O82831C157O82816C163O82803C169O82783C175O82760C181O82731C185O82847C190O82849C195O82847C199O82847C201O82860C206O82862C211O82860C215O82860C217O82873C222O82873C226O82873C228O82883C233O82883C237O82883C239O83226C246O83240C253O83494C257O83506C266O83593C273O83596C277O83618C284O83715C288O83743C295O83830C299O83853C304O84091,,
tick,0x11079c8,131745,0,0x0,2,0x11d7ee0,0x224cfd0e7a3b,0x2a1384e173a4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,131813,0x2a1384e17746,18,1808 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98927,0x224cfd0e4658,~
code-source-info,0x2a1384e17746,130,99001,99043,C0O99018C8O99028C12O99027C17O99042,,
code-creation,LazyCompile,10,132094,0x2a1384e17a1e,37,get SocketAddress node:net:1924:20,0x24759bdce4e8,~
code-source-info,0x2a1384e17a1e,116,51684,51789,C0O51693C14O51711C19O51744C26O51707C32O51764C36O51785,,
code-creation,LazyCompile,10,132230,0x2a1384e17b4e,119,n /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:82434,0x2a1384e16e88,~
code-source-info,0x2a1384e17b4e,130,82508,82658,C0O82512C4O82520C10O82531C12O82540C13O82546C15O82549C20O82573C33O82568C46O82568C47O82575C52O82584C58O82590C62O82597C67O82607C72O82622C77O82622C97O82633C105O82560C108O82642C111O82649C118O82657,,
code-creation,LazyCompile,10,132329,0x2a1384e17de6,122,s /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:81994,0x2a1384e16d40,~
code-source-info,0x2a1384e17de6,130,82068,82274,C0O82068C13O82078C22O82102C26O82109C37O82109C44O82139C51O82149C59O82157C66O82170C72O82182C84O82219C97O82245C101O82252C115O82252C121O82273,,
code-creation,LazyCompile,10,132445,0x2a1384e1835e,33,o /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:82305,0x2a1384e16de8,~
code-source-info,0x2a1384e1835e,130,82379,82444,C0O82385C4O82392C12O82407C19O82440C26O82392C32O82443,,
code-creation,LazyCompile,10,132531,0x2a1384e1848e,82,8681 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:36598,0x224cfd0e2fe8,~
code-source-info,0x2a1384e1848e,130,36672,36847,C0O36703C5O36703C10O36711C15O36735C19O36734C26O36752C30O36751C39O36769C43O36768C52O36786C56O36785C62O36805C66O36828C70O36825C76O36844C81O36846,,
tick,0x1119612,132863,0,0x0,2,0x11d7ee0,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,132971,0x2a1384e1acae,1078,2982 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:66630,0x224cfd0e36d0,~
code-source-info,0x2a1384e1acae
code-creation,LazyCompile,10,133111,0x2a1384e1b886,18,2361 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98676,0x224cfd0e43b0,~
code-source-info,0x2a1384e1b886,130,98750,98795,C0O98767C8O98777C12O98776C17O98794,,
code-creation,Function,11,133220,0x7f4060047be0,248,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x2ac221050a10,^
code-source-info,0x7f4060047be0,9,7502,7598,,,
code-creation,Function,11,133296,0x7f4060047d40,1016,debuglog node:internal/util/debuglog:71:18,0x1d498349fbc0,^
code-source-info,0x7f4060047d40,22,2232,3240,,,
code-creation,Function,11,133333,0x7f40600481a0,460,__webpack_require__ /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99427,0x224cfd0e2690,^
code-source-info,0x7f40600481a0,130,99501,99705,,,
code-creation,Function,11,133389,0x7f40600483e0,908,s /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:81994,0x2a1384e16d40,^
code-source-info,0x7f40600483e0,130,82068,82274,,,
code-creation,Function,11,133450,0x7f40600487e0,916,n /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:82434,0x2a1384e16e88,^
code-source-info,0x7f40600487e0,130,82508,82658,,,
code-creation,LazyCompile,10,133579,0x2a1384e1be5e,16,get node:events:227:6,0x1d49834a8af0,~
code-source-info,0x2a1384e1be5e,23,6747,6800,C0O6756C3O6776C10O6786C12O6785C15O6796,,
code-creation,LazyCompile,10,133721,0x2a1384e1c7c6,181,lazyEventEmitterAsyncResource node:events:95:39,0x1d49834a8118,~
code-source-info,0x2a1384e1c7c6,23,2886,6158,C0O2893C6O2923C19O2980C27O2980C32O2958C37O3031C47O3031C51O3031C53O3083C63O3083C67O3083C69O3164C96O3113C98O3755C110O3829C166O3781C176O6123C180O6156,,
code-creation,LazyCompile,10,133808,0x2a1384e1cb56,5,get node:events:272:16,0x1d49834a8c30,~
code-source-info,0x2a1384e1cb56,23,7902,7942,C0O7911C4O7938,,
code-creation,LazyCompile,10,133875,0x2a1384e1cc1e,18,5687 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98823,0x224cfd0e4548,~
code-source-info,0x2a1384e1cc1e,130,98897,98941,C0O98914C8O98924C12O98923C17O98940,,
tick,0x7f40773a70af,133991,0,0x0,3,0x11d7ee0,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,134213,0x2a1384e1d30e,5, node:https:1:1,0x2a1384e1d058,~
script-source,141,node:https,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  FunctionPrototypeCall\x2C\n  JSONStringify\x2C\n  ObjectAssign\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nassertCrypto();\n\nconst tls = require('tls');\nconst { Agent: HttpAgent } = require('_http_agent');\nconst {\n  Server: HttpServer\x2C\n  storeHTTPOptions\x2C\n  _connectionListener\x2C\n} = require('_http_server');\nconst { ClientRequest } = require('_http_client');\nlet debug = require('internal/util/debuglog').debuglog('https'\x2C (fn) => {\n  debug = fn;\n});\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\n\nfunction Server(opts\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(opts\x2C requestListener);\n\n  if (typeof opts === 'function') {\n    requestListener = opts;\n    opts = undefined;\n  }\n  opts = { ...opts };\n\n  if (!opts.ALPNProtocols) {\n    // http/1.0 is not defined as Protocol IDs in IANA\n    // https://www.iana.org/assignments/tls-extensiontype-values\n    //       /tls-extensiontype-values.xhtml#alpn-protocol-ids\n    opts.ALPNProtocols = ['http/1.1'];\n  }\n\n  FunctionPrototypeCall(storeHTTPOptions\x2C this\x2C opts);\n  FunctionPrototypeCall(tls.Server\x2C this\x2C opts\x2C _connectionListener);\n\n  this.httpAllowHalfOpen = false;\n\n  if (requestListener) {\n    this.addListener('request'\x2C requestListener);\n  }\n\n  this.addListener('tlsClientError'\x2C function addListener(err\x2C conn) {\n    if (!this.emit('clientError'\x2C err\x2C conn))\n      conn.destroy(err);\n  });\n\n  this.timeout = 0;\n  this.keepAliveTimeout = 5000;\n  this.maxHeadersCount = null;\n  this.headersTimeout = 60 * 1000; // 60 seconds\n  this.requestTimeout = 0;\n}\nObjectSetPrototypeOf(Server.prototype\x2C tls.Server.prototype);\nObjectSetPrototypeOf(Server\x2C tls.Server);\n\nServer.prototype.setTimeout = HttpServer.prototype.setTimeout;\n\n/**\n * Creates a new `https.Server` instance.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n\n// HTTPS agents.\n\nfunction createConnection(port\x2C host\x2C options) {\n  if (port !== null && typeof port === 'object') {\n    options = port;\n  } else if (host !== null && typeof host === 'object') {\n    options = { ...host };\n  } else if (options === null || typeof options !== 'object') {\n    options = {};\n  } else {\n    options = { ...options };\n  }\n\n  if (typeof port === 'number') {\n    options.port = port;\n  }\n\n  if (typeof host === 'string') {\n    options.host = host;\n  }\n\n  debug('createConnection'\x2C options);\n\n  if (options._agentKey) {\n    const session = this._getSession(options._agentKey);\n    if (session) {\n      debug('reuse session for %j'\x2C options._agentKey);\n      options = {\n        session\x2C\n        ...options\n      };\n    }\n  }\n\n  const socket = tls.connect(options);\n\n  if (options._agentKey) {\n    // Cache new session for reuse\n    socket.on('session'\x2C (session) => {\n      this._cacheSession(options._agentKey\x2C session);\n    });\n\n    // Evict session on error\n    socket.once('close'\x2C (err) => {\n      if (err)\n        this._evictSession(options._agentKey);\n    });\n  }\n\n  return socket;\n}\n\n/**\n * Creates a new `HttpAgent` instance.\n * @param {{\n *   keepAlive?: boolean;\n *   keepAliveMsecs?: number;\n *   maxSockets?: number;\n *   maxTotalSockets?: number;\n *   maxFreeSockets?: number;\n *   scheduling?: string;\n *   timeout?: number;\n *   maxCachedSessions?: number;\n *   servername?: string;\n *   }} [options]\n * @returns {Agent}\n */\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  FunctionPrototypeCall(HttpAgent\x2C this\x2C options);\n  this.defaultPort = 443;\n  this.protocol = 'https:';\n  this.maxCachedSessions = this.options.maxCachedSessions;\n  if (this.maxCachedSessions === undefined)\n    this.maxCachedSessions = 100;\n\n  this._sessionCache = {\n    map: {}\x2C\n    list: []\n  };\n}\nObjectSetPrototypeOf(Agent.prototype\x2C HttpAgent.prototype);\nObjectSetPrototypeOf(Agent\x2C HttpAgent);\nAgent.prototype.createConnection = createConnection;\n\n/**\n * Gets a unique name for a set of options.\n * @param {{\n *   host: string;\n *   port: number;\n *   localAddress: string;\n *   family: number;\n *   }} [options]\n * @returns {string}\n */\nAgent.prototype.getName = function getName(options = kEmptyObject) {\n  let name = FunctionPrototypeCall(HttpAgent.prototype.getName\x2C this\x2C options);\n\n  name += ':';\n  if (options.ca)\n    name += options.ca;\n\n  name += ':';\n  if (options.cert)\n    name += options.cert;\n\n  name += ':';\n  if (options.clientCertEngine)\n    name += options.clientCertEngine;\n\n  name += ':';\n  if (options.ciphers)\n    name += options.ciphers;\n\n  name += ':';\n  if (options.key)\n    name += options.key;\n\n  name += ':';\n  if (options.pfx)\n    name += options.pfx;\n\n  name += ':';\n  if (options.rejectUnauthorized !== undefined)\n    name += options.rejectUnauthorized;\n\n  name += ':';\n  if (options.servername && options.servername !== options.host)\n    name += options.servername;\n\n  name += ':';\n  if (options.minVersion)\n    name += options.minVersion;\n\n  name += ':';\n  if (options.maxVersion)\n    name += options.maxVersion;\n\n  name += ':';\n  if (options.secureProtocol)\n    name += options.secureProtocol;\n\n  name += ':';\n  if (options.crl)\n    name += options.crl;\n\n  name += ':';\n  if (options.honorCipherOrder !== undefined)\n    name += options.honorCipherOrder;\n\n  name += ':';\n  if (options.ecdhCurve)\n    name += options.ecdhCurve;\n\n  name += ':';\n  if (options.dhparam)\n    name += options.dhparam;\n\n  name += ':';\n  if (options.secureOptions !== undefined)\n    name += options.secureOptions;\n\n  name += ':';\n  if (options.sessionIdContext)\n    name += options.sessionIdContext;\n\n  name += ':';\n  if (options.sigalgs)\n    name += JSONStringify(options.sigalgs);\n\n  name += ':';\n  if (options.privateKeyIdentifier)\n    name += options.privateKeyIdentifier;\n\n  name += ':';\n  if (options.privateKeyEngine)\n    name += options.privateKeyEngine;\n\n  return name;\n};\n\nAgent.prototype._getSession = function _getSession(key) {\n  return this._sessionCache.map[key];\n};\n\nAgent.prototype._cacheSession = function _cacheSession(key\x2C session) {\n  // Cache is disabled\n  if (this.maxCachedSessions === 0)\n    return;\n\n  // Fast case - update existing entry\n  if (this._sessionCache.map[key]) {\n    this._sessionCache.map[key] = session;\n    return;\n  }\n\n  // Put new entry\n  if (this._sessionCache.list.length >= this.maxCachedSessions) {\n    const oldKey = ArrayPrototypeShift(this._sessionCache.list);\n    debug('evicting %j'\x2C oldKey);\n    delete this._sessionCache.map[oldKey];\n  }\n\n  ArrayPrototypePush(this._sessionCache.list\x2C key);\n  this._sessionCache.map[key] = session;\n};\n\nAgent.prototype._evictSession = function _evictSession(key) {\n  const index = ArrayPrototypeIndexOf(this._sessionCache.list\x2C key);\n  if (index === -1)\n    return;\n\n  ArrayPrototypeSplice(this._sessionCache.list\x2C index\x2C 1);\n  delete this._sessionCache.map[key];\n};\n\nconst globalAgent = new Agent();\n\n/**\n * Makes a request to a secure web server.\n * @param {...any} args\n * @returns {ClientRequest}\n */\nfunction request(...args) {\n  let options = {};\n\n  if (typeof args[0] === 'string') {\n    const urlStr = ArrayPrototypeShift(args);\n    options = urlToHttpOptions(new URL(urlStr));\n  } else if (args[0] && args[0][searchParamsSymbol] &&\n             args[0][searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    options = urlToHttpOptions(ArrayPrototypeShift(args));\n  }\n\n  if (args[0] && typeof args[0] !== 'function') {\n    ObjectAssign(options\x2C ArrayPrototypeShift(args));\n  }\n\n  options._defaultAgent = module.exports.globalAgent;\n  ArrayPrototypeUnshift(args\x2C options);\n\n  return ReflectConstruct(ClientRequest\x2C args);\n}\n\n/**\n * Makes a GET request to a secure web server.\n * @param {string | URL} input\n * @param {{\n *   agent?: Agent | boolean;\n *   auth?: string;\n *   createConnection?: Function;\n *   defaultPort?: number;\n *   family?: number;\n *   headers?: object;\n *   hints?: number;\n *   host?: string;\n *   hostname?: string;\n *   insecureHTTPParser?: boolean;\n *   localAddress?: string;\n *   localPort?: number;\n *   lookup?: Function;\n *   maxHeaderSize?: number;\n *   method?: string;\n *   path?: string;\n *   port?: number;\n *   protocol?: string;\n *   setHost?: boolean;\n *   socketPath?: string;\n *   timeout?: number;\n *   signal?: AbortSignal;\n *   } | string | URL} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(input\x2C options\x2C cb) {\n  const req = request(input\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent\x2C\n  Server\x2C\n  createServer\x2C\n  get\x2C\n  request\n};\n
code-source-info,0x2a1384e1d30e,141,0,10108,C0O0C4O10108,,
code-creation,Function,10,134647,0x2a1384e1d946,531, node:https:1:1,0x2a1384e1d288,~
code-source-info,0x2a1384e1d946,141,0,10108,C0O0C99O1159C105O1184C111O1206C117O1229C123O1253C129O1278C135O1303C141O1320C147O1336C152O1360C158O1440C161O1440C166O1406C171O1422C177O1466C180O1495C183O1495C187O1495C189O1540C192O1540C197O1526C203O1641C206O1641C211O1582C216O1596C222O1616C228O1692C231O1692C236O1674C242O1729C245O1729C250O1762C263O1763C269O1729C271O1863C274O1863C279O1817C285O1822C291O1840C297O2926C300O2954C308O2969C313O2976C318O2926C323O2988C329O3021C334O2988C339O3031C342O3038C347O3072C352O3082C356O3059C360O5327C363O5354C371O5375C376O5327C381O5387C387O5387C392O5427C395O5433C402O5460C406O5671C409O5677C418O5695C422O7424C425O7430C434O7452C438O7524C441O7530C450O7554C454O8132C457O8138C466O8162C470O8417C473O8417C479O10019C489O10040C495O10049C501O10064C507O10074C513O10090C519O10097C525O10034C530O10107,,
code-creation,LazyCompile,10,134757,0x2a1384e1eb7e,19,assertCrypto node:internal/util:152:22,0x2ac22107f958,~
code-source-info,0x2a1384e1eb7e,15,3941,3994,C0O3948C6O3966C11O3972C16O3966C18O3993,,
tick,0xd92bf6,135099,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,135170,0x2a1384e1fa5e,5, node:tls:1:1,0x2a1384e1f668,~
script-source,142,node:tls,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSome\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringFromCharCode\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSubstring\x2C\n} = primordials;\n\nconst {\n  ERR_TLS_CERT_ALTNAME_FORMAT\x2C\n  ERR_TLS_CERT_ALTNAME_INVALID\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst internalUtil = require('internal/util');\ninternalUtil.assertCrypto();\nconst {\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\n\nconst net = require('net');\nconst { getOptionValue } = require('internal/options');\nconst { getRootCertificates\x2C getSSLCiphers } = internalBinding('crypto');\nconst { Buffer } = require('buffer');\nconst { URL } = require('internal/url');  // Only used for Security Revert\nconst { canonicalizeIP } = internalBinding('cares_wrap');\nconst _tls_common = require('_tls_common');\nconst _tls_wrap = require('_tls_wrap');\nconst { createSecurePair } = require('internal/tls/secure-pair');\nconst { parseCertString } = require('internal/tls/parse-cert-string');\n\n// Allow {CLIENT_RENEG_LIMIT} client-initiated session renegotiations\n// every {CLIENT_RENEG_WINDOW} seconds. An error event is emitted if more\n// renegotiations are seen. The settings are applied to all remote client\n// connections.\nexports.CLIENT_RENEG_LIMIT = 3;\nexports.CLIENT_RENEG_WINDOW = 600;\n\nexports.DEFAULT_CIPHERS = getOptionValue('--tls-cipher-list');\n\nexports.DEFAULT_ECDH_CURVE = 'auto';\n\nif (getOptionValue('--tls-min-v1.0'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1';\nelse if (getOptionValue('--tls-min-v1.1'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.1';\nelse if (getOptionValue('--tls-min-v1.2'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\nelse if (getOptionValue('--tls-min-v1.3'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.3';\nelse\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\n\nif (getOptionValue('--tls-max-v1.3'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3';\nelse if (getOptionValue('--tls-max-v1.2'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.2';\nelse\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3'; // Will depend on node version.\n\n\nexports.getCiphers = internalUtil.cachedResult(\n  () => internalUtil.filterDuplicateStrings(getSSLCiphers()\x2C true)\n);\n\nlet rootCertificates;\n\nfunction cacheRootCertificates() {\n  rootCertificates = ObjectFreeze(getRootCertificates());\n}\n\nObjectDefineProperty(exports\x2C 'rootCertificates'\x2C {\n  __proto__: null\x2C\n  configurable: false\x2C\n  enumerable: true\x2C\n  get: () => {\n    // Out-of-line caching to promote inlining the getter.\n    if (!rootCertificates) cacheRootCertificates();\n    return rootCertificates;\n  }\x2C\n});\n\n// Convert protocols array into valid OpenSSL protocols list\n// ("\\x06spdy/2\\x08http/1.1\\x08http/1.0")\nfunction convertProtocols(protocols) {\n  const lens = new Array(protocols.length);\n  const buff = Buffer.allocUnsafe(ArrayPrototypeReduce(protocols\x2C (p\x2C c\x2C i) => {\n    const len = Buffer.byteLength(c);\n    if (len > 255) {\n      throw new ERR_OUT_OF_RANGE('The byte length of the protocol at index ' +\n        `${i} exceeds the maximum length.`\x2C '<= 255'\x2C len\x2C true);\n    }\n    lens[i] = len;\n    return p + 1 + len;\n  }\x2C 0));\n\n  let offset = 0;\n  for (let i = 0\x2C c = protocols.length; i < c; i++) {\n    buff[offset++] = lens[i];\n    buff.write(protocols[i]\x2C offset);\n    offset += lens[i];\n  }\n\n  return buff;\n}\n\nexports.convertALPNProtocols = function convertALPNProtocols(protocols\x2C out) {\n  // If protocols is Array - translate it into buffer\n  if (ArrayIsArray(protocols)) {\n    out.ALPNProtocols = convertProtocols(protocols);\n  } else if (isUint8Array(protocols)) {\n    // Copy new buffer not to be modified by user.\n    out.ALPNProtocols = Buffer.from(protocols);\n  } else if (isArrayBufferView(protocols)) {\n    out.ALPNProtocols = Buffer.from(protocols.buffer.slice(\n      protocols.byteOffset\x2C\n      protocols.byteOffset + protocols.byteLength\n    ));\n  }\n};\n\nfunction unfqdn(host) {\n  return RegExpPrototypeSymbolReplace(/[.]$/\x2C host\x2C '');\n}\n\n// String#toLowerCase() is locale-sensitive so we use\n// a conservative version that only lowercases A-Z.\nfunction toLowerCase(c) {\n  return StringFromCharCode(32 + StringPrototypeCharCodeAt(c\x2C 0));\n}\n\nfunction splitHost(host) {\n  return StringPrototypeSplit(\n    RegExpPrototypeSymbolReplace(/[A-Z]/g\x2C unfqdn(host)\x2C toLowerCase)\x2C\n    '.'\n  );\n}\n\nfunction check(hostParts\x2C pattern\x2C wildcards) {\n  // Empty strings\x2C null\x2C undefined\x2C etc. never match.\n  if (!pattern)\n    return false;\n\n  const patternParts = splitHost(pattern);\n\n  if (hostParts.length !== patternParts.length)\n    return false;\n\n  // Pattern has empty components\x2C e.g. "bad..example.com".\n  if (ArrayPrototypeIncludes(patternParts\x2C ''))\n    return false;\n\n  // RFC 6125 allows IDNA U-labels (Unicode) in names but we have no\n  // good way to detect their encoding or normalize them so we simply\n  // reject them.  Control characters and blanks are rejected as well\n  // because nothing good can come from accepting them.\n  const isBad = (s) => RegExpPrototypeExec(/[^\\u0021-\\u007F]/u\x2C s) !== null;\n  if (ArrayPrototypeSome(patternParts\x2C isBad))\n    return false;\n\n  // Check host parts from right to left first.\n  for (let i = hostParts.length - 1; i > 0; i -= 1) {\n    if (hostParts[i] !== patternParts[i])\n      return false;\n  }\n\n  const hostSubdomain = hostParts[0];\n  const patternSubdomain = patternParts[0];\n  const patternSubdomainParts = StringPrototypeSplit(patternSubdomain\x2C '*');\n\n  // Short-circuit when the subdomain does not contain a wildcard.\n  // RFC 6125 does not allow wildcard substitution for components\n  // containing IDNA A-labels (Punycode) so match those verbatim.\n  if (patternSubdomainParts.length === 1 ||\n      StringPrototypeIncludes(patternSubdomain\x2C 'xn--'))\n    return hostSubdomain === patternSubdomain;\n\n  if (!wildcards)\n    return false;\n\n  // More than one wildcard is always wrong.\n  if (patternSubdomainParts.length > 2)\n    return false;\n\n  // *.tld wildcards are not allowed.\n  if (patternParts.length <= 2)\n    return false;\n\n  const { 0: prefix\x2C 1: suffix } = patternSubdomainParts;\n\n  if (prefix.length + suffix.length > hostSubdomain.length)\n    return false;\n\n  if (!StringPrototypeStartsWith(hostSubdomain\x2C prefix))\n    return false;\n\n  if (!StringPrototypeEndsWith(hostSubdomain\x2C suffix))\n    return false;\n\n  return true;\n}\n\n// This pattern is used to determine the length of escaped sequences within\n// the subject alt names string. It allows any valid JSON string literal.\n// This MUST match the JSON specification (ECMA-404 / RFC8259) exactly.\nconst jsonStringPattern =\n  // eslint-disable-next-line no-control-regex\n  /^"(?:[^"\\\\\\u0000-\\u001f]|\\\\(?:["\\\\/bfnrt]|u[0-9a-fA-F]{4}))*"/;\n\nfunction splitEscapedAltNames(altNames) {\n  const result = [];\n  let currentToken = '';\n  let offset = 0;\n  while (offset !== altNames.length) {\n    const nextSep = StringPrototypeIndexOf(altNames\x2C '\x2C '\x2C offset);\n    const nextQuote = StringPrototypeIndexOf(altNames\x2C '"'\x2C offset);\n    if (nextQuote !== -1 && (nextSep === -1 || nextQuote < nextSep)) {\n      // There is a quote character and there is no separator before the quote.\n      currentToken += StringPrototypeSubstring(altNames\x2C offset\x2C nextQuote);\n      const match = RegExpPrototypeExec(\n        jsonStringPattern\x2C StringPrototypeSubstring(altNames\x2C nextQuote));\n      if (!match) {\n        throw new ERR_TLS_CERT_ALTNAME_FORMAT();\n      }\n      currentToken += JSONParse(match[0]);\n      offset = nextQuote + match[0].length;\n    } else if (nextSep !== -1) {\n      // There is a separator and no quote before it.\n      currentToken += StringPrototypeSubstring(altNames\x2C offset\x2C nextSep);\n      ArrayPrototypePush(result\x2C currentToken);\n      currentToken = '';\n      offset = nextSep + 2;\n    } else {\n      currentToken += StringPrototypeSubstring(altNames\x2C offset);\n      offset = altNames.length;\n    }\n  }\n  ArrayPrototypePush(result\x2C currentToken);\n  return result;\n}\n\nexports.checkServerIdentity = function checkServerIdentity(hostname\x2C cert) {\n  const subject = cert.subject;\n  const altNames = cert.subjectaltname;\n  const dnsNames = [];\n  const uriNames = [];\n  const ips = [];\n\n  hostname = '' + hostname;\n\n  if (altNames) {\n    const splitAltNames = StringPrototypeIncludes(altNames\x2C '"') ?\n      splitEscapedAltNames(altNames) :\n      StringPrototypeSplit(altNames\x2C '\x2C ');\n    ArrayPrototypeForEach(splitAltNames\x2C (name) => {\n      if (StringPrototypeStartsWith(name\x2C 'DNS:')) {\n        ArrayPrototypePush(dnsNames\x2C StringPrototypeSlice(name\x2C 4));\n      } else if (process.REVERT_CVE_2021_44531 &&\n                 StringPrototypeStartsWith(name\x2C 'URI:')) {\n        const uri = new URL(StringPrototypeSlice(name\x2C 4));\n\n        // TODO(bnoordhuis) Also use scheme.\n        ArrayPrototypePush(uriNames\x2C uri.hostname);\n      } else if (StringPrototypeStartsWith(name\x2C 'IP Address:')) {\n        ArrayPrototypePush(ips\x2C canonicalizeIP(StringPrototypeSlice(name\x2C 11)));\n      }\n    });\n  }\n\n  let valid = false;\n  let reason = 'Unknown reason';\n\n  const hasAltNames =\n    dnsNames.length > 0 || ips.length > 0 || uriNames.length > 0;\n\n  hostname = unfqdn(hostname);  // Remove trailing dot for error messages.\n\n  if (net.isIP(hostname)) {\n    valid = ArrayPrototypeIncludes(ips\x2C canonicalizeIP(hostname));\n    if (!valid)\n      reason = `IP: ${hostname} is not in the cert's list: ` +\n               ArrayPrototypeJoin(ips\x2C '\x2C ');\n    // TODO(bnoordhuis) Also check URI SANs that are IP addresses.\n  } else if ((process.REVERT_CVE_2021_44531 && (hasAltNames || subject)) ||\n             (dnsNames.length > 0 || subject?.CN)) {\n    const hostParts = splitHost(hostname);\n    const wildcard = (pattern) => check(hostParts\x2C pattern\x2C true);\n\n    if ((process.REVERT_CVE_2021_44531 && hasAltNames) ||\n        (dnsNames.length > 0)) {\n      const noWildcard = (pattern) => check(hostParts\x2C pattern\x2C false);\n      valid = ArrayPrototypeSome(dnsNames\x2C wildcard) ||\n              ArrayPrototypeSome(uriNames\x2C noWildcard);\n      if (!valid)\n        reason =\n          `Host: ${hostname}. is not in the cert's altnames: ${altNames}`;\n    } else {\n      // Match against Common Name only if no supported identifiers exist.\n      const cn = subject.CN;\n\n      if (ArrayIsArray(cn))\n        valid = ArrayPrototypeSome(cn\x2C wildcard);\n      else if (cn)\n        valid = wildcard(cn);\n\n      if (!valid)\n        reason = `Host: ${hostname}. is not cert's CN: ${cn}`;\n    }\n  } else {\n    reason = 'Cert does not contain a DNS name';\n  }\n\n  if (!valid) {\n    return new ERR_TLS_CERT_ALTNAME_INVALID(reason\x2C hostname\x2C cert);\n  }\n};\n\nexports.createSecureContext = _tls_common.createSecureContext;\nexports.SecureContext = _tls_common.SecureContext;\nexports.TLSSocket = _tls_wrap.TLSSocket;\nexports.Server = _tls_wrap.Server;\nexports.createServer = _tls_wrap.createServer;\nexports.connect = _tls_wrap.connect;\n\nexports.parseCertString = internalUtil.deprecate(\n  parseCertString\x2C\n  'tls.parseCertString() is deprecated. ' +\n  'Please use querystring.parse() instead.'\x2C\n  'DEP0076');\n\nexports.createSecurePair = internalUtil.deprecate(\n  createSecurePair\x2C\n  'tls.createSecurePair() is deprecated. Please use ' +\n  'tls.TLSSocket instead.'\x2C 'DEP0064');\n
code-source-info,0x2a1384e1fa5e,142,0,12642,C0O0C4O12642,,
code-creation,Function,10,135674,0x2a1384e201ee,815, node:tls:1:1,0x2a1384e1f9d8,~
code-source-info,0x2a1384e201ee
new,MemoryChunk,0xad71f4c0000,262144
tick,0x7f407749e32f,136203,0,0x0,1
code-creation,Eval,10,136572,0x2a1384e31056,5, node:_tls_common:1:1,0x2a1384e30dd0,~
script-source,143,node:_tls_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst tls = require('tls');\n\nconst {\n  ArrayPrototypePush\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  RegExpPrototypeSymbolReplace\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_TLS_INVALID_PROTOCOL_VERSION\x2C\n    ERR_TLS_PROTOCOL_VERSION_CONFLICT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  crypto: {\n    SSL_OP_CIPHER_SERVER_PREFERENCE\x2C\n    TLS1_VERSION\x2C\n    TLS1_1_VERSION\x2C\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\n\nconst {\n  configSecureContext\x2C\n} = require('internal/tls/secure-context');\n\nconst {\n  parseCertString\x2C\n} = require('internal/tls/parse-cert-string');\n\nfunction toV(which\x2C v\x2C def) {\n  if (v == null) v = def;\n  if (v === 'TLSv1') return TLS1_VERSION;\n  if (v === 'TLSv1.1') return TLS1_1_VERSION;\n  if (v === 'TLSv1.2') return TLS1_2_VERSION;\n  if (v === 'TLSv1.3') return TLS1_3_VERSION;\n  throw new ERR_TLS_INVALID_PROTOCOL_VERSION(v\x2C which);\n}\n\nconst {\n  SecureContext: NativeSecureContext\x2C\n} = internalBinding('crypto');\n\nfunction SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C maxVersion) {\n  if (!(this instanceof SecureContext)) {\n    return new SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C\n                             maxVersion);\n  }\n\n  if (secureProtocol) {\n    if (minVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(minVersion\x2C secureProtocol);\n    if (maxVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(maxVersion\x2C secureProtocol);\n  }\n\n  this.context = new NativeSecureContext();\n  this.context.init(secureProtocol\x2C\n                    toV('minimum'\x2C minVersion\x2C tls.DEFAULT_MIN_VERSION)\x2C\n                    toV('maximum'\x2C maxVersion\x2C tls.DEFAULT_MAX_VERSION));\n\n  if (secureOptions) {\n    validateInteger(secureOptions\x2C 'secureOptions');\n    this.context.setOptions(secureOptions);\n  }\n}\n\nfunction createSecureContext(options) {\n  if (!options) options = kEmptyObject;\n\n  const {\n    honorCipherOrder\x2C\n    minVersion\x2C\n    maxVersion\x2C\n    secureProtocol\x2C\n  } = options;\n\n  let { secureOptions } = options;\n\n  if (honorCipherOrder)\n    secureOptions |= SSL_OP_CIPHER_SERVER_PREFERENCE;\n\n  const c = new SecureContext(secureProtocol\x2C secureOptions\x2C\n                              minVersion\x2C maxVersion);\n\n  configSecureContext(c.context\x2C options);\n\n  return c;\n}\n\n// Translate some fields from the handle's C-friendly format into more idiomatic\n// javascript object representations before passing them back to the user.  Can\n// be used on any cert object\x2C but changing the name would be semver-major.\nfunction translatePeerCertificate(c) {\n  if (!c)\n    return null;\n\n  // TODO(tniessen): can we remove parseCertString without breaking anything?\n  if (typeof c.issuer === 'string') c.issuer = parseCertString(c.issuer);\n  if (c.issuerCertificate != null && c.issuerCertificate !== c) {\n    c.issuerCertificate = translatePeerCertificate(c.issuerCertificate);\n  }\n  // TODO(tniessen): can we remove parseCertString without breaking anything?\n  if (typeof c.subject === 'string') c.subject = parseCertString(c.subject);\n  if (c.infoAccess != null) {\n    const info = c.infoAccess;\n    c.infoAccess = ObjectCreate(null);\n\n    // XXX: More key validation?\n    RegExpPrototypeSymbolReplace(/([^\\n:]*):([^\\n]*)(?:\\n|$)/g\x2C info\x2C\n                                 (all\x2C key\x2C val) => {\n                                   if (val.charCodeAt(0) === 0x22) {\n                                     // The translatePeerCertificate function is only\n                                     // used on internally created legacy certificate\n                                     // objects\x2C and any value that contains a quote\n                                     // will always be a valid JSON string literal\x2C\n                                     // so this should never throw.\n                                     val = JSONParse(val);\n                                   }\n                                   if (key in c.infoAccess)\n                                     ArrayPrototypePush(c.infoAccess[key]\x2C val);\n                                   else\n                                     c.infoAccess[key] = [val];\n                                 });\n  }\n  return c;\n}\n\nmodule.exports = {\n  SecureContext\x2C\n  createSecureContext\x2C\n  translatePeerCertificate\x2C\n};\n
code-source-info,0x2a1384e31056,143,0,5527,C0O0C4O5527,,
code-creation,Function,10,136826,0x2a1384e31366,281, node:_tls_common:1:1,0x2a1384e30fd0,~
code-source-info,0x2a1384e31366,143,0,5527,C0O0C79O1161C82O1161C86O1161C88O1188C94O1210C100O1223C106O1239C112O1392C115O1392C120O1392C125O1310C131O1348C137O1565C140O1565C145O1565C150O1445C156O1482C162O1500C168O1520C174O1540C180O1624C183O1624C188O1606C194O1682C197O1682C202O1661C208O1750C211O1750C216O1725C222O1822C225O1822C230O1801C236O2211C239O2211C244O2186C250O5437C257O5458C263O5475C269O5498C275O5452C280O5526,,
code-creation,Eval,10,137080,0x2a1384e3228e,5, node:internal/tls/secure-context:1:1,0x2a1384e31fa8,~
script-source,144,node:internal/tls/secure-context,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  toBuf\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nfunction getDefaultEcdhCurve() {\n  // We do it this way because DEFAULT_ECDH_CURVE can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_ECDH_CURVE || 'auto';\n}\n\nfunction getDefaultCiphers() {\n  // We do it this way because DEFAULT_CIPHERS can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_CIPHERS;\n}\n\nfunction addCACerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.addCACert(cert);\n  });\n}\n\nfunction setCerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.setCert(cert);\n  });\n}\n\nfunction validateKeyOrCertOption(name\x2C value) {\n  if (typeof value !== 'string' && !isArrayBufferView(value)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      value\n    );\n  }\n}\n\nfunction setKey(context\x2C key\x2C passphrase\x2C name) {\n  validateKeyOrCertOption(`${name}.key`\x2C key);\n  if (passphrase !== undefined && passphrase !== null)\n    validateString(passphrase\x2C `${name}.passphrase`);\n  context.setKey(key\x2C passphrase);\n}\n\nfunction processCiphers(ciphers\x2C name) {\n  ciphers = StringPrototypeSplit(ciphers || getDefaultCiphers()\x2C ':');\n\n  const cipherList =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          return cipher.length > 0 &&\n            !StringPrototypeStartsWith(cipher\x2C 'TLS_');\n        })\x2C ':');\n\n  const cipherSuites =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          return cipher.length > 0 &&\n            StringPrototypeStartsWith(cipher\x2C 'TLS_');\n        })\x2C ':');\n\n  // Specifying empty cipher suites for both TLS1.2 and TLS1.3 is invalid\x2C its\n  // not possible to handshake with no suites.\n  if (cipherSuites === '' && cipherList === '')\n    throw new ERR_INVALID_ARG_VALUE(name\x2C ciphers);\n\n  return { cipherList\x2C cipherSuites };\n}\n\nfunction configSecureContext(context\x2C options = kEmptyObject\x2C name = 'options') {\n  validateObject(options\x2C name);\n\n  const {\n    ca\x2C\n    cert\x2C\n    ciphers = getDefaultCiphers()\x2C\n    clientCertEngine\x2C\n    crl\x2C\n    dhparam\x2C\n    ecdhCurve = getDefaultEcdhCurve()\x2C\n    key\x2C\n    passphrase\x2C\n    pfx\x2C\n    privateKeyIdentifier\x2C\n    privateKeyEngine\x2C\n    sessionIdContext\x2C\n    sessionTimeout\x2C\n    sigalgs\x2C\n    ticketKeys\x2C\n  } = options;\n\n  // Add CA before the cert to be able to load cert's issuer in C++ code.\n  // NOTE(@jasnell): ca\x2C cert\x2C and key are permitted to be falsy\x2C so do not\n  // change the checks to !== undefined checks.\n  if (ca) {\n    addCACerts(context\x2C ArrayIsArray(ca) ? ca : [ca]\x2C `${name}.ca`);\n  } else {\n    context.addRootCerts();\n  }\n\n  if (cert) {\n    setCerts(context\x2C ArrayIsArray(cert) ? cert : [cert]\x2C `${name}.cert`);\n  }\n\n  // Set the key after the cert.\n  // `ssl_set_pkey` returns `0` when the key does not match the cert\x2C but\n  // `ssl_set_cert` returns `1` and nullifies the key in the SSL structure\n  // which leads to the crash later on.\n  if (key) {\n    if (ArrayIsArray(key)) {\n      for (let i = 0; i < key.length; ++i) {\n        const val = key[i];\n        const pem = (\n          val?.pem !== undefined ? val.pem : val);\n        const pass = (\n          val?.passphrase !== undefined ? val.passphrase : passphrase);\n        setKey(context\x2C pem\x2C pass\x2C name);\n      }\n    } else {\n      setKey(context\x2C key\x2C passphrase\x2C name);\n    }\n  }\n\n  if (sigalgs !== undefined && sigalgs !== null) {\n    validateString(sigalgs\x2C `${name}.sigalgs`);\n\n    if (sigalgs === '')\n      throw new ERR_INVALID_ARG_VALUE(`${name}.sigalgs`\x2C sigalgs);\n\n    context.setSigalgs(sigalgs);\n  }\n\n  if (privateKeyIdentifier !== undefined && privateKeyIdentifier !== null) {\n    if (privateKeyEngine === undefined || privateKeyEngine === null) {\n      // Engine is required when privateKeyIdentifier is present\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyEngine`\x2C\n                                      privateKeyEngine);\n    }\n    if (key) {\n      // Both data key and engine key can't be set at the same time\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyIdentifier`\x2C\n                                      privateKeyIdentifier);\n    }\n\n    if (typeof privateKeyIdentifier === 'string' &&\n        typeof privateKeyEngine === 'string') {\n      if (context.setEngineKey)\n        context.setEngineKey(privateKeyIdentifier\x2C privateKeyEngine);\n      else\n        throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    } else if (typeof privateKeyIdentifier !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyIdentifier`\x2C\n                                     ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                     privateKeyIdentifier);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyEngine`\x2C\n                                     ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                     privateKeyEngine);\n    }\n  }\n\n  if (ciphers !== undefined && ciphers !== null)\n    validateString(ciphers\x2C `${name}.ciphers`);\n\n  // Work around an OpenSSL API quirk. cipherList is for TLSv1.2 and below\x2C\n  // cipherSuites is for TLSv1.3 (and presumably any later versions). TLSv1.3\n  // cipher suites all have a standard name format beginning with TLS_\x2C so split\n  // the ciphers and pass them to the appropriate API.\n  const {\n    cipherList\x2C\n    cipherSuites\x2C\n  } = processCiphers(ciphers\x2C `${name}.ciphers`);\n\n  if (cipherSuites !== '')\n    context.setCipherSuites(cipherSuites);\n  context.setCiphers(cipherList);\n\n  if (cipherList === '' &&\n      context.getMinProto() < TLS1_3_VERSION &&\n      context.getMaxProto() > TLS1_2_VERSION) {\n    context.setMinProto(TLS1_3_VERSION);\n  }\n\n  validateString(ecdhCurve\x2C `${name}.ecdhCurve`);\n  context.setECDHCurve(ecdhCurve);\n\n  if (dhparam !== undefined && dhparam !== null) {\n    validateKeyOrCertOption(`${name}.dhparam`\x2C dhparam);\n    const warning = context.setDHParam(dhparam);\n    if (warning)\n      process.emitWarning(warning\x2C 'SecurityWarning');\n  }\n\n  if (crl !== undefined && crl !== null) {\n    if (ArrayIsArray(crl)) {\n      for (const val of crl) {\n        validateKeyOrCertOption(`${name}.crl`\x2C val);\n        context.addCRL(val);\n      }\n    } else {\n      validateKeyOrCertOption(`${name}.crl`\x2C crl);\n      context.addCRL(crl);\n    }\n  }\n\n  if (sessionIdContext !== undefined && sessionIdContext !== null) {\n    validateString(sessionIdContext\x2C `${name}.sessionIdContext`);\n    context.setSessionIdContext(sessionIdContext);\n  }\n\n  if (pfx !== undefined && pfx !== null) {\n    if (ArrayIsArray(pfx)) {\n      ArrayPrototypeForEach(pfx\x2C (val) => {\n        const raw = val.buf ? val.buf : val;\n        const pass = val.passphrase || passphrase;\n        if (pass !== undefined && pass !== null) {\n          context.loadPKCS12(toBuf(raw)\x2C toBuf(pass));\n        } else {\n          context.loadPKCS12(toBuf(raw));\n        }\n      });\n    } else if (passphrase) {\n      context.loadPKCS12(toBuf(pfx)\x2C toBuf(passphrase));\n    } else {\n      context.loadPKCS12(toBuf(pfx));\n    }\n  }\n\n  if (typeof clientCertEngine === 'string') {\n    if (typeof context.setClientCertEngine !== 'function')\n      throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    else\n      context.setClientCertEngine(clientCertEngine);\n  } else if (clientCertEngine !== undefined && clientCertEngine !== null) {\n    throw new ERR_INVALID_ARG_TYPE(`${name}.clientCertEngine`\x2C\n                                   ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                   clientCertEngine);\n  }\n\n  if (ticketKeys !== undefined && ticketKeys !== null) {\n    if (!isArrayBufferView(ticketKeys)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        `${name}.ticketKeys`\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ticketKeys);\n    }\n    if (ticketKeys.byteLength !== 48) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `${name}.ticketKeys`\x2C\n        ticketKeys.byteLength\x2C\n        'must be exactly 48 bytes');\n    }\n    context.setTicketKeys(ticketKeys);\n  }\n\n  if (sessionTimeout !== undefined && sessionTimeout !== null) {\n    validateInt32(sessionTimeout\x2C `${name}.sessionTimeout`);\n    context.setSessionTimeout(sessionTimeout);\n  }\n}\n\nmodule.exports = {\n  configSecureContext\x2C\n};\n
code-source-info,0x2a1384e3228e,144,0,9184,C0O0C4O9184,,
code-creation,Function,10,137570,0x2a1384e326d6,305, node:internal/tls/secure-context:1:1,0x2a1384e32208,~
code-source-info,0x2a1384e326d6,144,0,9184,C0O0C111O25C117O41C123O65C129O90C135O112C141O136C147O306C153O306C158O306C163O204C169O248C175O274C181O363C187O363C192O345C198O423C204O423C209O400C215O521C221O521C226O466C232O483C238O501C244O575C250O575C255O564C261O678C264O678C269O678C274O633C280O653C286O9139C293O9160C299O9154C304O9183,,
tick,0x7f40773a70af,137626,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e31439,0x7f4060044ae0,0x7f40600432df,0x2a1384e203ac,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,137918,0x2a1384e34396,5, node:internal/crypto/util:1:1,0x2a1384e34000,~
script-source,145,node:internal/crypto/util,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  BigInt\x2C\n  FunctionPrototypeBind\x2C\n  Number\x2C\n  ObjectKeys\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  getCiphers: _getCiphers\x2C\n  getCurves: _getCurves\x2C\n  getHashes: _getHashes\x2C\n  setEngine: _setEngine\x2C\n  secureHeapUsed: _secureHeapUsed\x2C\n} = internalBinding('crypto');\n\nconst { getOptionValue } = require('internal/options');\n\nconst {\n  crypto: {\n    ENGINE_METHOD_ALL\n  }\n} = internalBinding('constants');\n\nconst normalizeHashName = require('internal/crypto/hashnames');\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_CRYPTO_ENGINE_UNKNOWN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateString\n} = require('internal/validators');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  cachedResult\x2C\n  filterDuplicateStrings\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst kHandle = Symbol('kHandle');\nconst kKeyObject = Symbol('kKeyObject');\n\nconst lazyRequireCache = {};\n\nfunction lazyRequire(name) {\n  let ret = lazyRequireCache[name];\n  if (ret === undefined)\n    ret = lazyRequireCache[name] = require(name);\n  return ret;\n}\n\nlet defaultEncoding = 'buffer';\n\nfunction setDefaultEncoding(val) {\n  defaultEncoding = val;\n}\n\nfunction getDefaultEncoding() {\n  return defaultEncoding;\n}\n\n// This is here because many functions accepted binary strings without\n// any explicit encoding in older versions of node\x2C and we don't want\n// to break them unnecessarily.\nfunction toBuf(val\x2C encoding) {\n  if (typeof val === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(val\x2C encoding);\n  }\n  return val;\n}\n\nconst getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));\nconst getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));\nconst getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));\n\nfunction setEngine(id\x2C flags) {\n  validateString(id\x2C 'id');\n  if (flags)\n    validateNumber(flags\x2C 'flags');\n  flags = flags >>> 0;\n\n  // Use provided engine for everything by default\n  if (flags === 0)\n    flags = ENGINE_METHOD_ALL;\n\n  if (!_setEngine(id\x2C flags))\n    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);\n}\n\nconst getArrayBufferOrView = hideStackFrames((buffer\x2C name\x2C encoding) => {\n  if (isAnyArrayBuffer(buffer))\n    return buffer;\n  if (typeof buffer === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(buffer\x2C encoding);\n  }\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'ArrayBuffer'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      buffer\n    );\n  }\n  return buffer;\n});\n\n// The maximum buffer size that we'll support in the WebCrypto impl\nconst kMaxBufferLength = (2 ** 31) - 1;\n\n// The EC named curves that we currently support via the Web Crypto API.\nconst kNamedCurveAliases = {\n  'P-256': 'prime256v1'\x2C\n  'P-384': 'secp384r1'\x2C\n  'P-521': 'secp521r1'\x2C\n};\n\nconst kAesKeyLengths = [128\x2C 192\x2C 256];\n\n// These are the only algorithms we currently support\n// via the Web Crypto API\nconst kAlgorithms = {\n  'rsassa-pkcs1-v1_5': 'RSASSA-PKCS1-v1_5'\x2C\n  'rsa-pss': 'RSA-PSS'\x2C\n  'rsa-oaep': 'RSA-OAEP'\x2C\n  'ecdsa': 'ECDSA'\x2C\n  'ecdh': 'ECDH'\x2C\n  'aes-ctr': 'AES-CTR'\x2C\n  'aes-cbc': 'AES-CBC'\x2C\n  'aes-gcm': 'AES-GCM'\x2C\n  'aes-kw': 'AES-KW'\x2C\n  'hmac': 'HMAC'\x2C\n  'sha-1': 'SHA-1'\x2C\n  'sha-256': 'SHA-256'\x2C\n  'sha-384': 'SHA-384'\x2C\n  'sha-512': 'SHA-512'\x2C\n  'hkdf': 'HKDF'\x2C\n  'pbkdf2': 'PBKDF2'\x2C\n  'ed25519': 'Ed25519'\x2C\n  'ed448': 'Ed448'\x2C\n  'x25519': 'X25519'\x2C\n  'x448': 'X448'\x2C\n};\nconst kAlgorithmsKeys = ObjectKeys(kAlgorithms);\n\n// These are the only export and import formats we currently\n// support via the Web Crypto API\nconst kExportFormats = [\n  'raw'\x2C\n  'pkcs8'\x2C\n  'spki'\x2C\n  'jwk'];\n\n// These are the only hash algorithms we currently support via\n// the Web Crypto API.\nconst kHashTypes = [\n  'SHA-1'\x2C\n  'SHA-256'\x2C\n  'SHA-384'\x2C\n  'SHA-512'\x2C\n];\n\nfunction validateMaxBufferLength(data\x2C name) {\n  if (data.byteLength > kMaxBufferLength) {\n    throw lazyDOMException(\n      `${name} must be less than ${kMaxBufferLength + 1} bits`\x2C\n      'OperationError');\n  }\n}\n\nfunction normalizeAlgorithm(algorithm) {\n  if (algorithm != null) {\n    if (typeof algorithm === 'string')\n      algorithm = { name: algorithm };\n\n    if (typeof algorithm === 'object') {\n      const { name } = algorithm;\n      if (typeof name !== 'string' ||\n          !ArrayPrototypeIncludes(\n            kAlgorithmsKeys\x2C\n            StringPrototypeToLowerCase(name))) {\n        throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n      }\n      let { hash } = algorithm;\n      if (hash !== undefined) {\n        hash = normalizeAlgorithm(hash);\n        if (!ArrayPrototypeIncludes(kHashTypes\x2C hash.name))\n          throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n      }\n      const normalized = {\n        ...algorithm\x2C\n        name: kAlgorithms[StringPrototypeToLowerCase(name)]\x2C\n      };\n      if (hash) {\n        normalized.hash = hash;\n      }\n      return normalized;\n    }\n  }\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nfunction hasAnyNotIn(set\x2C checks) {\n  for (const s of set)\n    if (!ArrayPrototypeIncludes(checks\x2C s))\n      return true;\n  return false;\n}\n\nfunction validateBitLength(length\x2C name\x2C required = false) {\n  if (length !== undefined || required) {\n    validateNumber(length\x2C name);\n    if (length < 0)\n      throw new ERR_OUT_OF_RANGE(name\x2C '> 0');\n    if (length % 8) {\n      throw new ERR_INVALID_ARG_VALUE(\n        name\x2C\n        length\x2C\n        'must be a multiple of 8');\n    }\n  }\n}\n\nfunction validateByteLength(buf\x2C name\x2C target) {\n  if (buf.byteLength !== target) {\n    throw lazyDOMException(\n      `${name} must contain exactly ${target} bytes`\x2C\n      'OperationError');\n  }\n}\n\nconst validateByteSource = hideStackFrames((val\x2C name) => {\n  val = toBuf(val);\n\n  if (isAnyArrayBuffer(val) || isArrayBufferView(val))\n    return val;\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    [\n      'string'\x2C\n      'ArrayBuffer'\x2C\n      'TypedArray'\x2C\n      'DataView'\x2C\n      'Buffer'\x2C\n    ]\x2C\n    val);\n});\n\nfunction onDone(resolve\x2C reject\x2C err\x2C result) {\n  if (err) return reject(err);\n  resolve(result);\n}\n\nfunction jobPromise(job) {\n  return new Promise((resolve\x2C reject) => {\n    job.ondone = FunctionPrototypeBind(onDone\x2C job\x2C resolve\x2C reject);\n    job.run();\n  });\n}\n\n// In WebCrypto\x2C the publicExponent option in RSA is represented as a\n// WebIDL "BigInteger"... that is\x2C a Uint8Array that allows an arbitrary\n// number of leading zero bits. Our conventional APIs for reading\n// an unsigned int from a Buffer are not adequate. The implementation\n// here is adapted from the chromium implementation here:\n// https://github.com/chromium/chromium/blob/HEAD/third_party/blink/public/platform/web_crypto_algorithm_params.h\x2C but ported to JavaScript\n// Returns undefined if the conversion was unsuccessful.\nfunction bigIntArrayToUnsignedInt(input) {\n  let result = 0;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    if (n_reversed >= 4 && input[n])\n      return;  // Too large\n    result |= input[n] << 8 * n_reversed;\n  }\n\n  return result;\n}\n\nfunction bigIntArrayToUnsignedBigInt(input) {\n  let result = 0n;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    result |= BigInt(input[n]) << 8n * BigInt(n_reversed);\n  }\n\n  return result;\n}\n\nfunction getStringOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null)\n    validateString(value\x2C `options.${key}`);\n  return value;\n}\n\nfunction getUsagesUnion(usageSet\x2C ...usages) {\n  const newset = [];\n  for (let n = 0; n < usages.length; n++) {\n    if (usageSet.has(usages[n]))\n      ArrayPrototypePush(newset\x2C usages[n]);\n  }\n  return newset;\n}\n\nfunction getHashLength(name) {\n  switch (name) {\n    case 'SHA-1': return 160;\n    case 'SHA-256': return 256;\n    case 'SHA-384': return 384;\n    case 'SHA-512': return 512;\n  }\n}\n\nconst kKeyOps = {\n  sign: 1\x2C\n  verify: 2\x2C\n  encrypt: 3\x2C\n  decrypt: 4\x2C\n  wrapKey: 5\x2C\n  unwrapKey: 6\x2C\n  deriveKey: 7\x2C\n  deriveBits: 8\x2C\n};\n\nfunction validateKeyOps(keyOps\x2C usagesSet) {\n  if (keyOps === undefined) return;\n  validateArray(keyOps\x2C 'keyData.key_ops');\n  let flags = 0;\n  for (let n = 0; n < keyOps.length; n++) {\n    const op = keyOps[n];\n    const op_flag = kKeyOps[op];\n    // Skipping unknown key ops\n    if (op_flag === undefined)\n      continue;\n    // Have we seen it already? if so\x2C error\n    if (flags & (1 << op_flag))\n      throw lazyDOMException('Duplicate key operation'\x2C 'DataError');\n    flags |= (1 << op_flag);\n\n    // TODO(@jasnell): RFC7517 section 4.3 strong recommends validating\n    // key usage combinations. Specifically\x2C it says that unrelated key\n    // ops SHOULD NOT be used together. We're not yet validating that here.\n  }\n\n  if (usagesSet !== undefined) {\n    for (const use of usagesSet) {\n      if (!ArrayPrototypeIncludes(keyOps\x2C use)) {\n        throw lazyDOMException(\n          'Key operations and usage mismatch'\x2C\n          'DataError');\n      }\n    }\n  }\n}\n\nfunction secureHeapUsed() {\n  const val = _secureHeapUsed();\n  if (val === undefined)\n    return { total: 0\x2C used: 0\x2C utilization: 0\x2C min: 0 };\n  const used = Number(_secureHeapUsed());\n  const total = Number(getOptionValue('--secure-heap'));\n  const min = Number(getOptionValue('--secure-heap-min'));\n  const utilization = used / total;\n  return { total\x2C used\x2C utilization\x2C min };\n}\n\nmodule.exports = {\n  getArrayBufferOrView\x2C\n  getCiphers\x2C\n  getCurves\x2C\n  getDefaultEncoding\x2C\n  getHashes\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n  setDefaultEncoding\x2C\n  setEngine\x2C\n  toBuf\x2C\n\n  kHashTypes\x2C\n  kNamedCurveAliases\x2C\n  kAesKeyLengths\x2C\n  kExportFormats\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  hasAnyNotIn\x2C\n  validateBitLength\x2C\n  validateByteLength\x2C\n  validateByteSource\x2C\n  validateKeyOps\x2C\n  jobPromise\x2C\n  lazyRequire\x2C\n  validateMaxBufferLength\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n  bigIntArrayToUnsignedInt\x2C\n  getStringOption\x2C\n  getUsagesUnion\x2C\n  getHashLength\x2C\n  secureHeapUsed\x2C\n};\n
code-source-info,0x2a1384e34396,145,0,10335,C0O0C4O10335,,
code-creation,Function,10,138433,0x2a1384e3539e,851, node:internal/crypto/util:1:1,0x2a1384e34310,~
code-source-info,0x2a1384e3539e
tick,0x7f40773a70af,138546,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e327d0,0x7f4060044ae0,0x7f40600432df,0x2a1384e31439,0x7f4060044ae0,0x7f40600432df,0x2a1384e203ac,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,138710,0x2a1384e36f76,5, node:internal/crypto/hashnames:1:1,0x2a1384e36e00,~
script-source,146,node:internal/crypto/hashnames,'use strict';\n\nconst {\n  ObjectKeys\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst kHashContextNode = 1;\nconst kHashContextWebCrypto = 2;\nconst kHashContextJwkRsa = 3;\nconst kHashContextJwkRsaPss = 4;\nconst kHashContextJwkRsaOaep = 5;\nconst kHashContextJwkHmac = 6;\n\n// WebCrypto and JWK use a bunch of different names for the\n// standard set of SHA-* digest algorithms... which is ... fun.\n// Here we provide a utility for mapping between them in order\n// make it easier in the code.\n\nconst kHashNames = {\n  sha1: {\n    [kHashContextNode]: 'sha1'\x2C\n    [kHashContextWebCrypto]: 'SHA-1'\x2C\n    [kHashContextJwkRsa]: 'RS1'\x2C\n    [kHashContextJwkRsaPss]: 'PS1'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP'\x2C\n    [kHashContextJwkHmac]: 'HS1'\x2C\n  }\x2C\n  sha256: {\n    [kHashContextNode]: 'sha256'\x2C\n    [kHashContextWebCrypto]: 'SHA-256'\x2C\n    [kHashContextJwkRsa]: 'RS256'\x2C\n    [kHashContextJwkRsaPss]: 'PS256'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-256'\x2C\n    [kHashContextJwkHmac]: 'HS256'\x2C\n  }\x2C\n  sha384: {\n    [kHashContextNode]: 'sha384'\x2C\n    [kHashContextWebCrypto]: 'SHA-384'\x2C\n    [kHashContextJwkRsa]: 'RS384'\x2C\n    [kHashContextJwkRsaPss]: 'PS384'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-384'\x2C\n    [kHashContextJwkHmac]: 'HS384'\x2C\n  }\x2C\n  sha512: {\n    [kHashContextNode]: 'sha512'\x2C\n    [kHashContextWebCrypto]: 'SHA-512'\x2C\n    [kHashContextJwkRsa]: 'RS512'\x2C\n    [kHashContextJwkRsaPss]: 'PS512'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-512'\x2C\n    [kHashContextJwkHmac]: 'HS512'\x2C\n  }\n};\n\n{\n  // Index the aliases\n  const keys = ObjectKeys(kHashNames);\n  for (let n = 0; n < keys.length; n++) {\n    const contexts = ObjectKeys(kHashNames[keys[n]]);\n    for (let i = 0; i < contexts.length; i++) {\n      const alias =\n        StringPrototypeToLowerCase(kHashNames[keys[n]][contexts[i]]);\n      if (kHashNames[alias] === undefined)\n        kHashNames[alias] = kHashNames[keys[n]];\n    }\n  }\n}\n\nfunction normalizeHashName(name\x2C context = kHashContextNode) {\n  if (typeof name !== 'string')\n    return name;\n  name = StringPrototypeToLowerCase(name);\n  const alias = kHashNames[name] && kHashNames[name][context];\n  return alias || name;\n}\n\nnormalizeHashName.kContextNode = kHashContextNode;\nnormalizeHashName.kContextWebCrypto = kHashContextWebCrypto;\nnormalizeHashName.kContextJwkRsa = kHashContextJwkRsa;\nnormalizeHashName.kContextJwkRsaPss = kHashContextJwkRsaPss;\nnormalizeHashName.kContextJwkRsaOaep = kHashContextJwkRsaOaep;\nnormalizeHashName.kContextJwkHmac = kHashContextJwkHmac;\n\nmodule.exports = normalizeHashName;\n
code-source-info,0x2a1384e36f76,146,0,2519,C0O0C4O2519,,
code-creation,Function,10,138863,0x2a1384e37246,530, node:internal/crypto/hashnames:1:1,0x2a1384e36ef0,~
code-source-info,0x2a1384e
code-creation,LazyCompile,10,139062,0x2a1384e3815e,20,cachedResult node:internal/util:241:22,0x2ac22107fb80,~
code-source-info,0x2a1384e3815e,15,6711,6846,C0O6711C12O6724C13O6724C15O6734C19O6844,,
code-creation,LazyCompile,10,139219,0x2a1384e382be,43,hideStackFrames node:internal/errors:398:25,0x2ac221066a48,~
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: "error" */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectIsExtensible\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nconst kNoOverride = Symbol('kNoOverride');\nlet userStackTraceLimit;\nconst nodeInternalPrefix = '__node_internal_';\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  const firstFrame = trace[0]?.getFunctionName();\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\n    for (let l = trace.length - 1; l >= 0; l--) {\n      const fn = trace[l]?.getFunctionName();\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\n        break;\n      }\n    }\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\n    // it is updated at every new exception in `captureLargerStackTrace`.\n    if (trace.length > userStackTraceLimit)\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\n  }\n\n  const globalOverride =\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\n  if (globalOverride !== kNoOverride) return globalOverride;\n\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n};\n\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  return kNoOverride;\n};\n\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\n  if (innerError && outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new AggregateError(new SafeArrayIterator([\n      outerError\x2C\n      innerError\x2C\n    ])\x2C outerError.message);\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n});\n\n// Lazily loaded\nlet util;\nlet assert;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    super();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    captureLargerStackTrace(this);\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  return function NodeError(...args) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    const error = new Base();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const message = getMessage(key\x2C args\x2C error);\n    ObjectDefineProperties(error\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      toString: {\n        __proto__: null\x2C\n        value() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n    captureLargerStackTrace(error);\n    error.code = key;\n    return error;\n  };\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: any[]) => any} T\n * @type {(fn: T) => T}\n */\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name;\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: hidden });\n  return fn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n  if (def === SystemError) {\n    def = makeSystemErrorWithCode(sym);\n  } else {\n    def = makeNodeErrorWithCode(def\x2C sym);\n  }\n\n  if (otherClasses.length !== 0) {\n    otherClasses.forEach((clazz) => {\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n    });\n  }\n  codes[sym] = def;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  assert ??= require('internal/assert');\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const regex = /%[dfijoOs]/g;\n  let expectedLength = 0;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\nconst captureLargerStackTrace = hideStackFrames(\n  function captureLargerStackTrace(err) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Infinity;\n    }\n    ErrorCaptureStackTrace(err);\n    // Reset the limit\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\n\n    return err;\n  });\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n *\n * @param {object} ctx\n * @returns {Error}\n */\nconst uvException = hideStackFrames(function uvException(ctx) {\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n  let path;\n  let dest;\n  if (ctx.path) {\n    path = ctx.path.toString();\n    message += ` '${path}'`;\n  }\n  if (ctx.dest) {\n    dest = ctx.dest.toString();\n    message += ` -> '${dest}'`;\n  }\n\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // Pass the message to the constructor instead of setting it on the object\n  // to make sure it is the same as the one created in C++\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n\n  for (const prop of ObjectKeys(ctx)) {\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\n      continue;\n    }\n    err[prop] = ctx[prop];\n  }\n\n  err.code = code;\n  if (path) {\n    err.path = path;\n  }\n  if (dest) {\n    err.dest = dest;\n  }\n\n  return captureLargerStackTrace(err);\n});\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @returns {Error}\n */\nconst uvExceptionWithHostPort = hideStackFrames(\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${message}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.code = code;\n    ex.errno = err;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * This used to be util._errnoException().\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} [original]\n * @returns {Error}\n */\nconst errnoException = hideStackFrames(\n  function errnoException(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(message);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nconst exceptionWithHostPort = hideStackFrames(\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${syscall} ${code}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * @param {number|string} code - A libuv error number or a c-ares error code\n * @param {string} syscall\n * @param {string} [hostname]\n * @returns {Error}\n */\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\n  let errno;\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n  // c-ares error code.\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n  // make them available in a property that's not error.errno (since they\n  // can be in conflict with libuv error codes). Also make sure\n  // util.getSystemErrorName() can understand them when an being informed that\n  // the number is a c-ares error code.\n  if (typeof code === 'number') {\n    errno = code;\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n    // long enough that it's not practical to remove it.\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n      code = 'ENOTFOUND'; // Fabricated error name.\n    } else {\n      code = lazyInternalUtil().getSystemErrorName(code);\n    }\n  }\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n  ex.errno = errno;\n  ex.code = code;\n  ex.syscall = syscall;\n  if (hostname) {\n    ex.hostname = hostname;\n  }\n\n  return captureLargerStackTrace(ex);\n});\n\nfunction connResetException(msg) {\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(msg);\n  ex.code = 'ECONNRESET';\n  return ex;\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n *\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (process.platform === 'win32') {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\n      }\n    } = lazyInternalUtilInspect();\n    const colors = useColors &&\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\n                   require('internal/tty').hasColors()) ||\n                   defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\n      });\n    } catch {\n      return originalStack;\n    }\n  }\n};\n\n// Ensures the printed error line is from user code.\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\nfunction setArrowMessage(err\x2C arrowMessage) {\n  if (!_kArrowMessagePrivateSymbol) {\n    ({\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\n      setHiddenValue: _setHiddenValue\x2C\n    } = internalBinding('util'));\n  }\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n *\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value == null) {\n    return '' + value;\n  }\n  if (typeof value === 'function' && value.name) {\n    return `function ${value.name}`;\n  }\n  if (typeof value === 'object') {\n    if (value.constructor?.name) {\n      return `an instance of ${value.constructor.name}`;\n    }\n    return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n  }\n  let inspected = lazyInternalUtilInspect()\n    .inspect(value\x2C { colors: false });\n  if (inspected.length > 28) { inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`; }\n\n  return `type ${typeof value} (${inspected})`;\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  captureLargerStackTrace\x2C\n  codes\x2C\n  connResetException\x2C\n  dnsException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  kNoOverride\x2C\n  maybeOverridePrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  uvException\x2C\n  uvExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING'\x2C\n  'Module "%s" needs an import assertion of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED'\x2C\n  'Import assertion type "%s" is unsupported'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      if (types.length > 2) {\n        const last = ArrayPrototypePop(types);\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}`;\n      } else {\n        msg += `of type ${types[0]}`;\n      }\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      if (instances.length > 2) {\n        const last = ArrayPrototypePop(instances);\n        msg +=\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\n      } else {\n        msg += `an instance of ${instances[0]}`;\n        if (instances.length === 2) {\n          msg += ` or ${instances[1]}`;\n        }\n      }\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 2) {\n        const last = ArrayPrototypePop(other);\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (other.length === 2) {\n        msg += `one of ${other[0]} or ${other[1]}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CALLBACK'\x2C\n  'Callback must be a function. Received %O'\x2C TypeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${value}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  let type;\n  if (value && value.constructor && value.constructor.name) {\n    type = `instance of ${value.constructor.name}`;\n  } else {\n    type = `type ${typeof value}`;\n  }\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${type}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input) {\n  this.input = input;\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\n);\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\n  (moduleURL\x2C realIntegrities) => {\n    let msg = `The content of "${\n      moduleURL\n    }" does not match the expected integrity.`;\n    if (realIntegrities.size) {\n      const sri = ArrayPrototypeJoin(\n        ArrayFrom(realIntegrities.entries()\x2C\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\n        ' '\n      );\n      msg += ` Integrities found are: ${sri}`;\n    } else {\n      msg += ' The resource was not found in the policy.';\n    }\n    return msg;\n  }\x2C Error);\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\n  'conditions: %s'\x2C\n  Error);\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\n  SyntaxError);\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\n  'Manifest resource %s has invalid property value for %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\n  'Manifest specified unknown error behavior "%s".'\x2C\n  SyntaxError);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\n    );\n    switch (len) {\n      case 1:\n        msg += `${args[0]} argument`;\n        break;\n      case 2:\n        msg += `${args[0]} and ${args[1]} arguments`;\n        break;\n      default:\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\n        msg += `\x2C and ${args[len - 1]} arguments`;\n        break;\n    }\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\n  return `Cannot find ${type} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\n  "import '%s' received a bad response: %s"\x2C Error);\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\n  "import of '%s' by %s is not supported: %s"\x2C Error);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\n}\x2C RangeError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string'\x2C\n         "The 'failureType' argument must be of type string.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C (ext\x2C path\x2C suggestion) => {\n  let msg = `Unknown file extension "${ext}" for ${path}`;\n  if (suggestion) {\n    msg += `. ${suggestion}`;\n  }\n  return msg;\n}\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\n'resolving ES modules imported from %s'\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${ArrayPrototypeJoin(supported\x2C '\x2C ')} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\n
code-source-info,0x2a1384e382be,11,11052,11293,C0O11177C5O11201C9O11196C13O11209C21O11230C28O11268C35O11209C40O11281C42O11291,,
tick,0x7f4077424739,141394,0,0x0,3,0x11d7ee0,0x2a1384e355e9,0x7f4060044ae0,0x7f40600432df,0x2a1384e327d0,0x7f4060044ae0,0x7f40600432df,0x2a1384e31439,0x7f4060044ae0,0x7f40600432df,0x2a1384e203ac,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407731c3df,141453,0,0x0,3,0x11d7ee0,0x2a1384e355e9,0x7f4060044ae0,0x7f40600432df,0x2a1384e327d0,0x7f4060044ae0,0x7f40600432df,0x2a1384e31439,0x7f4060044ae0,0x7f40600432df,0x2a1384e203ac,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,141555,0x2a1384e3be9e,5, node:internal/tls/parse-cert-string:1:1,0x2a1384e3bce8,~
script-source,147,node:internal/tls/parse-cert-string,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  ObjectCreate\x2C\n} = primordials;\n\n// Example:\n// C=US\\nST=CA\\nL=SF\\nO=Joyent\\nOU=Node.js\\nCN=ca1\\nemailAddress=ry@clouds.org\nfunction parseCertString(s) {\n  const out = ObjectCreate(null);\n  ArrayPrototypeForEach(StringPrototypeSplit(s\x2C '\\n')\x2C (part) => {\n    const sepIndex = StringPrototypeIndexOf(part\x2C '=');\n    if (sepIndex > 0) {\n      const key = StringPrototypeSlice(part\x2C 0\x2C sepIndex);\n      const value = StringPrototypeSlice(part\x2C sepIndex + 1);\n      if (key in out) {\n        if (!ArrayIsArray(out[key])) {\n          out[key] = [out[key]];\n        }\n        ArrayPrototypePush(out[key]\x2C value);\n      } else {\n        out[key] = value;\n      }\n    }\n  });\n  return out;\n}\n\nexports.parseCertString = parseCertString;\n
code-source-info,0x2a1384e3be9e,147,0,889,C0O0C4O889,,
code-creation,Function,10,141646,0x2a1384e3bfb6,81, node:internal/tls/parse-cert-string:1:1,0x2a1384e3be18,~
code-source-info,0x2a1384e3bfb6,147,0,889,C0O0C31O25C37O41C43O66C49O88C55O114C61O138C67O162C73O846C75O870C80O888,,
tick,0xcdc7c4,141758,1,0xb53890,5,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
new,MemoryChunk,0x3f792a6c0000,262144
code-creation,Eval,10,142558,0x2a1384e3ddf6,5, node:_tls_wrap:1:1,0x2a1384e3d640,~
script-source,148,node:_tls_wrap,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototype\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nassertCrypto();\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst crypto = require('crypto');\nconst EE = require('events');\nconst net = require('net');\nconst tls = require('tls');\nconst common = require('_tls_common');\nconst JSStreamSocket = require('internal/js_stream_socket');\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('tls'\x2C (fn) => {\n  debug = fn;\n});\nconst { TCP\x2C constants: TCPConstants } = internalBinding('tcp_wrap');\nconst tls_wrap = internalBinding('tls_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { isArrayBufferView } = require('internal/util/types');\nconst { SecureContext: NativeSecureContext } = internalBinding('crypto');\nconst { connResetException\x2C codes } = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_SOCKET_CLOSED\x2C\n  ERR_TLS_DH_PARAM_SIZE\x2C\n  ERR_TLS_HANDSHAKE_TIMEOUT\x2C\n  ERR_TLS_INVALID_CONTEXT\x2C\n  ERR_TLS_RENEGOTIATION_DISABLED\x2C\n  ERR_TLS_REQUIRED_SERVER_NAME\x2C\n  ERR_TLS_SESSION_ATTACK\x2C\n  ERR_TLS_SNI_FROM_SERVER\x2C\n  ERR_TLS_INVALID_STATE\n} = codes;\nconst { onpskexchange: kOnPskExchange } = internalBinding('symbols');\nconst {\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n} = require('internal/options');\nconst {\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  InternalX509Certificate\n} = require('internal/crypto/x509');\nconst traceTls = getOptionValue('--trace-tls');\nconst tlsKeylog = getOptionValue('--tls-keylog');\nconst { appendFile } = require('fs');\nconst kConnectOptions = Symbol('connect-options');\nconst kDisableRenegotiation = Symbol('disable-renegotiation');\nconst kErrorEmitted = Symbol('error-emitted');\nconst kHandshakeTimeout = Symbol('handshake-timeout');\nconst kRes = Symbol('res');\nconst kSNICallback = Symbol('snicallback');\nconst kEnableTrace = Symbol('enableTrace');\nconst kPskCallback = Symbol('pskcallback');\nconst kPskIdentityHint = Symbol('pskidentityhint');\nconst kPendingSession = Symbol('pendingSession');\nconst kIsVerified = Symbol('verified');\n\nconst noop = FunctionPrototype;\n\nlet ipServernameWarned = false;\nlet tlsTracingWarned = false;\n\n// Server side times how long a handshake is taking to protect against slow\n// handshakes being used for DoS.\nfunction onhandshakestart(now) {\n  debug('server onhandshakestart');\n\n  const { lastHandshakeTime } = this;\n  assert(now >= lastHandshakeTime\x2C\n         `now (${now}) < lastHandshakeTime (${lastHandshakeTime})`);\n\n  this.lastHandshakeTime = now;\n\n  // If this is the first handshake we can skip the rest of the checks.\n  if (lastHandshakeTime === 0)\n    return;\n\n  if ((now - lastHandshakeTime) >= tls.CLIENT_RENEG_WINDOW * 1000)\n    this.handshakes = 1;\n  else\n    this.handshakes++;\n\n  const owner = this[owner_symbol];\n\n  assert(owner._tlsOptions.isServer);\n\n  if (this.handshakes > tls.CLIENT_RENEG_LIMIT) {\n    owner._emitTLSError(new ERR_TLS_SESSION_ATTACK());\n    return;\n  }\n\n  if (owner[kDisableRenegotiation])\n    owner._emitTLSError(new ERR_TLS_RENEGOTIATION_DISABLED());\n}\n\nfunction onhandshakedone() {\n  debug('server onhandshakedone');\n\n  const owner = this[owner_symbol];\n  assert(owner._tlsOptions.isServer);\n\n  // `newSession` callback wasn't called yet\n  if (owner._newSessionPending) {\n    owner._securePending = true;\n    return;\n  }\n\n  owner._finishInit();\n}\n\n\nfunction loadSession(hello) {\n  debug('server onclienthello'\x2C\n        'sessionid.len'\x2C hello.sessionId.length\x2C\n        'ticket?'\x2C hello.tlsTicket\n  );\n  const owner = this[owner_symbol];\n\n  let once = false;\n  function onSession(err\x2C session) {\n    debug('server resumeSession callback(err %j\x2C sess? %s)'\x2C err\x2C !!session);\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    owner._handle.loadSession(session);\n    // Session is loaded. End the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n\n  if (hello.sessionId.length <= 0 ||\n      hello.tlsTicket ||\n      (owner.server &&\n      !owner.server.emit('resumeSession'\x2C hello.sessionId\x2C onSession))) {\n    // Sessions without identifiers can't be resumed.\n    // Sessions with tickets can be resumed directly from the ticket\x2C no server\n    // session storage is necessary.\n    // Without a call to a resumeSession listener\x2C a session will never be\n    // loaded\x2C so end the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n}\n\n\nfunction loadSNI(info) {\n  const owner = this[owner_symbol];\n  const servername = info.servername;\n  if (!servername || !owner._SNICallback)\n    return requestOCSP(owner\x2C info);\n\n  let once = false;\n  owner._SNICallback(servername\x2C (err\x2C context) => {\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    // TODO(indutny): eventually disallow raw `SecureContext`\n    if (context)\n      owner._handle.sni_context = context.context || context;\n\n    requestOCSP(owner\x2C info);\n  });\n}\n\n\nfunction requestOCSP(socket\x2C info) {\n  if (!info.OCSPRequest || !socket.server)\n    return requestOCSPDone(socket);\n\n  let ctx = socket._handle.sni_context;\n\n  if (!ctx) {\n    ctx = socket.server._sharedCreds;\n\n    // TLS socket is using a `net.Server` instead of a tls.TLSServer.\n    // Some TLS properties like `server._sharedCreds` will not be present\n    if (!ctx)\n      return requestOCSPDone(socket);\n  }\n\n  // TODO(indutny): eventually disallow raw `SecureContext`\n  if (ctx.context)\n    ctx = ctx.context;\n\n  if (socket.server.listenerCount('OCSPRequest') === 0) {\n    return requestOCSPDone(socket);\n  }\n\n  let once = false;\n  const onOCSP = (err\x2C response) => {\n    debug('server OCSPRequest done'\x2C 'handle?'\x2C !!socket._handle\x2C 'once?'\x2C once\x2C\n          'response?'\x2C !!response\x2C 'err?'\x2C err);\n    if (once)\n      return socket.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return socket.destroy(err);\n\n    if (socket._handle === null)\n      return socket.destroy(new ERR_SOCKET_CLOSED());\n\n    if (response)\n      socket._handle.setOCSPResponse(response);\n    requestOCSPDone(socket);\n  };\n\n  debug('server oncertcb emit OCSPRequest');\n  socket.server.emit('OCSPRequest'\x2C\n                     ctx.getCertificate()\x2C\n                     ctx.getIssuer()\x2C\n                     onOCSP);\n}\n\nfunction requestOCSPDone(socket) {\n  debug('server certcb done');\n  try {\n    socket._handle.certCbDone();\n  } catch (e) {\n    debug('server certcb done errored'\x2C e);\n    socket.destroy(e);\n  }\n}\n\nfunction onnewsessionclient(sessionId\x2C session) {\n  debug('client emit session');\n  const owner = this[owner_symbol];\n  if (owner[kIsVerified]) {\n    owner.emit('session'\x2C session);\n  } else {\n    owner[kPendingSession] = session;\n  }\n}\n\nfunction onnewsession(sessionId\x2C session) {\n  debug('onnewsession');\n  const owner = this[owner_symbol];\n\n  // TODO(@sam-github) no server to emit the event on\x2C but handshake won't\n  // continue unless newSessionDone() is called\x2C should it be\x2C or is that\n  // situation unreachable\x2C or only occurring during shutdown?\n  if (!owner.server)\n    return;\n\n  let once = false;\n  const done = () => {\n    debug('onnewsession done');\n    if (once)\n      return;\n    once = true;\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    this.newSessionDone();\n\n    owner._newSessionPending = false;\n    if (owner._securePending)\n      owner._finishInit();\n    owner._securePending = false;\n  };\n\n  owner._newSessionPending = true;\n  if (!owner.server.emit('newSession'\x2C sessionId\x2C session\x2C done))\n    done();\n}\n\nfunction onPskServerCallback(identity\x2C maxPskLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](owner\x2C identity);\n  if (ret == null)\n    return undefined;\n\n  let psk;\n  if (isArrayBufferView(ret)) {\n    psk = ret;\n  } else {\n    if (typeof ret !== 'object') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'ret'\x2C\n        ['Object'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ret\n      );\n    }\n    psk = ret.psk;\n    validateBuffer(psk\x2C 'psk');\n  }\n\n  if (psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\n    );\n  }\n\n  return psk;\n}\n\nfunction onPskClientCallback(hint\x2C maxPskLen\x2C maxIdentityLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](hint);\n  if (ret == null)\n    return undefined;\n\n  validateObject(ret\x2C 'ret');\n\n  validateBuffer(ret.psk\x2C 'psk');\n  if (ret.psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      ret.psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\n    );\n  }\n\n  validateString(ret.identity\x2C 'identity');\n  if (Buffer.byteLength(ret.identity) > maxIdentityLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'identity'\x2C\n      ret.identity\x2C\n      `PSK identity exceeds ${maxIdentityLen} bytes`\n    );\n  }\n\n  return { psk: ret.psk\x2C identity: ret.identity };\n}\n\nfunction onkeylog(line) {\n  debug('onkeylog');\n  this[owner_symbol].emit('keylog'\x2C line);\n}\n\nfunction onocspresponse(resp) {\n  debug('client onocspresponse');\n  this[owner_symbol].emit('OCSPResponse'\x2C resp);\n}\n\nfunction onerror(err) {\n  const owner = this[owner_symbol];\n  debug('%s onerror %s had? %j'\x2C\n        (typeof owner._tlsOptions === 'object' && owner._tlsOptions !== null) ?\n          owner._tlsOptions.isServer ? 'server' : 'client' :\n          'unknown'\x2C\n        err\x2C owner._hadError);\n\n  if (owner._hadError)\n    return;\n\n  owner._hadError = true;\n\n  // Destroy socket if error happened before handshake's finish\n  if (!owner._secureEstablished) {\n    // When handshake fails control is not yet released\x2C\n    // so self._tlsError will return null instead of actual error\n    owner.destroy(err);\n  } else if (owner._tlsOptions?.isServer &&\n             owner._rejectUnauthorized &&\n             RegExpPrototypeExec(/peer did not return a certificate/\x2C\n                                 err.message) !== null) {\n    // Ignore server's authorization errors\n    owner.destroy();\n  } else {\n    // Emit error\n    owner._emitTLSError(err);\n  }\n}\n\n// Used by both client and server TLSSockets to start data flowing from _handle\x2C\n// read(0) causes a StreamBase::ReadStart\x2C via Socket._read.\nfunction initRead(tlsSocket\x2C socket) {\n  debug('%s initRead'\x2C\n        tlsSocket._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!tlsSocket._handle\x2C\n        'buffered?'\x2C !!socket && socket.readableLength\n  );\n  // If we were destroyed already don't bother reading\n  if (!tlsSocket._handle)\n    return;\n\n  // Socket already has some buffered data - emulate receiving it\n  if (socket && socket.readableLength) {\n    let buf;\n    while ((buf = socket.read()) !== null)\n      tlsSocket._handle.receive(buf);\n  }\n\n  tlsSocket.read(0);\n}\n\n/**\n * Provides a wrap of socket stream to do encrypted communication.\n */\n\nfunction TLSSocket(socket\x2C opts) {\n  const tlsOptions = { ...opts };\n  let enableTrace = tlsOptions.enableTrace;\n\n  if (enableTrace == null) {\n    enableTrace = traceTls;\n\n    if (enableTrace && !tlsTracingWarned) {\n      tlsTracingWarned = true;\n      process.emitWarning('Enabling --trace-tls can expose sensitive data in ' +\n                          'the resulting log.');\n    }\n  } else {\n    validateBoolean(enableTrace\x2C 'options.enableTrace');\n  }\n\n  if (tlsOptions.ALPNProtocols)\n    tls.convertALPNProtocols(tlsOptions.ALPNProtocols\x2C tlsOptions);\n\n  this._tlsOptions = tlsOptions;\n  this._secureEstablished = false;\n  this._securePending = false;\n  this._newSessionPending = false;\n  this._controlReleased = false;\n  this.secureConnecting = true;\n  this._SNICallback = null;\n  this.servername = null;\n  this.alpnProtocol = null;\n  this.authorized = false;\n  this.authorizationError = null;\n  this[kRes] = null;\n  this[kIsVerified] = false;\n  this[kPendingSession] = null;\n\n  let wrap;\n  if ((socket instanceof net.Socket && socket._handle) || !socket) {\n    // 1. connected socket\n    // 2. no socket\x2C one will be created with net.Socket().connect\n    wrap = socket;\n  } else {\n    // 3. socket has no handle so it is js not c++\n    // 4. unconnected sockets are wrapped\n    // TLS expects to interact from C++ with a net.Socket that has a C++ stream\n    // handle\x2C but a JS stream doesn't have one. Wrap it up to make it look like\n    // a socket.\n    wrap = new JSStreamSocket(socket);\n  }\n\n  // Just a documented property to make secure sockets\n  // distinguishable from regular ones.\n  this.encrypted = true;\n\n  ReflectApply(net.Socket\x2C this\x2C [{\n    handle: this._wrapHandle(wrap)\x2C\n    allowHalfOpen: socket ? socket.allowHalfOpen : tlsOptions.allowHalfOpen\x2C\n    pauseOnCreate: tlsOptions.pauseOnConnect\x2C\n    manualStart: true\x2C\n    highWaterMark: tlsOptions.highWaterMark\x2C\n    onread: !socket ? tlsOptions.onread : null\x2C\n    signal: tlsOptions.signal\x2C\n  }]);\n\n  // Proxy for API compatibility\n  this.ssl = this._handle;  // C++ TLSWrap object\n\n  this.on('error'\x2C this._tlsError);\n\n  this._init(socket\x2C wrap);\n\n  if (enableTrace && this._handle)\n    this._handle.enableTrace();\n\n  // Read on next tick so the caller has a chance to setup listeners\n  process.nextTick(initRead\x2C this\x2C socket);\n}\nObjectSetPrototypeOf(TLSSocket.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(TLSSocket\x2C net.Socket);\nexports.TLSSocket = TLSSocket;\n\nconst proxiedMethods = [\n  'ref'\x2C 'unref'\x2C 'open'\x2C 'bind'\x2C 'listen'\x2C 'connect'\x2C 'bind6'\x2C\n  'connect6'\x2C 'getsockname'\x2C 'getpeername'\x2C 'setNoDelay'\x2C 'setKeepAlive'\x2C\n  'setSimultaneousAccepts'\x2C 'setBlocking'\x2C\n\n  // PipeWrap\n  'setPendingInstances'\x2C\n];\n\n// Proxy HandleWrap\x2C PipeWrap and TCPWrap methods\nfunction makeMethodProxy(name) {\n  return function methodProxy(...args) {\n    if (this._parent[name])\n      return ReflectApply(this._parent[name]\x2C this._parent\x2C args);\n  };\n}\nfor (const proxiedMethod of proxiedMethods) {\n  tls_wrap.TLSWrap.prototype[proxiedMethod] =\n    makeMethodProxy(proxiedMethod);\n}\n\ntls_wrap.TLSWrap.prototype.close = function close(cb) {\n  let ssl;\n  if (this[owner_symbol]) {\n    ssl = this[owner_symbol].ssl;\n    this[owner_symbol].ssl = null;\n  }\n\n  // Invoke `destroySSL` on close to clean up possibly pending write requests\n  // that may self-reference TLSWrap\x2C leading to leak\n  const done = () => {\n    if (ssl) {\n      ssl.destroySSL();\n      if (ssl._secureContext.singleUse) {\n        ssl._secureContext.context.close();\n        ssl._secureContext.context = null;\n      }\n    }\n    if (cb)\n      cb();\n  };\n\n  if (this._parentWrap && this._parentWrap._handle === this._parent) {\n    this._parentWrap.once('close'\x2C done);\n    return this._parentWrap.destroy();\n  }\n  return this._parent.close(done);\n};\n\nTLSSocket.prototype.disableRenegotiation = function disableRenegotiation() {\n  this[kDisableRenegotiation] = true;\n};\n\nTLSSocket.prototype._wrapHandle = function(wrap) {\n  let handle;\n\n  if (wrap)\n    handle = wrap._handle;\n\n  const options = this._tlsOptions;\n  if (!handle) {\n    handle = options.pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    handle[owner_symbol] = this;\n  }\n\n  // Wrap socket's handle\n  const context = options.secureContext ||\n                  options.credentials ||\n                  tls.createSecureContext(options);\n  assert(handle.isStreamBase\x2C 'handle must be a StreamBase');\n  if (!(context.context instanceof NativeSecureContext)) {\n    throw new ERR_TLS_INVALID_CONTEXT('context');\n  }\n  const res = tls_wrap.wrap(handle\x2C context.context\x2C !!options.isServer);\n  res._parent = handle;  // C++ "wrap" object: TCPWrap\x2C JSStream\x2C ...\n  res._parentWrap = wrap;  // JS object: net.Socket\x2C JSStreamSocket\x2C ...\n  res._secureContext = context;\n  res.reading = handle.reading;\n  this[kRes] = res;\n  defineHandleReading(this\x2C handle);\n\n  this.on('close'\x2C onSocketCloseDestroySSL);\n\n  return res;\n};\n\n// This eliminates a cyclic reference to TLSWrap\n// Ref: https://github.com/nodejs/node/commit/f7620fb96d339f704932f9bb9a0dceb9952df2d4\nfunction defineHandleReading(socket\x2C handle) {\n  ObjectDefineProperty(handle\x2C 'reading'\x2C {\n    __proto__: null\x2C\n    get: () => {\n      return socket[kRes].reading;\n    }\x2C\n    set: (value) => {\n      socket[kRes].reading = value;\n    }\n  });\n}\n\nfunction onSocketCloseDestroySSL() {\n  // Make sure we are not doing it on OpenSSL's stack\n  setImmediate(destroySSL\x2C this);\n  this[kRes] = null;\n}\n\nfunction destroySSL(self) {\n  self._destroySSL();\n}\n\nTLSSocket.prototype._destroySSL = function _destroySSL() {\n  if (!this.ssl) return;\n  this.ssl.destroySSL();\n  if (this.ssl._secureContext.singleUse) {\n    this.ssl._secureContext.context.close();\n    this.ssl._secureContext.context = null;\n  }\n  this.ssl = null;\n  this[kPendingSession] = null;\n  this[kIsVerified] = false;\n};\n\n// Constructor guts\x2C arbitrarily factored out.\nlet warnOnTlsKeylog = true;\nlet warnOnTlsKeylogError = true;\nTLSSocket.prototype._init = function(socket\x2C wrap) {\n  const options = this._tlsOptions;\n  const ssl = this._handle;\n  this.server = options.server;\n\n  debug('%s _init'\x2C\n        options.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!ssl\n  );\n\n  // Clients (!isServer) always request a cert\x2C servers request a client cert\n  // only on explicit configuration.\n  const requestCert = !!options.requestCert || !options.isServer;\n  const rejectUnauthorized = !!options.rejectUnauthorized;\n\n  this._requestCert = requestCert;\n  this._rejectUnauthorized = rejectUnauthorized;\n  if (requestCert || rejectUnauthorized)\n    ssl.setVerifyMode(requestCert\x2C rejectUnauthorized);\n\n  // Only call .onkeylog if there is a keylog listener.\n  ssl.onkeylog = onkeylog;\n  this.on('newListener'\x2C keylogNewListener);\n\n  function keylogNewListener(event) {\n    if (event !== 'keylog')\n      return;\n\n    // Guard against enableKeylogCallback after destroy\n    if (!this._handle) return;\n    this._handle.enableKeylogCallback();\n\n    // Remove this listener since it's no longer needed.\n    this.removeListener('newListener'\x2C keylogNewListener);\n  }\n\n  if (options.isServer) {\n    ssl.onhandshakestart = onhandshakestart;\n    ssl.onhandshakedone = onhandshakedone;\n    ssl.onclienthello = loadSession;\n    ssl.oncertcb = loadSNI;\n    ssl.onnewsession = onnewsession;\n    ssl.lastHandshakeTime = 0;\n    ssl.handshakes = 0;\n\n    if (this.server) {\n      if (this.server.listenerCount('resumeSession') > 0 ||\n          this.server.listenerCount('newSession') > 0) {\n        // Also starts the client hello parser as a side effect.\n        ssl.enableSessionCallbacks();\n      }\n      if (this.server.listenerCount('OCSPRequest') > 0)\n        ssl.enableCertCb();\n    }\n  } else {\n    ssl.onhandshakestart = noop;\n    ssl.onhandshakedone = () => {\n      debug('client onhandshakedone');\n      this._finishInit();\n    };\n    ssl.onocspresponse = onocspresponse;\n\n    if (options.session)\n      ssl.setSession(options.session);\n\n    ssl.onnewsession = onnewsessionclient;\n\n    // Only call .onnewsession if there is a session listener.\n    this.on('newListener'\x2C newListener);\n\n    function newListener(event) {\n      if (event !== 'session')\n        return;\n\n      // Guard against enableSessionCallbacks after destroy\n      if (!this._handle) return;\n      this._handle.enableSessionCallbacks();\n\n      // Remove this listener since it's no longer needed.\n      this.removeListener('newListener'\x2C newListener);\n    }\n  }\n\n  if (tlsKeylog) {\n    if (warnOnTlsKeylog) {\n      warnOnTlsKeylog = false;\n      process.emitWarning('Using --tls-keylog makes TLS connections insecure ' +\n        'by writing secret key material to file ' + tlsKeylog);\n    }\n    this.on('keylog'\x2C (line) => {\n      appendFile(tlsKeylog\x2C line\x2C { mode: 0o600 }\x2C (err) => {\n        if (err && warnOnTlsKeylogError) {\n          warnOnTlsKeylogError = false;\n          process.emitWarning('Failed to write TLS keylog (this warning ' +\n            'will not be repeated): ' + err);\n        }\n      });\n    });\n  }\n\n  ssl.onerror = onerror;\n\n  // If custom SNICallback was given\x2C or if\n  // there're SNI contexts to perform match against -\n  // set `.onsniselect` callback.\n  if (options.isServer &&\n      options.SNICallback &&\n      (options.SNICallback !== SNICallback ||\n       (options.server && options.server._contexts.length))) {\n    assert(typeof options.SNICallback === 'function');\n    this._SNICallback = options.SNICallback;\n    ssl.enableCertCb();\n  }\n\n  if (options.ALPNProtocols) {\n    // Keep reference in secureContext not to be GC-ed\n    ssl._secureContext.alpnBuffer = options.ALPNProtocols;\n    ssl.setALPNProtocols(ssl._secureContext.alpnBuffer);\n  }\n\n  if (options.pskCallback && ssl.enablePskCallback) {\n    validateFunction(options.pskCallback\x2C 'pskCallback');\n\n    ssl[kOnPskExchange] = options.isServer ?\n      onPskServerCallback : onPskClientCallback;\n\n    this[kPskCallback] = options.pskCallback;\n    ssl.enablePskCallback();\n\n    if (options.pskIdentityHint) {\n      validateString(options.pskIdentityHint\x2C 'options.pskIdentityHint');\n      ssl.setPskIdentityHint(options.pskIdentityHint);\n    }\n  }\n\n\n  if (options.handshakeTimeout > 0)\n    this.setTimeout(options.handshakeTimeout\x2C this._handleTimeout);\n\n  if (socket instanceof net.Socket) {\n    this._parent = socket;\n\n    // To prevent assertion in afterConnect() and properly kick off readStart\n    this.connecting = socket.connecting || !socket._handle;\n    socket.once('connect'\x2C () => {\n      this.connecting = false;\n      this.emit('connect');\n    });\n  }\n\n  // Assume `tls.connect()`\n  if (wrap) {\n    wrap.on('error'\x2C (err) => this._emitTLSError(err));\n  } else {\n    assert(!socket);\n    this.connecting = true;\n  }\n};\n\nTLSSocket.prototype.renegotiate = function(options\x2C callback) {\n  validateObject(options\x2C 'options');\n  if (callback !== undefined) {\n    validateCallback(callback);\n  }\n\n  debug('%s renegotiate()'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'destroyed?'\x2C this.destroyed\n  );\n\n  if (this.destroyed)\n    return;\n\n  let requestCert = !!this._requestCert;\n  let rejectUnauthorized = !!this._rejectUnauthorized;\n\n  if (options.requestCert !== undefined)\n    requestCert = !!options.requestCert;\n  if (options.rejectUnauthorized !== undefined)\n    rejectUnauthorized = !!options.rejectUnauthorized;\n\n  if (requestCert !== this._requestCert ||\n      rejectUnauthorized !== this._rejectUnauthorized) {\n    this._handle.setVerifyMode(requestCert\x2C rejectUnauthorized);\n    this._requestCert = requestCert;\n    this._rejectUnauthorized = rejectUnauthorized;\n  }\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  try {\n    this._handle.renegotiate();\n  } catch (err) {\n    if (callback) {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  if (callback) {\n    this.once('secure'\x2C () => callback(null));\n  }\n\n  return true;\n};\n\nTLSSocket.prototype.exportKeyingMaterial = function(length\x2C label\x2C context) {\n  validateUint32(length\x2C 'length'\x2C true);\n  validateString(label\x2C 'label');\n  if (context !== undefined)\n    validateBuffer(context\x2C 'context');\n\n  if (!this._secureEstablished)\n    throw new ERR_TLS_INVALID_STATE();\n\n  return this._handle.exportKeyingMaterial(length\x2C label\x2C context);\n};\n\nTLSSocket.prototype.setMaxSendFragment = function setMaxSendFragment(size) {\n  validateInt32(size\x2C 'size');\n  return this._handle.setMaxSendFragment(size) === 1;\n};\n\nTLSSocket.prototype._handleTimeout = function() {\n  this._emitTLSError(new ERR_TLS_HANDSHAKE_TIMEOUT());\n};\n\nTLSSocket.prototype._emitTLSError = function(err) {\n  const e = this._tlsError(err);\n  if (e)\n    this.emit('error'\x2C e);\n};\n\nTLSSocket.prototype._tlsError = function(err) {\n  this.emit('_tlsError'\x2C err);\n  if (this._controlReleased)\n    return err;\n  return null;\n};\n\nTLSSocket.prototype._releaseControl = function() {\n  if (this._controlReleased)\n    return false;\n  this._controlReleased = true;\n  this.removeListener('error'\x2C this._tlsError);\n  return true;\n};\n\nTLSSocket.prototype._finishInit = function() {\n  // Guard against getting onhandshakedone() after .destroy().\n  // * 1.2: If destroy() during onocspresponse()\x2C then write of next handshake\n  // record fails\x2C the handshake done info callbacks does not occur\x2C and the\n  // socket closes.\n  // * 1.3: The OCSP response comes in the same record that finishes handshake\x2C\n  // so even after .destroy()\x2C the handshake done info callback occurs\n  // immediately after onocspresponse(). Ignore it.\n  if (!this._handle)\n    return;\n\n  this.alpnProtocol = this._handle.getALPNNegotiatedProtocol();\n  // The servername could be set by TLSWrap::SelectSNIContextCallback().\n  if (this.servername === null) {\n    this.servername = this._handle.getServername();\n  }\n\n  debug('%s _finishInit'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'alpn'\x2C this.alpnProtocol\x2C\n        'servername'\x2C this.servername);\n\n  this._secureEstablished = true;\n  if (this._tlsOptions.handshakeTimeout > 0)\n    this.setTimeout(0\x2C this._handleTimeout);\n  this.emit('secure');\n};\n\nTLSSocket.prototype._start = function() {\n  debug('%s _start'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'connecting?'\x2C this.connecting\x2C\n        'requestOCSP?'\x2C !!this._tlsOptions.requestOCSP\x2C\n  );\n  if (this.connecting) {\n    this.once('connect'\x2C this._start);\n    return;\n  }\n\n  // Socket was destroyed before the connection was established\n  if (!this._handle)\n    return;\n\n  if (this._tlsOptions.requestOCSP)\n    this._handle.requestOCSP();\n  this._handle.start();\n};\n\nTLSSocket.prototype.setServername = function(name) {\n  validateString(name\x2C 'name');\n\n  if (this._tlsOptions.isServer) {\n    throw new ERR_TLS_SNI_FROM_SERVER();\n  }\n\n  this._handle.setServername(name);\n};\n\nTLSSocket.prototype.setSession = function(session) {\n  if (typeof session === 'string')\n    session = Buffer.from(session\x2C 'latin1');\n  this._handle.setSession(session);\n};\n\nTLSSocket.prototype.getPeerCertificate = function(detailed) {\n  if (this._handle) {\n    return common.translatePeerCertificate(\n      this._handle.getPeerCertificate(detailed)) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getCertificate = function() {\n  if (this._handle) {\n    // It's not a peer cert\x2C but the formatting is identical.\n    return common.translatePeerCertificate(\n      this._handle.getCertificate()) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getPeerX509Certificate = function(detailed) {\n  const cert = this._handle?.getPeerX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\nTLSSocket.prototype.getX509Certificate = function() {\n  const cert = this._handle?.getX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\n// Proxy TLSSocket handle methods\nfunction makeSocketMethodProxy(name) {\n  return function socketMethodProxy(...args) {\n    if (this._handle)\n      return ReflectApply(this._handle[name]\x2C this._handle\x2C args);\n    return null;\n  };\n}\n\nArrayPrototypeForEach([\n  'getCipher'\x2C\n  'getSharedSigalgs'\x2C\n  'getEphemeralKeyInfo'\x2C\n  'getFinished'\x2C\n  'getPeerFinished'\x2C\n  'getProtocol'\x2C\n  'getSession'\x2C\n  'getTLSTicket'\x2C\n  'isSessionReused'\x2C\n  'enableTrace'\x2C\n]\x2C (method) => {\n  TLSSocket.prototype[method] = makeSocketMethodProxy(method);\n});\n\n// TODO: support anonymous (nocert)\n\n\nfunction onServerSocketSecure() {\n  if (this._requestCert) {\n    const verifyError = this._handle.verifyError();\n    if (verifyError) {\n      this.authorizationError = verifyError.code;\n\n      if (this._rejectUnauthorized)\n        this.destroy();\n    } else {\n      this.authorized = true;\n    }\n  }\n\n  if (!this.destroyed && this._releaseControl()) {\n    debug('server emit secureConnection');\n    this.secureConnecting = false;\n    this._tlsOptions.server.emit('secureConnection'\x2C this);\n  }\n}\n\nfunction onSocketTLSError(err) {\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    debug('server emit tlsClientError:'\x2C err);\n    this._tlsOptions.server.emit('tlsClientError'\x2C err\x2C this);\n  }\n}\n\nfunction onSocketKeylog(line) {\n  this._tlsOptions.server.emit('keylog'\x2C line\x2C this);\n}\n\nfunction onSocketClose(err) {\n  // Closed because of error - no need to emit it twice\n  if (err)\n    return;\n\n  // Emit ECONNRESET\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    const connReset = connResetException('socket hang up');\n    this._tlsOptions.server.emit('tlsClientError'\x2C connReset\x2C this);\n  }\n}\n\nfunction tlsConnectionListener(rawSocket) {\n  debug('net.Server.on(connection): new TLSSocket');\n  const socket = new TLSSocket(rawSocket\x2C {\n    secureContext: this._sharedCreds\x2C\n    isServer: true\x2C\n    server: this\x2C\n    requestCert: this.requestCert\x2C\n    rejectUnauthorized: this.rejectUnauthorized\x2C\n    handshakeTimeout: this[kHandshakeTimeout]\x2C\n    ALPNProtocols: this.ALPNProtocols\x2C\n    SNICallback: this[kSNICallback] || SNICallback\x2C\n    enableTrace: this[kEnableTrace]\x2C\n    pauseOnConnect: this.pauseOnConnect\x2C\n    pskCallback: this[kPskCallback]\x2C\n    pskIdentityHint: this[kPskIdentityHint]\x2C\n  });\n\n  socket.on('secure'\x2C onServerSocketSecure);\n\n  if (this.listenerCount('keylog') > 0)\n    socket.on('keylog'\x2C onSocketKeylog);\n\n  socket[kErrorEmitted] = false;\n  socket.on('close'\x2C onSocketClose);\n  socket.on('_tlsError'\x2C onSocketTLSError);\n}\n\n// AUTHENTICATION MODES\n//\n// There are several levels of authentication that TLS/SSL supports.\n// Read more about this in "man SSL_set_verify".\n//\n// 1. The server sends a certificate to the client but does not request a\n// cert from the client. This is common for most HTTPS servers. The browser\n// can verify the identity of the server\x2C but the server does not know who\n// the client is. Authenticating the client is usually done over HTTP using\n// login boxes and cookies and stuff.\n//\n// 2. The server sends a cert to the client and requests that the client\n// also send it a cert. The client knows who the server is and the server is\n// requesting the client also identify themselves. There are several\n// outcomes:\n//\n//   A) verifyError returns null meaning the client's certificate is signed\n//   by one of the server's CAs. The server now knows the client's identity\n//   and the client is authorized.\n//\n//   B) For some reason the client's certificate is not acceptable -\n//   verifyError returns a string indicating the problem. The server can\n//   either (i) reject the client or (ii) allow the client to connect as an\n//   unauthorized connection.\n//\n// The mode is controlled by two boolean variables.\n//\n// requestCert\n//   If true the server requests a certificate from client connections. For\n//   the common HTTPS case\x2C users will want this to be false\x2C which is what\n//   it defaults to.\n//\n// rejectUnauthorized\n//   If true clients whose certificates are invalid for any reason will not\n//   be allowed to make connections. If false\x2C they will simply be marked as\n//   unauthorized but secure communication will continue. By default this is\n//   true.\n//\n//\n//\n// Options:\n// - requestCert. Send verify request. Default to false.\n// - rejectUnauthorized. Boolean\x2C default to true.\n// - key. string.\n// - cert: string.\n// - clientCertEngine: string.\n// - ca: string or array of strings.\n// - sessionTimeout: integer.\n//\n// emit 'secureConnection'\n//   function (tlsSocket) { }\n//\n//   "UNABLE_TO_GET_ISSUER_CERT"\x2C "UNABLE_TO_GET_CRL"\x2C\n//   "UNABLE_TO_DECRYPT_CERT_SIGNATURE"\x2C "UNABLE_TO_DECRYPT_CRL_SIGNATURE"\x2C\n//   "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"\x2C "CERT_SIGNATURE_FAILURE"\x2C\n//   "CRL_SIGNATURE_FAILURE"\x2C "CERT_NOT_YET_VALID" "CERT_HAS_EXPIRED"\x2C\n//   "CRL_NOT_YET_VALID"\x2C "CRL_HAS_EXPIRED" "ERROR_IN_CERT_NOT_BEFORE_FIELD"\x2C\n//   "ERROR_IN_CERT_NOT_AFTER_FIELD"\x2C "ERROR_IN_CRL_LAST_UPDATE_FIELD"\x2C\n//   "ERROR_IN_CRL_NEXT_UPDATE_FIELD"\x2C "OUT_OF_MEM"\x2C\n//   "DEPTH_ZERO_SELF_SIGNED_CERT"\x2C "SELF_SIGNED_CERT_IN_CHAIN"\x2C\n//   "UNABLE_TO_GET_ISSUER_CERT_LOCALLY"\x2C "UNABLE_TO_VERIFY_LEAF_SIGNATURE"\x2C\n//   "CERT_CHAIN_TOO_LONG"\x2C "CERT_REVOKED" "INVALID_CA"\x2C\n//   "PATH_LENGTH_EXCEEDED"\x2C "INVALID_PURPOSE" "CERT_UNTRUSTED"\x2C\n//   "CERT_REJECTED"\n//\nfunction Server(options\x2C listener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C listener);\n\n  if (typeof options === 'function') {\n    listener = options;\n    options = kEmptyObject;\n  } else if (options == null || typeof options === 'object') {\n    options = options ?? kEmptyObject;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n\n  this._contexts = [];\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n\n  this.setSecureContext(options);\n\n  this[kHandshakeTimeout] = options.handshakeTimeout || (120 * 1000);\n  this[kSNICallback] = options.SNICallback;\n  this[kPskCallback] = options.pskCallback;\n  this[kPskIdentityHint] = options.pskIdentityHint;\n\n  validateNumber(this[kHandshakeTimeout]\x2C 'options.handshakeTimeout');\n\n  if (this[kSNICallback] && typeof this[kSNICallback] !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.SNICallback'\x2C 'function'\x2C options.SNICallback);\n  }\n\n  if (this[kPskCallback] && typeof this[kPskCallback] !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.pskCallback'\x2C 'function'\x2C options.pskCallback);\n  }\n  if (this[kPskIdentityHint] && typeof this[kPskIdentityHint] !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.pskIdentityHint'\x2C\n      'string'\x2C\n      options.pskIdentityHint\n    );\n  }\n\n  // constructor call\n  ReflectApply(net.Server\x2C this\x2C [options\x2C tlsConnectionListener]);\n\n  if (listener) {\n    this.on('secureConnection'\x2C listener);\n  }\n\n  this[kEnableTrace] = options.enableTrace;\n}\n\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\nexports.Server = Server;\nexports.createServer = function createServer(options\x2C listener) {\n  return new Server(options\x2C listener);\n};\n\n\nServer.prototype.setSecureContext = function(options) {\n  validateObject(options\x2C 'options');\n\n  if (options.pfx)\n    this.pfx = options.pfx;\n  else\n    this.pfx = undefined;\n\n  if (options.key)\n    this.key = options.key;\n  else\n    this.key = undefined;\n\n  if (options.passphrase)\n    this.passphrase = options.passphrase;\n  else\n    this.passphrase = undefined;\n\n  if (options.cert)\n    this.cert = options.cert;\n  else\n    this.cert = undefined;\n\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  else\n    this.clientCertEngine = undefined;\n\n  if (options.ca)\n    this.ca = options.ca;\n  else\n    this.ca = undefined;\n\n  if (options.minVersion)\n    this.minVersion = options.minVersion;\n  else\n    this.minVersion = undefined;\n\n  if (options.maxVersion)\n    this.maxVersion = options.maxVersion;\n  else\n    this.maxVersion = undefined;\n\n  if (options.secureProtocol)\n    this.secureProtocol = options.secureProtocol;\n  else\n    this.secureProtocol = undefined;\n\n  if (options.crl)\n    this.crl = options.crl;\n  else\n    this.crl = undefined;\n\n  this.sigalgs = options.sigalgs;\n\n  if (options.ciphers)\n    this.ciphers = options.ciphers;\n  else\n    this.ciphers = undefined;\n\n  this.ecdhCurve = options.ecdhCurve;\n\n  if (options.dhparam)\n    this.dhparam = options.dhparam;\n  else\n    this.dhparam = undefined;\n\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n\n  const secureOptions = options.secureOptions || 0;\n\n  if (secureOptions)\n    this.secureOptions = secureOptions;\n  else\n    this.secureOptions = undefined;\n\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = StringPrototypeSlice(\n      crypto.createHash('sha1')\n        .update(ArrayPrototypeJoin(process.argv\x2C ' '))\n        .digest('hex')\x2C 0\x2C 32);\n  }\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  this.privateKeyIdentifier = options.privateKeyIdentifier;\n  this.privateKeyEngine = options.privateKeyEngine;\n\n  this._sharedCreds = tls.createSecureContext({\n    pfx: this.pfx\x2C\n    key: this.key\x2C\n    passphrase: this.passphrase\x2C\n    cert: this.cert\x2C\n    clientCertEngine: this.clientCertEngine\x2C\n    ca: this.ca\x2C\n    ciphers: this.ciphers\x2C\n    sigalgs: this.sigalgs\x2C\n    ecdhCurve: this.ecdhCurve\x2C\n    dhparam: this.dhparam\x2C\n    minVersion: this.minVersion\x2C\n    maxVersion: this.maxVersion\x2C\n    secureProtocol: this.secureProtocol\x2C\n    secureOptions: this.secureOptions\x2C\n    honorCipherOrder: this.honorCipherOrder\x2C\n    crl: this.crl\x2C\n    sessionIdContext: this.sessionIdContext\x2C\n    ticketKeys: this.ticketKeys\x2C\n    sessionTimeout: this.sessionTimeout\x2C\n    privateKeyIdentifier: this.privateKeyIdentifier\x2C\n    privateKeyEngine: this.privateKeyEngine\x2C\n  });\n};\n\n\nServer.prototype._getServerData = function() {\n  return {\n    ticketKeys: this.getTicketKeys().toString('hex')\n  };\n};\n\n\nServer.prototype._setServerData = function(data) {\n  this.setTicketKeys(Buffer.from(data.ticketKeys\x2C 'hex'));\n};\n\n\nServer.prototype.getTicketKeys = function getTicketKeys() {\n  return this._sharedCreds.context.getTicketKeys();\n};\n\n\nServer.prototype.setTicketKeys = function setTicketKeys(keys) {\n  validateBuffer(keys);\n  assert(keys.byteLength === 48\x2C\n         'Session ticket keys must be a 48-byte buffer');\n  this._sharedCreds.context.setTicketKeys(keys);\n};\n\n\nServer.prototype.setOptions = deprecate(function(options) {\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.pfx) this.pfx = options.pfx;\n  if (options.key) this.key = options.key;\n  if (options.passphrase) this.passphrase = options.passphrase;\n  if (options.cert) this.cert = options.cert;\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  if (options.ca) this.ca = options.ca;\n  if (options.minVersion) this.minVersion = options.minVersion;\n  if (options.maxVersion) this.maxVersion = options.maxVersion;\n  if (options.secureProtocol) this.secureProtocol = options.secureProtocol;\n  if (options.crl) this.crl = options.crl;\n  if (options.ciphers) this.ciphers = options.ciphers;\n  if (options.ecdhCurve !== undefined)\n    this.ecdhCurve = options.ecdhCurve;\n  if (options.dhparam) this.dhparam = options.dhparam;\n  if (options.sessionTimeout) this.sessionTimeout = options.sessionTimeout;\n  if (options.ticketKeys) this.ticketKeys = options.ticketKeys;\n  const secureOptions = options.secureOptions || 0;\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n  if (secureOptions) this.secureOptions = secureOptions;\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = StringPrototypeSlice(\n      crypto.createHash('sha1')\n        .update(ArrayPrototypeJoin(process.argv\x2C ' '))\n        .digest('hex')\x2C 0\x2C 32);\n  }\n  if (options.pskCallback) this[kPskCallback] = options.pskCallback;\n  if (options.pskIdentityHint) this[kPskIdentityHint] = options.pskIdentityHint;\n  if (options.sigalgs) this.sigalgs = options.sigalgs;\n  if (options.privateKeyIdentifier !== undefined)\n    this.privateKeyIdentifier = options.privateKeyIdentifier;\n  if (options.privateKeyEngine !== undefined)\n    this.privateKeyEngine = options.privateKeyEngine;\n}\x2C 'Server.prototype.setOptions() is deprecated'\x2C 'DEP0122');\n\n// SNI Contexts High-Level API\nServer.prototype.addContext = function(servername\x2C context) {\n  if (!servername) {\n    throw new ERR_TLS_REQUIRED_SERVER_NAME();\n  }\n\n  const re = new RegExp('^' + StringPrototypeReplaceAll(\n    RegExpPrototypeSymbolReplace(/([.^$+?\\-\\\\[\\]{}])/g\x2C servername\x2C '\\\\$1')\x2C\n    '*'\x2C '[^.]*'\n  ) + '$');\n  ArrayPrototypePush(this._contexts\x2C\n                     [re\x2C tls.createSecureContext(context).context]);\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'secureConnection':\n      sock.destroy(err);\n      break;\n    default:\n      ReflectApply(net.Server.prototype[SymbolFor('nodejs.rejection')]\x2C this\x2C\n                   [err\x2C event\x2C sock]);\n  }\n};\n\nfunction SNICallback(servername\x2C callback) {\n  const contexts = this.server._contexts;\n\n  for (let i = contexts.length - 1; i >= 0; --i) {\n    const elem = contexts[i];\n    if (RegExpPrototypeExec(elem[0]\x2C servername) !== null) {\n      callback(null\x2C elem[1]);\n      return;\n    }\n  }\n\n  callback(null\x2C undefined);\n}\n\n\n// Target API:\n//\n//  let s = tls.connect({port: 8000\x2C host: "google.com"}\x2C function() {\n//    if (!s.authorized) {\n//      s.destroy();\n//      return;\n//    }\n//\n//    // s.socket;\n//\n//    s.end("hello world\\n");\n//  });\n//\n//\nfunction normalizeConnectArgs(listArgs) {\n  const args = net._normalizeArgs(listArgs);\n  const options = args[0];\n  const cb = args[1];\n\n  // If args[0] was options\x2C then normalize dealt with it.\n  // If args[0] is port\x2C or args[0]\x2C args[1] is host\x2C port\x2C we need to\n  // find the options and merge them in\x2C normalize's options has only\n  // the host/port/path args that it knows about\x2C not the tls options.\n  // This means that options.host overrides a host arg.\n  if (listArgs[1] !== null && typeof listArgs[1] === 'object') {\n    ObjectAssign(options\x2C listArgs[1]);\n  } else if (listArgs[2] !== null && typeof listArgs[2] === 'object') {\n    ObjectAssign(options\x2C listArgs[2]);\n  }\n\n  return cb ? [options\x2C cb] : [options];\n}\n\nfunction onConnectSecure() {\n  const options = this[kConnectOptions];\n\n  // Check the size of DHE parameter above minimum requirement\n  // specified in options.\n  const ekeyinfo = this.getEphemeralKeyInfo();\n  if (ekeyinfo.type === 'DH' && ekeyinfo.size < options.minDHSize) {\n    const err = new ERR_TLS_DH_PARAM_SIZE(ekeyinfo.size);\n    debug('client emit:'\x2C err);\n    this.emit('error'\x2C err);\n    this.destroy();\n    return;\n  }\n\n  let verifyError = this._handle.verifyError();\n\n  // Verify that server's identity matches it's certificate's names\n  // Unless server has resumed our existing session\n  if (!verifyError && !this.isSessionReused()) {\n    const hostname = options.servername ||\n                   options.host ||\n                   (options.socket && options.socket._host) ||\n                   'localhost';\n    const cert = this.getPeerCertificate(true);\n    verifyError = options.checkServerIdentity(hostname\x2C cert);\n  }\n\n  if (verifyError) {\n    this.authorized = false;\n    this.authorizationError = verifyError.code || verifyError.message;\n\n    // rejectUnauthorized property can be explicitly defined as `undefined`\n    // causing the assignment to default value (`true`) fail. Before assigning\n    // it to the tlssock connection options\x2C explicitly check if it is false\n    // and update rejectUnauthorized property. The property gets used by\n    // TLSSocket connection handler to allow or reject connection if\n    // unauthorized.\n    // This check is potentially redundant\x2C however it is better to keep it\n    // in case the option object gets modified somewhere.\n    if (options.rejectUnauthorized !== false) {\n      this.destroy(verifyError);\n      return;\n    }\n    debug('client emit secureConnect. rejectUnauthorized: %s\x2C ' +\n          'authorizationError: %s'\x2C options.rejectUnauthorized\x2C\n          this.authorizationError);\n    this.secureConnecting = false;\n    this.emit('secureConnect');\n  } else {\n    this.authorized = true;\n    debug('client emit secureConnect. authorized:'\x2C this.authorized);\n    this.secureConnecting = false;\n    this.emit('secureConnect');\n  }\n\n  this[kIsVerified] = true;\n  const session = this[kPendingSession];\n  this[kPendingSession] = null;\n  if (session)\n    this.emit('session'\x2C session);\n\n  this.removeListener('end'\x2C onConnectEnd);\n}\n\nfunction onConnectEnd() {\n  // NOTE: This logic is shared with _http_client.js\n  if (!this._hadError) {\n    const options = this[kConnectOptions];\n    this._hadError = true;\n    const error = connResetException('Client network socket disconnected ' +\n                                     'before secure TLS connection was ' +\n                                     'established');\n    error.path = options.path;\n    error.host = options.host;\n    error.port = options.port;\n    error.localAddress = options.localAddress;\n    this.destroy(error);\n  }\n}\n\n// Arguments: [port\x2C] [host\x2C] [options\x2C] [cb]\nexports.connect = function connect(...args) {\n  args = normalizeConnectArgs(args);\n  let options = args[0];\n  const cb = args[1];\n  const allowUnauthorized = getAllowUnauthorized();\n\n  options = {\n    rejectUnauthorized: !allowUnauthorized\x2C\n    ciphers: tls.DEFAULT_CIPHERS\x2C\n    checkServerIdentity: tls.checkServerIdentity\x2C\n    minDHSize: 1024\x2C\n    ...options\n  };\n\n  if (!options.keepAlive)\n    options.singleUse = true;\n\n  assert(typeof options.checkServerIdentity === 'function');\n  assert(typeof options.minDHSize === 'number'\x2C\n         'options.minDHSize is not a number: ' + options.minDHSize);\n  assert(options.minDHSize > 0\x2C\n         'options.minDHSize is not a positive number: ' +\n         options.minDHSize);\n\n  const context = options.secureContext || tls.createSecureContext(options);\n\n  const tlssock = new TLSSocket(options.socket\x2C {\n    allowHalfOpen: options.allowHalfOpen\x2C\n    pipe: !!options.path\x2C\n    secureContext: context\x2C\n    isServer: false\x2C\n    requestCert: true\x2C\n    rejectUnauthorized: options.rejectUnauthorized !== false\x2C\n    session: options.session\x2C\n    ALPNProtocols: options.ALPNProtocols\x2C\n    requestOCSP: options.requestOCSP\x2C\n    enableTrace: options.enableTrace\x2C\n    pskCallback: options.pskCallback\x2C\n    highWaterMark: options.highWaterMark\x2C\n    onread: options.onread\x2C\n    signal: options.signal\x2C\n  });\n\n  // rejectUnauthorized property can be explicitly defined as `undefined`\n  // causing the assignment to default value (`true`) fail. Before assigning\n  // it to the tlssock connection options\x2C explicitly check if it is false\n  // and update rejectUnauthorized property. The property gets used by TLSSocket\n  // connection handler to allow or reject connection if unauthorized\n  options.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  tlssock[kConnectOptions] = options;\n\n  if (cb)\n    tlssock.once('secureConnect'\x2C cb);\n\n  if (!options.socket) {\n    // If user provided the socket\x2C it's their responsibility to manage its\n    // connectivity. If we created one internally\x2C we connect it.\n    if (options.timeout) {\n      tlssock.setTimeout(options.timeout);\n    }\n\n    tlssock.connect(options\x2C tlssock._start);\n  }\n\n  tlssock._releaseControl();\n\n  if (options.session)\n    tlssock.setSession(options.session);\n\n  if (options.servername) {\n    if (!ipServernameWarned && net.isIP(options.servername)) {\n      process.emitWarning(\n        'Setting the TLS ServerName to an IP address is not permitted by ' +\n        'RFC 6066. This will be ignored in a future version.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0123'\n      );\n      ipServernameWarned = true;\n    }\n    tlssock.setServername(options.servername);\n  }\n\n  if (options.socket)\n    tlssock._start();\n\n  tlssock.on('secure'\x2C onConnectSecure);\n  tlssock.prependListener('end'\x2C onConnectEnd);\n\n  return tlssock;\n};\n
code-source-info,0x2a1384e3ddf6,148,0,49754,C0O0C4O49754,,
code-creation,Function,10,144501,0x3f792a6c114e,2049, node:_tls_wrap:1:1,0x2a1384e3dd70,~
code-source-info,0x3f792a6c114e
tick,0x7f407774b821,144631,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407731c375,144662,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0xf5b0f1,145100,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,145224,0x3f792a6c6756,5, node:crypto:1:1,0x3f792a6c6540,~
script-source,149,node:crypto,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Note: In 0.8 and before\x2C crypto functions all defaulted to using\n// binary-encoded strings rather than buffers.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\n} = require('internal/util');\nassertCrypto();\n\nconst {\n  ERR_CRYPTO_FIPS_FORCED\x2C\n} = require('internal/errors').codes;\nconst constants = internalBinding('constants').crypto;\nconst { getOptionValue } = require('internal/options');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\nconst fipsForced = getOptionValue('--force-fips');\nconst {\n  getFipsCrypto\x2C\n  setFipsCrypto\x2C\n  timingSafeEqual\x2C\n} = internalBinding('crypto');\nconst {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n} = require('internal/crypto/random');\nconst {\n  pbkdf2\x2C\n  pbkdf2Sync\n} = require('internal/crypto/pbkdf2');\nconst {\n  scrypt\x2C\n  scryptSync\n} = require('internal/crypto/scrypt');\nconst {\n  hkdf\x2C\n  hkdfSync\n} = require('internal/crypto/hkdf');\nconst {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n} = require('internal/crypto/keygen');\nconst {\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n} = require('internal/crypto/keys');\nconst {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\n} = require('internal/crypto/diffiehellman');\nconst {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n} = require('internal/crypto/cipher');\nconst {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\n} = require('internal/crypto/sig');\nconst {\n  Hash\x2C\n  Hmac\n} = require('internal/crypto/hash');\nconst {\n  X509Certificate\n} = require('internal/crypto/x509');\nconst {\n  getCiphers\x2C\n  getCurves\x2C\n  getDefaultEncoding\x2C\n  getHashes\x2C\n  setDefaultEncoding\x2C\n  setEngine\x2C\n  lazyRequire\x2C\n  secureHeapUsed\x2C\n} = require('internal/crypto/util');\nconst Certificate = require('internal/crypto/certificate');\n\n// These helper functions are needed because the constructors can\n// use new\x2C in which case V8 cannot inline the recursive constructor call\nfunction createHash(algorithm\x2C options) {\n  return new Hash(algorithm\x2C options);\n}\n\nfunction createCipher(cipher\x2C password\x2C options) {\n  return new Cipher(cipher\x2C password\x2C options);\n}\n\nfunction createCipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDecipher(cipher\x2C password\x2C options) {\n  return new Decipher(cipher\x2C password\x2C options);\n}\n\nfunction createDecipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n}\n\nfunction createDiffieHellmanGroup(name) {\n  return new DiffieHellmanGroup(name);\n}\n\nfunction createECDH(curve) {\n  return new ECDH(curve);\n}\n\nfunction createHmac(hmac\x2C key\x2C options) {\n  return new Hmac(hmac\x2C key\x2C options);\n}\n\nfunction createSign(algorithm\x2C options) {\n  return new Sign(algorithm\x2C options);\n}\n\nfunction createVerify(algorithm\x2C options) {\n  return new Verify(algorithm\x2C options);\n}\n\nmodule.exports = {\n  // Methods\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  createCipheriv\x2C\n  createDecipheriv\x2C\n  createDiffieHellman\x2C\n  createDiffieHellmanGroup\x2C\n  createECDH\x2C\n  createHash\x2C\n  createHmac\x2C\n  createPrivateKey\x2C\n  createPublicKey\x2C\n  createSecretKey\x2C\n  createSign\x2C\n  createVerify\x2C\n  diffieHellman\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  getCiphers\x2C\n  getCipherInfo\x2C\n  getCurves\x2C\n  getDiffieHellman: createDiffieHellmanGroup\x2C\n  getHashes\x2C\n  hkdf\x2C\n  hkdfSync\x2C\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n  scrypt\x2C\n  scryptSync\x2C\n  sign: signOneShot\x2C\n  setEngine\x2C\n  timingSafeEqual\x2C\n  getFips: fipsForced ? getFipsForced : getFipsCrypto\x2C\n  setFips: fipsForced ? setFipsForced : setFipsCrypto\x2C\n  verify: verifyOneShot\x2C\n\n  // Classes\n  Certificate\x2C\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  Hash\x2C\n  Hmac\x2C\n  KeyObject\x2C\n  Sign\x2C\n  Verify\x2C\n  X509Certificate\x2C\n  secureHeapUsed\x2C\n};\n\nfunction setFipsForced(val) {\n  if (val) return;\n  throw new ERR_CRYPTO_FIPS_FORCED();\n}\n\nfunction getFipsForced() {\n  return 1;\n}\n\nObjectDefineProperty(constants\x2C 'defaultCipherList'\x2C {\n  __proto__: null\x2C\n  value: getOptionValue('--tls-cipher-list')\n});\n\nObjectDefineProperties(module.exports\x2C {\n  createCipher: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    value: deprecate(createCipher\x2C\n                     'crypto.createCipher is deprecated.'\x2C 'DEP0106')\n  }\x2C\n  createDecipher: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    value: deprecate(createDecipher\x2C\n                     'crypto.createDecipher is deprecated.'\x2C 'DEP0106')\n  }\x2C\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\n  fips: {\n    __proto__: null\x2C\n    get: fipsForced ? getFipsForced : getFipsCrypto\x2C\n    set: fipsForced ? setFipsForced : setFipsCrypto\n  }\x2C\n  DEFAULT_ENCODING: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: deprecate(getDefaultEncoding\x2C\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\x2C\n    set: deprecate(setDefaultEncoding\x2C\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\n  }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n\n  webcrypto: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get() { return lazyRequire('internal/crypto/webcrypto').crypto; }\n  }\x2C\n\n  // Aliases for randomBytes are deprecated.\n  // The ecosystem needs those to exist for backwards compatibility.\n  prng: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C 'crypto.prng is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\x2C\n  pseudoRandomBytes: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C\n                'crypto.pseudoRandomBytes is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\x2C\n  rng: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C 'crypto.rng is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\n});\n
code-source-info,0x3f792a6c6756,149,0,7818,C0O0C4O7818,,
code-creation,Function,10,146097,0x3f792a6c781e,1692, node:crypto:1:1,0x3f792a6c66d0,~
code-source-info,0x3f792a6c781e
tick,0x7f4077421732,146301,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,146854,0x3f792a6c994e,5, node:internal/crypto/random:1:1,0x3f792a6c9418,~
script-source,150,node:internal/crypto/random,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  BigInt\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsNaN\x2C\n  NumberIsSafeInteger\x2C\n  NumberPrototypeToString\x2C\n  StringPrototypePadStart\x2C\n} = primordials;\n\nconst {\n  RandomBytesJob\x2C\n  RandomPrimeJob\x2C\n  CheckPrimeJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  secureBuffer\x2C\n} = internalBinding('crypto');\n\nconst {\n  kEmptyObject\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst { Buffer\x2C kMaxLength } = require('buffer');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_OPERATION_FAILED\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateNumber\x2C\n  validateBoolean\x2C\n  validateCallback\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isTypedArray\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n} = require('internal/util/types');\n\nconst { FastBuffer } = require('internal/buffer');\n\nconst kMaxInt32 = 2 ** 31 - 1;\nconst kMaxPossibleLength = MathMin(kMaxLength\x2C kMaxInt32);\n\nfunction assertOffset(offset\x2C elementSize\x2C length) {\n  validateNumber(offset\x2C 'offset');\n  offset *= elementSize;\n\n  const maxLength = MathMin(length\x2C kMaxPossibleLength);\n  if (NumberIsNaN(offset) || offset > maxLength || offset < 0) {\n    throw new ERR_OUT_OF_RANGE('offset'\x2C `>= 0 && <= ${maxLength}`\x2C offset);\n  }\n\n  return offset >>> 0;  // Convert to uint32.\n}\n\nfunction assertSize(size\x2C elementSize\x2C offset\x2C length) {\n  validateNumber(size\x2C 'size');\n  size *= elementSize;\n\n  if (NumberIsNaN(size) || size > kMaxPossibleLength || size < 0) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C\n                               `>= 0 && <= ${kMaxPossibleLength}`\x2C size);\n  }\n\n  if (size + offset > length) {\n    throw new ERR_OUT_OF_RANGE('size + offset'\x2C `<= ${length}`\x2C size + offset);\n  }\n\n  return size >>> 0;  // Convert to uint32.\n}\n\nfunction randomBytes(size\x2C callback) {\n  size = assertSize(size\x2C 1\x2C 0\x2C Infinity);\n  if (callback !== undefined) {\n    validateCallback(callback);\n  }\n\n  const buf = new FastBuffer(size);\n\n  if (callback === undefined) {\n    randomFillSync(buf.buffer\x2C 0\x2C size);\n    return buf;\n  }\n\n  // Keep the callback as a regular function so this is propagated.\n  randomFill(buf.buffer\x2C 0\x2C size\x2C function(error) {\n    if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n    FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n  });\n}\n\nfunction randomFillSync(buf\x2C offset = 0\x2C size) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0)\n    return buf;\n\n  const job = new RandomBytesJob(\n    kCryptoJobSync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n\n  const err = job.run()[0];\n  if (err)\n    throw err;\n\n  return buf;\n}\n\nfunction randomFill(buf\x2C offset\x2C size\x2C callback) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  if (typeof offset === 'function') {\n    callback = offset;\n    offset = 0;\n    // Size is a length here\x2C assertSize() call turns it into a number of bytes\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    callback = size;\n    size = buf.length - offset;\n  } else {\n    validateCallback(callback);\n  }\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0) {\n    callback(null\x2C buf);\n    return;\n  }\n\n  const job = new RandomBytesJob(\n    kCryptoJobAsync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n  job.ondone = FunctionPrototypeBind(onJobDone\x2C job\x2C buf\x2C callback);\n  job.run();\n}\n\n// Largest integer we can read from a buffer.\n// e.g.: Buffer.from("ff".repeat(6)\x2C "hex").readUIntBE(0\x2C 6);\nconst RAND_MAX = 0xFFFF_FFFF_FFFF;\n\n// Cache random data to use in randomInt. The cache size must be evenly\n// divisible by 6 because each attempt to obtain a random int uses 6 bytes.\nconst randomCache = new FastBuffer(6 * 1024);\nlet randomCacheOffset = randomCache.length;\nlet asyncCacheFillInProgress = false;\nconst asyncCachePendingTasks = [];\n\n// Generates an integer in [min\x2C max) range where min is inclusive and max is\n// exclusive.\nfunction randomInt(min\x2C max\x2C callback) {\n  // Detect optional min syntax\n  // randomInt(max)\n  // randomInt(max\x2C callback)\n  const minNotSpecified = typeof max === 'undefined' ||\n    typeof max === 'function';\n\n  if (minNotSpecified) {\n    callback = max;\n    max = min;\n    min = 0;\n  }\n\n  const isSync = typeof callback === 'undefined';\n  if (!isSync) {\n    validateCallback(callback);\n  }\n  if (!NumberIsSafeInteger(min)) {\n    throw new ERR_INVALID_ARG_TYPE('min'\x2C 'a safe integer'\x2C min);\n  }\n  if (!NumberIsSafeInteger(max)) {\n    throw new ERR_INVALID_ARG_TYPE('max'\x2C 'a safe integer'\x2C max);\n  }\n  if (max <= min) {\n    throw new ERR_OUT_OF_RANGE(\n      'max'\x2C `greater than the value of "min" (${min})`\x2C max\n    );\n  }\n\n  // First we generate a random int between [0..range)\n  const range = max - min;\n\n  if (!(range <= RAND_MAX)) {\n    throw new ERR_OUT_OF_RANGE(`max${minNotSpecified ? '' : ' - min'}`\x2C\n                               `<= ${RAND_MAX}`\x2C range);\n  }\n\n  // For (x % range) to produce an unbiased value greater than or equal to 0 and\n  // less than range\x2C x must be drawn randomly from the set of integers greater\n  // than or equal to 0 and less than randLimit.\n  const randLimit = RAND_MAX - (RAND_MAX % range);\n\n  // If we don't have a callback\x2C or if there is still data in the cache\x2C we can\n  // do this synchronously\x2C which is super fast.\n  while (isSync || (randomCacheOffset < randomCache.length)) {\n    if (randomCacheOffset === randomCache.length) {\n      // This might block the thread for a bit\x2C but we are in sync mode.\n      randomFillSync(randomCache);\n      randomCacheOffset = 0;\n    }\n\n    const x = randomCache.readUIntBE(randomCacheOffset\x2C 6);\n    randomCacheOffset += 6;\n\n    if (x < randLimit) {\n      const n = (x % range) + min;\n      if (isSync) return n;\n      process.nextTick(callback\x2C undefined\x2C n);\n      return;\n    }\n  }\n\n  // At this point\x2C we are in async mode with no data in the cache. We cannot\n  // simply refill the cache\x2C because another async call to randomInt might\n  // already be doing that. Instead\x2C queue this call for when the cache has\n  // been refilled.\n  ArrayPrototypePush(asyncCachePendingTasks\x2C { min\x2C max\x2C callback });\n  asyncRefillRandomIntCache();\n}\n\nfunction asyncRefillRandomIntCache() {\n  if (asyncCacheFillInProgress)\n    return;\n\n  asyncCacheFillInProgress = true;\n  randomFill(randomCache\x2C (err) => {\n    asyncCacheFillInProgress = false;\n\n    const tasks = asyncCachePendingTasks;\n    const errorReceiver = err && ArrayPrototypeShift(tasks);\n    if (!err)\n      randomCacheOffset = 0;\n\n    // Restart all pending tasks. If an error occurred\x2C we only notify a single\n    // callback (errorReceiver) about it. This way\x2C every async call to\n    // randomInt has a chance of being successful\x2C and it avoids complex\n    // exception handling here.\n    ArrayPrototypeForEach(ArrayPrototypeSplice(tasks\x2C 0)\x2C (task) => {\n      randomInt(task.min\x2C task.max\x2C task.callback);\n    });\n\n    // This is the only call that might throw\x2C and is therefore done at the end.\n    if (errorReceiver)\n      errorReceiver.callback(err);\n  });\n}\n\n\nfunction onJobDone(buf\x2C callback\x2C error) {\n  if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n  FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n}\n\n// Really just the Web Crypto API alternative\n// to require('crypto').randomFillSync() with an\n// additional limitation that the input buffer is\n// not allowed to exceed 65536 bytes\x2C and can only\n// be an integer-type TypedArray.\nfunction getRandomValues(data) {\n  if (!isTypedArray(data) ||\n      isFloat32Array(data) ||\n      isFloat64Array(data)) {\n    // Ordinarily this would be an ERR_INVALID_ARG_TYPE. However\x2C\n    // the Web Crypto API and web platform tests expect this to\n    // be a DOMException with type TypeMismatchError.\n    throw lazyDOMException(\n      'The data argument must be an integer-type TypedArray'\x2C\n      'TypeMismatchError');\n  }\n  if (data.byteLength > 65536) {\n    throw lazyDOMException(\n      'The requested length exceeds 65\x2C536 bytes'\x2C\n      'QuotaExceededError');\n  }\n  randomFillSync(data\x2C 0);\n  return data;\n}\n\n// Implements an RFC 4122 version 4 random UUID.\n// To improve performance\x2C random data is generated in batches\n// large enough to cover kBatchSize UUID's at a time. The uuidData\n// buffer is reused. Each call to randomUUID() consumes 16 bytes\n// from the buffer.\n\nconst kBatchSize = 128;\nlet uuidData;\nlet uuidNotBuffered;\nlet uuidBatch = 0;\n\nlet hexBytesCache;\nfunction getHexBytes() {\n  if (hexBytesCache === undefined) {\n    hexBytesCache = new Array(256);\n    for (let i = 0; i < hexBytesCache.length; i++) {\n      const hex = NumberPrototypeToString(i\x2C 16);\n      hexBytesCache[i] = StringPrototypePadStart(hex\x2C 2\x2C '0');\n    }\n  }\n  return hexBytesCache;\n}\n\nfunction serializeUUID(buf\x2C offset = 0) {\n  const kHexBytes = getHexBytes();\n  // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n  return kHexBytes[buf[offset]] +\n    kHexBytes[buf[offset + 1]] +\n    kHexBytes[buf[offset + 2]] +\n    kHexBytes[buf[offset + 3]] +\n    '-' +\n    kHexBytes[buf[offset + 4]] +\n    kHexBytes[buf[offset + 5]] +\n    '-' +\n    kHexBytes[(buf[offset + 6] & 0x0f) | 0x40] +\n    kHexBytes[buf[offset + 7]] +\n    '-' +\n    kHexBytes[(buf[offset + 8] & 0x3f) | 0x80] +\n    kHexBytes[buf[offset + 9]] +\n    '-' +\n    kHexBytes[buf[offset + 10]] +\n    kHexBytes[buf[offset + 11]] +\n    kHexBytes[buf[offset + 12]] +\n    kHexBytes[buf[offset + 13]] +\n    kHexBytes[buf[offset + 14]] +\n    kHexBytes[buf[offset + 15]];\n}\n\nfunction getBufferedUUID() {\n  uuidData ??= secureBuffer(16 * kBatchSize);\n  if (uuidData === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n\n  if (uuidBatch === 0) randomFillSync(uuidData);\n  uuidBatch = (uuidBatch + 1) % kBatchSize;\n  return serializeUUID(uuidData\x2C uuidBatch * 16);\n}\n\nfunction getUnbufferedUUID() {\n  uuidNotBuffered ??= secureBuffer(16);\n  if (uuidNotBuffered === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n  randomFillSync(uuidNotBuffered);\n  return serializeUUID(uuidNotBuffered);\n}\n\nfunction randomUUID(options) {\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n  const {\n    disableEntropyCache = false\x2C\n  } = options || kEmptyObject;\n\n  validateBoolean(disableEntropyCache\x2C 'options.disableEntropyCache');\n\n  return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID();\n}\n\nfunction createRandomPrimeJob(type\x2C size\x2C options) {\n  validateObject(options\x2C 'options');\n\n  const {\n    safe = false\x2C\n    bigint = false\x2C\n  } = options;\n  let {\n    add\x2C\n    rem\x2C\n  } = options;\n\n  validateBoolean(safe\x2C 'options.safe');\n  validateBoolean(bigint\x2C 'options.bigint');\n\n  if (add !== undefined) {\n    if (typeof add === 'bigint') {\n      add = unsignedBigIntToBuffer(add\x2C 'options.add');\n    } else if (!isAnyArrayBuffer(add) && !isArrayBufferView(add)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.add'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        add);\n    }\n  }\n\n  if (rem !== undefined) {\n    if (typeof rem === 'bigint') {\n      rem = unsignedBigIntToBuffer(rem\x2C 'options.rem');\n    } else if (!isAnyArrayBuffer(rem) && !isArrayBufferView(rem)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.rem'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        rem);\n    }\n  }\n\n  const job = new RandomPrimeJob(type\x2C size\x2C safe\x2C add\x2C rem);\n  job.result = bigint ? arrayBufferToUnsignedBigInt : (p) => p;\n  return job;\n}\n\nfunction generatePrime(size\x2C options\x2C callback) {\n  validateInt32(size\x2C 'size'\x2C 1);\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateCallback(callback);\n\n  const job = createRandomPrimeJob(kCryptoJobAsync\x2C size\x2C options);\n  job.ondone = (err\x2C prime) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    callback(\n      undefined\x2C\n      job.result(prime));\n  };\n  job.run();\n}\n\nfunction generatePrimeSync(size\x2C options = kEmptyObject) {\n  validateInt32(size\x2C 'size'\x2C 1);\n\n  const job = createRandomPrimeJob(kCryptoJobSync\x2C size\x2C options);\n  const { 0: err\x2C 1: prime } = job.run();\n  if (err)\n    throw err;\n  return job.result(prime);\n}\n\nfunction arrayBufferToUnsignedBigInt(arrayBuffer) {\n  return BigInt(`0x${Buffer.from(arrayBuffer).toString('hex')}`);\n}\n\nfunction unsignedBigIntToBuffer(bigint\x2C name) {\n  if (bigint < 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 0'\x2C bigint);\n  }\n\n  const hex = bigint.toString(16);\n  const padded = hex.padStart(hex.length + (hex.length % 2)\x2C 0);\n  return Buffer.from(padded\x2C 'hex');\n}\n\nfunction checkPrime(candidate\x2C options = kEmptyObject\x2C callback) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\n    );\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateCallback(callback);\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  validateUint32(checks\x2C 'options.checks');\n\n  const job = new CheckPrimeJob(kCryptoJobAsync\x2C candidate\x2C checks);\n  job.ondone = callback;\n  job.run();\n}\n\nfunction checkPrimeSync(candidate\x2C options = kEmptyObject) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\n    );\n  }\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  validateUint32(checks\x2C 'options.checks');\n\n  const job = new CheckPrimeJob(kCryptoJobSync\x2C candidate\x2C checks);\n  const { 0: err\x2C 1: result } = job.run();\n  if (err)\n    throw err;\n\n  return result;\n}\n\nmodule.exports = {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  getRandomValues\x2C\n  randomUUID\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n};\n
code-source-info,0x3f792a6c994e,150,0,15171,C0O0C4O15171,,
code-creation,Function,10,147624,0x3f792a6ca3d6,705, node:internal/crypto/random:1:1,0x3f792a6c98c8,~
code-source-info,0x3f792a6ca3d6,150,0,15171,C0O0C272O25C278O34C284O59C290O81C296O104C302O128C308O138C314O163C320O188C326O199C332O214C338O237C344O264C350O425C353O425C358O317C364O335C370O353C376O370C382O389C388O407C394O501C397O501C402O463C408O479C414O559C417O559C422O536C428O544C433O680C436O680C441O680C446O602C452O628C458O650C464O831C467O831C472O719C478O737C484O756C490O776C496O793C502O811C508O969C511O969C516O874C522O895C528O915C534O931C540O949C546O1025C549O1025C554O1010C560O1072C567O1112C570O1112C575O1112C577O4340C579O4340C581O4527C591O4527C596O4527C598O4577C601O4589C605O4577C607O4628C608O4628C610O4666C612O4666C614O9167C618O9167C620O9176C621O9176C623O9190C624O9190C626O9223C627O9223C629O9231C630O9231C632O14986C639O15007C645O15021C651O15039C657O15054C663O15068C669O15086C675O15099C681O15118C687O15132C693O15149C699O15001C704O15170,,
tick,0x7f40773a70af,147712,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c791c,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,148085,0x3f792a6cc0f6,5, node:internal/crypto/pbkdf2:1:1,0x3f792a6cbe90,~
script-source,151,node:internal/crypto/pbkdf2,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  PBKDF2Job\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst { ERR_MISSING_OPTION } = require('internal/errors').codes;\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  normalizeHashName\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nfunction pbkdf2(password\x2C salt\x2C iterations\x2C keylen\x2C digest\x2C callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  validateCallback(callback);\n\n  const job = new PBKDF2Job(\n    kCryptoJobAsync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const encoding = getDefaultEncoding();\n  job.ondone = (err\x2C result) => {\n    if (err !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C err);\n    const buf = Buffer.from(result);\n    if (encoding === 'buffer')\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\n  };\n\n  job.run();\n}\n\nfunction pbkdf2Sync(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  const job = new PBKDF2Job(\n    kCryptoJobSync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const { 0: err\x2C 1: result } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  const buf = Buffer.from(result);\n  const encoding = getDefaultEncoding();\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\n}\n\nfunction check(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  validateString(digest\x2C 'digest');\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateUint32(iterations\x2C 'iterations'\x2C true);\n  validateUint32(keylen\x2C 'keylen');\n\n  return { password\x2C salt\x2C iterations\x2C keylen\x2C digest };\n}\n\nasync function pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const { iterations } = algorithm;\n  let { hash } = algorithm;\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\n  if (hash === undefined)\n    throw new ERR_MISSING_OPTION('algorithm.hash');\n  validateInteger(iterations\x2C 'algorithm.iterations'\x2C 1);\n\n  hash = normalizeHashName(hash.name);\n\n  const raw = baseKey[kKeyObject].export();\n\n  let byteLength = 64;  // the default\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    pbkdf2(raw\x2C salt\x2C iterations\x2C byteLength\x2C hash\x2C (err\x2C result) => {\n      if (err) return reject(err);\n      resolve(result.buffer);\n    });\n  });\n}\n\nmodule.exports = {\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  pbkdf2DeriveBits\x2C\n};\n
code-source-info,0x3f792a6cc0f6,151,0,3284,C0O0C4O3284,,
code-creation,Function,10,148294,0x3f792a6cc3fe,255, node:internal/crypto/pbkdf2:1:1,0x3f792a6cc070,~
code-source-info,0x3f792a6cc3fe,151,0,3284,C0O0C75O25C81O50C87O96C90O96C95O85C101O178C104O178C109O126C115O139C121O158C127O293C130O293C135O216C141O236C147O255C153O273C159O357C162O357C167O383C172O334C178O485C181O485C186O402C192O426C198O448C204O469C210O551C213O551C218O529C224O3218C231O3239C237O3249C243O3263C249O3233C254O3283,,
tick,0x1249385,148406,1,0xb53890,6,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c7957,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,148554,0x3f792a6cce36,5, node:internal/crypto/scrypt:1:1,0x3f792a6ccc00,~
script-source,152,node:internal/crypto/scrypt,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  ScryptJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateInt32\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_SCRYPT_INVALID_PARAMETER\x2C\n    ERR_CRYPTO_SCRYPT_NOT_SUPPORTED\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n} = require('internal/crypto/util');\n\nconst defaults = {\n  N: 16384\x2C\n  r: 8\x2C\n  p: 1\x2C\n  maxmem: 32 << 20\x2C  // 32 MiB\x2C matches SCRYPT_MAX_MEM.\n};\n\nfunction scrypt(password\x2C salt\x2C keylen\x2C options\x2C callback = defaults) {\n  if (callback === defaults) {\n    callback = options;\n    options = defaults;\n  }\n\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n\n  validateCallback(callback);\n\n  const job = new ScryptJob(\n    kCryptoJobAsync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n\n  const encoding = getDefaultEncoding();\n  job.ondone = (error\x2C result) => {\n    if (error !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C error);\n    const buf = Buffer.from(result);\n    if (encoding === 'buffer')\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\n  };\n\n  job.run();\n}\n\nfunction scryptSync(password\x2C salt\x2C keylen\x2C options = defaults) {\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n  const job = new ScryptJob(\n    kCryptoJobSync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n  const { 0: err\x2C 1: result } = job.run();\n\n  if (err !== undefined)\n    throw err;\n\n  const buf = Buffer.from(result);\n  const encoding = getDefaultEncoding();\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\n}\n\nfunction check(password\x2C salt\x2C keylen\x2C options) {\n  if (ScryptJob === undefined)\n    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\n\n  let { N\x2C r\x2C p\x2C maxmem } = defaults;\n  if (options && options !== defaults) {\n    const has_N = options.N !== undefined;\n    if (has_N) {\n      N = options.N;\n      validateUint32(N\x2C 'N');\n    }\n    if (options.cost !== undefined) {\n      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      N = options.cost;\n      validateUint32(N\x2C 'cost');\n    }\n    const has_r = (options.r !== undefined);\n    if (has_r) {\n      r = options.r;\n      validateUint32(r\x2C 'r');\n    }\n    if (options.blockSize !== undefined) {\n      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      r = options.blockSize;\n      validateUint32(r\x2C 'blockSize');\n    }\n    const has_p = options.p !== undefined;\n    if (has_p) {\n      p = options.p;\n      validateUint32(p\x2C 'p');\n    }\n    if (options.parallelization !== undefined) {\n      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      p = options.parallelization;\n      validateUint32(p\x2C 'parallelization');\n    }\n    if (options.maxmem !== undefined) {\n      maxmem = options.maxmem;\n      validateInteger(maxmem\x2C 'maxmem'\x2C 0);\n    }\n    if (N === 0) N = defaults.N;\n    if (r === 0) r = defaults.r;\n    if (p === 0) p = defaults.p;\n    if (maxmem === 0) maxmem = defaults.maxmem;\n  }\n\n  return { password\x2C salt\x2C keylen\x2C N\x2C r\x2C p\x2C maxmem };\n}\n\nmodule.exports = {\n  scrypt\x2C\n  scryptSync\x2C\n};\n
code-source-info,0x3f792a6cce36,152,0,3595,C0O0C4O3595,,
code-creation,Function,10,148759,0x3f792a6cd10e,217, node:internal/crypto/scrypt:1:1,0x3f792a6ccdb0,~
code-source-info,0x3f792a6cd10e,152,0,3595,C0O0C63O25C69O85C72O85C77O74C83O167C86O167C91O115C97O128C103O147C109O281C112O281C117O205C123O225C129O244C135O261C141O419C144O419C149O419C154O337C160O378C166O506C169O506C174O458C180O482C186O557C190O557C192O3549C199O3570C205O3580C211O3564C216O3594,,
code-creation,Eval,10,148953,0x3f792a6cdc16,5, node:internal/crypto/hkdf:1:1,0x3f792a6cd920,~
script-source,153,node:internal/crypto/hkdf,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  HKDFJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst { kMaxLength } = require('buffer');\n\nconst {\n  getArrayBufferOrView\x2C\n  normalizeHashName\x2C\n  toBuf\x2C\n  validateByteSource\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  createSecretKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\n\nconst validateParameters = hideStackFrames((hash\x2C key\x2C salt\x2C info\x2C length) => {\n  validateString(hash\x2C 'digest');\n  key = prepareKey(key);\n  salt = validateByteSource(salt\x2C 'salt');\n  info = validateByteSource(info\x2C 'info');\n\n  validateInteger(length\x2C 'length'\x2C 0\x2C kMaxLength);\n\n  if (info.byteLength > 1024) {\n    throw ERR_OUT_OF_RANGE(\n      'info'\x2C\n      'must not contain more than 1024 bytes'\x2C\n      info.byteLength);\n  }\n\n  return {\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  };\n});\n\nfunction prepareKey(key) {\n  if (isKeyObject(key))\n    return key;\n\n  // TODO(@jasnell): createSecretKey should allow using an ArrayBuffer\n  if (isAnyArrayBuffer(key))\n    return createSecretKey(new Uint8Array(key));\n\n  key = toBuf(key);\n\n  if (!isArrayBufferView(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'ikm'\x2C\n      [\n        'string'\x2C\n        'SecretKeyObject'\x2C\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n        'Buffer'\x2C\n      ]\x2C\n      key);\n  }\n\n  return createSecretKey(key);\n}\n\nfunction hkdf(hash\x2C key\x2C salt\x2C info\x2C length\x2C callback) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  validateCallback(callback);\n\n  const job = new HKDFJob(kCryptoJobAsync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n\n  job.run();\n}\n\nfunction hkdfSync(hash\x2C key\x2C salt\x2C info\x2C length) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  const job = new HKDFJob(kCryptoJobSync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n  const { 0: err\x2C 1: bits } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  return bits;\n}\n\nasync function hkdfDeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const { hash } = algorithm;\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\n  const info = getArrayBufferOrView(algorithm.info\x2C 'algorithm.info');\n  if (hash === undefined)\n    throw new ERR_MISSING_OPTION('algorithm.hash');\n\n  let byteLength = 512 / 8;\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    hkdf(\n      normalizeHashName(hash.name)\x2C\n      baseKey[kKeyObject]\x2C\n      salt\x2C\n      info\x2C\n      byteLength\x2C\n      (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n}\n\nmodule.exports = {\n  hkdf\x2C\n  hkdfSync\x2C\n  hkdfDeriveBits\x2C\n};\n
code-source-info,0x3f792a6cdc16,153,0,3647,C0O0C4O3647,,
code-creation,Function,10,149156,0x3f792a6cdfce,362, node:internal/crypto/hkdf:1:1,0x3f792a6cdb90,~
code-source-info,0x3f792a6cdfce,153,0,3647,C0O0C102O25C108O50C114O61C120O151C123O151C128O101C134O112C140O131C146O266C149O266C154O189C160O209C166O228C172O246C178O322C181O322C186O307C192O444C195O444C200O352C206O376C212O397C218O406C224O428C230O524C233O524C238O488C244O507C250O590C253O590C258O568C264O670C267O670C272O627C278O647C284O822C287O822C292O822C297O726C303O752C309O774C315O801C320O878C325O878C329O878C331O3587C338O3608C344O3616C350O3628C356O3602C361O3646,,
tick,0x111abc4,149528,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6ce0b7,0x7f4060044ae0,0x7f40600432df,0x3f792a6c7983,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,149866,0x3f792a6cf6e6,5, node:internal/crypto/keys:1:1,0x3f792a6cf1c0,~
script-source,154,node:internal/crypto/keys,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeSlice\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  KeyObjectHandle\x2C\n  createNativeKeyObjectClass\x2C\n  kKeyTypeSecret\x2C\n  kKeyTypePublic\x2C\n  kKeyTypePrivate\x2C\n  kKeyFormatPEM\x2C\n  kKeyFormatDER\x2C\n  kKeyFormatJWK\x2C\n  kKeyEncodingPKCS1\x2C\n  kKeyEncodingPKCS8\x2C\n  kKeyEncodingSPKI\x2C\n  kKeyEncodingSEC1\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_CRYPTO_INVALID_JWK\x2C\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  kHandle\x2C\n  kKeyObject\x2C\n  getArrayBufferOrView\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst kAlgorithm = Symbol('kAlgorithm');\nconst kExtractable = Symbol('kExtractable');\nconst kKeyType = Symbol('kKeyType');\nconst kKeyUsages = Symbol('kKeyUsages');\n\n// Key input contexts.\nconst kConsumePublic = 0;\nconst kConsumePrivate = 1;\nconst kCreatePublic = 2;\nconst kCreatePrivate = 3;\n\nconst encodingNames = [];\nfor (const m of [[kKeyEncodingPKCS1\x2C 'pkcs1']\x2C [kKeyEncodingPKCS8\x2C 'pkcs8']\x2C\n                 [kKeyEncodingSPKI\x2C 'spki']\x2C [kKeyEncodingSEC1\x2C 'sec1']])\n  encodingNames[m[0]] = m[1];\n\n// Creating the KeyObject class is a little complicated due to inheritance\n// and the fact that KeyObjects should be transferrable between threads\x2C\n// which requires the KeyObject base class to be implemented in C++.\n// The creation requires a callback to make sure that the NativeKeyObject\n// base class cannot exist without the other KeyObject implementations.\nconst {\n  0: KeyObject\x2C\n  1: SecretKeyObject\x2C\n  2: PublicKeyObject\x2C\n  3: PrivateKeyObject\x2C\n} = createNativeKeyObjectClass((NativeKeyObject) => {\n  // Publicly visible KeyObject class.\n  class KeyObject extends NativeKeyObject {\n    constructor(type\x2C handle) {\n      if (type !== 'secret' && type !== 'public' && type !== 'private')\n        throw new ERR_INVALID_ARG_VALUE('type'\x2C type);\n      if (typeof handle !== 'object' || !(handle instanceof KeyObjectHandle))\n        throw new ERR_INVALID_ARG_TYPE('handle'\x2C 'object'\x2C handle);\n\n      super(handle);\n\n      this[kKeyType] = type;\n\n      ObjectDefineProperty(this\x2C kHandle\x2C {\n        __proto__: null\x2C\n        value: handle\x2C\n        enumerable: false\x2C\n        configurable: false\x2C\n        writable: false\n      });\n    }\n\n    get type() {\n      return this[kKeyType];\n    }\n\n    static from(key) {\n      if (!isCryptoKey(key))\n        throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n      return key[kKeyObject];\n    }\n\n    equals(otherKeyObject) {\n      if (!isKeyObject(otherKeyObject)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'otherKeyObject'\x2C 'KeyObject'\x2C otherKeyObject);\n      }\n\n      return otherKeyObject.type === this.type &&\n        this[kHandle].equals(otherKeyObject[kHandle]);\n    }\n  }\n\n  class SecretKeyObject extends KeyObject {\n    constructor(handle) {\n      super('secret'\x2C handle);\n    }\n\n    get symmetricKeySize() {\n      return this[kHandle].getSymmetricKeySize();\n    }\n\n    export(options) {\n      if (options !== undefined) {\n        validateObject(options\x2C 'options');\n        validateOneOf(\n          options.format\x2C 'options.format'\x2C [undefined\x2C 'buffer'\x2C 'jwk']);\n        if (options.format === 'jwk') {\n          return this[kHandle].exportJwk({}\x2C false);\n        }\n      }\n      return this[kHandle].export();\n    }\n  }\n\n  const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');\n  const kAsymmetricKeyDetails = Symbol('kAsymmetricKeyDetails');\n\n  function normalizeKeyDetails(details = {}) {\n    if (details.publicExponent !== undefined) {\n      return {\n        ...details\x2C\n        publicExponent:\n          bigIntArrayToUnsignedBigInt(new Uint8Array(details.publicExponent))\n      };\n    }\n    return details;\n  }\n\n  class AsymmetricKeyObject extends KeyObject {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(type\x2C handle) {\n      super(type\x2C handle);\n    }\n\n    get asymmetricKeyType() {\n      return this[kAsymmetricKeyType] ||\n             (this[kAsymmetricKeyType] = this[kHandle].getAsymmetricKeyType());\n    }\n\n    get asymmetricKeyDetails() {\n      switch (this.asymmetricKeyType) {\n        case 'rsa':\n        case 'rsa-pss':\n        case 'dsa':\n        case 'ec':\n          return this[kAsymmetricKeyDetails] ||\n             (this[kAsymmetricKeyDetails] = normalizeKeyDetails(\n               this[kHandle].keyDetail({})\n             ));\n        default:\n          return {};\n      }\n    }\n  }\n\n  class PublicKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('public'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        return this[kHandle].exportJwk({}\x2C false);\n      }\n      const {\n        format\x2C\n        type\n      } = parsePublicKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type);\n    }\n  }\n\n  class PrivateKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('private'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        if (options.passphrase !== undefined) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            'jwk'\x2C 'does not support encryption');\n        }\n        return this[kHandle].exportJwk({}\x2C false);\n      }\n      const {\n        format\x2C\n        type\x2C\n        cipher\x2C\n        passphrase\n      } = parsePrivateKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type\x2C cipher\x2C passphrase);\n    }\n  }\n\n  return [KeyObject\x2C SecretKeyObject\x2C PublicKeyObject\x2C PrivateKeyObject];\n});\n\nfunction parseKeyFormat(formatStr\x2C defaultFormat\x2C optionName) {\n  if (formatStr === undefined && defaultFormat !== undefined)\n    return defaultFormat;\n  else if (formatStr === 'pem')\n    return kKeyFormatPEM;\n  else if (formatStr === 'der')\n    return kKeyFormatDER;\n  else if (formatStr === 'jwk')\n    return kKeyFormatJWK;\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C formatStr);\n}\n\nfunction parseKeyType(typeStr\x2C required\x2C keyType\x2C isPublic\x2C optionName) {\n  if (typeStr === undefined && !required) {\n    return undefined;\n  } else if (typeStr === 'pkcs1') {\n    if (keyType !== undefined && keyType !== 'rsa') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for RSA keys');\n    }\n    return kKeyEncodingPKCS1;\n  } else if (typeStr === 'spki' && isPublic !== false) {\n    return kKeyEncodingSPKI;\n  } else if (typeStr === 'pkcs8' && isPublic !== true) {\n    return kKeyEncodingPKCS8;\n  } else if (typeStr === 'sec1' && isPublic !== true) {\n    if (keyType !== undefined && keyType !== 'ec') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for EC keys');\n    }\n    return kKeyEncodingSEC1;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C typeStr);\n}\n\nfunction option(name\x2C objName) {\n  return objName === undefined ?\n    `options.${name}` : `options.${objName}.${name}`;\n}\n\nfunction parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName) {\n  const { format: formatStr\x2C type: typeStr } = enc;\n\n  const isInput = keyType === undefined;\n  const format = parseKeyFormat(formatStr\x2C\n                                isInput ? kKeyFormatPEM : undefined\x2C\n                                option('format'\x2C objName));\n\n  const isRequired = (!isInput ||\n                      format === kKeyFormatDER) &&\n                      format !== kKeyFormatJWK;\n  const type = parseKeyType(typeStr\x2C\n                            isRequired\x2C\n                            keyType\x2C\n                            isPublic\x2C\n                            option('type'\x2C objName));\n  return { format\x2C type };\n}\n\nfunction isStringOrBuffer(val) {\n  return typeof val === 'string' ||\n         isArrayBufferView(val) ||\n         isAnyArrayBuffer(val);\n}\n\nfunction parseKeyEncoding(enc\x2C keyType\x2C isPublic\x2C objName) {\n  validateObject(enc\x2C 'options');\n\n  const isInput = keyType === undefined;\n\n  const {\n    format\x2C\n    type\n  } = parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName);\n\n  let cipher\x2C passphrase\x2C encoding;\n  if (isPublic !== true) {\n    ({ cipher\x2C passphrase\x2C encoding } = enc);\n\n    if (!isInput) {\n      if (cipher != null) {\n        if (typeof cipher !== 'string')\n          throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n        if (format === kKeyFormatDER &&\n            (type === kKeyEncodingPKCS1 ||\n             type === kKeyEncodingSEC1)) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            encodingNames[type]\x2C 'does not support encryption');\n        }\n      } else if (passphrase !== undefined) {\n        throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n      }\n    }\n\n    if ((isInput && passphrase !== undefined &&\n         !isStringOrBuffer(passphrase)) ||\n        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {\n      throw new ERR_INVALID_ARG_VALUE(option('passphrase'\x2C objName)\x2C\n                                      passphrase);\n    }\n  }\n\n  if (passphrase !== undefined)\n    passphrase = getArrayBufferOrView(passphrase\x2C 'key.passphrase'\x2C encoding);\n\n  return { format\x2C type\x2C cipher\x2C passphrase };\n}\n\n// Parses the public key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePublicKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C keyType ? true : undefined\x2C objName);\n}\n\n// Parses the private key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePrivateKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C false\x2C objName);\n}\n\nfunction getKeyObjectHandle(key\x2C ctx) {\n  if (ctx === kCreatePrivate) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      ['string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      key\n    );\n  }\n\n  if (key.type !== 'private') {\n    if (ctx === kConsumePrivate || ctx === kCreatePublic)\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'private');\n    if (key.type !== 'public') {\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C\n                                                   'private or public');\n    }\n  }\n\n  return key[kHandle];\n}\n\nfunction getKeyTypes(allowKeyObject\x2C bufferOnly = false) {\n  const types = [\n    'ArrayBuffer'\x2C\n    'Buffer'\x2C\n    'TypedArray'\x2C\n    'DataView'\x2C\n    'string'\x2C // Only if bufferOnly == false\n    'KeyObject'\x2C // Only if allowKeyObject == true && bufferOnly == false\n    'CryptoKey'\x2C // Only if allowKeyObject == true && bufferOnly == false\n  ];\n  if (bufferOnly) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 4);\n  } else if (!allowKeyObject) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 5);\n  }\n  return types;\n}\n\nfunction getKeyObjectHandleFromJwk(key\x2C ctx) {\n  validateObject(key\x2C 'key');\n  validateOneOf(\n    key.kty\x2C 'key.kty'\x2C ['RSA'\x2C 'EC'\x2C 'OKP']);\n  const isPublic = ctx === kConsumePublic || ctx === kCreatePublic;\n\n  if (key.kty === 'OKP') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['Ed25519'\x2C 'Ed448'\x2C 'X25519'\x2C 'X448']);\n    validateString(key.x\x2C 'key.x');\n\n    if (!isPublic)\n      validateString(key.d\x2C 'key.d');\n\n    let keyData;\n    if (isPublic)\n      keyData = Buffer.from(key.x\x2C 'base64');\n    else\n      keyData = Buffer.from(key.d\x2C 'base64');\n\n    switch (key.crv) {\n      case 'Ed25519':\n      case 'X25519':\n        if (keyData.byteLength !== 32) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'Ed448':\n        if (keyData.byteLength !== 57) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'X448':\n        if (keyData.byteLength !== 56) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n    }\n\n    const handle = new KeyObjectHandle();\n\n    const keyType = isPublic ? kKeyTypePublic : kKeyTypePrivate;\n    if (!handle.initEDRaw(key.crv\x2C keyData\x2C keyType)) {\n      throw new ERR_CRYPTO_INVALID_JWK();\n    }\n\n    return handle;\n  }\n\n  if (key.kty === 'EC') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['P-256'\x2C 'secp256k1'\x2C 'P-384'\x2C 'P-521']);\n    validateString(key.x\x2C 'key.x');\n    validateString(key.y\x2C 'key.y');\n\n    const jwk = {\n      kty: key.kty\x2C\n      crv: key.crv\x2C\n      x: key.x\x2C\n      y: key.y\n    };\n\n    if (!isPublic) {\n      validateString(key.d\x2C 'key.d');\n      jwk.d = key.d;\n    }\n\n    const handle = new KeyObjectHandle();\n    const type = handle.initJwk(jwk\x2C jwk.crv);\n    if (type === undefined)\n      throw new ERR_CRYPTO_INVALID_JWK();\n\n    return handle;\n  }\n\n  // RSA\n  validateString(key.n\x2C 'key.n');\n  validateString(key.e\x2C 'key.e');\n\n  const jwk = {\n    kty: key.kty\x2C\n    n: key.n\x2C\n    e: key.e\n  };\n\n  if (!isPublic) {\n    validateString(key.d\x2C 'key.d');\n    validateString(key.p\x2C 'key.p');\n    validateString(key.q\x2C 'key.q');\n    validateString(key.dp\x2C 'key.dp');\n    validateString(key.dq\x2C 'key.dq');\n    validateString(key.qi\x2C 'key.qi');\n    jwk.d = key.d;\n    jwk.p = key.p;\n    jwk.q = key.q;\n    jwk.dp = key.dp;\n    jwk.dq = key.dq;\n    jwk.qi = key.qi;\n  }\n\n  const handle = new KeyObjectHandle();\n  const type = handle.initJwk(jwk);\n  if (type === undefined)\n    throw new ERR_CRYPTO_INVALID_JWK();\n\n  return handle;\n}\n\nfunction prepareAsymmetricKey(key\x2C ctx) {\n  if (isKeyObject(key)) {\n    // Best case: A key object\x2C as simple as that.\n    return { data: getKeyObjectHandle(key\x2C ctx) };\n  } else if (isCryptoKey(key)) {\n    return { data: getKeyObjectHandle(key[kKeyObject]\x2C ctx) };\n  } else if (isStringOrBuffer(key)) {\n    // Expect PEM by default\x2C mostly for backward compatibility.\n    return { format: kKeyFormatPEM\x2C data: getArrayBufferOrView(key\x2C 'key') };\n  } else if (typeof key === 'object') {\n    const { key: data\x2C encoding\x2C format } = key;\n    // The 'key' property can be a KeyObject as well to allow specifying\n    // additional options such as padding along with the key.\n    if (isKeyObject(data))\n      return { data: getKeyObjectHandle(data\x2C ctx) };\n    else if (isCryptoKey(data))\n      return { data: getKeyObjectHandle(data[kKeyObject]\x2C ctx) };\n    else if (isJwk(data) && format === 'jwk')\n      return { data: getKeyObjectHandleFromJwk(data\x2C ctx)\x2C format: 'jwk' };\n    // Either PEM or DER using PKCS#1 or SPKI.\n    if (!isStringOrBuffer(data)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'key.key'\x2C\n        getKeyTypes(ctx !== kCreatePrivate)\x2C\n        data);\n    }\n\n    const isPublic =\n      (ctx === kConsumePrivate || ctx === kCreatePrivate) ? false : undefined;\n    return {\n      data: getArrayBufferOrView(data\x2C 'key'\x2C encoding)\x2C\n      ...parseKeyEncoding(key\x2C undefined\x2C isPublic)\n    };\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'key'\x2C\n    getKeyTypes(ctx !== kCreatePrivate)\x2C\n    key);\n}\n\nfunction preparePrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePrivate);\n}\n\nfunction preparePublicOrPrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePublic);\n}\n\nfunction prepareSecretKey(key\x2C encoding\x2C bufferOnly = false) {\n  if (!bufferOnly) {\n    if (isKeyObject(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kHandle];\n    } else if (isCryptoKey(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kKeyObject][kHandle];\n    }\n  }\n  if (typeof key !== 'string' &&\n      !isArrayBufferView(key) &&\n      !isAnyArrayBuffer(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      getKeyTypes(!bufferOnly\x2C bufferOnly)\x2C\n      key);\n  }\n  return getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n}\n\nfunction createSecretKey(key\x2C encoding) {\n  key = prepareSecretKey(key\x2C encoding\x2C true);\n  if (key.byteLength === 0)\n    throw new ERR_OUT_OF_RANGE('key.byteLength'\x2C '> 0'\x2C key.byteLength);\n  const handle = new KeyObjectHandle();\n  handle.init(kKeyTypeSecret\x2C key);\n  return new SecretKeyObject(handle);\n}\n\nfunction createPublicKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePublic);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePublic\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PublicKeyObject(handle);\n}\n\nfunction createPrivateKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePrivate);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePrivate\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PrivateKeyObject(handle);\n}\n\nfunction isKeyObject(obj) {\n  return obj != null && obj[kKeyType] !== undefined;\n}\n\n// Our implementation of CryptoKey is a simple wrapper around a KeyObject\n// that adapts it to the standard interface. This implementation also\n// extends the JSTransferable class\x2C allowing the CryptoKey to be cloned\n// to Workers.\n// TODO(@jasnell): Embedder environments like electron may have issues\n// here similar to other things like URL. A chromium provided CryptoKey\n// will not be recognized as a Node.js CryptoKey\x2C and vice versa. It\n// would be fantastic if we could find a way of making those interop.\nclass CryptoKey extends JSTransferable {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `CryptoKey ${inspect({\n      type: this.type\x2C\n      extractable: this.extractable\x2C\n      algorithm: this.algorithm\x2C\n      usages: this.usages\n    }\x2C opts)}`;\n  }\n\n  get type() {\n    return this[kKeyObject].type;\n  }\n\n  get extractable() {\n    return this[kExtractable];\n  }\n\n  get algorithm() {\n    return this[kAlgorithm];\n  }\n\n  get usages() {\n    return ArrayFrom(this[kKeyUsages]);\n  }\n\n  [kClone]() {\n    const keyObject = this[kKeyObject];\n    const algorithm = this.algorithm;\n    const extractable = this.extractable;\n    const usages = this.usages;\n\n    return {\n      data: {\n        keyObject\x2C\n        algorithm\x2C\n        usages\x2C\n        extractable\x2C\n      }\x2C\n      deserializeInfo: 'internal/crypto/keys:InternalCryptoKey'\n    };\n  }\n\n  [kDeserialize]({ keyObject\x2C algorithm\x2C usages\x2C extractable }) {\n    this[kKeyObject] = keyObject;\n    this[kAlgorithm] = algorithm;\n    this[kKeyUsages] = usages;\n    this[kExtractable] = extractable;\n  }\n}\n\n// All internal code must use new InternalCryptoKey to create\n// CryptoKey instances. The CryptoKey class is exposed to end\n// user code but is not permitted to be constructed directly.\nclass InternalCryptoKey extends JSTransferable {\n  constructor(\n    keyObject\x2C\n    algorithm\x2C\n    keyUsages\x2C\n    extractable) {\n    super();\n    // Using symbol properties here currently instead of private\n    // properties because (for now) the performance penalty of\n    // private fields is still too high.\n    this[kKeyObject] = keyObject;\n    this[kAlgorithm] = algorithm;\n    this[kExtractable] = extractable;\n    this[kKeyUsages] = keyUsages;\n  }\n}\n\nInternalCryptoKey.prototype.constructor = CryptoKey;\nObjectSetPrototypeOf(InternalCryptoKey.prototype\x2C CryptoKey.prototype);\n\nfunction isCryptoKey(obj) {\n  return obj != null && obj[kKeyObject] !== undefined;\n}\n\nfunction isJwk(obj) {\n  return obj != null && obj.kty !== undefined;\n}\n\nmodule.exports = {\n  // Public API.\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n\n  // These are designed for internal use only and should not be exposed.\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  parseKeyEncoding\x2C\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n  SecretKeyObject\x2C\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  isKeyObject\x2C\n  isCryptoKey\x2C\n  isJwk\x2C\n};\n
code-source-info,0x3f792a6cf6e6,154,0,20682,C0O0C4O20682,,
code-creation,Function,10,150839,0x3f792a6d0cde,1232, node:internal/crypto/keys:1:1,0x3f792a6cf660,~
code-source-info,0x3f792a6d0cde
tick,0x7f407732ae62,150948,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6ce0b7,0x7f4060044ae0,0x7f40600432df,0x3f792a6c7983,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,151376,0x3f792a6d402e,252, node:internal/crypto/keys:97:32,0x3f792a6cfda8,~
code-source-info,0x3f792a6d402e,154,2258,6210,C0O2258C17O2346C55O3444C88O3993C98O3993C102O3993C104O4055C114O4055C118O4055C120O4397C153O5106C181O5525C209O6137C218O6145C227O6156C236O6173C245O6190C251O6208,,
tick,0x1153b91,151745,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c7999,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,151836,0x3f792a6d63e6,5, node:internal/crypto/keygen:1:1,0x3f792a6d5fd0,~
script-source,155,node:internal/crypto/keygen,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  SafeArrayIterator\x2C\n} = primordials;\n\nconst {\n  DhKeyPairGenJob\x2C\n  DsaKeyPairGenJob\x2C\n  EcKeyPairGenJob\x2C\n  NidKeyPairGenJob\x2C\n  RsaKeyPairGenJob\x2C\n  SecretKeyGenJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kKeyVariantRSA_PSS\x2C\n  kKeyVariantRSA_SSA_PKCS1_v1_5\x2C\n  EVP_PKEY_ED25519\x2C\n  EVP_PKEY_ED448\x2C\n  EVP_PKEY_X25519\x2C\n  EVP_PKEY_X448\x2C\n  OPENSSL_EC_NAMED_CURVE\x2C\n  OPENSSL_EC_EXPLICIT_CURVE\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  SecretKeyObject\x2C\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  isJwk\n} = require('internal/crypto/keys');\n\nconst {\n  kAesKeyLengths\x2C\n} = require('internal/crypto/util');\n\nconst {\n  customPromisifyArgs\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  isInt32\x2C\n  isUint32\x2C\n  validateCallback\x2C\n  validateString\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\n} = require('internal/errors');\n\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst { getOptionValue } = require('internal/options');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\nfunction wrapKey(key\x2C ctor) {\n  if (typeof key === 'string' ||\n      isArrayBufferView(key) ||\n      isJwk(key))\n    return key;\n  return new ctor(key);\n}\n\nfunction generateKeyPair(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  validateCallback(callback);\n\n  const job = createJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    // If no encoding was chosen\x2C return key objects instead.\n    let { 0: pubkey\x2C 1: privkey } = result;\n    pubkey = wrapKey(pubkey\x2C PublicKeyObject);\n    privkey = wrapKey(privkey\x2C PrivateKeyObject);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C pubkey\x2C privkey);\n  };\n\n  job.run();\n}\n\nObjectDefineProperty(generateKeyPair\x2C customPromisifyArgs\x2C {\n  __proto__: null\x2C\n  value: ['publicKey'\x2C 'privateKey']\x2C\n  enumerable: false\n});\n\nfunction generateKeyPairSync(type\x2C options) {\n  return handleError(createJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nfunction handleError(ret) {\n  if (ret == null)\n    return; // async\n\n  const { 0: err\x2C 1: keys } = ret;\n  if (err !== undefined)\n    throw err;\n\n  const { 0: publicKey\x2C 1: privateKey } = keys;\n\n  // If no encoding was chosen\x2C return key objects instead.\n  return {\n    publicKey: wrapKey(publicKey\x2C PublicKeyObject)\x2C\n    privateKey: wrapKey(privateKey\x2C PrivateKeyObject)\n  };\n}\n\nfunction parseKeyEncoding(keyType\x2C options = kEmptyObject) {\n  const { publicKeyEncoding\x2C privateKeyEncoding } = options;\n\n  let publicFormat\x2C publicType;\n  if (publicKeyEncoding == null) {\n    publicFormat = publicType = undefined;\n  } else if (typeof publicKeyEncoding === 'object') {\n    ({\n      format: publicFormat\x2C\n      type: publicType\n    } = parsePublicKeyEncoding(publicKeyEncoding\x2C keyType\x2C\n                               'publicKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.publicKeyEncoding'\x2C\n                                    publicKeyEncoding);\n  }\n\n  let privateFormat\x2C privateType\x2C cipher\x2C passphrase;\n  if (privateKeyEncoding == null) {\n    privateFormat = privateType = undefined;\n  } else if (typeof privateKeyEncoding === 'object') {\n    ({\n      format: privateFormat\x2C\n      type: privateType\x2C\n      cipher\x2C\n      passphrase\n    } = parsePrivateKeyEncoding(privateKeyEncoding\x2C keyType\x2C\n                                'privateKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.privateKeyEncoding'\x2C\n                                    privateKeyEncoding);\n  }\n\n  return [\n    publicFormat\x2C\n    publicType\x2C\n    privateFormat\x2C\n    privateType\x2C\n    cipher\x2C\n    passphrase\x2C\n  ];\n}\n\nfunction createJob(mode\x2C type\x2C options) {\n  validateString(type\x2C 'type');\n\n  const encoding = new SafeArrayIterator(parseKeyEncoding(type\x2C options));\n\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n\n  switch (type) {\n    case 'rsa':\n    case 'rsa-pss':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      if (!isUint32(modulusLength))\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\n\n      let { publicExponent } = options;\n      if (publicExponent == null) {\n        publicExponent = 0x10001;\n      } else if (!isUint32(publicExponent)) {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.publicExponent'\x2C\n          publicExponent);\n      }\n\n      if (type === 'rsa') {\n        return new RsaKeyPairGenJob(\n          mode\x2C\n          kKeyVariantRSA_SSA_PKCS1_v1_5\x2C  // Used also for RSA-OAEP\n          modulusLength\x2C\n          publicExponent\x2C\n          ...encoding);\n      }\n\n      const {\n        hash\x2C mgf1Hash\x2C hashAlgorithm\x2C mgf1HashAlgorithm\x2C saltLength\n      } = options;\n      if (saltLength !== undefined && (!isInt32(saltLength) || saltLength < 0))\n        throw new ERR_INVALID_ARG_VALUE('options.saltLength'\x2C saltLength);\n      if (hashAlgorithm !== undefined && typeof hashAlgorithm !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.hashAlgorithm'\x2C hashAlgorithm);\n      if (mgf1HashAlgorithm !== undefined &&\n          typeof mgf1HashAlgorithm !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.mgf1HashAlgorithm'\x2C\n                                        mgf1HashAlgorithm);\n      if (hash !== undefined) {\n        pendingDeprecation && process.emitWarning(\n          '"options.hash" is deprecated\x2C ' +\n          'use "options.hashAlgorithm" instead.'\x2C\n          'DeprecationWarning'\x2C\n          'DEP0154');\n        if (typeof hash !== 'string' ||\n          (hashAlgorithm && hash !== hashAlgorithm)) {\n          throw new ERR_INVALID_ARG_VALUE('options.hash'\x2C hash);\n        }\n      }\n      if (mgf1Hash !== undefined) {\n        pendingDeprecation && process.emitWarning(\n          '"options.mgf1Hash" is deprecated\x2C ' +\n          'use "options.mgf1HashAlgorithm" instead.'\x2C\n          'DeprecationWarning'\x2C\n          'DEP0154');\n        if (typeof mgf1Hash !== 'string' ||\n          (mgf1HashAlgorithm && mgf1Hash !== mgf1HashAlgorithm)) {\n          throw new ERR_INVALID_ARG_VALUE('options.mgf1Hash'\x2C mgf1Hash);\n        }\n      }\n\n      return new RsaKeyPairGenJob(\n        mode\x2C\n        kKeyVariantRSA_PSS\x2C\n        modulusLength\x2C\n        publicExponent\x2C\n        hashAlgorithm || hash\x2C\n        mgf1HashAlgorithm || mgf1Hash\x2C\n        saltLength\x2C\n        ...encoding);\n    }\n    case 'dsa':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      if (!isUint32(modulusLength))\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\n\n      let { divisorLength } = options;\n      if (divisorLength == null) {\n        divisorLength = -1;\n      } else if (!isInt32(divisorLength) || divisorLength < 0) {\n        throw new ERR_INVALID_ARG_VALUE('options.divisorLength'\x2C divisorLength);\n      }\n\n      return new DsaKeyPairGenJob(\n        mode\x2C\n        modulusLength\x2C\n        divisorLength\x2C\n        ...encoding);\n    }\n    case 'ec':\n    {\n      validateObject(options\x2C 'options');\n      const { namedCurve } = options;\n      if (typeof namedCurve !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.namedCurve'\x2C namedCurve);\n      let { paramEncoding } = options;\n      if (paramEncoding == null || paramEncoding === 'named')\n        paramEncoding = OPENSSL_EC_NAMED_CURVE;\n      else if (paramEncoding === 'explicit')\n        paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;\n      else\n        throw new ERR_INVALID_ARG_VALUE('options.paramEncoding'\x2C paramEncoding);\n\n      return new EcKeyPairGenJob(\n        mode\x2C\n        namedCurve\x2C\n        paramEncoding\x2C\n        ...encoding);\n    }\n    case 'ed25519':\n    case 'ed448':\n    case 'x25519':\n    case 'x448':\n    {\n      let id;\n      switch (type) {\n        case 'ed25519':\n          id = EVP_PKEY_ED25519;\n          break;\n        case 'ed448':\n          id = EVP_PKEY_ED448;\n          break;\n        case 'x25519':\n          id = EVP_PKEY_X25519;\n          break;\n        case 'x448':\n          id = EVP_PKEY_X448;\n          break;\n      }\n      return new NidKeyPairGenJob(mode\x2C id\x2C ...encoding);\n    }\n    case 'dh':\n    {\n      validateObject(options\x2C 'options');\n      const { group\x2C primeLength\x2C prime\x2C generator } = options;\n      if (group != null) {\n        if (prime != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'prime');\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'primeLength');\n        if (generator != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'generator');\n        if (typeof group !== 'string')\n          throw new ERR_INVALID_ARG_VALUE('options.group'\x2C group);\n\n        return new DhKeyPairGenJob(mode\x2C group\x2C ...encoding);\n      }\n\n      if (prime != null) {\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('prime'\x2C 'primeLength');\n        if (!isArrayBufferView(prime))\n          throw new ERR_INVALID_ARG_VALUE('options.prime'\x2C prime);\n      } else if (primeLength != null) {\n        if (!isInt32(primeLength) || primeLength < 0)\n          throw new ERR_INVALID_ARG_VALUE('options.primeLength'\x2C primeLength);\n      } else {\n        throw new ERR_MISSING_OPTION(\n          'At least one of the group\x2C prime\x2C or primeLength options');\n      }\n\n      if (generator != null) {\n        if (!isInt32(generator) || generator < 0)\n          throw new ERR_INVALID_ARG_VALUE('options.generator'\x2C generator);\n      }\n      return new DhKeyPairGenJob(\n        mode\x2C\n        prime != null ? prime : primeLength\x2C\n        generator == null ? 2 : generator\x2C\n        ...encoding);\n    }\n    default:\n      // Fall through\n  }\n  throw new ERR_INVALID_ARG_VALUE('type'\x2C type\x2C 'must be a supported key type');\n}\n\n// Symmetric Key Generation\n\nfunction generateKeyJob(mode\x2C keyType\x2C options) {\n  validateString(keyType\x2C 'type');\n  validateObject(options\x2C 'options');\n  const { length } = options;\n  switch (keyType) {\n    case 'hmac':\n      validateInteger(length\x2C 'options.length'\x2C 8\x2C 2 ** 31 - 1);\n      break;\n    case 'aes':\n      validateOneOf(length\x2C 'options.length'\x2C kAesKeyLengths);\n      break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE(\n        'type'\x2C\n        keyType\x2C\n        'must be a supported key type');\n  }\n\n  return new SecretKeyGenJob(mode\x2C length);\n}\n\nfunction handleGenerateKeyError(ret) {\n  if (ret === undefined)\n    return; // async\n\n  const { 0: err\x2C 1: key } = ret;\n  if (err !== undefined)\n    throw err;\n\n  return wrapKey(key\x2C SecretKeyObject);\n}\n\nfunction generateKey(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  validateCallback(callback);\n\n  const job = generateKeyJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C key) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C wrapKey(key\x2C SecretKeyObject));\n  };\n\n  handleGenerateKeyError(job.run());\n}\n\nfunction generateKeySync(type\x2C options) {\n  return handleGenerateKeyError(\n    generateKeyJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nmodule.exports = {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n};\n
code-source-info,0x3f792a6d63e6,155,0,11528,C0O0C4O11528,,
code-creation,Function,10,152306,0x3f792a6d6a66,547, node:internal/crypto/keygen:1:1,0x3f792a6d6360,~
code-source-info,0x3f792a6d6a66,155,0,11528,C0O0C179O25C185O50C190O74C196O461C199O461C204O121C210O140C216O160C222O179C228O199C234O219C240O238C246O257C252O275C258O297C264O330C270O350C276O368C282O387C288O404C294O430C300O620C303O620C308O499C314O518C320O538C326O557C332O583C338O610C344O684C347O684C352O664C358O769C361O769C366O728C371O751C377O923C380O923C385O806C391O817C397O829C403O849C409O867C415O886C421O904C427O1068C430O1068C435O1068C440O979C446O1013C452O1040C458O1127C461O1127C466O1105C472O1187C475O1187C480O1168C485O1243C488O1243C492O1243C494O2105C505O2067C510O11430C517O11451C523O11470C529O11493C535O11508C541O11445C546O11527,,
code-creation,Eval,10,152699,0x3f792a6d83f6,5, node:internal/crypto/diffiehellman:1:1,0x3f792a6d7fe0,~
script-source,156,node:internal/crypto/diffiehellman,'use strict';\n\nconst {\n  ArrayBufferPrototypeSlice\x2C\n  FunctionPrototypeCall\x2C\n  MathCeil\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  DiffieHellman: _DiffieHellman\x2C\n  DiffieHellmanGroup: _DiffieHellmanGroup\x2C\n  ECDH: _ECDH\x2C\n  ECDHBitsJob\x2C\n  ECDHConvertKey: _ECDHConvertKey\x2C\n  statelessDH\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  codes: {\n    ERR_CRYPTO_ECDH_INVALID_FORMAT\x2C\n    ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY\x2C\n    ERR_CRYPTO_INCOMPATIBLE_KEY\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateCallback\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  KeyObject\x2C\n  isCryptoKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  toBuf\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    POINT_CONVERSION_COMPRESSED\x2C\n    POINT_CONVERSION_HYBRID\x2C\n    POINT_CONVERSION_UNCOMPRESSED\x2C\n  }\n} = internalBinding('constants');\n\nconst DH_GENERATOR = 2;\n\nfunction DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  if (!(this instanceof DiffieHellman))\n    return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n\n  if (typeof sizeOrKey !== 'number' &&\n      typeof sizeOrKey !== 'string' &&\n      !isArrayBufferView(sizeOrKey) &&\n      !isAnyArrayBuffer(sizeOrKey)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'sizeOrKey'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      sizeOrKey\n    );\n  }\n\n  // Sizes < 0 don't make sense but they _are_ accepted (and subsequently\n  // rejected with ERR_OSSL_BN_BITS_TOO_SMALL) by OpenSSL. The glue code\n  // in node_crypto.cc accepts values that are IsInt32() for that reason\n  // and that's why we do that here too.\n  if (typeof sizeOrKey === 'number')\n    validateInt32(sizeOrKey\x2C 'sizeOrKey');\n\n  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&\n      keyEncoding !== 'buffer') {\n    genEncoding = generator;\n    generator = keyEncoding;\n    keyEncoding = false;\n  }\n\n  const encoding = getDefaultEncoding();\n  keyEncoding = keyEncoding || encoding;\n  genEncoding = genEncoding || encoding;\n\n  if (typeof sizeOrKey !== 'number')\n    sizeOrKey = toBuf(sizeOrKey\x2C keyEncoding);\n\n  if (!generator) {\n    generator = DH_GENERATOR;\n  } else if (typeof generator === 'number') {\n    validateInt32(generator\x2C 'generator');\n  } else if (typeof generator === 'string') {\n    generator = toBuf(generator\x2C genEncoding);\n  } else if (!isArrayBufferView(generator) && !isAnyArrayBuffer(generator)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'generator'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      generator\n    );\n  }\n\n\n  this[kHandle] = new _DiffieHellman(sizeOrKey\x2C generator);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\n  });\n}\n\n\nfunction DiffieHellmanGroup(name) {\n  if (!(this instanceof DiffieHellmanGroup))\n    return new DiffieHellmanGroup(name);\n  this[kHandle] = new _DiffieHellmanGroup(name);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\n  });\n}\n\n\nDiffieHellmanGroup.prototype.generateKeys =\n    DiffieHellman.prototype.generateKeys =\n    dhGenerateKeys;\n\nfunction dhGenerateKeys(encoding) {\n  const keys = this[kHandle].generateKeys();\n  encoding = encoding || getDefaultEncoding();\n  return encode(keys\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.computeSecret =\n    DiffieHellman.prototype.computeSecret =\n    dhComputeSecret;\n\nfunction dhComputeSecret(key\x2C inEnc\x2C outEnc) {\n  const encoding = getDefaultEncoding();\n  inEnc = inEnc || encoding;\n  outEnc = outEnc || encoding;\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\n  const ret = this[kHandle].computeSecret(key);\n  if (typeof ret === 'string')\n    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();\n  return encode(ret\x2C outEnc);\n}\n\n\nDiffieHellmanGroup.prototype.getPrime =\n    DiffieHellman.prototype.getPrime =\n    dhGetPrime;\n\nfunction dhGetPrime(encoding) {\n  const prime = this[kHandle].getPrime();\n  encoding = encoding || getDefaultEncoding();\n  return encode(prime\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getGenerator =\n    DiffieHellman.prototype.getGenerator =\n    dhGetGenerator;\n\nfunction dhGetGenerator(encoding) {\n  const generator = this[kHandle].getGenerator();\n  encoding = encoding || getDefaultEncoding();\n  return encode(generator\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPublicKey =\n    DiffieHellman.prototype.getPublicKey =\n    dhGetPublicKey;\n\nfunction dhGetPublicKey(encoding) {\n  const key = this[kHandle].getPublicKey();\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPrivateKey =\n    DiffieHellman.prototype.getPrivateKey =\n    dhGetPrivateKey;\n\nfunction dhGetPrivateKey(encoding) {\n  const key = this[kHandle].getPrivateKey();\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellman.prototype.setPublicKey = function setPublicKey(key\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPublicKey(key);\n  return this;\n};\n\n\nDiffieHellman.prototype.setPrivateKey = function setPrivateKey(key\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPrivateKey(key);\n  return this;\n};\n\n\nfunction ECDH(curve) {\n  if (!(this instanceof ECDH))\n    return new ECDH(curve);\n\n  validateString(curve\x2C 'curve');\n  this[kHandle] = new _ECDH(curve);\n}\n\nECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;\nECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;\nECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;\nECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;\n\nECDH.prototype.generateKeys = function generateKeys(encoding\x2C format) {\n  this[kHandle].generateKeys();\n\n  return this.getPublicKey(encoding\x2C format);\n};\n\nECDH.prototype.getPublicKey = function getPublicKey(encoding\x2C format) {\n  const f = getFormat(format);\n  const key = this[kHandle].getPublicKey(f);\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n};\n\nECDH.convertKey = function convertKey(key\x2C curve\x2C inEnc\x2C outEnc\x2C format) {\n  validateString(curve\x2C 'curve');\n  const encoding = inEnc || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  outEnc = outEnc || encoding;\n  const f = getFormat(format);\n  const convertedKey = _ECDHConvertKey(key\x2C curve\x2C f);\n  return encode(convertedKey\x2C outEnc);\n};\n\nfunction encode(buffer\x2C encoding) {\n  if (encoding && encoding !== 'buffer')\n    buffer = buffer.toString(encoding);\n  return buffer;\n}\n\nfunction getFormat(format) {\n  if (format) {\n    if (format === 'compressed')\n      return POINT_CONVERSION_COMPRESSED;\n    if (format === 'hybrid')\n      return POINT_CONVERSION_HYBRID;\n    if (format !== 'uncompressed')\n      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);\n  }\n  return POINT_CONVERSION_UNCOMPRESSED;\n}\n\nconst dhEnabledKeyTypes = new SafeSet(['dh'\x2C 'ec'\x2C 'x448'\x2C 'x25519']);\n\nfunction diffieHellman(options) {\n  validateObject(options\x2C 'options');\n\n  const { privateKey\x2C publicKey } = options;\n  if (!(privateKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.privateKey'\x2C privateKey);\n\n  if (!(publicKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.publicKey'\x2C publicKey);\n\n  if (privateKey.type !== 'private')\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(privateKey.type\x2C 'private');\n\n  if (publicKey.type !== 'public' && publicKey.type !== 'private') {\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(publicKey.type\x2C\n                                                 'private or public');\n  }\n\n  const privateType = privateKey.asymmetricKeyType;\n  const publicType = publicKey.asymmetricKeyType;\n  if (privateType !== publicType || !dhEnabledKeyTypes.has(privateType)) {\n    throw new ERR_CRYPTO_INCOMPATIBLE_KEY('key types for Diffie-Hellman'\x2C\n                                          `${privateType} and ${publicType}`);\n  }\n\n  return statelessDH(privateKey[kHandle]\x2C publicKey[kHandle]);\n}\n\n// The deriveBitsECDH function is part of the Web Crypto API and serves both\n// deriveKeys and deriveBits functions.\nfunction deriveBitsECDH(name\x2C publicKey\x2C privateKey\x2C callback) {\n  validateString(name\x2C 'name');\n  validateObject(publicKey\x2C 'publicKey');\n  validateObject(privateKey\x2C 'privateKey');\n  validateCallback(callback);\n  const job = new ECDHBitsJob(kCryptoJobAsync\x2C name\x2C publicKey\x2C privateKey);\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n  job.run();\n}\n\nasync function asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length) {\n  const { 'public': key } = algorithm;\n\n  // Null means that we're not asking for a specific number of bits\x2C just\n  // give us everything that is generated.\n  if (length !== null)\n    validateUint32(length\x2C 'length');\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\n\n  if (key.type !== 'public') {\n    throw lazyDOMException(\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\n  }\n  if (baseKey.type !== 'private') {\n    throw lazyDOMException(\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\n  }\n\n  if (\n    key.algorithm.name !== 'ECDH' &&\n    key.algorithm.name !== 'X25519' &&\n    key.algorithm.name !== 'X448'\n  ) {\n    throw lazyDOMException('Keys must be ECDH\x2C X25519\x2C or X448 keys'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== baseKey.algorithm.name) {\n    throw lazyDOMException(\n      'The public and private keys must be of the same type'\x2C\n      'InvalidAccessError');\n  }\n\n  if (\n    key.algorithm.name === 'ECDH' &&\n    key.algorithm.namedCurve !== baseKey.algorithm.namedCurve\n  ) {\n    throw lazyDOMException('Named curve mismatch'\x2C 'InvalidAccessError');\n  }\n\n  const bits = await new Promise((resolve\x2C reject) => {\n    deriveBitsECDH(\n      key.algorithm.name === 'ECDH' ? baseKey.algorithm.namedCurve : baseKey.algorithm.name\x2C\n      key[kKeyObject][kHandle]\x2C\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n\n  // If a length is not specified\x2C return the full derived secret\n  if (length === null)\n    return bits;\n\n  // If the length is not a multiple of 8 the nearest ceiled\n  // multiple of 8 is sliced.\n  length = MathCeil(length / 8);\n  const { byteLength } = bits;\n\n  // If the length is larger than the derived secret\x2C throw.\n  // Otherwise\x2C we either return the secret or a truncated\n  // slice.\n  if (byteLength < length)\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\n\n  return length === byteLength ?\n    bits :\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\n}\n\nmodule.exports = {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\x2C\n  deriveBitsECDH\x2C\n  asyncDeriveBitsECDH\x2C\n};\n
code-source-info,0x3f792a6d83f6,156,0,11555,C0O0C4O11555,,
code-creation,Function,10,153255,0x3f792a6d8dbe,913, node:internal/crypto/diffiehellman:1:1,0x3f792a6d8370,~
code-source-info,0x3f792a6d8dbe
tick,0x7f407774b821,153345,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c79dd,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,153671,0x3f792a6dac5e,5, node:internal/crypto/cipher:1:1,0x3f792a6da908,~
script-source,157,node:internal/crypto/cipher,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CipherBase\x2C\n  privateDecrypt: _privateDecrypt\x2C\n  privateEncrypt: _privateEncrypt\x2C\n  publicDecrypt: _publicDecrypt\x2C\n  publicEncrypt: _publicEncrypt\x2C\n  getCipherInfo: _getCipherInfo\x2C\n} = internalBinding('crypto');\n\nconst {\n  crypto: {\n    RSA_PKCS1_OAEP_PADDING\x2C\n    RSA_PKCS1_PADDING\x2C\n  }\n} = internalBinding('constants');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INVALID_STATE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  getDefaultEncoding\x2C\n  getArrayBufferOrView\x2C\n  getStringOption\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst { normalizeEncoding } = require('internal/util');\n\nconst { StringDecoder } = require('string_decoder');\n\nfunction rsaFunctionFor(method\x2C defaultPadding\x2C keyType) {\n  return (options\x2C buffer) => {\n    const { format\x2C type\x2C data\x2C passphrase } =\n      keyType === 'private' ?\n        preparePrivateKey(options) :\n        preparePublicOrPrivateKey(options);\n    const padding = options.padding || defaultPadding;\n    const { oaepHash\x2C encoding } = options;\n    let { oaepLabel } = options;\n    if (oaepHash !== undefined)\n      validateString(oaepHash\x2C 'key.oaepHash');\n    if (oaepLabel !== undefined)\n      oaepLabel = getArrayBufferOrView(oaepLabel\x2C 'key.oaepLabel'\x2C encoding);\n    buffer = getArrayBufferOrView(buffer\x2C 'buffer'\x2C encoding);\n    return method(data\x2C format\x2C type\x2C passphrase\x2C buffer\x2C padding\x2C oaepHash\x2C\n                  oaepLabel);\n  };\n}\n\nconst publicEncrypt = rsaFunctionFor(_publicEncrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                     'public');\nconst publicDecrypt = rsaFunctionFor(_publicDecrypt\x2C RSA_PKCS1_PADDING\x2C\n                                     'public');\nconst privateEncrypt = rsaFunctionFor(_privateEncrypt\x2C RSA_PKCS1_PADDING\x2C\n                                      'private');\nconst privateDecrypt = rsaFunctionFor(_privateDecrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                      'private');\n\nfunction getDecoder(decoder\x2C encoding) {\n  encoding = normalizeEncoding(encoding);\n  decoder = decoder || new StringDecoder(encoding);\n  assert(decoder.encoding === encoding\x2C 'Cannot change encoding');\n  return decoder;\n}\n\nfunction getUIntOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null) {\n    if (value >>> 0 !== value)\n      throw new ERR_INVALID_ARG_VALUE(`options.${key}`\x2C value);\n    return value;\n  }\n  return -1;\n}\n\nfunction createCipherBase(cipher\x2C credential\x2C options\x2C decipher\x2C iv) {\n  const authTagLength = getUIntOption(options\x2C 'authTagLength');\n  this[kHandle] = new CipherBase(decipher);\n  if (iv === undefined) {\n    this[kHandle].init(cipher\x2C credential\x2C authTagLength);\n  } else {\n    this[kHandle].initiv(cipher\x2C credential\x2C iv\x2C authTagLength);\n  }\n  this._decoder = null;\n\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nfunction createCipher(cipher\x2C password\x2C options\x2C decipher) {\n  validateString(cipher\x2C 'cipher');\n  password = getArrayBufferOrView(password\x2C 'password');\n\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C password\x2C options\x2C decipher]);\n}\n\nfunction createCipherWithIV(cipher\x2C key\x2C options\x2C decipher\x2C iv) {\n  validateString(cipher\x2C 'cipher');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  iv = iv === null ? null : getArrayBufferOrView(iv\x2C 'iv');\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C key\x2C options\x2C decipher\x2C iv]);\n}\n\n// The Cipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Cipher))\n    return new Cipher(cipher\x2C password\x2C options);\n\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C true]);\n}\n\nObjectSetPrototypeOf(Cipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipher\x2C LazyTransform);\n\nCipher.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this.push(this[kHandle].update(chunk\x2C encoding));\n  callback();\n};\n\nCipher.prototype._flush = function _flush(callback) {\n  try {\n    this.push(this[kHandle].final());\n  } catch (e) {\n    callback(e);\n    return;\n  }\n  callback();\n};\n\nCipher.prototype.update = function update(data\x2C inputEncoding\x2C outputEncoding) {\n  const encoding = getDefaultEncoding();\n  inputEncoding = inputEncoding || encoding;\n  outputEncoding = outputEncoding || encoding;\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C inputEncoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  const ret = this[kHandle].update(data\x2C inputEncoding);\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.write(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.final = function final(outputEncoding) {\n  outputEncoding = outputEncoding || getDefaultEncoding();\n  const ret = this[kHandle].final();\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.end(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.setAutoPadding = function setAutoPadding(ap) {\n  if (!this[kHandle].setAutoPadding(!!ap))\n    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');\n  return this;\n};\n\nCipher.prototype.getAuthTag = function getAuthTag() {\n  const ret = this[kHandle].getAuthTag();\n  if (ret === undefined)\n    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');\n  return ret;\n};\n\n\nfunction setAuthTag(tagbuf\x2C encoding) {\n  tagbuf = getArrayBufferOrView(tagbuf\x2C 'buffer'\x2C encoding);\n  if (!this[kHandle].setAuthTag(tagbuf))\n    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');\n  return this;\n}\n\nCipher.prototype.setAAD = function setAAD(aadbuf\x2C options) {\n  const encoding = getStringOption(options\x2C 'encoding');\n  const plaintextLength = getUIntOption(options\x2C 'plaintextLength');\n  aadbuf = getArrayBufferOrView(aadbuf\x2C 'aadbuf'\x2C encoding);\n  if (!this[kHandle].setAAD(aadbuf\x2C plaintextLength))\n    throw new ERR_CRYPTO_INVALID_STATE('setAAD');\n  return this;\n};\n\n// The Cipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Cipheriv))\n    return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C true\x2C iv]);\n}\n\nfunction addCipherPrototypeFunctions(constructor) {\n  constructor.prototype._transform = Cipher.prototype._transform;\n  constructor.prototype._flush = Cipher.prototype._flush;\n  constructor.prototype.update = Cipher.prototype.update;\n  constructor.prototype.final = Cipher.prototype.final;\n  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;\n  if (constructor === Cipheriv) {\n    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;\n  } else {\n    constructor.prototype.setAuthTag = setAuthTag;\n  }\n  constructor.prototype.setAAD = Cipher.prototype.setAAD;\n}\n\nObjectSetPrototypeOf(Cipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Cipheriv);\n\n// The Decipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Decipher))\n    return new Decipher(cipher\x2C password\x2C options);\n\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C false]);\n}\n\nObjectSetPrototypeOf(Decipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipher\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipher);\n\n// The Decipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Decipheriv))\n    return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C false\x2C iv]);\n}\n\nObjectSetPrototypeOf(Decipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipheriv);\n\nfunction getCipherInfo(nameOrNid\x2C options) {\n  if (typeof nameOrNid !== 'string' && typeof nameOrNid !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'nameOrNid'\x2C\n      ['string'\x2C 'number']\x2C\n      nameOrNid);\n  }\n  if (typeof nameOrNid === 'number')\n    validateInt32(nameOrNid\x2C 'nameOrNid');\n  let keyLength\x2C ivLength;\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n    ({ keyLength\x2C ivLength } = options);\n    if (keyLength !== undefined)\n      validateInt32(keyLength\x2C 'options.keyLength');\n    if (ivLength !== undefined)\n      validateInt32(ivLength\x2C 'options.ivLength');\n  }\n\n  const ret = _getCipherInfo({}\x2C nameOrNid\x2C keyLength\x2C ivLength);\n  if (ret !== undefined) {\n    if (ret.name) ret.name = StringPrototypeToLowerCase(ret.name);\n    if (ret.type) ret.type = StringPrototypeToLowerCase(ret.type);\n  }\n  return ret;\n}\n\nmodule.exports = {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n};\n
code-source-info,0x3f792a6dac5e,157,0,10241,C0O0C4O10241,,
code-creation,Function,10,154168,0x3f792a6db626,843, node:internal/crypto/cipher:1:1,0x3f792a6dabd8,~
code-source-info,0x3f792a6db
tick,0x7f407731c49c,154247,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c79ff,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,154355,0x3f792a6dcb06,5, node:internal/streams/lazy_transform:1:1,0x3f792a6dc990,~
script-source,158,node:internal/streams/lazy_transform,// LazyTransform is a special type of Transform stream that is lazily loaded.\n// This is used for performance with bi-API-ship: when two APIs are available\n// for the stream\x2C one conventional and one non-conventional.\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst stream = require('stream');\n\nconst {\n  getDefaultEncoding\n} = require('internal/crypto/util');\n\nmodule.exports = LazyTransform;\n\nfunction LazyTransform(options) {\n  this._options = options;\n}\nObjectSetPrototypeOf(LazyTransform.prototype\x2C stream.Transform.prototype);\nObjectSetPrototypeOf(LazyTransform\x2C stream.Transform);\n\nfunction makeGetter(name) {\n  return function() {\n    stream.Transform.call(this\x2C this._options);\n    this._writableState.decodeStrings = false;\n\n    if (!this._options || !this._options.defaultEncoding) {\n      this._writableState.defaultEncoding = getDefaultEncoding();\n    }\n\n    return this[name];\n  };\n}\n\nfunction makeSetter(name) {\n  return function(val) {\n    ObjectDefineProperty(this\x2C name\x2C {\n      __proto__: null\x2C\n      value: val\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\n    });\n  };\n}\n\nObjectDefineProperties(LazyTransform.prototype\x2C {\n  _readableState: {\n    __proto__: null\x2C\n    get: makeGetter('_readableState')\x2C\n    set: makeSetter('_readableState')\x2C\n    configurable: true\x2C\n    enumerable: true\n  }\x2C\n  _writableState: {\n    __proto__: null\x2C\n    get: makeGetter('_writableState')\x2C\n    set: makeSetter('_writableState')\x2C\n    configurable: true\x2C\n    enumerable: true\n  }\n});\n
code-source-info,0x3f792a6dcb06,158,0,1583,C0O0C4O1583,,
code-creation,Function,10,154467,0x3f792a6dce46,193, node:internal/streams/lazy_transform:1:1,0x3f792a6dca80,~
code-source-info,0x3f792a6dce46,158,0,1583,C0O0C29O243C34O269C40O293C45O348C48O348C52O348C54O401C57O401C62O378C68O435C70O450C74O566C82O584C87O594C92O531C97O606C100O649C105O606C110O1229C120O1260C128O1292C139O1331C153O1429C161O1461C172O1500C186O1192C192O1582,,
code-creation,LazyCompile,10,154543,0x3f792a6dd356,14,makeGetter node:internal/streams/lazy_transform:26:20,0x3f792a6dcb88,~
code-source-info,0x3f792a6dd356,158,681,970,C0O681C9O692C13O968,,
code-creation,LazyCompile,10,154612,0x3f792a6dd6f6,14,makeSetter node:internal/streams/lazy_transform:39:20,0x3f792a6dcc00,~
code-source-info,0x3f792a6dd6f6,158,991,1190,C0O991C9O1002C13O1188,,
code-creation,LazyCompile,10,154731,0x3f792a6dd8fe,22,rsaFunctionFor node:internal/crypto/cipher:65:24,0x3f792a6dac90,~
code-source-info,0x3f792a6dd8fe,157,1250,1975,C0O1250C17O1288C21O1973,,
code-creation,LazyCompile,10,154809,0x3f792a6de696,169,addCipherPrototypeFunctions node:internal/crypto/cipher:246:37,0x3f792a6daf60,~
code-source-info,0x3f792a6de696,157,7273,7828,C0O7303C8O7333C13O7343C17O7324C21O7369C29O7395C34O7405C38O7386C42O7427C50O7453C55O7463C59O7444C63O7485C71O7510C76O7520C80O7501C84O7541C92O7575C97O7585C101O7566C105O7603C107O7619C112O7651C120O7681C125O7691C129O7672C135O7730C142O7751C146O7783C154O7809C159O7819C163O7800C168O7827,,
tick,0x115ca82,155032,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c7a3f,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,155160,0x3f792a6dee86,5, node:internal/crypto/sig:1:1,0x3f792a6deb50,~
script-source,159,node:internal/crypto/sig,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_SIGN_KEY_REQUIRED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  Sign: _Sign\x2C\n  SignJob\x2C\n  Verify: _Verify\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kSigEncDER\x2C\n  kSigEncP1363\x2C\n  kSignJobModeSign\x2C\n  kSignJobModeVerify\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n} = require('internal/crypto/keys');\n\nconst { Writable } = require('stream');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nfunction Sign(algorithm\x2C options) {\n  if (!(this instanceof Sign))\n    return new Sign(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Sign();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Sign.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Sign\x2C Writable);\n\nSign.prototype._write = function _write(chunk\x2C encoding\x2C callback) {\n  this.update(chunk\x2C encoding);\n  callback();\n};\n\nSign.prototype.update = function update(data\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  this[kHandle].update(data\x2C encoding);\n  return this;\n};\n\nfunction getPadding(options) {\n  return getIntOption('padding'\x2C options);\n}\n\nfunction getSaltLength(options) {\n  return getIntOption('saltLength'\x2C options);\n}\n\nfunction getDSASignatureEncoding(options) {\n  if (typeof options === 'object') {\n    const { dsaEncoding = 'der' } = options;\n    if (dsaEncoding === 'der')\n      return kSigEncDER;\n    else if (dsaEncoding === 'ieee-p1363')\n      return kSigEncP1363;\n    throw new ERR_INVALID_ARG_VALUE('options.dsaEncoding'\x2C dsaEncoding);\n  }\n\n  return kSigEncDER;\n}\n\nfunction getIntOption(name\x2C options) {\n  const value = options[name];\n  if (value !== undefined) {\n    if (value === value >> 0) {\n      return value;\n    }\n    throw new ERR_INVALID_ARG_VALUE(`options.${name}`\x2C value);\n  }\n  return undefined;\n}\n\nSign.prototype.sign = function sign(options\x2C encoding) {\n  if (!options)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  const { data\x2C format\x2C type\x2C passphrase } = preparePrivateKey(options\x2C true);\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  const ret = this[kHandle].sign(data\x2C format\x2C type\x2C passphrase\x2C rsaPadding\x2C\n                                 pssSaltLength\x2C dsaSigEnc);\n\n  encoding = encoding || getDefaultEncoding();\n  if (encoding && encoding !== 'buffer')\n    return ret.toString(encoding);\n\n  return ret;\n};\n\nfunction signOneShot(algorithm\x2C data\x2C key\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateCallback(callback);\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!key)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\n  } = preparePrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeSign\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc);\n\n  if (!callback) {\n    const { 0: err\x2C 1: signature } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return Buffer.from(signature);\n  }\n\n  job.ondone = (error\x2C signature) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C Buffer.from(signature));\n  };\n  job.run();\n}\n\nfunction Verify(algorithm\x2C options) {\n  if (!(this instanceof Verify))\n    return new Verify(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Verify();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Verify.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Verify\x2C Writable);\n\nVerify.prototype._write = Sign.prototype._write;\nVerify.prototype.update = Sign.prototype.update;\n\nVerify.prototype.verify = function verify(options\x2C signature\x2C sigEncoding) {\n  const {\n    data\x2C\n    format\x2C\n    type\x2C\n    passphrase\n  } = preparePublicOrPrivateKey(options\x2C true);\n\n  sigEncoding = sigEncoding || getDefaultEncoding();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  signature = getArrayBufferOrView(signature\x2C 'signature'\x2C sigEncoding);\n\n  return this[kHandle].verify(data\x2C format\x2C type\x2C passphrase\x2C signature\x2C\n                              rsaPadding\x2C pssSaltLength\x2C dsaSigEnc);\n};\n\nfunction verifyOneShot(algorithm\x2C data\x2C key\x2C signature\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateCallback(callback);\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      data\n    );\n  }\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  if (!isArrayBufferView(signature)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'signature'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      signature\n    );\n  }\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\n  } = preparePublicOrPrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeVerify\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc\x2C\n    signature);\n\n  if (!callback) {\n    const { 0: err\x2C 1: result } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return result;\n  }\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C result);\n  };\n  job.run();\n}\n\nmodule.exports = {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\x2C\n};\n
code-source-info,0x3f792a6dee86,159,0,7083,C0O0C4O7083,,
code-creation,Function,10,155514,0x3f792a6df4de,563, node:internal/crypto/sig:1:1,0x3f792a6dee00,~
code-source-info,0x3f792a6df4de,159,0,7083,C0O0C126O25C132O50C137O74C143O220C146O220C151O220C156O129C162O163C168O189C174O319C177O319C182O259C188O279C194O299C200O518C203O518C208O368C214O377C220O396C226O407C232O426C238O444C244O458C250O474C256O494C262O615C265O615C270O556C276O580C282O602C288O711C291O711C296O659C302O680C308O766C311O766C316O753C322O805C325O805C330O794C336O858C339O858C344O835C350O1152C353O1178C361O1198C366O1152C371O1210C377O1210C382O1249C385O1254C394O1271C398O1368C401O1373C410O1390C414O2517C417O2522C426O2537C430O4681C433O4709C441O4729C446O4681C451O4741C457O4741C462O4782C465O4789C473O4813C478O4823C482O4806C486O4831C489O4838C497O4862C502O4872C506O4855C510O4881C513O4888C522O4905C526O7011C533O7032C539O7040C545O7055C551O7065C557O7026C562O7082,,
code-creation,Eval,10,155901,0x3f792a6e093e,5, node:internal/crypto/hash:1:1,0x3f792a6e0638,~
script-source,160,node:internal/crypto/hash,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  Hash: _Hash\x2C\n  HashJob\x2C\n  Hmac: _Hmac\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  getStringOption\x2C\n  jobPromise\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  Buffer\x2C\n} = require('buffer');\n\nconst {\n  codes: {\n    ERR_CRYPTO_HASH_FINALIZED\x2C\n    ERR_CRYPTO_HASH_UPDATE_FAILED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst kState = Symbol('kState');\nconst kFinalized = Symbol('kFinalized');\n\nfunction Hash(algorithm\x2C options) {\n  if (!(this instanceof Hash))\n    return new Hash(algorithm\x2C options);\n  if (!(algorithm instanceof _Hash))\n    validateString(algorithm\x2C 'algorithm');\n  const xofLen = typeof options === 'object' && options !== null ?\n    options.outputLength : undefined;\n  if (xofLen !== undefined)\n    validateUint32(xofLen\x2C 'options.outputLength');\n  this[kHandle] = new _Hash(algorithm\x2C xofLen);\n  this[kState] = {\n    [kFinalized]: false\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hash.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hash\x2C LazyTransform);\n\nHash.prototype.copy = function copy(options) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  return new Hash(this[kHandle]\x2C options);\n};\n\nHash.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this[kHandle].update(chunk\x2C encoding);\n  callback();\n};\n\nHash.prototype._flush = function _flush(callback) {\n  this.push(this[kHandle].digest());\n  callback();\n};\n\nHash.prototype.update = function update(data\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  if (!this[kHandle].update(data\x2C encoding))\n    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();\n  return this;\n};\n\n\nHash.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n  outputEncoding = outputEncoding || getDefaultEncoding();\n\n  // Explicit conversion for backward compatibility.\n  const ret = this[kHandle].digest(`${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nfunction Hmac(hmac\x2C key\x2C options) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hmac\x2C key\x2C options);\n  validateString(hmac\x2C 'hmac');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  this[kHandle] = new _Hmac();\n  this[kHandle].init(hmac\x2C key);\n  this[kState] = {\n    [kFinalized]: false\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hmac.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hmac\x2C LazyTransform);\n\nHmac.prototype.update = Hash.prototype.update;\n\nHmac.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  outputEncoding = outputEncoding || getDefaultEncoding();\n\n  if (state[kFinalized]) {\n    const buf = Buffer.from('');\n    return outputEncoding === 'buffer' ? buf : buf.toString(outputEncoding);\n  }\n\n  // Explicit conversion for backward compatibility.\n  const ret = this[kHandle].digest(`${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nHmac.prototype._flush = Hash.prototype._flush;\nHmac.prototype._transform = Hash.prototype._transform;\n\n// Implementation for WebCrypto subtle.digest()\n\nasync function asyncDigest(algorithm\x2C data) {\n  algorithm = normalizeAlgorithm(algorithm);\n  data = getArrayBufferOrView(data\x2C 'data');\n  validateMaxBufferLength(data\x2C 'data');\n\n  if (algorithm.length !== undefined)\n    validateUint32(algorithm.length\x2C 'algorithm.length');\n\n  switch (algorithm.name) {\n    case 'SHA-1':\n      // Fall through\n    case 'SHA-256':\n      // Fall through\n    case 'SHA-384':\n      // Fall through\n    case 'SHA-512':\n      return jobPromise(new HashJob(\n        kCryptoJobAsync\x2C\n        normalizeHashName(algorithm.name)\x2C\n        data\x2C\n        algorithm.length));\n  }\n\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nmodule.exports = {\n  Hash\x2C\n  Hmac\x2C\n  asyncDigest\x2C\n};\n
code-source-info,0x3f792a6e093e,160,0,4875,C0O0C4O4875,,
code-creation,Function,10,156261,0x3f792a6e0e8e,607, node:internal/crypto/hash:1:1,0x3f792a6e08b8,~
code-source-info,0x3f792a6e0e8e
tick,0xf99d67,156415,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c7a61,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,156751,0x3f792a6e2376,5, node:internal/crypto/x509:1:1,0x3f792a6e1fa0,~
script-source,161,node:internal/crypto/x509,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  parseX509\x2C\n  X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NO_WILDCARDS\x2C\n  X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS\x2C\n  X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS\x2C\n  X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst kInternalState = Symbol('kInternalState');\n\nfunction isX509Certificate(value) {\n  return value[kInternalState] !== undefined;\n}\n\nfunction getFlags(options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const {\n    // TODO(tniessen): change the default to 'default'\n    subject = 'always'\x2C  // Can be 'default'\x2C 'always'\x2C or 'never'\n    wildcards = true\x2C\n    partialWildcards = true\x2C\n    multiLabelWildcards = false\x2C\n    singleLabelSubdomains = false\x2C\n  } = { ...options };\n  let flags = 0;\n  validateString(subject\x2C 'options.subject');\n  validateBoolean(wildcards\x2C 'options.wildcards');\n  validateBoolean(partialWildcards\x2C 'options.partialWildcards');\n  validateBoolean(multiLabelWildcards\x2C 'options.multiLabelWildcards');\n  validateBoolean(singleLabelSubdomains\x2C 'options.singleLabelSubdomains');\n  switch (subject) {\n    case 'default': /* Matches OpenSSL's default\x2C no flags. */ break;\n    case 'always': flags |= X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT; break;\n    case 'never': flags |= X509_CHECK_FLAG_NEVER_CHECK_SUBJECT; break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('options.subject'\x2C subject);\n  }\n  if (!wildcards) flags |= X509_CHECK_FLAG_NO_WILDCARDS;\n  if (!partialWildcards) flags |= X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\n  if (multiLabelWildcards) flags |= X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\n  if (singleLabelSubdomains) flags |= X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\n  return flags;\n}\n\nclass InternalX509Certificate extends JSTransferable {\n  [kInternalState] = new SafeMap();\n\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nclass X509Certificate extends JSTransferable {\n  [kInternalState] = new SafeMap();\n\n  constructor(buffer) {\n    if (typeof buffer === 'string')\n      buffer = Buffer.from(buffer);\n    if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        buffer);\n    }\n    super();\n    this[kHandle] = parseX509(buffer);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `X509Certificate ${inspect({\n      subject: this.subject\x2C\n      subjectAltName: this.subjectAltName\x2C\n      issuer: this.issuer\x2C\n      infoAccess: this.infoAccess\x2C\n      validFrom: this.validFrom\x2C\n      validTo: this.validTo\x2C\n      fingerprint: this.fingerprint\x2C\n      fingerprint256: this.fingerprint256\x2C\n      fingerprint512: this.fingerprint512\x2C\n      keyUsage: this.keyUsage\x2C\n      serialNumber: this.serialNumber\x2C\n    }\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/crypto/x509:InternalX509Certificate'\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n  }\n\n  get subject() {\n    let value = this[kInternalState].get('subject');\n    if (value === undefined) {\n      value = this[kHandle].subject();\n      this[kInternalState].set('subject'\x2C value);\n    }\n    return value;\n  }\n\n  get subjectAltName() {\n    let value = this[kInternalState].get('subjectAltName');\n    if (value === undefined) {\n      value = this[kHandle].subjectAltName();\n      this[kInternalState].set('subjectAltName'\x2C value);\n    }\n    return value;\n  }\n\n  get issuer() {\n    let value = this[kInternalState].get('issuer');\n    if (value === undefined) {\n      value = this[kHandle].issuer();\n      this[kInternalState].set('issuer'\x2C value);\n    }\n    return value;\n  }\n\n  get issuerCertificate() {\n    let value = this[kInternalState].get('issuerCertificate');\n    if (value === undefined) {\n      const cert = this[kHandle].getIssuerCert();\n      if (cert)\n        value = new InternalX509Certificate(this[kHandle].getIssuerCert());\n      this[kInternalState].set('issuerCertificate'\x2C value);\n    }\n    return value;\n  }\n\n  get infoAccess() {\n    let value = this[kInternalState].get('infoAccess');\n    if (value === undefined) {\n      value = this[kHandle].infoAccess();\n      this[kInternalState].set('infoAccess'\x2C value);\n    }\n    return value;\n  }\n\n  get validFrom() {\n    let value = this[kInternalState].get('validFrom');\n    if (value === undefined) {\n      value = this[kHandle].validFrom();\n      this[kInternalState].set('validFrom'\x2C value);\n    }\n    return value;\n  }\n\n  get validTo() {\n    let value = this[kInternalState].get('validTo');\n    if (value === undefined) {\n      value = this[kHandle].validTo();\n      this[kInternalState].set('validTo'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint() {\n    let value = this[kInternalState].get('fingerprint');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint();\n      this[kInternalState].set('fingerprint'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint256() {\n    let value = this[kInternalState].get('fingerprint256');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint256();\n      this[kInternalState].set('fingerprint256'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint512() {\n    let value = this[kInternalState].get('fingerprint512');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint512();\n      this[kInternalState].set('fingerprint512'\x2C value);\n    }\n    return value;\n  }\n\n  get keyUsage() {\n    let value = this[kInternalState].get('keyUsage');\n    if (value === undefined) {\n      value = this[kHandle].keyUsage();\n      this[kInternalState].set('keyUsage'\x2C value);\n    }\n    return value;\n  }\n\n  get serialNumber() {\n    let value = this[kInternalState].get('serialNumber');\n    if (value === undefined) {\n      value = this[kHandle].serialNumber();\n      this[kInternalState].set('serialNumber'\x2C value);\n    }\n    return value;\n  }\n\n  get raw() {\n    let value = this[kInternalState].get('raw');\n    if (value === undefined) {\n      value = this[kHandle].raw();\n      this[kInternalState].set('raw'\x2C value);\n    }\n    return value;\n  }\n\n  get publicKey() {\n    let value = this[kInternalState].get('publicKey');\n    if (value === undefined) {\n      value = new PublicKeyObject(this[kHandle].publicKey());\n      this[kInternalState].set('publicKey'\x2C value);\n    }\n    return value;\n  }\n\n  toString() {\n    let value = this[kInternalState].get('pem');\n    if (value === undefined) {\n      value = this[kHandle].pem();\n      this[kInternalState].set('pem'\x2C value);\n    }\n    return value;\n  }\n\n  // There's no standardized JSON encoding for X509 certs so we\n  // fallback to providing the PEM encoding as a string.\n  toJSON() { return this.toString(); }\n\n  get ca() {\n    let value = this[kInternalState].get('ca');\n    if (value === undefined) {\n      value = this[kHandle].checkCA();\n      this[kInternalState].set('ca'\x2C value);\n    }\n    return value;\n  }\n\n  checkHost(name\x2C options) {\n    validateString(name\x2C 'name');\n    return this[kHandle].checkHost(name\x2C getFlags(options));\n  }\n\n  checkEmail(email\x2C options) {\n    validateString(email\x2C 'email');\n    return this[kHandle].checkEmail(email\x2C getFlags(options));\n  }\n\n  checkIP(ip\x2C options) {\n    validateString(ip\x2C 'ip');\n    // The options argument is currently undocumented since none of the options\n    // have any effect on the behavior of this function. However\x2C we still parse\n    // the options argument in case OpenSSL adds flags in the future that do\n    // affect the behavior of X509_check_ip. This ensures that no invalid values\n    // are passed as the second argument in the meantime.\n    return this[kHandle].checkIP(ip\x2C getFlags(options));\n  }\n\n  checkIssued(otherCert) {\n    if (!isX509Certificate(otherCert))\n      throw new ERR_INVALID_ARG_TYPE('otherCert'\x2C 'X509Certificate'\x2C otherCert);\n    return this[kHandle].checkIssued(otherCert[kHandle]);\n  }\n\n  checkPrivateKey(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'private')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].checkPrivateKey(pkey[kHandle]);\n  }\n\n  verify(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'public')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].verify(pkey[kHandle]);\n  }\n\n  toLegacyObject() {\n    return this[kHandle].toLegacy();\n  }\n}\n\nInternalX509Certificate.prototype.constructor = X509Certificate;\nObjectSetPrototypeOf(\n  InternalX509Certificate.prototype\x2C\n  X509Certificate.prototype);\n\nmodule.exports = {\n  X509Certificate\x2C\n  InternalX509Certificate\x2C\n  isX509Certificate\x2C\n};\n
code-source-info,0x3f792a6e2376,161,0,9667,C0O0C4O9667,,
code-creation,Function,10,157233,0x3f792a6e3d7e,666, node:internal/crypto/x509:1:1,0x3f792a6e22f0,~
code-source-info,0x3f792a6e3d7e,161,0,9667,C0O0C83O25C88O49C94O60C99O346C102O346C107O96C113O109C119O149C125O188C131O220C137O260C143O301C149O420C152O420C157O384C163O403C169O515C172O515C177O485C182O497C188O609C191O609C196O552C202O571C208O589C214O662C217O662C222O650C228O716C231O716C236O705C242O769C245O769C250O746C256O882C259O882C264O882C269O825C275O851C281O967C284O967C289O921C294O939C299O949C304O1035C307O1035C312O1022C318O1092C321O1092C325O1092C334O2543C342O2563C377O2505C386O2699C394O2719C404O3082C412O3709C421O3877C603O9423C606O9447C613O9469C617O9488C620O9536C625O9565C630O9488C635O9578C642O9599C648O9618C654O9645C660O9593C665O9666,,
code-creation,Function,10,157294,0x3f792a6e4186,26,<instance_members_initializer> node:internal/crypto/x509:106:3,0x3f792a6e2f80,~
code-source-info,0x3f792a6e4186,161,2718,2750,C3O2737C10O2737C25O2750,,
tick,0x7f40773a70af,157313,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c7a77,0x7f4060044ae0,0x7f40600432df,0x3f792a6c1374,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,10,157458,0x3f792a6e4226,26,<instance_members_initializer> node:internal/crypto/x509:97:3,0x3f792a6e2498,~
code-source-info,0x3f792a6e4226,161,2562,2594,C3O2581C10O2581C25O2594,,
code-creation,Eval,10,157887,0x3f792a6e569e,5, node:internal/crypto/certificate:1:1,0x3f792a6e5508,~
script-source,162,node:internal/crypto/certificate,'use strict';\n\nconst {\n  certExportChallenge\x2C\n  certExportPublicKey\x2C\n  certVerifySpkac\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n} = require('internal/crypto/util');\n\n// The functions contained in this file cover the SPKAC format\n// (also referred to as Netscape SPKI). A general description of\n// the format can be found at https://en.wikipedia.org/wiki/SPKAC\n\nfunction verifySpkac(spkac\x2C encoding) {\n  return certVerifySpkac(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportPublicKey(spkac\x2C encoding) {\n  return certExportPublicKey(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportChallenge(spkac\x2C encoding) {\n  return certExportChallenge(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\n// The legacy implementation of this exposed the Certificate\n// object and required that users create an instance before\n// calling the member methods. This API pattern has been\n// deprecated\x2C however\x2C as the method implementations do not\n// rely on any object state.\n\n// For backwards compatibility reasons\x2C this cannot be converted into a\n// ES6 Class.\nfunction Certificate() {\n  if (!(this instanceof Certificate))\n    return new Certificate();\n}\n\nCertificate.prototype.verifySpkac = verifySpkac;\nCertificate.prototype.exportPublicKey = exportPublicKey;\nCertificate.prototype.exportChallenge = exportChallenge;\n\nCertificate.exportChallenge = exportChallenge;\nCertificate.exportPublicKey = exportPublicKey;\nCertificate.verifySpkac = verifySpkac;\n\nmodule.exports = Certificate;\n
code-source-info,0x3f792a6e569e,162,0,1546,C0O0C4O1546,,
code-creation,Function,10,158006,0x3f792a6e58d6,155, node:internal/crypto/certificate:1:1,0x3f792a6e5618,~
code-source-info,0x3f792a6e58d6,162,0,1546,C0O0C38O92C41O92C46O25C52O48C58O71C64O156C67O156C72O130C78O1218C81O1230C88O1252C92O1267C95O1279C102O1305C106O1324C109O1336C116O1362C120O1382C125O1410C129O1429C134O1457C138O1476C143O1500C147O1516C149O1531C154O1545,,
tick,0x110b546,158332,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6c13a5,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,158492,0x3f792a6e6516,5, node:internal/js_stream_socket:1:1,0x3f792a6e62a8,~
script-source,163,node:internal/js_stream_socket,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst { Socket } = require('net');\nconst { JSStream } = internalBinding('js_stream');\nconst uv = internalBinding('uv');\nlet debug = require('internal/util/debuglog').debuglog(\n  'stream_socket'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { ERR_STREAM_WRAP } = require('internal/errors').codes;\n\nconst kCurrentWriteRequest = Symbol('kCurrentWriteRequest');\nconst kCurrentShutdownRequest = Symbol('kCurrentShutdownRequest');\nconst kPendingShutdownRequest = Symbol('kPendingShutdownRequest');\n\nfunction isClosing() { return this[owner_symbol].isClosing(); }\n\nfunction onreadstart() { return this[owner_symbol].readStart(); }\n\nfunction onreadstop() { return this[owner_symbol].readStop(); }\n\nfunction onshutdown(req) { return this[owner_symbol].doShutdown(req); }\n\nfunction onwrite(req\x2C bufs) { return this[owner_symbol].doWrite(req\x2C bufs); }\n\n/* This class serves as a wrapper for when the C++ side of Node wants access\n * to a standard JS stream. For example\x2C TLS or HTTP do not operate on network\n * resources conceptually\x2C although that is the common case and what we are\n * optimizing for; in theory\x2C they are completely composable and can work with\n * any stream resource they see.\n *\n * For the common case\x2C i.e. a TLS socket wrapping around a net.Socket\x2C we\n * can skip going through the JS layer and let TLS access the raw C++ handle\n * of a net.Socket. The flipside of this is that\x2C to maintain composability\x2C\n * we need a way to create "fake" net.Socket instances that call back into a\n * "real" JavaScript stream. JSStreamSocket is exactly this.\n */\nclass JSStreamSocket extends Socket {\n  constructor(stream) {\n    const handle = new JSStream();\n    handle.close = (cb) => {\n      debug('close');\n      this.doClose(cb);\n    };\n    // Inside of the following functions\x2C `this` refers to the handle\n    // and `this[owner_symbol]` refers to this JSStreamSocket instance.\n    handle.isClosing = isClosing;\n    handle.onreadstart = onreadstart;\n    handle.onreadstop = onreadstop;\n    handle.onshutdown = onshutdown;\n    handle.onwrite = onwrite;\n\n    stream.pause();\n    stream.on('error'\x2C (err) => this.emit('error'\x2C err));\n    const ondata = (chunk) => {\n      if (typeof chunk === 'string' ||\n          stream.readableObjectMode === true) {\n        // Make sure that no further `data` events will happen.\n        stream.pause();\n        stream.removeListener('data'\x2C ondata);\n\n        this.emit('error'\x2C new ERR_STREAM_WRAP());\n        return;\n      }\n\n      debug('data'\x2C chunk.length);\n      if (this._handle)\n        this._handle.readBuffer(chunk);\n    };\n    stream.on('data'\x2C ondata);\n    stream.once('end'\x2C () => {\n      debug('end');\n      if (this._handle)\n        this._handle.emitEOF();\n    });\n    // Some `Stream` don't pass `hasError` parameters when closed.\n    stream.once('close'\x2C () => {\n      // Errors emitted from `stream` have also been emitted to this instance\n      // so that we don't pass errors to `destroy()` again.\n      this.destroy();\n    });\n\n    super({ handle\x2C manualStart: true });\n    this.stream = stream;\n    this[kCurrentWriteRequest] = null;\n    this[kCurrentShutdownRequest] = null;\n    this[kPendingShutdownRequest] = null;\n    this.readable = stream.readable;\n    this.writable = stream.writable;\n\n    // Start reading.\n    this.read(0);\n  }\n\n  // Allow legacy requires in the test suite to keep working:\n  //   const { StreamWrap } = require('internal/js_stream_socket')\n  static get StreamWrap() {\n    return JSStreamSocket;\n  }\n\n  isClosing() {\n    return !this.readable || !this.writable;\n  }\n\n  readStart() {\n    this.stream.resume();\n    return 0;\n  }\n\n  readStop() {\n    this.stream.pause();\n    return 0;\n  }\n\n  doShutdown(req) {\n    // TODO(addaleax): It might be nice if we could get into a state where\n    // DoShutdown() is not called on streams while a write is still pending.\n    //\n    // Currently\x2C the only part of the code base where that happens is the\n    // TLS implementation\x2C which calls both DoWrite() and DoShutdown() on the\n    // underlying network stream inside of its own DoShutdown() method.\n    // Working around that on the native side is not quite trivial (yet?)\x2C\n    // so for now that is supported here.\n\n    if (this[kCurrentWriteRequest] !== null) {\n      this[kPendingShutdownRequest] = req;\n      return 0;\n    }\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n    this[kCurrentShutdownRequest] = req;\n\n    const handle = this._handle;\n\n    setImmediate(() => {\n      // Ensure that write is dispatched asynchronously.\n      this.stream.end(() => {\n        this.finishShutdown(handle\x2C 0);\n      });\n    });\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishShutdown(handle\x2C errCode) {\n    // The shutdown request might already have been cancelled.\n    if (this[kCurrentShutdownRequest] === null)\n      return;\n    const req = this[kCurrentShutdownRequest];\n    this[kCurrentShutdownRequest] = null;\n    handle.finishShutdown(req\x2C errCode);\n  }\n\n  doWrite(req\x2C bufs) {\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n\n    const handle = this._handle;\n    const self = this;\n\n    let pending = bufs.length;\n\n    this.stream.cork();\n    // Use `var` over `let` for performance optimization.\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < bufs.length; ++i)\n      this.stream.write(bufs[i]\x2C done);\n    this.stream.uncork();\n\n    // Only set the request here\x2C because the `write()` calls could throw.\n    this[kCurrentWriteRequest] = req;\n\n    function done(err) {\n      if (!err && --pending !== 0)\n        return;\n\n      // Ensure that this is called once in case of error\n      pending = 0;\n\n      let errCode = 0;\n      if (err) {\n        errCode = uv[`UV_${err.code}`] || uv.UV_EPIPE;\n      }\n\n      // Ensure that write was dispatched\n      setImmediate(() => {\n        self.finishWrite(handle\x2C errCode);\n      });\n    }\n\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishWrite(handle\x2C errCode) {\n    // The write request might already have been cancelled.\n    if (this[kCurrentWriteRequest] === null)\n      return;\n    const req = this[kCurrentWriteRequest];\n    this[kCurrentWriteRequest] = null;\n\n    handle.finishWrite(req\x2C errCode);\n    if (this[kPendingShutdownRequest]) {\n      const req = this[kPendingShutdownRequest];\n      this[kPendingShutdownRequest] = null;\n      this.doShutdown(req);\n    }\n  }\n\n  doClose(cb) {\n    const handle = this._handle;\n\n    // When sockets of the "net" module destroyed\x2C they will call\n    // `this._handle.close()` which will also emit EOF if not emitted before.\n    // This feature makes sockets on the other side emit "end" and "close"\n    // even though we haven't called `end()`. As `stream` are likely to be\n    // instances of `net.Socket`\x2C calling `stream.destroy()` manually will\n    // avoid issues that don't properly close wrapped connections.\n    this.stream.destroy();\n\n    setImmediate(() => {\n      // Should be already set by net.js\n      assert(this._handle === null);\n\n      this.finishWrite(handle\x2C uv.UV_ECANCELED);\n      this.finishShutdown(handle\x2C uv.UV_ECANCELED);\n\n      cb();\n    });\n  }\n}\n\nmodule.exports = JSStreamSocket;\n
code-source-info,0x3f792a6e6516,163,0,7488,C0O0C4O7488,,
code-creation,Function,10,158811,0x3f792a6e6e46,312, node:internal/js_stream_socket:1:1,0x3f792a6e6490,~
code-source-info,0x3f792a6e6e46,163,0,7488,C0O0C65O25C70O76C73O76C78O59C84O110C87O110C91O110C93O157C96O157C101O146C106O194C109O194C114O181C120O235C123O235C127O235C129O270C132O270C137O303C150O304C156O270C158O393C161O393C166O424C171O376C177O462C180O462C185O488C190O442C196O526C199O526C203O526C205O590C208O590C212O590C214O657C217O657C221O657C230O1789C304O7455C306O7470C311O7487,,
code-creation,LazyCompile,10,159193,0x3f792a6ecac6,14,makeMethodProxy node:_tls_wrap:555:25,0x2a1384e3e300,~
code-source-info,0x3f792a6ecac6,148,15700,15851,C0O15700C9O15711C13O15849,,
code-creation,LazyCompile,10,159298,0x3f792a6f05fe,21, node:_tls_wrap:1038:4,0x2a1384e3f2b8,~
code-source-info,0x3f792a6f05fe,148,29302,29380,C0O29318C3O29328C11O29348C15O29346C20O29379,,
code-creation,LazyCompile,10,159359,0x3f792a6f0756,14,makeSocketMethodProxy node:_tls_wrap:1019:31,0x2a1384e3e468,~
code-source-info,0x3f792a6f0756,148,28916,29084,C0O28916C9O28927C13O29082,,
tick,0x7f40773a70af,159505,0,0x0,3,0x11d7ee0,0x3f792a6f0609,0x15e844f,0x3f792a6c17f7,0x7f4060044ae0,0x7f40600432df,0x2a1384e203b4,0x7f4060044ae0,0x7f40600432df,0x2a1384e1d9fd,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,159650,0x3f792a6f0ff6,5, node:internal/tls/secure-pair:1:1,0x3f792a6f0e10,~
script-source,164,node:internal/tls/secure-pair,'use strict';\n\nconst EventEmitter = require('events');\nconst { kEmptyObject } = require('internal/util');\nconst { Duplex } = require('stream');\nconst _tls_wrap = require('_tls_wrap');\nconst _tls_common = require('_tls_common');\n\nconst {\n  Symbol\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nconst kCallback = Symbol('Callback');\nconst kOtherSide = Symbol('Other');\n\nclass DuplexSocket extends Duplex {\n  constructor() {\n    super();\n    this[kCallback] = null;\n    this[kOtherSide] = null;\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this[kOtherSide].push(chunk);\n      this[kOtherSide][kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this[kOtherSide].on('end'\x2C callback);\n    this[kOtherSide].push(null);\n  }\n}\n\nclass DuplexPair {\n  constructor() {\n    this.socket1 = new DuplexSocket();\n    this.socket2 = new DuplexSocket();\n    this.socket1[kOtherSide] = this.socket2;\n    this.socket2[kOtherSide] = this.socket1;\n  }\n}\n\nclass SecurePair extends EventEmitter {\n  constructor(secureContext = _tls_common.createSecureContext()\x2C\n              isServer = false\x2C\n              requestCert = !isServer\x2C\n              rejectUnauthorized = false\x2C\n              options = kEmptyObject) {\n    super();\n    const { socket1\x2C socket2 } = new DuplexPair();\n\n    this.server = options.server;\n    this.credentials = secureContext;\n\n    this.encrypted = socket1;\n    this.cleartext = new _tls_wrap.TLSSocket(socket2\x2C {\n      secureContext\x2C\n      isServer\x2C\n      requestCert\x2C\n      rejectUnauthorized\x2C\n      ...options\n    });\n    this.cleartext.once('secure'\x2C () => this.emit('secure'));\n  }\n\n  destroy() {\n    this.cleartext.destroy();\n    this.encrypted.destroy();\n  }\n}\n\nexports.createSecurePair = function createSecurePair(...args) {\n  return ReflectConstruct(SecurePair\x2C args);\n};\n
code-source-info,0x3f792a6f0ff6,164,0,1990,C0O0C4O1990,,
code-creation,Function,10,159799,0x3f792a6f17b6,219, node:internal/tls/secure-pair:1:1,0x3f792a6f0f70,~
code-source-info,0x3f792a6f17b6,164,0,1990,C0O0C36O36C39O36C44O80C47O80C52O63C58O125C61O125C66O114C71O162C74O162C78O162C80O204C83O204C87O204C89O239C94O249C100O303C103O303C107O303C109O342C112O342C116O342C118O387C155O360C178O929C180O1166C207O1141C209O1878C213O1903C218O1989,,
code-creation,Eval,10,160246,0x3f792a6f27de,5, node:_http_agent:1:1,0x3f792a6f2438,~
script-source,165,node:_http_agent,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSome\x2C\n  ArrayPrototypeSplice\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSubstr\x2C\n  Symbol\x2C\n} = primordials;\n\nconst net = require('net');\nconst EventEmitter = require('events');\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\nconst { AsyncResource } = require('async_hooks');\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\nconst {\n  codes: {\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst {\n  validateNumber\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst kOnKeylog = Symbol('onkeylog');\nconst kRequestOptions = Symbol('requestOptions');\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\n// New Agent code.\n\n// The largest departure from the previous implementation is that\n// an Agent instance holds connections for a variable number of host:ports.\n// Surprisingly\x2C this is still API compatible as far as third parties are\n// concerned. The only code that really notices the difference is the\n// request object.\n\n// Another departure is that all code related to HTTP parsing is in\n// ClientRequest.onSocket(). The Agent is now *strictly*\n// concerned with managing a connection pool.\n\nclass ReusedHandle {\n  constructor(type\x2C handle) {\n    this.type = type;\n    this.handle = handle;\n  }\n}\n\nfunction freeSocketErrorListener(err) {\n  const socket = this;\n  debug('SOCKET ERROR on FREE socket:'\x2C err.message\x2C err.stack);\n  socket.destroy();\n  socket.emit('agentRemove');\n}\n\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this.defaultPort = 80;\n  this.protocol = 'http:';\n\n  this.options = { __proto__: null\x2C ...options };\n\n  // Don't confuse net and make it think that we're connecting to a pipe\n  this.options.path = null;\n  this.requests = ObjectCreate(null);\n  this.sockets = ObjectCreate(null);\n  this.freeSockets = ObjectCreate(null);\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\n  this.keepAlive = this.options.keepAlive || false;\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\n  this.scheduling = this.options.scheduling || 'lifo';\n  this.maxTotalSockets = this.options.maxTotalSockets;\n  this.totalSocketCount = 0;\n\n  validateOneOf(this.scheduling\x2C 'scheduling'\x2C ['fifo'\x2C 'lifo']);\n\n  if (this.maxTotalSockets !== undefined) {\n    validateNumber(this.maxTotalSockets\x2C 'maxTotalSockets');\n    if (this.maxTotalSockets <= 0 || NumberIsNaN(this.maxTotalSockets))\n      throw new ERR_OUT_OF_RANGE('maxTotalSockets'\x2C '> 0'\x2C\n                                 this.maxTotalSockets);\n  } else {\n    this.maxTotalSockets = Infinity;\n  }\n\n  this.on('free'\x2C (socket\x2C options) => {\n    const name = this.getName(options);\n    debug('agent.on(free)'\x2C name);\n\n    // TODO(ronag): socket.destroy(err) might have been called\n    // before coming here and have an 'error' scheduled. In the\n    // case of socket.destroy() below this 'error' has no handler\n    // and could cause unhandled exception.\n\n    if (!socket.writable) {\n      socket.destroy();\n      return;\n    }\n\n    const requests = this.requests[name];\n    if (requests && requests.length) {\n      const req = ArrayPrototypeShift(requests);\n      const reqAsyncRes = req[kRequestAsyncResource];\n      if (reqAsyncRes) {\n        // Run request within the original async context.\n        reqAsyncRes.runInAsyncScope(() => {\n          asyncResetHandle(socket);\n          setRequestSocket(this\x2C req\x2C socket);\n        });\n        req[kRequestAsyncResource] = null;\n      } else {\n        setRequestSocket(this\x2C req\x2C socket);\n      }\n      if (requests.length === 0) {\n        delete this.requests[name];\n      }\n      return;\n    }\n\n    // If there are no pending requests\x2C then put it in\n    // the freeSockets pool\x2C but only if we're allowed to do so.\n    const req = socket._httpMessage;\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\n      socket.destroy();\n      return;\n    }\n\n    const freeSockets = this.freeSockets[name] || [];\n    const freeLen = freeSockets.length;\n    let count = freeLen;\n    if (this.sockets[name])\n      count += this.sockets[name].length;\n\n    if (this.totalSocketCount > this.maxTotalSockets ||\n        count > this.maxSockets ||\n        freeLen >= this.maxFreeSockets ||\n        !this.keepSocketAlive(socket)) {\n      socket.destroy();\n      return;\n    }\n\n    this.freeSockets[name] = freeSockets;\n    socket[async_id_symbol] = -1;\n    socket._httpMessage = null;\n    this.removeSocket(socket\x2C options);\n\n    socket.once('error'\x2C freeSocketErrorListener);\n    ArrayPrototypePush(freeSockets\x2C socket);\n  });\n\n  // Don't emit keylog events unless there is a listener for them.\n  this.on('newListener'\x2C maybeEnableKeylog);\n}\nObjectSetPrototypeOf(Agent.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Agent\x2C EventEmitter);\n\nfunction maybeEnableKeylog(eventName) {\n  if (eventName === 'keylog') {\n    this.removeListener('newListener'\x2C maybeEnableKeylog);\n    // Future sockets will listen on keylog at creation.\n    const agent = this;\n    this[kOnKeylog] = function onkeylog(keylog) {\n      agent.emit('keylog'\x2C keylog\x2C this);\n    };\n    // Existing sockets will start listening on keylog now.\n    const sockets = ObjectValues(this.sockets);\n    for (let i = 0; i < sockets.length; i++) {\n      sockets[i].on('keylog'\x2C this[kOnKeylog]);\n    }\n  }\n}\n\nAgent.defaultMaxSockets = Infinity;\n\nAgent.prototype.createConnection = net.createConnection;\n\n// Get the key for a given set of request options\nAgent.prototype.getName = function getName(options = kEmptyObject) {\n  let name = options.host || 'localhost';\n\n  name += ':';\n  if (options.port)\n    name += options.port;\n\n  name += ':';\n  if (options.localAddress)\n    name += options.localAddress;\n\n  // Pacify parallel/test-http-agent-getname by only appending\n  // the ':' when options.family is set.\n  if (options.family === 4 || options.family === 6)\n    name += `:${options.family}`;\n\n  if (options.socketPath)\n    name += `:${options.socketPath}`;\n\n  return name;\n};\n\nAgent.prototype.addRequest = function addRequest(req\x2C options\x2C port/* legacy */\x2C\n                                                 localAddress/* legacy */) {\n  // Legacy API: addRequest(req\x2C host\x2C port\x2C localAddress)\n  if (typeof options === 'string') {\n    options = {\n      __proto__: null\x2C\n      host: options\x2C\n      port\x2C\n      localAddress\n    };\n  }\n\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n\n  const name = this.getName(options);\n  if (!this.sockets[name]) {\n    this.sockets[name] = [];\n  }\n\n  const freeSockets = this.freeSockets[name];\n  let socket;\n  if (freeSockets) {\n    while (freeSockets.length && freeSockets[0].destroyed) {\n      ArrayPrototypeShift(freeSockets);\n    }\n    socket = this.scheduling === 'fifo' ?\n      ArrayPrototypeShift(freeSockets) :\n      ArrayPrototypePop(freeSockets);\n    if (!freeSockets.length)\n      delete this.freeSockets[name];\n  }\n\n  const freeLen = freeSockets ? freeSockets.length : 0;\n  const sockLen = freeLen + this.sockets[name].length;\n\n  if (socket) {\n    asyncResetHandle(socket);\n    this.reuseSocket(socket\x2C req);\n    setRequestSocket(this\x2C req\x2C socket);\n    ArrayPrototypePush(this.sockets[name]\x2C socket);\n  } else if (sockLen < this.maxSockets &&\n             this.totalSocketCount < this.maxTotalSockets) {\n    debug('call onSocket'\x2C sockLen\x2C freeLen);\n    // If we are under maxSockets create a new one.\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        setRequestSocket(this\x2C req\x2C socket);\n    });\n  } else {\n    debug('wait for socket');\n    // We are over limit so we'll add it to the queue.\n    if (!this.requests[name]) {\n      this.requests[name] = [];\n    }\n\n    // Used to create sockets for pending requests from different origin\n    req[kRequestOptions] = options;\n    // Used to capture the original async context.\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\n\n    ArrayPrototypePush(this.requests[name]\x2C req);\n  }\n};\n\nAgent.prototype.createSocket = function createSocket(req\x2C options\x2C cb) {\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n\n  const name = this.getName(options);\n  options._agentKey = name;\n\n  debug('createConnection'\x2C name\x2C options);\n  options.encoding = null;\n\n  const oncreate = once((err\x2C s) => {\n    if (err)\n      return cb(err);\n    if (!this.sockets[name]) {\n      this.sockets[name] = [];\n    }\n    ArrayPrototypePush(this.sockets[name]\x2C s);\n    this.totalSocketCount++;\n    debug('sockets'\x2C name\x2C this.sockets[name].length\x2C this.totalSocketCount);\n    installListeners(this\x2C s\x2C options);\n    cb(null\x2C s);\n  });\n  // When keepAlive is true\x2C pass the related options to createConnection\n  if (this.keepAlive) {\n    options.keepAlive = this.keepAlive;\n    options.keepAliveInitialDelay = this.keepAliveMsecs;\n  }\n  const newSocket = this.createConnection(options\x2C oncreate);\n  if (newSocket)\n    oncreate(null\x2C newSocket);\n};\n\nfunction calculateServerName(options\x2C req) {\n  let servername = options.host;\n  const hostHeader = req.getHeader('host');\n  if (hostHeader) {\n    validateString(hostHeader\x2C 'options.headers.host');\n\n    // abc => abc\n    // abc:123 => abc\n    // [::1] => ::1\n    // [::1]:123 => ::1\n    if (StringPrototypeStartsWith(hostHeader\x2C '[')) {\n      const index = StringPrototypeIndexOf(hostHeader\x2C ']');\n      if (index === -1) {\n        // Leading '['\x2C but no ']'. Need to do something...\n        servername = hostHeader;\n      } else {\n        servername = StringPrototypeSubstr(hostHeader\x2C 1\x2C index - 1);\n      }\n    } else {\n      servername = StringPrototypeSplit(hostHeader\x2C ':'\x2C 1)[0];\n    }\n  }\n  // Don't implicitly set invalid (IP) servernames.\n  if (net.isIP(servername))\n    servername = '';\n  return servername;\n}\n\nfunction installListeners(agent\x2C s\x2C options) {\n  function onFree() {\n    debug('CLIENT socket onFree');\n    agent.emit('free'\x2C s\x2C options);\n  }\n  s.on('free'\x2C onFree);\n\n  function onClose(err) {\n    debug('CLIENT socket onClose');\n    // This is the only place where sockets get removed from the Agent.\n    // If you want to remove a socket from the pool\x2C just close it.\n    // All socket errors end in a close event anyway.\n    agent.totalSocketCount--;\n    agent.removeSocket(s\x2C options);\n  }\n  s.on('close'\x2C onClose);\n\n  function onTimeout() {\n    debug('CLIENT socket onTimeout');\n\n    // Destroy if in free list.\n    // TODO(ronag): Always destroy\x2C even if not in free list.\n    const sockets = agent.freeSockets;\n    if (ArrayPrototypeSome(ObjectKeys(sockets)\x2C (name) =>\n      ArrayPrototypeIncludes(sockets[name]\x2C s)\n    )) {\n      return s.destroy();\n    }\n  }\n  s.on('timeout'\x2C onTimeout);\n\n  function onRemove() {\n    // We need this function for cases like HTTP 'upgrade'\n    // (defined by WebSockets) where we need to remove a socket from the\n    // pool because it'll be locked up indefinitely\n    debug('CLIENT socket onRemove');\n    agent.totalSocketCount--;\n    agent.removeSocket(s\x2C options);\n    s.removeListener('close'\x2C onClose);\n    s.removeListener('free'\x2C onFree);\n    s.removeListener('timeout'\x2C onTimeout);\n    s.removeListener('agentRemove'\x2C onRemove);\n  }\n  s.on('agentRemove'\x2C onRemove);\n\n  if (agent[kOnKeylog]) {\n    s.on('keylog'\x2C agent[kOnKeylog]);\n  }\n}\n\nAgent.prototype.removeSocket = function removeSocket(s\x2C options) {\n  const name = this.getName(options);\n  debug('removeSocket'\x2C name\x2C 'writable:'\x2C s.writable);\n  const sets = [this.sockets];\n\n  // If the socket was destroyed\x2C remove it from the free buffers too.\n  if (!s.writable)\n    ArrayPrototypePush(sets\x2C this.freeSockets);\n\n  for (let sk = 0; sk < sets.length; sk++) {\n    const sockets = sets[sk];\n\n    if (sockets[name]) {\n      const index = ArrayPrototypeIndexOf(sockets[name]\x2C s);\n      if (index !== -1) {\n        ArrayPrototypeSplice(sockets[name]\x2C index\x2C 1);\n        // Don't leak\n        if (sockets[name].length === 0)\n          delete sockets[name];\n      }\n    }\n  }\n\n  let req;\n  if (this.requests[name] && this.requests[name].length) {\n    debug('removeSocket\x2C have a request\x2C make a socket');\n    req = this.requests[name][0];\n  } else {\n    // TODO(rickyes): this logic will not be FIFO across origins.\n    // There might be older requests in a different origin\x2C but\n    // if the origin which releases the socket has pending requests\n    // that will be prioritized.\n    const keys = ObjectKeys(this.requests);\n    for (let i = 0; i < keys.length; i++) {\n      const prop = keys[i];\n      // Check whether this specific origin is already at maxSockets\n      if (this.sockets[prop] && this.sockets[prop].length) break;\n      debug('removeSocket\x2C have a request with different origin\x2C' +\n        ' make a socket');\n      req = this.requests[prop][0];\n      options = req[kRequestOptions];\n      break;\n    }\n  }\n\n  if (req && options) {\n    req[kRequestOptions] = undefined;\n    // If we have pending requests and a socket gets closed make a new one\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        socket.emit('free');\n    });\n  }\n\n};\n\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\n  socket.setKeepAlive(true\x2C this.keepAliveMsecs);\n  socket.unref();\n\n  const agentTimeout = this.options.timeout || 0;\n  if (socket.timeout !== agentTimeout) {\n    socket.setTimeout(agentTimeout);\n  }\n\n  return true;\n};\n\nAgent.prototype.reuseSocket = function reuseSocket(socket\x2C req) {\n  debug('have free socket');\n  socket.removeListener('error'\x2C freeSocketErrorListener);\n  req.reusedSocket = true;\n  socket.ref();\n};\n\nAgent.prototype.destroy = function destroy() {\n  const sets = [this.freeSockets\x2C this.sockets];\n  for (let s = 0; s < sets.length; s++) {\n    const set = sets[s];\n    const keys = ObjectKeys(set);\n    for (let v = 0; v < keys.length; v++) {\n      const setName = set[keys[v]];\n      for (let n = 0; n < setName.length; n++) {\n        setName[n].destroy();\n      }\n    }\n  }\n};\n\nfunction setRequestSocket(agent\x2C req\x2C socket) {\n  req.onSocket(socket);\n  const agentTimeout = agent.options.timeout || 0;\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\n    return;\n  }\n  socket.setTimeout(req.timeout);\n}\n\nfunction asyncResetHandle(socket) {\n  // Guard against an uninitialized or user supplied Socket.\n  const handle = socket._handle;\n  if (handle && typeof handle.asyncReset === 'function') {\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\n    handle.asyncReset(new ReusedHandle(handle.getProviderType()\x2C handle));\n    socket[async_id_symbol] = handle.getAsyncId();\n  }\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent: new Agent()\n};\n
code-source-info,0x3f792a6f27de,165,0,16690,C0O0C4O16690,,
code-creation,Function,10,160979,0x3f792a6f3176,645, node:_http_agent:1:1,0x3f792a6f2758,~
code-source-info,0x3f792a6f
tick,0x7f407774af27,161050,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e1da06,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,161354,0x3f792a6f4e96,505,Agent node:_http_agent:96:15,0x3f792a6f2860,~
code-source-info,0x3f792a6f4e
code-creation,LazyCompile,10,161449,0x3f792a6f63ae,21,EventEmitter node:events:212:22,0x1d49834a8a48,~
code-source-info,0x3f792a6f63ae,23,6313,6361,C0O6324C3O6337C8O6342C13O6342C20O6360,,
code-creation,LazyCompile,10,161497,0x3f792a6f64f6,149,EventEmitter.init node:events:337:29,0x1d49834a8e40,~
code-source-info,0x3f792a6f64f6,23,9844,10433,C0O9865C6O9901C13O9913C16O9913C21O9939C25O9909C30O9955C32O9970C37O9970C41O9968C45O9994C46O10012C50O10050C60O10043C64O10082C71O10090C80O10117C85O10138C93O10117C98O10191C100O10196C105O10208C108O10221C113O10208C117O10206C123O10377C125O10382C131O10407C138O10417C140O10416C143O10392C148O10432,,
code-creation,LazyCompile,10,161618,0x3f792a6f67ce,75, node:internal/validators:137:39,0x1d4983483fa8,~
code-source-info,0x3f792a6f67ce,16,4047,4380,C0O4075C5O4080C12O4140C19O4166C22O4184C27O4166C36O4140C42O4287C47O4306C51O4321C67O4327C72O4321C74O4379,,
tick,0x7f40773a70af,161775,0,0x0,3,0x11d7ee0,0x3f792a6f4ff0,0x3f792a6f33ea,0x7f4060044ae0,0x7f40600432df,0x2a1384e1da06,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,162351,0x3f792a6f8cc6,5, node:_http_server:1:1,0x3f792a6f85f0,~
script-source,166,node:_http_server,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Error\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeExec\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst net = require('net');\nconst EE = require('events');\nconst assert = require('internal/assert');\nconst {\n  parsers\x2C\n  freeParser\x2C\n  continueExpression\x2C\n  chunkExpression\x2C\n  kIncomingMessage\x2C\n  kRequestTimeout\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst {\n  kUniqueHeaders\x2C\n  parseUniqueHeadersOption\x2C\n  OutgoingMessage\n} = require('_http_outgoing');\nconst {\n  kOutHeaders\x2C\n  kNeedDrain\x2C\n} = require('internal/http');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  getOrSetAsyncId\n} = require('internal/async_hooks');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  connResetException\x2C\n  codes\n} = require('internal/errors');\nconst {\n  ERR_HTTP_REQUEST_TIMEOUT\x2C\n  ERR_HTTP_HEADERS_SENT\x2C\n  ERR_HTTP_INVALID_STATUS_CODE\x2C\n  ERR_HTTP_SOCKET_ENCODING\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_CHAR\n} = codes;\nconst {\n  validateInteger\x2C\n  validateBoolean\n} = require('internal/validators');\nconst Buffer = require('buffer').Buffer;\nconst {\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\n} = require('internal/dtrace');\nconst { setTimeout\x2C clearTimeout } = require('timers');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst onRequestStartChannel = dc.channel('http.server.request.start');\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\n\nconst kServerResponse = Symbol('ServerResponse');\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nconst STATUS_CODES = {\n  100: 'Continue'\x2C                   // RFC 7231 6.2.1\n  101: 'Switching Protocols'\x2C        // RFC 7231 6.2.2\n  102: 'Processing'\x2C                 // RFC 2518 10.1 (obsoleted by RFC 4918)\n  103: 'Early Hints'\x2C                // RFC 8297 2\n  200: 'OK'\x2C                         // RFC 7231 6.3.1\n  201: 'Created'\x2C                    // RFC 7231 6.3.2\n  202: 'Accepted'\x2C                   // RFC 7231 6.3.3\n  203: 'Non-Authoritative Information'\x2C // RFC 7231 6.3.4\n  204: 'No Content'\x2C                 // RFC 7231 6.3.5\n  205: 'Reset Content'\x2C              // RFC 7231 6.3.6\n  206: 'Partial Content'\x2C            // RFC 7233 4.1\n  207: 'Multi-Status'\x2C               // RFC 4918 11.1\n  208: 'Already Reported'\x2C           // RFC 5842 7.1\n  226: 'IM Used'\x2C                    // RFC 3229 10.4.1\n  300: 'Multiple Choices'\x2C           // RFC 7231 6.4.1\n  301: 'Moved Permanently'\x2C          // RFC 7231 6.4.2\n  302: 'Found'\x2C                      // RFC 7231 6.4.3\n  303: 'See Other'\x2C                  // RFC 7231 6.4.4\n  304: 'Not Modified'\x2C               // RFC 7232 4.1\n  305: 'Use Proxy'\x2C                  // RFC 7231 6.4.5\n  307: 'Temporary Redirect'\x2C         // RFC 7231 6.4.7\n  308: 'Permanent Redirect'\x2C         // RFC 7238 3\n  400: 'Bad Request'\x2C                // RFC 7231 6.5.1\n  401: 'Unauthorized'\x2C               // RFC 7235 3.1\n  402: 'Payment Required'\x2C           // RFC 7231 6.5.2\n  403: 'Forbidden'\x2C                  // RFC 7231 6.5.3\n  404: 'Not Found'\x2C                  // RFC 7231 6.5.4\n  405: 'Method Not Allowed'\x2C         // RFC 7231 6.5.5\n  406: 'Not Acceptable'\x2C             // RFC 7231 6.5.6\n  407: 'Proxy Authentication Required'\x2C // RFC 7235 3.2\n  408: 'Request Timeout'\x2C            // RFC 7231 6.5.7\n  409: 'Conflict'\x2C                   // RFC 7231 6.5.8\n  410: 'Gone'\x2C                       // RFC 7231 6.5.9\n  411: 'Length Required'\x2C            // RFC 7231 6.5.10\n  412: 'Precondition Failed'\x2C        // RFC 7232 4.2\n  413: 'Payload Too Large'\x2C          // RFC 7231 6.5.11\n  414: 'URI Too Long'\x2C               // RFC 7231 6.5.12\n  415: 'Unsupported Media Type'\x2C     // RFC 7231 6.5.13\n  416: 'Range Not Satisfiable'\x2C      // RFC 7233 4.4\n  417: 'Expectation Failed'\x2C         // RFC 7231 6.5.14\n  418: 'I\\'m a Teapot'\x2C              // RFC 7168 2.3.3\n  421: 'Misdirected Request'\x2C        // RFC 7540 9.1.2\n  422: 'Unprocessable Entity'\x2C       // RFC 4918 11.2\n  423: 'Locked'\x2C                     // RFC 4918 11.3\n  424: 'Failed Dependency'\x2C          // RFC 4918 11.4\n  425: 'Too Early'\x2C                  // RFC 8470 5.2\n  426: 'Upgrade Required'\x2C           // RFC 2817 and RFC 7231 6.5.15\n  428: 'Precondition Required'\x2C      // RFC 6585 3\n  429: 'Too Many Requests'\x2C          // RFC 6585 4\n  431: 'Request Header Fields Too Large'\x2C // RFC 6585 5\n  451: 'Unavailable For Legal Reasons'\x2C // RFC 7725 3\n  500: 'Internal Server Error'\x2C      // RFC 7231 6.6.1\n  501: 'Not Implemented'\x2C            // RFC 7231 6.6.2\n  502: 'Bad Gateway'\x2C                // RFC 7231 6.6.3\n  503: 'Service Unavailable'\x2C        // RFC 7231 6.6.4\n  504: 'Gateway Timeout'\x2C            // RFC 7231 6.6.5\n  505: 'HTTP Version Not Supported'\x2C // RFC 7231 6.6.6\n  506: 'Variant Also Negotiates'\x2C    // RFC 2295 8.1\n  507: 'Insufficient Storage'\x2C       // RFC 4918 11.5\n  508: 'Loop Detected'\x2C              // RFC 5842 7.2\n  509: 'Bandwidth Limit Exceeded'\x2C\n  510: 'Not Extended'\x2C               // RFC 2774 7\n  511: 'Network Authentication Required' // RFC 6585 6\n};\n\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nclass HTTPServerAsyncResource {\n  constructor(type\x2C socket) {\n    this.type = type;\n    this.socket = socket;\n  }\n}\n\nfunction ServerResponse(req) {\n  OutgoingMessage.call(this);\n\n  if (req.method === 'HEAD') this._hasBody = false;\n\n  this.req = req;\n  this.sendDate = true;\n  this._sent100 = false;\n  this._expect_continue = false;\n\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\n    this.useChunkedEncodingByDefault = RegExpPrototypeExec(chunkExpression\x2C\n                                                           req.headers.te) !== null;\n    this.shouldKeepAlive = false;\n  }\n\n  if (hasObserver('http')) {\n    startPerf(this\x2C kServerResponseStatistics\x2C {\n      type: 'http'\x2C\n      name: 'HttpRequest'\x2C\n      detail: {\n        req: {\n          method: req.method\x2C\n          url: req.url\x2C\n          headers: req.headers\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(ServerResponse.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ServerResponse\x2C OutgoingMessage);\n\nServerResponse.prototype._finish = function _finish() {\n  DTRACE_HTTP_SERVER_RESPONSE(this.socket);\n  if (this[kServerResponseStatistics] && hasObserver('http')) {\n    stopPerf(this\x2C kServerResponseStatistics\x2C {\n      detail: {\n        res: {\n          statusCode: this.statusCode\x2C\n          statusMessage: this.statusMessage\x2C\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {}\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  OutgoingMessage.prototype._finish.call(this);\n};\n\n\nServerResponse.prototype.statusCode = 200;\nServerResponse.prototype.statusMessage = undefined;\n\nfunction onServerResponseClose() {\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\n  // but if detachSocket() is called\x2C directly or indirectly\x2C by a 'close'\n  // listener\x2C onServerResponseClose is still in that copy of the listeners\n  // array. That is\x2C in the example below\x2C b still gets called even though\n  // it's been removed by a:\n  //\n  //   var EventEmitter = require('events');\n  //   var obj = new EventEmitter();\n  //   obj.on('event'\x2C a);\n  //   obj.on('event'\x2C b);\n  //   function a() { obj.removeListener('event'\x2C b) }\n  //   function b() { throw "BAM!" }\n  //   obj.emit('event');  // throws\n  //\n  // Ergo\x2C we need to deal with stale 'close' events and handle the case\n  // where the ServerResponse object has already been deconstructed.\n  // Fortunately\x2C that requires only a single if check. :-)\n  if (this._httpMessage) {\n    this._httpMessage.destroyed = true;\n    this._httpMessage._closed = true;\n    this._httpMessage.emit('close');\n  }\n}\n\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\n  assert(!socket._httpMessage);\n  socket._httpMessage = this;\n  socket.on('close'\x2C onServerResponseClose);\n  this.socket = socket;\n  this.emit('socket'\x2C socket);\n  this._flush();\n};\n\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\n  assert(socket._httpMessage === this);\n  socket.removeListener('close'\x2C onServerResponseClose);\n  socket._httpMessage = null;\n  this.socket = null;\n};\n\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\n  this._writeRaw('HTTP/1.1 100 Continue\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\n  this._sent100 = true;\n};\n\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\n  this._writeRaw('HTTP/1.1 102 Processing\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\n};\n\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\n  this.writeHead(this.statusCode);\n};\n\nServerResponse.prototype.writeHead = writeHead;\nfunction writeHead(statusCode\x2C reason\x2C obj) {\n  const originalStatusCode = statusCode;\n\n  statusCode |= 0;\n  if (statusCode < 100 || statusCode > 999) {\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\n  }\n\n\n  if (typeof reason === 'string') {\n    // writeHead(statusCode\x2C reasonPhrase[\x2C headers])\n    this.statusMessage = reason;\n  } else {\n    // writeHead(statusCode[\x2C headers])\n    if (!this.statusMessage)\n      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';\n    obj = reason;\n  }\n  this.statusCode = statusCode;\n\n  let headers;\n  if (this[kOutHeaders]) {\n    // Slow-case: when progressive API and header fields are passed.\n    let k;\n    if (ArrayIsArray(obj)) {\n      if (obj.length % 2 !== 0) {\n        throw new ERR_INVALID_ARG_VALUE('headers'\x2C obj);\n      }\n\n      for (let n = 0; n < obj.length; n += 2) {\n        k = obj[n + 0];\n        if (k) this.setHeader(k\x2C obj[n + 1]);\n      }\n    } else if (obj) {\n      const keys = ObjectKeys(obj);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        k = keys[i];\n        if (k) this.setHeader(k\x2C obj[k]);\n      }\n    }\n    if (k === undefined && this._header) {\n      throw new ERR_HTTP_HEADERS_SENT('render');\n    }\n    // Only progressive api is used\n    headers = this[kOutHeaders];\n  } else {\n    // Only writeHead() called\n    headers = obj;\n  }\n\n  if (checkInvalidHeaderChar(this.statusMessage))\n    throw new ERR_INVALID_CHAR('statusMessage');\n\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\\n`;\n\n  if (statusCode === 204 || statusCode === 304 ||\n      (statusCode >= 100 && statusCode <= 199)) {\n    // RFC 2616\x2C 10.2.5:\n    // The 204 response MUST NOT include a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.3.5:\n    // The 304 response MUST NOT contain a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.1 Informational 1xx:\n    // This class of status code indicates a provisional response\x2C\n    // consisting only of the Status-Line and optional headers\x2C and is\n    // terminated by an empty line.\n    this._hasBody = false;\n  }\n\n  // Don't keep alive connections where the client expects 100 Continue\n  // but we sent a final status; they may put extra bytes on the wire.\n  if (this._expect_continue && !this._sent100) {\n    this.shouldKeepAlive = false;\n  }\n\n  this._storeHeader(statusLine\x2C headers);\n\n  return this;\n}\n\n// Docs-only deprecated: DEP0063\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\n\nfunction storeHTTPOptions(options) {\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined)\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\n  this.insecureHTTPParser = insecureHTTPParser;\n}\n\nfunction Server(options\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(options\x2C requestListener);\n\n  if (typeof options === 'function') {\n    requestListener = options;\n    options = {};\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'object'\x2C options);\n  }\n\n  storeHTTPOptions.call(this\x2C options);\n  net.Server.call(\n    this\x2C\n    { allowHalfOpen: true\x2C noDelay: options.noDelay\x2C\n      keepAlive: options.keepAlive\x2C\n      keepAliveInitialDelay: options.keepAliveInitialDelay });\n\n  if (requestListener) {\n    this.on('request'\x2C requestListener);\n  }\n\n  // Similar option to this. Too lazy to write my own docs.\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\n  this.httpAllowHalfOpen = false;\n\n  this.on('connection'\x2C connectionListener);\n\n  this.timeout = 0;\n  this.keepAliveTimeout = 5000;\n  this.maxHeadersCount = null;\n  this.maxRequestsPerSocket = 0;\n  this.headersTimeout = 60 * 1000; // 60 seconds\n  this.requestTimeout = 0;\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\n}\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\n\n\nServer.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  this.timeout = msecs;\n  if (callback)\n    this.on('timeout'\x2C callback);\n  return this;\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(err\x2C event\x2C ...args) {\n  switch (event) {\n    case 'request': {\n      const { 1: res } = args;\n      if (!res.headersSent && !res.writableEnded) {\n        // Don't leak headers.\n        const names = res.getHeaderNames();\n        for (let i = 0; i < names.length; i++) {\n          res.removeHeader(names[i]);\n        }\n        res.statusCode = 500;\n        res.end(STATUS_CODES[500]);\n      } else {\n        res.destroy();\n      }\n      break;\n    }\n    default:\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\n        .apply(this\x2C arguments);\n  }\n};\n\nfunction connectionListener(socket) {\n  defaultTriggerAsyncIdScope(\n    getOrSetAsyncId(socket)\x2C connectionListenerInternal\x2C this\x2C socket\n  );\n}\n\nfunction connectionListenerInternal(server\x2C socket) {\n  debug('SERVER new http connection');\n\n  // Ensure that the server property of the socket is correctly set.\n  // See https://github.com/nodejs/node/issues/13435\n  socket.server = server;\n\n  // If the user has added a listener to the server\x2C\n  // request\x2C or response\x2C then it's their responsibility.\n  // otherwise\x2C destroy on timeout by default\n  if (server.timeout && typeof socket.setTimeout === 'function')\n    socket.setTimeout(server.timeout);\n  socket.on('timeout'\x2C socketOnTimeout);\n\n  const parser = parsers.alloc();\n\n  const lenient = server.insecureHTTPParser === undefined ?\n    isLenient() : server.insecureHTTPParser;\n\n  // TODO(addaleax): This doesn't play well with the\n  // `async_hooks.currentResource()` proposal\x2C see\n  // https://github.com/nodejs/node/pull/21313\n  parser.initialize(\n    HTTPParser.REQUEST\x2C\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE'\x2C socket)\x2C\n    server.maxHeaderSize || 0\x2C\n    lenient ? kLenientAll : kLenientNone\x2C\n    server.headersTimeout || 0\x2C\n  );\n  parser.socket = socket;\n  socket.parser = parser;\n\n  // Propagate headers limit from server instance to parser\n  if (typeof server.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\n  }\n\n  const state = {\n    onData: null\x2C\n    onEnd: null\x2C\n    onClose: null\x2C\n    onDrain: null\x2C\n    outgoing: []\x2C\n    incoming: []\x2C\n    // `outgoingData` is an approximate amount of bytes queued through all\n    // inactive responses. If more data than the high watermark is queued - we\n    // need to pause TCP socket/HTTP parser\x2C and wait until the data will be\n    // sent to the client.\n    outgoingData: 0\x2C\n    requestsCount: 0\x2C\n    keepAliveTimeoutSet: false\n  };\n  state.onData = socketOnData.bind(undefined\x2C\n                                   server\x2C socket\x2C parser\x2C state);\n  state.onEnd = socketOnEnd.bind(undefined\x2C\n                                 server\x2C socket\x2C parser\x2C state);\n  state.onClose = socketOnClose.bind(undefined\x2C\n                                     socket\x2C state);\n  state.onDrain = socketOnDrain.bind(undefined\x2C\n                                     socket\x2C state);\n  socket.on('data'\x2C state.onData);\n  socket.on('error'\x2C socketOnError);\n  socket.on('end'\x2C state.onEnd);\n  socket.on('close'\x2C state.onClose);\n  socket.on('drain'\x2C state.onDrain);\n  parser.onIncoming = parserOnIncoming.bind(undefined\x2C\n                                            server\x2C socket\x2C state);\n\n  // We are consuming socket\x2C so it won't get any actual data\n  socket.on('resume'\x2C onSocketResume);\n  socket.on('pause'\x2C onSocketPause);\n\n  // Overrides to unconsume on `data`\x2C `readable` listeners\n  socket.on = generateSocketListenerWrapper('on');\n  socket.addListener = generateSocketListenerWrapper('addListener');\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\n  socket.setEncoding = socketSetEncoding;\n\n  // We only consume the socket if it has never been consumed before.\n  if (socket._handle && socket._handle.isStreamBase &&\n      !socket._handle._consumed) {\n    parser._consumed = true;\n    socket._handle._consumed = true;\n    parser.consume(socket._handle);\n  }\n  parser[kOnExecute] =\n    onParserExecute.bind(undefined\x2C\n                         server\x2C socket\x2C parser\x2C state);\n\n  parser[kOnTimeout] =\n    onParserTimeout.bind(undefined\x2C\n                         server\x2C socket);\n\n  // When receiving new requests on the same socket (pipelining or keep alive)\n  // make sure the requestTimeout is active.\n  parser[kOnMessageBegin] =\n    setRequestTimeout.bind(undefined\x2C\n                           server\x2C socket);\n\n  // This protects from DOS attack where an attacker establish the connection\n  // without sending any data on applications where server.timeout is left to\n  // the default value of zero.\n  setRequestTimeout(server\x2C socket);\n\n  socket._paused = false;\n}\n\nfunction socketSetEncoding() {\n  throw new ERR_HTTP_SOCKET_ENCODING();\n}\n\nfunction updateOutgoingData(socket\x2C state\x2C delta) {\n  state.outgoingData += delta;\n  socketOnDrain(socket\x2C state);\n}\n\nfunction socketOnDrain(socket\x2C state) {\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\n\n  // If we previously paused\x2C then start reading again.\n  if (socket._paused && !needPause) {\n    socket._paused = false;\n    if (socket.parser)\n      socket.parser.resume();\n    socket.resume();\n  }\n\n  const msg = socket._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketOnTimeout() {\n  const req = this.parser && this.parser.incoming;\n  const reqTimeout = req && !req.complete && req.emit('timeout'\x2C this);\n  const res = this._httpMessage;\n  const resTimeout = res && res.emit('timeout'\x2C this);\n  const serverTimeout = this.server.emit('timeout'\x2C this);\n\n  if (!reqTimeout && !resTimeout && !serverTimeout)\n    this.destroy();\n}\n\nfunction socketOnClose(socket\x2C state) {\n  debug('server socket close');\n  freeParser(socket.parser\x2C null\x2C socket);\n  abortIncoming(state.incoming);\n}\n\nfunction abortIncoming(incoming) {\n  while (incoming.length) {\n    const req = incoming.shift();\n    req.destroy(connResetException('aborted'));\n  }\n  // Abort socket._httpMessage ?\n}\n\nfunction socketOnEnd(server\x2C socket\x2C parser\x2C state) {\n  const ret = parser.finish();\n\n  if (ret instanceof Error) {\n    debug('parse error');\n    // socketOnError has additional logic and will call socket.destroy(err).\n    socketOnError.call(socket\x2C ret);\n  } else if (!server.httpAllowHalfOpen) {\n    socket.end();\n  } else if (state.outgoing.length) {\n    state.outgoing[state.outgoing.length - 1]._last = true;\n  } else if (socket._httpMessage) {\n    socket._httpMessage._last = true;\n  } else {\n    socket.end();\n  }\n}\n\nfunction socketOnData(server\x2C socket\x2C parser\x2C state\x2C d) {\n  assert(!socket._paused);\n  debug('SERVER socketOnData %d'\x2C d.length);\n\n  const ret = parser.execute(d);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d);\n}\n\nfunction onRequestTimeout(socket) {\n  socket[kRequestTimeout] = undefined;\n  // socketOnError has additional logic and will call socket.destroy(err).\n  socketOnError.call(socket\x2C new ERR_HTTP_REQUEST_TIMEOUT());\n}\n\nfunction onParserExecute(server\x2C socket\x2C parser\x2C state\x2C ret) {\n  // When underlying `net.Socket` instance is consumed - no\n  // `data` events are emitted\x2C and thus `socket.setTimeout` fires the\n  // callback even if the data is constantly flowing into the socket.\n  // See\x2C https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\n  socket._unrefTimer();\n  debug('SERVER socketOnParserExecute %d'\x2C ret);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C undefined);\n}\n\nfunction onParserTimeout(server\x2C socket) {\n  const serverTimeout = server.emit('timeout'\x2C socket);\n\n  if (!serverTimeout)\n    socket.destroy();\n}\n\nconst noop = () => {};\nconst badRequestResponse = Buffer.from(\n  `HTTP/1.1 400 ${STATUS_CODES[400]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\n);\nconst requestTimeoutResponse = Buffer.from(\n  `HTTP/1.1 408 ${STATUS_CODES[408]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\n);\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\n  `HTTP/1.1 431 ${STATUS_CODES[431]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\n);\nfunction socketOnError(e) {\n  // Ignore further errors\n  this.removeListener('error'\x2C socketOnError);\n  this.on('error'\x2C noop);\n\n  if (!this.server.emit('clientError'\x2C e\x2C this)) {\n    if (this.writable && this.bytesWritten === 0) {\n      let response;\n\n      switch (e.code) {\n        case 'HPE_HEADER_OVERFLOW':\n          response = requestHeaderFieldsTooLargeResponse;\n          break;\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\n          response = requestTimeoutResponse;\n          break;\n        default:\n          response = badRequestResponse;\n          break;\n      }\n\n      this.write(response);\n    }\n    this.destroy(e);\n  }\n}\n\nfunction onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    debug('parse error'\x2C ret);\n    socketOnError.call(socket\x2C ret);\n  } else if (parser.incoming && parser.incoming.upgrade) {\n    // Upgrade or CONNECT\n    const req = parser.incoming;\n    debug('SERVER upgrade or connect'\x2C req.method);\n\n    if (!d)\n      d = parser.getCurrentBuffer();\n\n    socket.removeListener('data'\x2C state.onData);\n    socket.removeListener('end'\x2C state.onEnd);\n    socket.removeListener('close'\x2C state.onClose);\n    socket.removeListener('drain'\x2C state.onDrain);\n    socket.removeListener('error'\x2C socketOnError);\n    socket.removeListener('timeout'\x2C socketOnTimeout);\n    unconsume(parser\x2C socket);\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n    parser = null;\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\n      debug('SERVER have listener for %s'\x2C eventName);\n      const bodyHead = d.slice(ret\x2C d.length);\n\n      socket.readableFlowing = null;\n\n      // Clear the requestTimeout after upgrading the connection.\n      clearRequestTimeout(req);\n\n      server.emit(eventName\x2C req\x2C socket\x2C bodyHead);\n    } else {\n      // Got CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\n    debug('SERVER got PRI request');\n    socket.destroy();\n  } else {\n    // When receiving new requests on the same socket (pipelining or keep alive)\n    // make sure the requestTimeout is active.\n    parser[kOnMessageBegin] =\n      setRequestTimeout.bind(undefined\x2C server\x2C socket);\n  }\n\n  if (socket._paused && socket.parser) {\n    // onIncoming paused the socket\x2C we should pause the parser as well\n    debug('pause parser');\n    socket.parser.pause();\n  }\n}\n\nfunction clearIncoming(req) {\n  req = req || this;\n  const parser = req.socket && req.socket.parser;\n  // Reset the .incoming property so that the request object can be gc'ed.\n  if (parser && parser.incoming === req) {\n    if (req.readableEnded) {\n      parser.incoming = null;\n    } else {\n      req.on('end'\x2C clearIncoming);\n    }\n  }\n}\n\nfunction setRequestTimeout(server\x2C socket) {\n  // Set the request timeout handler.\n  if (\n    !socket[kRequestTimeout] &&\n    server.requestTimeout && server.requestTimeout > 0\n  ) {\n    debug('requestTimeout timer set');\n    socket[kRequestTimeout] =\n      setTimeout(onRequestTimeout\x2C server.requestTimeout\x2C socket).unref();\n  }\n}\n\nfunction clearRequestTimeout(req) {\n  if (!req) {\n    req = this;\n  }\n\n  if (!req[kRequestTimeout]) {\n    return;\n  }\n\n  debug('requestTimeout timer cleared');\n  clearTimeout(req[kRequestTimeout]);\n  req[kRequestTimeout] = undefined;\n}\n\nfunction resOnFinish(req\x2C res\x2C socket\x2C state\x2C server) {\n  if (onResponseFinishChannel.hasSubscribers) {\n    onResponseFinishChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\n    });\n  }\n\n  // Usually the first incoming element should be our request.  it may\n  // be that in the case abortIncoming() was called that the incoming\n  // array will be empty.\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\n\n  state.incoming.shift();\n\n  // If the user never called req.read()\x2C and didn't pipe() or\n  // .resume() or .on('data')\x2C then we call req._dump() so that the\n  // bytes will be pulled off the wire.\n  if (!req._consuming && !req._readableState.resumeScheduled)\n    req._dump();\n\n  // Make sure the requestTimeout is cleared before finishing.\n  // This might occur if the application has sent a response\n  // without consuming the request body\x2C which would have already\n  // cleared the timer.\n  // clearRequestTimeout can be executed even if the timer is not active\x2C\n  // so this is safe.\n  clearRequestTimeout(req);\n\n  res.detachSocket(socket);\n  clearIncoming(req);\n  process.nextTick(emitCloseNT\x2C res);\n\n  if (res._last) {\n    if (typeof socket.destroySoon === 'function') {\n      socket.destroySoon();\n    } else {\n      socket.end();\n    }\n  } else if (state.outgoing.length === 0) {\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\n      socket.setTimeout(server.keepAliveTimeout);\n      state.keepAliveTimeoutSet = true;\n    }\n  } else {\n    // Start sending the next message\n    const m = state.outgoing.shift();\n    if (m) {\n      m.assignSocket(socket);\n    }\n  }\n}\n\nfunction emitCloseNT(self) {\n  self.destroyed = true;\n  self._closed = true;\n  self.emit('close');\n}\n\n// The following callback is issued after the headers have been read on a\n// new message. In this callback we setup the response object and pass it\n// to the user.\nfunction parserOnIncoming(server\x2C socket\x2C state\x2C req\x2C keepAlive) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (req.upgrade) {\n    req.upgrade = req.method === 'CONNECT' ||\n                  server.listenerCount('upgrade') > 0;\n    if (req.upgrade)\n      return 2;\n  }\n\n  state.incoming.push(req);\n\n  // If the writable end isn't consuming\x2C then stop reading\n  // so that we don't become overwhelmed by a flood of\n  // pipelined requests that may never be resolved.\n  if (!socket._paused) {\n    const ws = socket._writableState;\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\n      socket._paused = true;\n      // We also need to pause the parser\x2C but don't do that until after\n      // the call to execute\x2C because we may still be processing the last\n      // chunk.\n      socket.pause();\n    }\n  }\n\n  const res = new server[kServerResponse](req);\n  res._keepAliveTimeout = server.keepAliveTimeout;\n  res._onPendingData = updateOutgoingData.bind(undefined\x2C\n                                               socket\x2C state);\n\n  res.shouldKeepAlive = keepAlive;\n  res[kUniqueHeaders] = server[kUniqueHeaders];\n  DTRACE_HTTP_SERVER_REQUEST(req\x2C socket);\n\n  if (onRequestStartChannel.hasSubscribers) {\n    onRequestStartChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\n    });\n  }\n\n  if (socket._httpMessage) {\n    // There are already pending outgoing res\x2C append.\n    state.outgoing.push(res);\n  } else {\n    res.assignSocket(socket);\n  }\n\n  // When we're finished writing the response\x2C check if this is the last\n  // response\x2C if so destroy the socket.\n  res.on('finish'\x2C\n         resOnFinish.bind(undefined\x2C\n                          req\x2C res\x2C socket\x2C state\x2C server));\n\n  let handled = false;\n\n  if (req.httpVersionMajor === 1 && req.httpVersionMinor === 1) {\n    const isRequestsLimitSet = (\n      typeof server.maxRequestsPerSocket === 'number' &&\n      server.maxRequestsPerSocket > 0\n    );\n\n    if (isRequestsLimitSet) {\n      state.requestsCount++;\n      res.maxRequestsOnConnectionReached = (\n        server.maxRequestsPerSocket <= state.requestsCount);\n    }\n\n    if (isRequestsLimitSet &&\n      (server.maxRequestsPerSocket < state.requestsCount)) {\n      handled = true;\n      server.emit('dropRequest'\x2C req\x2C socket);\n      res.writeHead(503);\n      res.end();\n    } else if (req.headers.expect !== undefined) {\n      handled = true;\n\n      if (RegExpPrototypeExec(continueExpression\x2C req.headers.expect) !== null) {\n        res._expect_continue = true;\n\n        if (server.listenerCount('checkContinue') > 0) {\n          server.emit('checkContinue'\x2C req\x2C res);\n        } else {\n          res.writeContinue();\n          server.emit('request'\x2C req\x2C res);\n        }\n      } else if (server.listenerCount('checkExpectation') > 0) {\n        server.emit('checkExpectation'\x2C req\x2C res);\n      } else {\n        res.writeHead(417);\n        res.end();\n      }\n    }\n  }\n\n  if (!handled) {\n    req.on('end'\x2C clearRequestTimeout);\n    server.emit('request'\x2C req\x2C res);\n  }\n\n  return 0;  // No special treatment.\n}\n\nfunction resetSocketTimeout(server\x2C socket\x2C state) {\n  if (!state.keepAliveTimeoutSet)\n    return;\n\n  socket.setTimeout(server.timeout || 0);\n  state.keepAliveTimeoutSet = false;\n}\n\nfunction onSocketResume() {\n  // It may seem that the socket is resumed\x2C but this is an enemy's trick to\n  // deceive us! `resume` is emitted asynchronously\x2C and may be called from\n  // `incoming.readStart()`. Stop the socket again here\x2C just to preserve the\n  // state.\n  //\n  // We don't care about stream semantics for the consumed socket anyway.\n  if (this._paused) {\n    this.pause();\n    return;\n  }\n\n  if (this._handle && !this._handle.reading) {\n    this._handle.reading = true;\n    this._handle.readStart();\n  }\n}\n\nfunction onSocketPause() {\n  if (this._handle && this._handle.reading) {\n    this._handle.reading = false;\n    this._handle.readStop();\n  }\n}\n\nfunction unconsume(parser\x2C socket) {\n  if (socket._handle) {\n    if (parser._consumed)\n      parser.unconsume();\n    parser._consumed = false;\n    socket.removeListener('pause'\x2C onSocketPause);\n    socket.removeListener('resume'\x2C onSocketResume);\n  }\n}\n\nfunction generateSocketListenerWrapper(originalFnName) {\n  return function socketListenerWrap(ev\x2C fn) {\n    const res = net.Socket.prototype[originalFnName].call(this\x2C\n                                                          ev\x2C fn);\n    if (!this.parser) {\n      this.on = net.Socket.prototype.on;\n      this.addListener = net.Socket.prototype.addListener;\n      this.prependListener = net.Socket.prototype.prependListener;\n      return res;\n    }\n\n    if (ev === 'data' || ev === 'readable')\n      unconsume(this.parser\x2C this);\n\n    return res;\n  };\n}\n\nmodule.exports = {\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\x2C\n  storeHTTPOptions\x2C\n  _connectionListener: connectionListener\x2C\n  kServerResponse\n};\n
code-source-info,0x3f792a6f8cc6,166,0,33471,C0O0C4O33471,,
code-creation,Function,10,163722,0x3f792a6fa4fe,1383, node:_http_server:1:1,0x3f792a6f8c40,~
code-source-info,0x3f792a6fa4fe
tick,0x7f407731c49c,163905,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e1da14,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773a70af,163998,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e1da14,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,164187,0x3f792a6fdc06,5, node:_http_common:1:1,0x3f792a6fd8d0,~
script-source,167,node:_http_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  MathMin\x2C\n  Symbol\x2C\n  RegExpPrototypeExec\x2C\n} = primordials;\nconst { setImmediate } = require('timers');\n\nconst { methods\x2C HTTPParser } = internalBinding('http_parser');\nconst { getOptionValue } = require('internal/options');\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\n\nconst FreeList = require('internal/freelist');\nconst incoming = require('_http_incoming');\nconst {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\n} = incoming;\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst kIncomingMessage = Symbol('IncomingMessage');\nconst kRequestTimeout = Symbol('RequestTimeout');\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\nconst kOnBody = HTTPParser.kOnBody | 0;\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\n\nconst MAX_HEADER_PAIRS = 2000;\n\n// Only called in the slow case where slow means\n// that the request headers were either fragmented\n// across multiple TCP packets or too large to be\n// processed in a single run. This method is also\n// called to process trailing HTTP headers.\nfunction parserOnHeaders(headers\x2C url) {\n  // Once we exceeded headers limit - stop collecting them\n  if (this.maxHeaderPairs <= 0 ||\n      this._headers.length < this.maxHeaderPairs) {\n    this._headers.push(...headers);\n  }\n  this._url += url;\n}\n\n// `headers` and `url` are set only if .onHeaders() has not been called for\n// this request.\n// `url` is not set for response parsers but that's not applicable here since\n// all our parsers are request parsers.\nfunction parserOnHeadersComplete(versionMajor\x2C versionMinor\x2C headers\x2C method\x2C\n                                 url\x2C statusCode\x2C statusMessage\x2C upgrade\x2C\n                                 shouldKeepAlive) {\n  const parser = this;\n  const { socket } = parser;\n\n  if (headers === undefined) {\n    headers = parser._headers;\n    parser._headers = [];\n  }\n\n  if (url === undefined) {\n    url = parser._url;\n    parser._url = '';\n  }\n\n  // Parser is also used by http client\n  const ParserIncomingMessage = (socket && socket.server &&\n                                 socket.server[kIncomingMessage]) ||\n                                 IncomingMessage;\n\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\n  incoming.httpVersionMajor = versionMajor;\n  incoming.httpVersionMinor = versionMinor;\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\n  incoming.url = url;\n  incoming.upgrade = upgrade;\n\n  if (socket) {\n    debug('requestTimeout timer moved to req');\n    incoming[kRequestTimeout] = incoming.socket[kRequestTimeout];\n    incoming.socket[kRequestTimeout] = undefined;\n  }\n\n  let n = headers.length;\n\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\n  if (parser.maxHeaderPairs > 0)\n    n = MathMin(n\x2C parser.maxHeaderPairs);\n\n  incoming._addHeaderLines(headers\x2C n);\n\n  if (typeof method === 'number') {\n    // server only\n    incoming.method = methods[method];\n  } else {\n    // client only\n    incoming.statusCode = statusCode;\n    incoming.statusMessage = statusMessage;\n  }\n\n  return parser.onIncoming(incoming\x2C shouldKeepAlive);\n}\n\nfunction parserOnBody(b) {\n  const stream = this.incoming;\n\n  // If the stream has already been removed\x2C then drop it.\n  if (stream === null)\n    return;\n\n  // Pretend this was the result of a stream._read call.\n  if (!stream._dumped) {\n    const ret = stream.push(b);\n    if (!ret)\n      readStop(this.socket);\n  }\n}\n\nfunction parserOnMessageComplete() {\n  const parser = this;\n  const stream = parser.incoming;\n\n  if (stream !== null) {\n    stream.complete = true;\n    // Emit any trailing headers.\n    const headers = parser._headers;\n    if (headers.length) {\n      stream._addHeaderLines(headers\x2C headers.length);\n      parser._headers = [];\n      parser._url = '';\n    }\n\n    // For emit end event\n    stream.push(null);\n  }\n\n  // Force to read the next incoming message\n  readStart(parser.socket);\n}\n\n\nconst parsers = new FreeList('parsers'\x2C 1000\x2C function parsersCb() {\n  const parser = new HTTPParser();\n\n  cleanParser(parser);\n\n  parser[kOnHeaders] = parserOnHeaders;\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\n  parser[kOnBody] = parserOnBody;\n  parser[kOnMessageComplete] = parserOnMessageComplete;\n\n  return parser;\n});\n\nfunction closeParserInstance(parser) { parser.close(); }\n\n// Free the parser and also break any links that it\n// might have to any other things.\n// TODO: All parser data should be attached to a\n// single object\x2C so that it can be easily cleaned\n// up by doing `parser.data = {}`\x2C which should\n// be done in FreeList.free.  `parsers.free(parser)`\n// should be all that is needed.\nfunction freeParser(parser\x2C req\x2C socket) {\n  if (parser) {\n    if (parser._consumed)\n      parser.unconsume();\n    cleanParser(parser);\n    if (parsers.free(parser) === false) {\n      // Make sure the parser's stack has unwound before deleting the\n      // corresponding C++ object through .close().\n      setImmediate(closeParserInstance\x2C parser);\n    } else {\n      // Since the Parser destructor isn't going to run the destroy() callbacks\n      // it needs to be triggered manually.\n      parser.free();\n    }\n  }\n  if (req) {\n    req.parser = null;\n  }\n  if (socket) {\n    socket.parser = null;\n  }\n}\n\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\n/**\n * Verifies that the given val is a valid HTTP token\n * per the rules defined in RFC 7230\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nfunction checkIsHttpToken(val) {\n  return RegExpPrototypeExec(tokenRegExp\x2C val) !== null;\n}\n\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n/**\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nfunction checkInvalidHeaderChar(val) {\n  return RegExpPrototypeExec(headerCharRegex\x2C val) !== null;\n}\n\nfunction cleanParser(parser) {\n  parser._headers = [];\n  parser._url = '';\n  parser.socket = null;\n  parser.incoming = null;\n  parser.outgoing = null;\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\n  parser[kOnMessageBegin] = null;\n  parser[kOnExecute] = null;\n  parser[kOnTimeout] = null;\n  parser._consumed = false;\n  parser.onIncoming = null;\n}\n\nfunction prepareError(err\x2C parser\x2C rawPacket) {\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\n  if (typeof err.reason === 'string')\n    err.message = `Parse Error: ${err.reason}`;\n}\n\nlet warnedLenient = false;\n\nfunction isLenient() {\n  if (insecureHTTPParser && !warnedLenient) {\n    warnedLenient = true;\n    process.emitWarning('Using insecure HTTP parsing');\n  }\n  return insecureHTTPParser;\n}\n\nmodule.exports = {\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i\x2C\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i\x2C\n  CRLF: '\\r\\n'\x2C // TODO: Deprecate this.\n  freeParser\x2C\n  methods\x2C\n  parsers\x2C\n  kIncomingMessage\x2C\n  kRequestTimeout\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n};\n
code-source-info,0x3f792a6fdc06,167,0,8410,C0O0C4O8410,,
code-creation,Function,10,164533,0x3f792a6fe33e,512, node:_http_common:1:1,0x3f792a6fdb80,~
code-source-info,0x3f792a6fe33e
new,MemoryChunk,0x334da6580000,262144
code-creation,Eval,10,164866,0x2a1384e3ffa6,5, node:internal/freelist:1:1,0x3f792a6fff70,~
script-source,168,node:internal/freelist,'use strict';\n\nconst {\n  ReflectApply\x2C\n} = primordials;\n\nclass FreeList {\n  constructor(name\x2C max\x2C ctor) {\n    this.name = name;\n    this.ctor = ctor;\n    this.max = max;\n    this.list = [];\n  }\n\n  alloc() {\n    return this.list.length > 0 ?\n      this.list.pop() :\n      ReflectApply(this.ctor\x2C this\x2C arguments);\n  }\n\n  free(obj) {\n    if (this.list.length < this.max) {\n      this.list.push(obj);\n      return true;\n    }\n    return false;\n  }\n}\n\nmodule.exports = FreeList;\n
code-source-info,0x2a1384e3ffa6,168,0,476,C0O0C4O476,,
code-creation,Function,10,164896,0x334da65813ee,54, node:internal/freelist:1:1,0x2a1384e3ff20,~
code-source-info,0x334da65813ee,168,0,476,C0O0C8O25C46O449C48O464C53O475,,
tick,0x1234b4b,164985,1,0xb53890,6,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6fe418,0x7f4060044ae0,0x7f40600432df,0x3f792a6fa6b3,0x7f4060044ae0,0x7f40600432df,0x2a1384e1da14,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,165176,0x334da6581bbe,5, node:_http_incoming:1:1,0x334da6581998,~
script-source,169,node:_http_incoming,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\n} = primordials;\n\nconst { Readable\x2C finished } = require('stream');\n\nconst kHeaders = Symbol('kHeaders');\nconst kHeadersDistinct = Symbol('kHeadersDistinct');\nconst kHeadersCount = Symbol('kHeadersCount');\nconst kTrailers = Symbol('kTrailers');\nconst kTrailersDistinct = Symbol('kTrailersDistinct');\nconst kTrailersCount = Symbol('kTrailersCount');\n\nfunction readStart(socket) {\n  if (socket && !socket._paused && socket.readable)\n    socket.resume();\n}\n\nfunction readStop(socket) {\n  if (socket)\n    socket.pause();\n}\n\n/* Abstract base class for ServerRequest and ClientResponse. */\nfunction IncomingMessage(socket) {\n  let streamOptions;\n\n  if (socket) {\n    streamOptions = {\n      highWaterMark: socket.readableHighWaterMark\n    };\n  }\n\n  Readable.call(this\x2C streamOptions);\n\n  this._readableState.readingMore = true;\n\n  this.socket = socket;\n\n  this.httpVersionMajor = null;\n  this.httpVersionMinor = null;\n  this.httpVersion = null;\n  this.complete = false;\n  this[kHeaders] = null;\n  this[kHeadersCount] = 0;\n  this.rawHeaders = [];\n  this[kTrailers] = null;\n  this[kTrailersCount] = 0;\n  this.rawTrailers = [];\n\n  this.aborted = false;\n\n  this.upgrade = null;\n\n  // request (server) only\n  this.url = '';\n  this.method = null;\n\n  // response (client) only\n  this.statusCode = null;\n  this.statusMessage = null;\n  this.client = socket;\n\n  this._consuming = false;\n  // Flag for when we decide that this message cannot possibly be\n  // read by the user\x2C so there's no point continuing to handle it.\n  this._dumped = false;\n}\nObjectSetPrototypeOf(IncomingMessage.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(IncomingMessage\x2C Readable);\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'connection'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headers'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kHeaders]) {\n      this[kHeaders] = {};\n\n      const src = this.rawHeaders;\n      const dst = this[kHeaders];\n\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kHeaders];\n  }\x2C\n  set: function(val) {\n    this[kHeaders] = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headersDistinct'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kHeadersDistinct]) {\n      this[kHeadersDistinct] = {};\n\n      const src = this.rawHeaders;\n      const dst = this[kHeadersDistinct];\n\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\n        this._addHeaderLineDistinct(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kHeadersDistinct];\n  }\x2C\n  set: function(val) {\n    this[kHeadersDistinct] = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailers'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kTrailers]) {\n      this[kTrailers] = {};\n\n      const src = this.rawTrailers;\n      const dst = this[kTrailers];\n\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kTrailers];\n  }\x2C\n  set: function(val) {\n    this[kTrailers] = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailersDistinct'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kTrailersDistinct]) {\n      this[kTrailersDistinct] = {};\n\n      const src = this.rawTrailers;\n      const dst = this[kTrailersDistinct];\n\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\n        this._addHeaderLineDistinct(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kTrailersDistinct];\n  }\x2C\n  set: function(val) {\n    this[kTrailersDistinct] = val;\n  }\n});\n\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (callback)\n    this.on('timeout'\x2C callback);\n  this.socket.setTimeout(msecs);\n  return this;\n};\n\n// Argument n cannot be factored out due to the overhead of\n// argument adaptor frame creation inside V8 in case that number of actual\n// arguments is different from expected arguments.\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\n// Refactoring `n` out might be possible when V8 is upgraded to that\n// version.\n// Ref: https://v8.dev/blog/v8-release-89\nIncomingMessage.prototype._read = function _read(n) {\n  if (!this._consuming) {\n    this._readableState.readingMore = false;\n    this._consuming = true;\n  }\n\n  // We actually do almost nothing here\x2C because the parserOnBody\n  // function fills up our internal buffer directly.  However\x2C we\n  // do need to unpause the underlying socket so that it flows.\n  if (this.socket.readable)\n    readStart(this.socket);\n};\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nIncomingMessage.prototype._destroy = function _destroy(err\x2C cb) {\n  if (!this.readableEnded || !this.complete) {\n    this.aborted = true;\n    this.emit('aborted');\n  }\n\n  // If aborted and the underlying socket is not already destroyed\x2C\n  // destroy it.\n  // We have to check if the socket is already destroyed because finished\n  // does not call the callback when this method is invoked from `_http_client`\n  // in `test/parallel/test-http-client-spurious-aborted.js`\n  if (this.socket && !this.socket.destroyed && this.aborted) {\n    this.socket.destroy(err);\n    const cleanup = finished(this.socket\x2C (e) => {\n      cleanup();\n      onError(this\x2C e || err\x2C cb);\n    });\n  } else {\n    onError(this\x2C err\x2C cb);\n  }\n};\n\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\nfunction _addHeaderLines(headers\x2C n) {\n  if (headers && headers.length) {\n    let dest;\n    if (this.complete) {\n      this.rawTrailers = headers;\n      this[kTrailersCount] = n;\n      dest = this[kTrailers];\n    } else {\n      this.rawHeaders = headers;\n      this[kHeadersCount] = n;\n      dest = this[kHeaders];\n    }\n\n    if (dest) {\n      for (let i = 0; i < n; i += 2) {\n        this._addHeaderLine(headers[i]\x2C headers[i + 1]\x2C dest);\n      }\n    }\n  }\n}\n\n\n// This function is used to help avoid the lowercasing of a field name if it\n// matches a 'traditional cased' version of a field name. It then returns the\n// lowercased name to both avoid calling toLowerCase() a second time and to\n// indicate whether the field was a 'no duplicates' field. If a field is not a\n// 'no duplicates' field\x2C a `0` byte is prepended as a flag. The one exception\n// to this is the Set-Cookie header which is indicated by a `1` byte flag\x2C since\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\n// of known header names to avoid us having to call toLowerCase() for those\n// headers.\nfunction matchKnownFields(field\x2C lowercased) {\n  switch (field.length) {\n    case 3:\n      if (field === 'Age' || field === 'age') return 'age';\n      break;\n    case 4:\n      if (field === 'Host' || field === 'host') return 'host';\n      if (field === 'From' || field === 'from') return 'from';\n      if (field === 'ETag' || field === 'etag') return 'etag';\n      if (field === 'Date' || field === 'date') return '\\u0000date';\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\n      break;\n    case 6:\n      if (field === 'Server' || field === 'server') return 'server';\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\n      break;\n    case 7:\n      if (field === 'Referer' || field === 'referer') return 'referer';\n      if (field === 'Expires' || field === 'expires') return 'expires';\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\n      break;\n    case 8:\n      if (field === 'Location' || field === 'location')\n        return 'location';\n      if (field === 'If-Match' || field === 'if-match')\n        return '\\u0000if-match';\n      break;\n    case 10:\n      if (field === 'User-Agent' || field === 'user-agent')\n        return 'user-agent';\n      if (field === 'Set-Cookie' || field === 'set-cookie')\n        return '\\u0001';\n      if (field === 'Connection' || field === 'connection')\n        return '\\u0000connection';\n      break;\n    case 11:\n      if (field === 'Retry-After' || field === 'retry-after')\n        return 'retry-after';\n      break;\n    case 12:\n      if (field === 'Content-Type' || field === 'content-type')\n        return 'content-type';\n      if (field === 'Max-Forwards' || field === 'max-forwards')\n        return 'max-forwards';\n      break;\n    case 13:\n      if (field === 'Authorization' || field === 'authorization')\n        return 'authorization';\n      if (field === 'Last-Modified' || field === 'last-modified')\n        return 'last-modified';\n      if (field === 'Cache-Control' || field === 'cache-control')\n        return '\\u0000cache-control';\n      if (field === 'If-None-Match' || field === 'if-none-match')\n        return '\\u0000if-none-match';\n      break;\n    case 14:\n      if (field === 'Content-Length' || field === 'content-length')\n        return 'content-length';\n      break;\n    case 15:\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\n        return '\\u0000accept-encoding';\n      if (field === 'Accept-Language' || field === 'accept-language')\n        return '\\u0000accept-language';\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\n        return '\\u0000x-forwarded-for';\n      break;\n    case 16:\n      if (field === 'Content-Encoding' || field === 'content-encoding')\n        return '\\u0000content-encoding';\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\n        return '\\u0000x-forwarded-host';\n      break;\n    case 17:\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\n        return 'if-modified-since';\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\n        return '\\u0000transfer-encoding';\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\n        return '\\u0000x-forwarded-proto';\n      break;\n    case 19:\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\n        return 'proxy-authorization';\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\n        return 'if-unmodified-since';\n      break;\n  }\n  if (lowercased) {\n    return '\\u0000' + field;\n  }\n  return matchKnownFields(StringPrototypeToLowerCase(field)\x2C true);\n}\n// Add the given (field\x2C value) pair to the message\n//\n// Per RFC2616\x2C section 4.2 it is acceptable to join multiple instances of the\n// same header with a '\x2C ' if the header in question supports specification of\n// multiple values this way. The one exception to this is the Cookie header\x2C\n// which has multiple values joined with a '; ' instead. If a header's values\n// cannot be joined in either of these ways\x2C we declare the first instance the\n// winner and drop the second. Extended header fields (those beginning with\n// 'x-') are always joined.\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\nfunction _addHeaderLine(field\x2C value\x2C dest) {\n  field = matchKnownFields(field);\n  const flag = StringPrototypeCharCodeAt(field\x2C 0);\n  if (flag === 0 || flag === 2) {\n    field = StringPrototypeSlice(field\x2C 1);\n    // Make a delimited list\n    if (typeof dest[field] === 'string') {\n      dest[field] += (flag === 0 ? '\x2C ' : '; ') + value;\n    } else {\n      dest[field] = value;\n    }\n  } else if (flag === 1) {\n    // Array header -- only Set-Cookie at the moment\n    if (dest['set-cookie'] !== undefined) {\n      dest['set-cookie'].push(value);\n    } else {\n      dest['set-cookie'] = [value];\n    }\n  } else if (dest[field] === undefined) {\n    // Drop duplicates\n    dest[field] = value;\n  }\n}\n\nIncomingMessage.prototype._addHeaderLineDistinct = _addHeaderLineDistinct;\nfunction _addHeaderLineDistinct(field\x2C value\x2C dest) {\n  field = StringPrototypeToLowerCase(field);\n  if (!dest[field]) {\n    dest[field] = [value];\n  } else {\n    dest[field].push(value);\n  }\n}\n\n\n// Call this instead of resume() if we want to just\n// dump all the data to /dev/null\nIncomingMessage.prototype._dump = function _dump() {\n  if (!this._dumped) {\n    this._dumped = true;\n    // If there is buffered data\x2C it may trigger 'data' events.\n    // Remove 'data' event listeners explicitly.\n    this.removeAllListeners('data');\n    this.resume();\n  }\n};\n\nfunction onError(self\x2C error\x2C cb) {\n  // This is to keep backward compatible behavior.\n  // An error is emitted only if there are listeners attached to the event.\n  if (self.listenerCount('error') === 0) {\n    cb();\n  } else {\n    cb(error);\n  }\n}\n\nmodule.exports = {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\n};\n
code-source-info,0x334da6581bbe,169,0,14393,C0O0C4O14393,,
code-creation,Function,10,165759,0x334da658289e,500, node:_http_incoming:1:1,0x334da6581b38,~
code-source-info,0x334da658289e
code-creation,LazyCompile,10,165898,0x334da6583fa6,26,FreeList node:internal/freelist:8:14,0x334da6581118,~
code-source-info,0x334da6583fa6,168,87,194,C0O111C2O121C6O133C8O143C12O155C14O164C18O175C20O185C25O193,,
tick,0x11511e7,166060,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6fa6f7,0x7f4060044ae0,0x7f40600432df,0x2a1384e1da14,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,166530,0x334da658502e,5, node:_http_outgoing:1:1,0x334da6584b58,~
script-source,170,node:_http_outgoing,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  MathFloor\x2C\n  NumberPrototypeToString\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\nconst assert = require('internal/assert');\nconst EE = require('events');\nconst Stream = require('stream');\nconst internalUtil = require('internal/util');\nconst { kOutHeaders\x2C utcDate\x2C kNeedDrain } = require('internal/http');\nconst { Buffer } = require('buffer');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  chunkExpression: RE_TE_CHUNKED\x2C\n} = require('_http_common');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol }\n} = require('internal/async_hooks');\nconst {\n  codes: {\n    ERR_HTTP_HEADERS_SENT\x2C\n    ERR_HTTP_INVALID_HEADER_VALUE\x2C\n    ERR_HTTP_TRAILER_INVALID\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CHAR\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_DESTROYED\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst { isUint8Array } = require('internal/util/types');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst HIGH_WATER_MARK = getDefaultHighWaterMark();\n\nconst kCorked = Symbol('corked');\nconst kUniqueHeaders = Symbol('kUniqueHeaders');\n\nconst nop = () => {};\n\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\n\n// isCookieField performs a case-insensitive comparison of a provided string\n// against the word "cookie." As of V8 6.6 this is faster than handrolling or\n// using a case-insensitive RegExp.\nfunction isCookieField(s) {\n  return s.length === 6 && StringPrototypeToLowerCase(s) === 'cookie';\n}\n\nfunction OutgoingMessage() {\n  Stream.call(this);\n\n  // Queue that holds all currently pending data\x2C until the response will be\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\n  this.outputData = [];\n\n  // `outputSize` is an approximate measure of how much data is queued on this\n  // response. `_onPendingData` will be invoked to update similar global\n  // per-connection counter. That counter will be used to pause/unpause the\n  // TCP socket and HTTP Parser and thus handle the backpressure.\n  this.outputSize = 0;\n\n  this.writable = true;\n  this.destroyed = false;\n\n  this._last = false;\n  this.chunkedEncoding = false;\n  this.shouldKeepAlive = true;\n  this.maxRequestsOnConnectionReached = false;\n  this._defaultKeepAlive = true;\n  this.useChunkedEncodingByDefault = true;\n  this.sendDate = false;\n  this._removedConnection = false;\n  this._removedContLen = false;\n  this._removedTE = false;\n\n  this._contentLength = null;\n  this._hasBody = true;\n  this._trailer = '';\n  this[kNeedDrain] = false;\n\n  this.finished = false;\n  this._headerSent = false;\n  this[kCorked] = 0;\n  this._closed = false;\n\n  this.socket = null;\n  this._header = null;\n  this[kOutHeaders] = null;\n\n  this._keepAliveTimeout = 0;\n\n  this._onPendingData = nop;\n}\nObjectSetPrototypeOf(OutgoingMessage.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(OutgoingMessage\x2C Stream);\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableFinished'\x2C {\n  __proto__: null\x2C\n  get() {\n    return (\n      this.finished &&\n      this.outputSize === 0 &&\n      (!this.socket || this.socket.writableLength === 0)\n    );\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableObjectMode'\x2C {\n  __proto__: null\x2C\n  get() {\n    return false;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableLength'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this.outputSize + (this.socket ? this.socket.writableLength : 0);\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableHighWaterMark'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this.socket ? this.socket.writableHighWaterMark : HIGH_WATER_MARK;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableCorked'\x2C {\n  __proto__: null\x2C\n  get() {\n    const corked = this.socket ? this.socket.writableCorked : 0;\n    return corked + this[kCorked];\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headers'\x2C {\n  __proto__: null\x2C\n  get: internalUtil.deprecate(function() {\n    return this.getHeaders();\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (val == null) {\n      this[kOutHeaders] = null;\n    } else if (typeof val === 'object') {\n      const headers = this[kOutHeaders] = ObjectCreate(null);\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const name = keys[i];\n        headers[StringPrototypeToLowerCase(name)] = [name\x2C val[name]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'connection'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headerNames'\x2C {\n  __proto__: null\x2C\n  get: internalUtil.deprecate(function() {\n    const headers = this[kOutHeaders];\n    if (headers !== null) {\n      const out = ObjectCreate(null);\n      const keys = ObjectKeys(headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const val = headers[key][0];\n        out[key] = val;\n      }\n      return out;\n    }\n    return null;\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (typeof val === 'object' && val !== null) {\n      const headers = this[kOutHeaders];\n      if (!headers)\n        return;\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const header = headers[keys[i]];\n        if (header)\n          header[0] = val[keys[i]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\n});\n\n\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n\n  const headersMap = this[kOutHeaders];\n  const headers = {};\n\n  if (headersMap !== null) {\n    const keys = ObjectKeys(headersMap);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0\x2C l = keys.length; i < l; i++) {\n      const key = keys[i];\n      headers[headersMap[key][0]] = headersMap[key][1];\n    }\n  }\n  return headers;\n};\n\nOutgoingMessage.prototype.cork = function() {\n  if (this.socket) {\n    this.socket.cork();\n  } else {\n    this[kCorked]++;\n  }\n};\n\nOutgoingMessage.prototype.uncork = function() {\n  if (this.socket) {\n    this.socket.uncork();\n  } else if (this[kCorked]) {\n    this[kCorked]--;\n  }\n};\n\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n\n  if (callback) {\n    this.on('timeout'\x2C callback);\n  }\n\n  if (!this.socket) {\n    this.once('socket'\x2C function socketSetTimeoutOnConnect(socket) {\n      socket.setTimeout(msecs);\n    });\n  } else {\n    this.socket.setTimeout(msecs);\n  }\n  return this;\n};\n\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nOutgoingMessage.prototype.destroy = function destroy(error) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  if (this.socket) {\n    this.socket.destroy(error);\n  } else {\n    this.once('socket'\x2C function socketDestroyOnConnect(socket) {\n      socket.destroy(error);\n    });\n  }\n\n  return this;\n};\n\n\n// This abstract either writing directly to the socket or buffering it.\nOutgoingMessage.prototype._send = function _send(data\x2C encoding\x2C callback) {\n  // This is a shameful hack to get the headers and first body chunk onto\n  // the same packet. Future versions of Node are going to take care of\n  // this at a lower level and in a more general way.\n  if (!this._headerSent) {\n    if (typeof data === 'string' &&\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\n      data = this._header + data;\n    } else {\n      const header = this._header;\n      this.outputData.unshift({\n        data: header\x2C\n        encoding: 'latin1'\x2C\n        callback: null\n      });\n      this.outputSize += header.length;\n      this._onPendingData(header.length);\n    }\n    this._headerSent = true;\n  }\n  return this._writeRaw(data\x2C encoding\x2C callback);\n};\n\n\nOutgoingMessage.prototype._writeRaw = _writeRaw;\nfunction _writeRaw(data\x2C encoding\x2C callback) {\n  const conn = this.socket;\n  if (conn && conn.destroyed) {\n    // The socket was destroyed. If we're still trying to write to it\x2C\n    // then we haven't gotten the 'close' event yet.\n    return false;\n  }\n\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (conn && conn._httpMessage === this && conn.writable) {\n    // There might be pending data in the this.output buffer.\n    if (this.outputData.length) {\n      this._flushOutput(conn);\n    }\n    // Directly write to socket.\n    return conn.write(data\x2C encoding\x2C callback);\n  }\n  // Buffer\x2C as long as we're not destroyed.\n  this.outputData.push({ data\x2C encoding\x2C callback });\n  this.outputSize += data.length;\n  this._onPendingData(data.length);\n  return this.outputSize < HIGH_WATER_MARK;\n}\n\n\nOutgoingMessage.prototype._storeHeader = _storeHeader;\nfunction _storeHeader(firstLine\x2C headers) {\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\n  const state = {\n    connection: false\x2C\n    contLen: false\x2C\n    te: false\x2C\n    date: false\x2C\n    expect: false\x2C\n    trailer: false\x2C\n    header: firstLine\n  };\n\n  if (headers) {\n    if (headers === this[kOutHeaders]) {\n      for (const key in headers) {\n        const entry = headers[key];\n        processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C false);\n      }\n    } else if (ArrayIsArray(headers)) {\n      if (headers.length && ArrayIsArray(headers[0])) {\n        for (let i = 0; i < headers.length; i++) {\n          const entry = headers[i];\n          processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C true);\n        }\n      } else {\n        if (headers.length % 2 !== 0) {\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\n        }\n\n        for (let n = 0; n < headers.length; n += 2) {\n          processHeader(this\x2C state\x2C headers[n + 0]\x2C headers[n + 1]\x2C true);\n        }\n      }\n    } else {\n      for (const key in headers) {\n        if (ObjectPrototypeHasOwnProperty(headers\x2C key)) {\n          processHeader(this\x2C state\x2C key\x2C headers[key]\x2C true);\n        }\n      }\n    }\n  }\n\n  let { header } = state;\n\n  // Date header\n  if (this.sendDate && !state.date) {\n    header += 'Date: ' + utcDate() + '\\r\\n';\n  }\n\n  // Force the connection to close when the response is a 204 No Content or\n  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"\n  // header.\n  //\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\n  // node.js used to send out a zero chunk anyway to accommodate clients\n  // that don't have special handling for those responses.\n  //\n  // It was pointed out that this might confuse reverse proxies to the point\n  // of creating security liabilities\x2C so suppress the zero chunk and force\n  // the connection to close.\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\n                               this.statusCode === 304)) {\n    debug(this.statusCode + ' response should not use chunked encoding\x2C' +\n          ' closing connection.');\n    this.chunkedEncoding = false;\n    this.shouldKeepAlive = false;\n  }\n\n  // keep-alive logic\n  if (this._removedConnection) {\n    this._last = true;\n    this.shouldKeepAlive = false;\n  } else if (!state.connection) {\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\n    if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\n      header += 'Connection: close\\r\\n';\n    } else if (shouldSendKeepAlive) {\n      header += 'Connection: keep-alive\\r\\n';\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\n        header += `Keep-Alive: timeout=${timeoutSeconds}\\r\\n`;\n      }\n    } else {\n      this._last = true;\n      header += 'Connection: close\\r\\n';\n    }\n  }\n\n  if (!state.contLen && !state.te) {\n    if (!this._hasBody) {\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\n      this.chunkedEncoding = false;\n    } else if (!this.useChunkedEncodingByDefault) {\n      this._last = true;\n    } else if (!state.trailer &&\n               !this._removedContLen &&\n               typeof this._contentLength === 'number') {\n      header += 'Content-Length: ' + this._contentLength + '\\r\\n';\n    } else if (!this._removedTE) {\n      header += 'Transfer-Encoding: chunked\\r\\n';\n      this.chunkedEncoding = true;\n    } else {\n      // We should only be able to get here if both Content-Length and\n      // Transfer-Encoding are removed by the user.\n      // See: test/parallel/test-http-remove-header-stays-removed.js\n      debug('Both Content-Length and Transfer-Encoding are removed');\n    }\n  }\n\n  // Test non-chunked message does not have trailer header set\x2C\n  // message will be terminated by the first empty line after the\n  // header fields\x2C regardless of the header fields present in the\n  // message\x2C and thus cannot contain a message body or 'trailers'.\n  if (this.chunkedEncoding !== true && state.trailer) {\n    throw new ERR_HTTP_TRAILER_INVALID();\n  }\n\n  this._header = header + '\\r\\n';\n  this._headerSent = false;\n\n  // Wait until the first body chunk\x2C or close()\x2C is sent to flush\x2C\n  // UNLESS we're sending Expect: 100-continue.\n  if (state.expect) this._send('');\n}\n\nfunction processHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderName(key);\n  if (ArrayIsArray(value)) {\n    if (\n      (value.length < 2 || !isCookieField(key)) &&\n      (!self[kUniqueHeaders] || !self[kUniqueHeaders].has(StringPrototypeToLowerCase(key)))\n    ) {\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < value.length; i++)\n        storeHeader(self\x2C state\x2C key\x2C value[i]\x2C validate);\n      return;\n    }\n    value = ArrayPrototypeJoin(value\x2C '; ');\n  }\n  storeHeader(self\x2C state\x2C key\x2C value\x2C validate);\n}\n\nfunction storeHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderValue(key\x2C value);\n  state.header += key + ': ' + value + '\\r\\n';\n  matchHeader(self\x2C state\x2C key\x2C value);\n}\n\nfunction matchHeader(self\x2C state\x2C field\x2C value) {\n  if (field.length < 4 || field.length > 17)\n    return;\n  field = StringPrototypeToLowerCase(field);\n  switch (field) {\n    case 'connection':\n      state.connection = true;\n      self._removedConnection = false;\n      if (RegExpPrototypeExec(RE_CONN_CLOSE\x2C value) !== null)\n        self._last = true;\n      else\n        self.shouldKeepAlive = true;\n      break;\n    case 'transfer-encoding':\n      state.te = true;\n      self._removedTE = false;\n      if (RegExpPrototypeExec(RE_TE_CHUNKED\x2C value) !== null)\n        self.chunkedEncoding = true;\n      break;\n    case 'content-length':\n      state.contLen = true;\n      self._removedContLen = false;\n      break;\n    case 'date':\n    case 'expect':\n    case 'trailer':\n      state[field] = true;\n      break;\n    case 'keep-alive':\n      self._defaultKeepAlive = false;\n      break;\n  }\n}\n\nconst validateHeaderName = hideStackFrames((name) => {\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\n    throw new ERR_INVALID_HTTP_TOKEN('Header name'\x2C name);\n  }\n});\n\nconst validateHeaderValue = hideStackFrames((name\x2C value) => {\n  if (value === undefined) {\n    throw new ERR_HTTP_INVALID_HEADER_VALUE(value\x2C name);\n  }\n  if (checkInvalidHeaderChar(value)) {\n    debug('Header "%s" contains invalid characters'\x2C name);\n    throw new ERR_INVALID_CHAR('header content'\x2C name);\n  }\n});\n\nfunction parseUniqueHeadersOption(headers) {\n  if (!ArrayIsArray(headers)) {\n    return null;\n  }\n\n  const unique = new SafeSet();\n  const l = headers.length;\n  for (let i = 0; i < l; i++) {\n    unique.add(StringPrototypeToLowerCase(headers[i]));\n  }\n\n  return unique;\n}\n\nOutgoingMessage.prototype.setHeader = function setHeader(name\x2C value) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('set');\n  }\n  validateHeaderName(name);\n  validateHeaderValue(name\x2C value);\n\n  let headers = this[kOutHeaders];\n  if (headers === null)\n    this[kOutHeaders] = headers = ObjectCreate(null);\n\n  headers[StringPrototypeToLowerCase(name)] = [name\x2C value];\n  return this;\n};\n\nOutgoingMessage.prototype.appendHeader = function appendHeader(name\x2C value) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('append');\n  }\n  validateHeaderName(name);\n  validateHeaderValue(name\x2C value);\n\n  const field = StringPrototypeToLowerCase(name);\n  const headers = this[kOutHeaders];\n  if (headers === null || !headers[field]) {\n    return this.setHeader(name\x2C value);\n  }\n\n  // Prepare the field for appending\x2C if required\n  if (!ArrayIsArray(headers[field][1])) {\n    headers[field][1] = [headers[field][1]];\n  }\n\n  const existingValues = headers[field][1];\n  if (ArrayIsArray(value)) {\n    for (let i = 0\x2C length = value.length; i < length; i++) {\n      existingValues.push(value[i]);\n    }\n  } else {\n    existingValues.push(value);\n  }\n\n  return this;\n};\n\n\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\n  validateString(name\x2C 'name');\n\n  const headers = this[kOutHeaders];\n  if (headers === null)\n    return;\n\n  const entry = headers[StringPrototypeToLowerCase(name)];\n  return entry && entry[1];\n};\n\n\n// Returns an array of the names of the current outgoing headers.\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\n};\n\n\n// Returns an array of the names of the current outgoing raw headers.\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\n  const headersMap = this[kOutHeaders];\n  if (headersMap === null) return [];\n\n  const values = ObjectValues(headersMap);\n  const headers = Array(values.length);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = values.length; i < l; i++) {\n    headers[i] = values[i][0];\n  }\n\n  return headers;\n};\n\n\n// Returns a shallow copy of the current outgoing headers.\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\n  const headers = this[kOutHeaders];\n  const ret = ObjectCreate(null);\n  if (headers) {\n    const keys = ObjectKeys(headers);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const val = headers[key][1];\n      ret[key] = val;\n    }\n  }\n  return ret;\n};\n\n\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\n  validateString(name\x2C 'name');\n  return this[kOutHeaders] !== null &&\n    !!this[kOutHeaders][StringPrototypeToLowerCase(name)];\n};\n\n\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\n  validateString(name\x2C 'name');\n\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('remove');\n  }\n\n  const key = StringPrototypeToLowerCase(name);\n\n  switch (key) {\n    case 'connection':\n      this._removedConnection = true;\n      break;\n    case 'content-length':\n      this._removedContLen = true;\n      break;\n    case 'transfer-encoding':\n      this._removedTE = true;\n      break;\n    case 'date':\n      this.sendDate = false;\n      break;\n  }\n\n  if (this[kOutHeaders] !== null) {\n    delete this[kOutHeaders][key];\n  }\n};\n\n\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\n};\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'headersSent'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: function() { return !!this._header; }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableEnded'\x2C {\n  __proto__: null\x2C\n  get: function() { return this.finished; }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableNeedDrain'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !this.destroyed && !this.finished && this[kNeedDrain];\n  }\n});\n\nconst crlf_buf = Buffer.from('\\r\\n');\nOutgoingMessage.prototype.write = function write(chunk\x2C encoding\x2C callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  const ret = write_(this\x2C chunk\x2C encoding\x2C callback\x2C false);\n  if (!ret)\n    this[kNeedDrain] = true;\n  return ret;\n};\n\nfunction onError(msg\x2C err\x2C callback) {\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\n  defaultTriggerAsyncIdScope(triggerAsyncId\x2C\n                             process.nextTick\x2C\n                             emitErrorNt\x2C\n                             msg\x2C\n                             err\x2C\n                             callback);\n}\n\nfunction emitErrorNt(msg\x2C err\x2C callback) {\n  callback(err);\n  if (typeof msg.emit === 'function' && !msg._closed) {\n    msg.emit('error'\x2C err);\n  }\n}\n\nfunction write_(msg\x2C chunk\x2C encoding\x2C callback\x2C fromEnd) {\n  if (typeof callback !== 'function')\n    callback = nop;\n\n  let len;\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk === 'string') {\n    len = Buffer.byteLength(chunk\x2C encoding);\n  } else if (isUint8Array(chunk)) {\n    len = chunk.length;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n  }\n\n  let err;\n  if (msg.finished) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (msg.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    if (!msg.destroyed) {\n      onError(msg\x2C err\x2C callback);\n    } else {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  if (!msg._header) {\n    if (fromEnd) {\n      msg._contentLength = len;\n    }\n    msg._implicitHeader();\n  }\n\n  if (!msg._hasBody) {\n    debug('This type of response MUST NOT have a body. ' +\n          'Ignoring write() calls.');\n    process.nextTick(callback);\n    return true;\n  }\n\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\n    msg.socket.cork();\n    process.nextTick(connectionCorkNT\x2C msg.socket);\n  }\n\n  let ret;\n  if (msg.chunkedEncoding && chunk.length !== 0) {\n    msg._send(NumberPrototypeToString(len\x2C 16)\x2C 'latin1'\x2C null);\n    msg._send(crlf_buf\x2C null\x2C null);\n    msg._send(chunk\x2C encoding\x2C null);\n    ret = msg._send(crlf_buf\x2C null\x2C callback);\n  } else {\n    ret = msg._send(chunk\x2C encoding\x2C callback);\n  }\n\n  debug('write ret = ' + ret);\n  return ret;\n}\n\n\nfunction connectionCorkNT(conn) {\n  conn.uncork();\n}\n\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\n  this._trailer = '';\n  const keys = ObjectKeys(headers);\n  const isArray = ArrayIsArray(headers);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = keys.length; i < l; i++) {\n    let field\x2C value;\n    const key = keys[i];\n    if (isArray) {\n      field = headers[key][0];\n      value = headers[key][1];\n    } else {\n      field = key;\n      value = headers[key];\n    }\n    if (typeof field !== 'string' || !field || !checkIsHttpToken(field)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Trailer name'\x2C field);\n    }\n\n    // Check if the field must be sent several times\n    const isArrayValue = ArrayIsArray(value);\n    if (\n      isArrayValue && value.length > 1 &&\n      (!this[kUniqueHeaders] || !this[kUniqueHeaders].has(StringPrototypeToLowerCase(field)))\n    ) {\n      for (let j = 0\x2C l = value.length; j < l; j++) {\n        if (checkInvalidHeaderChar(value[j])) {\n          debug('Trailer "%s"[%d] contains invalid characters'\x2C field\x2C j);\n          throw new ERR_INVALID_CHAR('trailer content'\x2C field);\n        }\n        this._trailer += field + ': ' + value[j] + '\\r\\n';\n      }\n    } else {\n      if (isArrayValue) {\n        value = ArrayPrototypeJoin(value\x2C '; ');\n      }\n\n      if (checkInvalidHeaderChar(value)) {\n        debug('Trailer "%s" contains invalid characters'\x2C field);\n        throw new ERR_INVALID_CHAR('trailer content'\x2C field);\n      }\n      this._trailer += field + ': ' + value + '\\r\\n';\n    }\n  }\n};\n\nfunction onFinish(outmsg) {\n  if (outmsg && outmsg.socket && outmsg.socket._hadError) return;\n  outmsg.emit('finish');\n}\n\nOutgoingMessage.prototype.end = function end(chunk\x2C encoding\x2C callback) {\n  if (typeof chunk === 'function') {\n    callback = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (chunk) {\n    if (this.finished) {\n      onError(this\x2C\n              new ERR_STREAM_WRITE_AFTER_END()\x2C\n              typeof callback !== 'function' ? nop : callback);\n      return this;\n    }\n\n    if (this.socket) {\n      this.socket.cork();\n    }\n\n    write_(this\x2C chunk\x2C encoding\x2C null\x2C true);\n  } else if (this.finished) {\n    if (typeof callback === 'function') {\n      if (!this.writableFinished) {\n        this.on('finish'\x2C callback);\n      } else {\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\n      }\n    }\n    return this;\n  } else if (!this._header) {\n    if (this.socket) {\n      this.socket.cork();\n    }\n\n    this._contentLength = 0;\n    this._implicitHeader();\n  }\n\n  if (typeof callback === 'function')\n    this.once('finish'\x2C callback);\n\n  const finish = onFinish.bind(undefined\x2C this);\n\n  if (this._hasBody && this.chunkedEncoding) {\n    this._send('0\\r\\n' + this._trailer + '\\r\\n'\x2C 'latin1'\x2C finish);\n  } else if (!this._headerSent || this.writableLength || chunk) {\n    this._send(''\x2C 'latin1'\x2C finish);\n  } else {\n    process.nextTick(finish);\n  }\n\n  if (this.socket) {\n    // Fully uncork connection on end().\n    this.socket._writableState.corked = 1;\n    this.socket.uncork();\n  }\n  this[kCorked] = 0;\n\n  this.finished = true;\n\n  // There is the first message on the outgoing queue\x2C and we've sent\n  // everything to the socket.\n  debug('outgoing message end.');\n  if (this.outputData.length === 0 &&\n      this.socket &&\n      this.socket._httpMessage === this) {\n    this._finish();\n  }\n\n  return this;\n};\n\n\nOutgoingMessage.prototype._finish = function _finish() {\n  assert(this.socket);\n  this.emit('prefinish');\n};\n\n\n// This logic is probably a bit confusing. Let me explain a bit:\n//\n// In both HTTP servers and clients it is possible to queue up several\n// outgoing messages. This is easiest to imagine in the case of a client.\n// Take the following situation:\n//\n//    req1 = client.request('GET'\x2C '/');\n//    req2 = client.request('POST'\x2C '/');\n//\n// When the user does\n//\n//   req2.write('hello world\\n');\n//\n// it's possible that the first request has not been completely flushed to\n// the socket yet. Thus the outgoing messages need to be prepared to queue\n// up data internally before sending it on further to the socket's queue.\n//\n// This function\x2C outgoingFlush()\x2C is called by both the Server and Client\n// to attempt to flush any pending messages out to the socket.\nOutgoingMessage.prototype._flush = function _flush() {\n  const socket = this.socket;\n\n  if (socket && socket.writable) {\n    // There might be remaining data in this.output; write it out\n    const ret = this._flushOutput(socket);\n\n    if (this.finished) {\n      // This is a queue to the server or client to bring in the next this.\n      this._finish();\n    } else if (ret && this[kNeedDrain]) {\n      this[kNeedDrain] = false;\n      this.emit('drain');\n    }\n  }\n};\n\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\n  while (this[kCorked]) {\n    this[kCorked]--;\n    socket.cork();\n  }\n\n  const outputLength = this.outputData.length;\n  if (outputLength <= 0)\n    return undefined;\n\n  const outputData = this.outputData;\n  socket.cork();\n  let ret;\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0; i < outputLength; i++) {\n    const { data\x2C encoding\x2C callback } = outputData[i];\n    ret = socket.write(data\x2C encoding\x2C callback);\n  }\n  socket.uncork();\n\n  this.outputData = [];\n  this._onPendingData(-this.outputSize);\n  this.outputSize = 0;\n\n  return ret;\n};\n\n\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\n  if (!this._header) {\n    this._implicitHeader();\n  }\n\n  // Force-flush the headers.\n  this._send('');\n};\n\nOutgoingMessage.prototype.pipe = function pipe() {\n  // OutgoingMessage should be write-only. Piping from it is disabled.\n  this.emit('error'\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\nfunction(err\x2C event) {\n  this.destroy(err);\n};\n\nmodule.exports = {\n  kUniqueHeaders\x2C\n  parseUniqueHeadersOption\x2C\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\n};\n
code-source-info,0x334da658502e,170,0,30940,C0O0C4O30940,,
code-creation,Function,10,167800,0x334da6586bfe,1534, node:_http_outgoing:1:1,0x334da6584fa8,~
code-source-info,0x334da6586bfe,170,0,30940,C0O0C224O1159C230O1168C236O1184C242O1206C248O1219C254O1246C260O1262C265O1286C271O1300C277O1316C283O1349C288O1373C294O1396C300O1407C306O1437C311O1499C314O1499C319O1471C324O1549C327O1549C331O1549C333O1588C336O1588C341O1622C344O1622C348O1622C350O1662C353O1662C358O1733C361O1733C366O1696C372O1709C378O1718C384O1778C387O1778C392O1767C398O1933C401O1933C406O1826C412O1871C418O1914C424O2031C427O2031C432O1968C443O2009C449O2483C452O2483C457O2483C462O2087C468O2114C474O2149C480O2179C486O2207C492O2233C498O2260C504O2282C510O2314C516O2342C522O2375C528O2407C534O2435C540O2463C545O2538C548O2538C553O2519C559O2595C562O2595C567O2578C573O2640C576O2640C581O2673C594O2674C600O2640C602O2744C605O2744C607O2788C610O2788C614O2788C616O2829C619O2829C623O2829C625O2868C629O2868C631O2901C635O2901C637O4523C645O4541C650O4486C655O4553C658O4553C663O4638C676O4692C684O4601C689O4877C702O4933C710O4840C715O5005C728O5057C736O4968C741O5188C754O5247C762O5151C767O5379C780O5431C788O5342C793O5585C806O5649C829O5649C838O5791C861O5791C870O5548C875O6393C888O6446C896O6495C904O6356C909O6580C922O6648C945O6648C954O7204C977O7204C986O6543C991O7755C1000O7780C1004O8305C1013O8320C1017O8436C1026O8453C1030O8590C1039O8611C1043O9130C1052O9148C1056O9527C1065O9543C1069O10312C1076O10332C1080O11203C1087O11226C1091O17463C1096O17463C1100O17463C1102O17657C1107O17657C1111O17657C1113O18235C1122O18255C1126O18636C1135O18659C1139O19417C1148O19437C1152O19747C1161O19772C1165O19967C1174O19995C1178O20477C1187O20498C1191O20929C1200O20949C1204O21129C1213O21152C1217O21739C1226O21765C1230O21898C1243O21994C1251O21861C1256O22074C1269O22130C1277O22037C1282O22209C1295O22269C1303O22172C1308O22374C1311O22381C1319O22381C1324O22374C1326O22411C1335O22427C1339O24822C1348O24844C1352O26519C1361O26533C1365O28340C1374O28358C1378O29213C1387O29230C1391O29681C1400O29704C1404O30369C1413O30392C1421O30544C1430O30559C1438O30722C1443O30735C1456O30759C1464O30809C1474O30830C1484O30848C1494O30876C1504O30898C1514O30921C1524O30824C1533O30939,,
tick,0xf9a373,167881,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3f792a6fa6f7,0x7f4060044ae0,0x7f40600432df,0x2a1384e1da14,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,168010,0x334da658a0a6,5, node:internal/http:1:1,0x334da6589ef0,~
script-source,171,node:internal/http,'use strict';\n\nconst {\n  Symbol\x2C\n  Date\x2C\n  DatePrototypeGetMilliseconds\x2C\n  DatePrototypeToUTCString\x2C\n} = primordials;\n\nconst { setUnrefTimeout } = require('internal/timers');\n\nlet utcCache;\n\nfunction utcDate() {\n  if (!utcCache) cache();\n  return utcCache;\n}\n\nfunction cache() {\n  const d = new Date();\n  utcCache = DatePrototypeToUTCString(d);\n  setUnrefTimeout(resetCache\x2C 1000 - DatePrototypeGetMilliseconds(d));\n}\n\nfunction resetCache() {\n  utcCache = undefined;\n}\n\nmodule.exports = {\n  kOutHeaders: Symbol('kOutHeaders')\x2C\n  kNeedDrain: Symbol('kNeedDrain')\x2C\n  utcDate\x2C\n};\n
code-source-info,0x334da658a0a6,171,0,577,C0O0C4O577,,
code-creation,Function,10,168075,0x334da658a2ce,118, node:internal/http:1:1,0x334da658a020,~
code-source-info,0x334da658a2ce,171,0,577,C0O0C37O25C42O35C48O43C54O75C60O147C63O147C68O127C74O180C75O180C77O470C85O504C96O541C106O565C112O485C117O576,,
code-creation,LazyCompile,10,168165,0x334da658a886,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x3e83b617ce98,~
script-source,62,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024;\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n};\n
code-source-info,0x334da658a886,62,343,397,C0O360C12O395,,
tick,0x7f40773a70af,168353,0,0x0,3,0x11d7ee0,0x334da6586e58,0x7f4060044ae0,0x7f40600432df,0x3f792a6fa6f7,0x7f4060044ae0,0x7f40600432df,0x2a1384e1da14,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,168580,0x334da658b6b6,5, node:diagnostics_channel:1:1,0x334da658b458,~
script-source,172,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectCreate\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = internalBinding('util');\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index === -1) return false;\n\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\n\n    // When there are no more active subscribers\x2C restore to fast prototype.\n    if (!this._subscribers.length) {\n      // eslint-disable-next-line no-use-before-define\n      ObjectSetPrototypeOf(this\x2C Channel.prototype);\n    }\n\n    return true;\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    for (let i = 0; i < this._subscribers.length; i++) {\n      try {\n        const onMessage = this._subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this.name = name;\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    ObjectSetPrototypeOf(this\x2C ActiveChannel.prototype);\n    this._subscribers = [];\n    this.subscribe(subscription);\n  }\n\n  unsubscribe() {\n    return false;\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n}\n\nconst channels = ObjectCreate(null);\n\nfunction channel(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  channel = new Channel(name);\n  channels[name] = new WeakReference(channel);\n  return channel;\n}\n\nfunction subscribe(name\x2C subscription) {\n  const chan = channel(name);\n  channels[name].incRef();\n  chan.subscribe(subscription);\n}\n\nfunction unsubscribe(name\x2C subscription) {\n  const chan = channel(name);\n  if (!chan.unsubscribe(subscription)) {\n    return false;\n  }\n\n  channels[name].decRef();\n  return true;\n}\n\nfunction hasSubscribers(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (!channel) {\n    return false;\n  }\n\n  return channel.hasSubscribers;\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  subscribe\x2C\n  unsubscribe\x2C\n  Channel\n};\n
code-source-info,0x334da658b6b6,172,0,3040,C0O0C4O3040,,
code-creation,Function,10,168759,0x334da658c306,337, node:diagnostics_channel:1:1,0x334da658b630,~
code-source-info,0x334da658c306,172,0,3040,C0O0C66O25C72O50C78O72C84O96C89O112C95O136C101O160C106O250C109O250C114O250C119O220C125O310C128O310C133O288C139O380C142O380C147O351C153O434C156O434C161O416C208O516C226O1592C284O1482C286O2054C288O2054C292O2054C294O2951C301O2972C307O2983C313O3001C319O3014C325O3029C331O2966C336O3039,,
code-creation,LazyCompile,10,168926,0x334da658ccce,105,channel node:diagnostics_channel:97:17,0x334da658b6e8,~
code-source-info,0x334da658ccce,172,2091,2448,C0O2106C2O2129C9O2137C13O2147C15O2170C20O2170C25O2179C29O2192C31O2207C32O2211C44O2275C62O2281C67O2275C68O2353C75O2363C81O2384C88O2405C93O2401C98O2399C102O2431C104O2446,,
code-creation,LazyCompile,10,168994,0x334da658d306,13,Channel node:diagnostics_channel:67:14,0x334da658b9e0,~
code-source-info,0x334da658d306,172,1511,1580,C0O1524C1O1542C5O1559C7O1569C12O1579,,
code-creation,LazyCompile,10,169127,0x334da658d666,5,byteLength node:buffer:633:17,0x1d49834b58c8,~
code-source-info,0x334da658d666,24,18116,18141,C0O18135C4O18141,,
code-creation,LazyCompile,10,169197,0x334da658d73e,23,write node:buffer:634:12,0x1d49834b59b0,~
code-source-info,0x334da658d73e,24,18154,18219,C0O18188C17O18188C22O18219,,
tick,0xd08394,169370,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e1da2d,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,169704,0x334da658e66e,5, node:_http_client:1:1,0x334da658e028,~
script-source,173,node:_http_client,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsFinite\x2C\n  ObjectAssign\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSlice\x2C\n} = primordials;\n\nconst net = require('net');\nconst assert = require('internal/assert');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  freeParser\x2C\n  parsers\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst {\n  kUniqueHeaders\x2C\n  parseUniqueHeadersOption\x2C\n  OutgoingMessage\n} = require('_http_outgoing');\nconst Agent = require('_http_agent');\nconst { Buffer } = require('buffer');\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\nconst { kOutHeaders\x2C kNeedDrain } = require('internal/http');\nconst { connResetException\x2C codes } = require('internal/errors');\nconst {\n  ERR_HTTP_HEADERS_SENT\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_HTTP_TOKEN\x2C\n  ERR_INVALID_PROTOCOL\x2C\n  ERR_UNESCAPED_CHARACTERS\n} = codes;\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\nconst { getTimerDuration } = require('internal/timers');\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\n} = require('internal/dtrace');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nconst kClientRequestStatistics = Symbol('ClientRequestStatistics');\n\nconst dc = require('diagnostics_channel');\nconst onClientRequestStartChannel = dc.channel('http.client.request.start');\nconst onClientResponseFinishChannel = dc.channel('http.client.response.finish');\n\nconst { addAbortSignal\x2C finished } = require('stream');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\nconst kError = Symbol('kError');\n\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nfunction validateHost(host\x2C name) {\n  if (host !== null && host !== undefined && typeof host !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`\x2C\n                                   ['string'\x2C 'undefined'\x2C 'null']\x2C\n                                   host);\n  }\n  return host;\n}\n\nclass HTTPClientAsyncResource {\n  constructor(type\x2C req) {\n    this.type = type;\n    this.req = req;\n  }\n}\n\nfunction ClientRequest(input\x2C options\x2C cb) {\n  FunctionPrototypeCall(OutgoingMessage\x2C this);\n\n  if (typeof input === 'string') {\n    const urlStr = input;\n    input = urlToHttpOptions(new URL(urlStr));\n  } else if (input && input[searchParamsSymbol] &&\n             input[searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    input = urlToHttpOptions(input);\n  } else {\n    cb = options;\n    options = input;\n    input = null;\n  }\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = input || kEmptyObject;\n  } else {\n    options = ObjectAssign(input || {}\x2C options);\n  }\n\n  let agent = options.agent;\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\n  if (agent === false) {\n    agent = new defaultAgent.constructor();\n  } else if (agent === null || agent === undefined) {\n    if (typeof options.createConnection !== 'function') {\n      agent = defaultAgent;\n    }\n    // Explicitly pass through this statement as agent will not be used\n    // when createConnection is provided.\n  } else if (typeof agent.addRequest !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('options.agent'\x2C\n                                   ['Agent-like Object'\x2C 'undefined'\x2C 'false']\x2C\n                                   agent);\n  }\n  this.agent = agent;\n\n  const protocol = options.protocol || defaultAgent.protocol;\n  let expectedProtocol = defaultAgent.protocol;\n  if (this.agent && this.agent.protocol)\n    expectedProtocol = this.agent.protocol;\n\n  if (options.path) {\n    const path = String(options.path);\n    if (RegExpPrototypeExec(INVALID_PATH_REGEX\x2C path) !== null)\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\n  }\n\n  if (protocol !== expectedProtocol) {\n    throw new ERR_INVALID_PROTOCOL(protocol\x2C expectedProtocol);\n  }\n\n  const defaultPort = options.defaultPort ||\n                    (this.agent && this.agent.defaultPort);\n\n  const port = options.port = options.port || defaultPort || 80;\n  const host = options.host = validateHost(options.hostname\x2C 'hostname') ||\n                            validateHost(options.host\x2C 'host') || 'localhost';\n\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\n\n  this.socketPath = options.socketPath;\n\n  if (options.timeout !== undefined)\n    this.timeout = getTimerDuration(options.timeout\x2C 'timeout');\n\n  const signal = options.signal;\n  if (signal) {\n    addAbortSignal(signal\x2C this);\n  }\n  let method = options.method;\n  const methodIsString = (typeof method === 'string');\n  if (method !== null && method !== undefined && !methodIsString) {\n    throw new ERR_INVALID_ARG_TYPE('options.method'\x2C 'string'\x2C method);\n  }\n\n  if (methodIsString && method) {\n    if (!checkIsHttpToken(method)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Method'\x2C method);\n    }\n    method = this.method = StringPrototypeToUpperCase(method);\n  } else {\n    method = this.method = 'GET';\n  }\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined &&\n      typeof insecureHTTPParser !== 'boolean') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.insecureHTTPParser'\x2C 'boolean'\x2C insecureHTTPParser);\n  }\n  this.insecureHTTPParser = insecureHTTPParser;\n\n  this.path = options.path || '/';\n  if (cb) {\n    this.once('response'\x2C cb);\n  }\n\n  if (method === 'GET' ||\n      method === 'HEAD' ||\n      method === 'DELETE' ||\n      method === 'OPTIONS' ||\n      method === 'TRACE' ||\n      method === 'CONNECT') {\n    this.useChunkedEncodingByDefault = false;\n  } else {\n    this.useChunkedEncodingByDefault = true;\n  }\n\n  this._ended = false;\n  this.res = null;\n  this.aborted = false;\n  this.timeoutCb = null;\n  this.upgradeOrConnect = false;\n  this.parser = null;\n  this.maxHeadersCount = null;\n  this.reusedSocket = false;\n  this.host = host;\n  this.protocol = protocol;\n\n  if (this.agent) {\n    // If there is an agent we should default to Connection:keep-alive\x2C\n    // but only if the Agent will actually reuse the connection!\n    // If it's not a keepAlive agent\x2C and the maxSockets==Infinity\x2C then\n    // there's never a case where this socket will actually be reused\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\n      this._last = true;\n      this.shouldKeepAlive = false;\n    } else {\n      this._last = false;\n      this.shouldKeepAlive = true;\n    }\n  }\n\n  const headersArray = ArrayIsArray(options.headers);\n  if (!headersArray) {\n    if (options.headers) {\n      const keys = ObjectKeys(options.headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        this.setHeader(key\x2C options.headers[key]);\n      }\n    }\n\n    if (host && !this.getHeader('host') && setHost) {\n      let hostHeader = host;\n\n      // For the Host header\x2C ensure that IPv6 addresses are enclosed\n      // in square brackets\x2C as defined by URI formatting\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\n      const posColon = StringPrototypeIndexOf(hostHeader\x2C ':');\n      if (posColon !== -1 &&\n          StringPrototypeIncludes(hostHeader\x2C ':'\x2C posColon + 1) &&\n          StringPrototypeCharCodeAt(hostHeader\x2C 0) !== 91/* '[' */) {\n        hostHeader = `[${hostHeader}]`;\n      }\n\n      if (port && +port !== defaultPort) {\n        hostHeader += ':' + port;\n      }\n      this.setHeader('Host'\x2C hostHeader);\n    }\n\n    if (options.auth && !this.getHeader('Authorization')) {\n      this.setHeader('Authorization'\x2C 'Basic ' +\n                     Buffer.from(options.auth).toString('base64'));\n    }\n\n    if (this.getHeader('expect')) {\n      if (this._header) {\n        throw new ERR_HTTP_HEADERS_SENT('render');\n      }\n\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                        this[kOutHeaders]);\n    }\n  } else {\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                      options.headers);\n  }\n\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\n\n  let optsWithoutSignal = options;\n  if (optsWithoutSignal.signal) {\n    optsWithoutSignal = ObjectAssign({}\x2C options);\n    delete optsWithoutSignal.signal;\n  }\n\n  // initiate connection\n  if (this.agent) {\n    this.agent.addRequest(this\x2C optsWithoutSignal);\n  } else {\n    // No agent\x2C default to Connection:close.\n    this._last = true;\n    this.shouldKeepAlive = false;\n    if (typeof optsWithoutSignal.createConnection === 'function') {\n      const oncreate = once((err\x2C socket) => {\n        if (err) {\n          process.nextTick(() => this.emit('error'\x2C err));\n        } else {\n          this.onSocket(socket);\n        }\n      });\n\n      try {\n        const newSocket = optsWithoutSignal.createConnection(optsWithoutSignal\x2C\n                                                             oncreate);\n        if (newSocket) {\n          oncreate(null\x2C newSocket);\n        }\n      } catch (err) {\n        oncreate(err);\n      }\n    } else {\n      debug('CLIENT use net.createConnection'\x2C optsWithoutSignal);\n      this.onSocket(net.createConnection(optsWithoutSignal));\n    }\n  }\n}\nObjectSetPrototypeOf(ClientRequest.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ClientRequest\x2C OutgoingMessage);\n\nClientRequest.prototype._finish = function _finish() {\n  DTRACE_HTTP_CLIENT_REQUEST(this\x2C this.socket);\n  FunctionPrototypeCall(OutgoingMessage.prototype._finish\x2C this);\n  if (hasObserver('http')) {\n    startPerf(this\x2C kClientRequestStatistics\x2C {\n      type: 'http'\x2C\n      name: 'HttpClient'\x2C\n      detail: {\n        req: {\n          method: this.method\x2C\n          url: `${this.protocol}//${this.host}${this.path}`\x2C\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {}\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  if (onClientRequestStartChannel.hasSubscribers) {\n    onClientRequestStartChannel.publish({\n      request: this\x2C\n    });\n  }\n};\n\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                    this[kOutHeaders]);\n};\n\nClientRequest.prototype.abort = function abort() {\n  if (this.aborted) {\n    return;\n  }\n  this.aborted = true;\n  process.nextTick(emitAbortNT\x2C this);\n  this.destroy();\n};\n\nClientRequest.prototype.destroy = function destroy(err) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  // If we're aborting\x2C we don't care about any more response data.\n  if (this.res) {\n    this.res._dump();\n  }\n\n  this[kError] = err;\n  this.socket?.destroy(err);\n\n  return this;\n};\n\nfunction emitAbortNT(req) {\n  req.emit('abort');\n}\n\nfunction ondrain() {\n  const msg = this._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketCloseListener() {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('HTTP socket close');\n\n  // NOTE: It's important to get parser here\x2C because it could be freed by\n  // the `socketOnData`.\n  const parser = socket.parser;\n  const res = req.res;\n\n  req.destroyed = true;\n  if (res) {\n    // Socket closed before we emitted 'end' below.\n    if (!res.complete) {\n      res.destroy(connResetException('aborted'));\n    }\n    req._closed = true;\n    req.emit('close');\n    if (!res.aborted && res.readable) {\n      res.push(null);\n    }\n  } else {\n    if (!req.socket._hadError) {\n      // This socket error fired before we started to\n      // receive a response. The error needs to\n      // fire on the request.\n      req.socket._hadError = true;\n      req.emit('error'\x2C connResetException('socket hang up'));\n    }\n    req._closed = true;\n    req.emit('close');\n  }\n\n  // Too bad.  That output wasn't getting written.\n  // This is pretty terrible that it doesn't raise an error.\n  // Fixed better in v0.10\n  if (req.outputData)\n    req.outputData.length = 0;\n\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction socketErrorListener(err) {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('SOCKET ERROR:'\x2C err.message\x2C err.stack);\n\n  if (req) {\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req.socket._hadError = true;\n    req.emit('error'\x2C err);\n  }\n\n  const parser = socket.parser;\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n\n  // Ensure that no further data will come out of the socket\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n  socket.destroy();\n}\n\nfunction socketOnEnd() {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  if (!req.res && !req.socket._hadError) {\n    // If we don't have a response then we know that the socket\n    // ended prematurely and we need to emit an error on the request.\n    req.socket._hadError = true;\n    req.emit('error'\x2C connResetException('socket hang up'));\n  }\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n  socket.destroy();\n}\n\nfunction socketOnData(d) {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  assert(parser && parser.socket === socket);\n\n  const ret = parser.execute(d);\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    debug('parse error'\x2C ret);\n    freeParser(parser\x2C req\x2C socket);\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.destroy();\n    req.socket._hadError = true;\n    req.emit('error'\x2C ret);\n  } else if (parser.incoming && parser.incoming.upgrade) {\n    // Upgrade (if status code 101) or CONNECT\n    const bytesParsed = ret;\n    const res = parser.incoming;\n    req.res = res;\n\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C req.timeoutCb);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n\n    const bodyHead = TypedArrayPrototypeSlice(d\x2C bytesParsed\x2C d.length);\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (req.listenerCount(eventName) > 0) {\n      req.upgradeOrConnect = true;\n\n      // detach the socket\n      socket.emit('agentRemove');\n      socket.removeListener('close'\x2C socketCloseListener);\n      socket.removeListener('error'\x2C socketErrorListener);\n\n      socket._httpMessage = null;\n      socket.readableFlowing = null;\n\n      req.emit(eventName\x2C res\x2C socket\x2C bodyHead);\n      req.destroyed = true;\n      req._closed = true;\n      req.emit('close');\n    } else {\n      // Requested Upgrade or used CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.complete &&\n             // When the status code is informational (100\x2C 102-199)\x2C\n             // the server will send a final response after this client\n             // sends a request body\x2C so we must not free the parser.\n             // 101 (Switching Protocols) and all other status codes\n             // should be processed normally.\n             !statusIsInformational(parser.incoming.statusCode)) {\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction statusIsInformational(status) {\n  // 100 (Continue)    RFC7231 Section 6.2.1\n  // 102 (Processing)  RFC2518\n  // 103 (Early Hints) RFC8297\n  // 104-199 (Unassigned)\n  return (status < 200 && status >= 100 && status !== 101);\n}\n\n// client\nfunction parserOnIncomingClient(res\x2C shouldKeepAlive) {\n  const socket = this.socket;\n  const req = socket._httpMessage;\n\n  debug('AGENT incoming response!');\n\n  if (req.res) {\n    // We already have a response object\x2C this means the server\n    // sent a double response.\n    socket.destroy();\n    return 0;  // No special treatment.\n  }\n  req.res = res;\n\n  // Skip body and treat as Upgrade.\n  if (res.upgrade)\n    return 2;\n\n  // Responses to CONNECT request is handled as Upgrade.\n  const method = req.method;\n  if (method === 'CONNECT') {\n    res.upgrade = true;\n    return 2;  // Skip body and treat as Upgrade.\n  }\n\n  if (statusIsInformational(res.statusCode)) {\n    // Restart the parser\x2C as this is a 1xx informational message.\n    req.res = null; // Clear res so that we don't hit double-responses.\n    // Maintain compatibility by sending 100-specific events\n    if (res.statusCode === 100) {\n      req.emit('continue');\n    }\n    // Send information events to all 1xx responses except 101 Upgrade.\n    req.emit('information'\x2C {\n      statusCode: res.statusCode\x2C\n      statusMessage: res.statusMessage\x2C\n      httpVersion: res.httpVersion\x2C\n      httpVersionMajor: res.httpVersionMajor\x2C\n      httpVersionMinor: res.httpVersionMinor\x2C\n      headers: res.headers\x2C\n      rawHeaders: res.rawHeaders\n    });\n\n    return 1;  // Skip body but don't treat as Upgrade.\n  }\n\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\n    // Server MUST respond with Connection:keep-alive for us to enable it.\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\n    // keep the connection open.\n    req.shouldKeepAlive = false;\n  }\n\n  DTRACE_HTTP_CLIENT_RESPONSE(socket\x2C req);\n  if (req[kClientRequestStatistics] && hasObserver('http')) {\n    stopPerf(req\x2C kClientRequestStatistics\x2C {\n      detail: {\n        res: {\n          statusCode: res.statusCode\x2C\n          statusMessage: res.statusMessage\x2C\n          headers: res.headers\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  if (onClientResponseFinishChannel.hasSubscribers) {\n    onClientResponseFinishChannel.publish({\n      request: req\x2C\n      response: res\x2C\n    });\n  }\n  req.res = res;\n  res.req = req;\n\n  // Add our listener first\x2C so that we guarantee socket cleanup\n  res.on('end'\x2C responseOnEnd);\n  req.on('prefinish'\x2C requestOnPrefinish);\n  socket.on('timeout'\x2C responseOnTimeout);\n\n  // If the user did not listen for the 'response' event\x2C then they\n  // can't possibly read the data\x2C so we ._dump() it into the void\n  // so that the socket doesn't hang there in a paused state.\n  if (req.aborted || !req.emit('response'\x2C res))\n    res._dump();\n\n  if (method === 'HEAD')\n    return 1;  // Skip body but don't treat as Upgrade.\n\n  if (res.statusCode === 304) {\n    res.complete = true;\n    return 1; // Skip body as there won't be any\n  }\n\n  return 0;  // No special treatment.\n}\n\n// client\nfunction responseKeepAlive(req) {\n  const socket = req.socket;\n\n  debug('AGENT socket keep-alive');\n  if (req.timeoutCb) {\n    socket.setTimeout(0\x2C req.timeoutCb);\n    req.timeoutCb = null;\n  }\n  socket.removeListener('close'\x2C socketCloseListener);\n  socket.removeListener('error'\x2C socketErrorListener);\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n\n  // TODO(ronag): Between here and emitFreeNT the socket\n  // has no 'error' handler.\n\n  // There are cases where _handle === null. Avoid those. Passing undefined to\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\n  // Mark this socket as available\x2C AFTER user-added end\n  // handlers have a chance to run.\n  defaultTriggerAsyncIdScope(asyncId\x2C process.nextTick\x2C emitFreeNT\x2C req);\n\n  req.destroyed = true;\n  if (req.res) {\n    // Detach socket from IncomingMessage to avoid destroying the freed\n    // socket in IncomingMessage.destroy().\n    req.res.socket = null;\n  }\n}\n\nfunction responseOnEnd() {\n  const req = this.req;\n  const socket = req.socket;\n\n  if (socket) {\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C emitRequestTimeout);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n  }\n\n  req._ended = true;\n\n  if (!req.shouldKeepAlive) {\n    if (socket.writable) {\n      debug('AGENT socket.destroySoon()');\n      if (typeof socket.destroySoon === 'function')\n        socket.destroySoon();\n      else\n        socket.end();\n    }\n    assert(!socket.writable);\n  } else if (req.finished && !this.aborted) {\n    // We can assume `req.finished` means all data has been written since:\n    // - `'responseOnEnd'` means we have been assigned a socket.\n    // - when we have a socket we write directly to it without buffering.\n    // - `req.finished` means `end()` has been called and no further data.\n    //   can be written\n    responseKeepAlive(req);\n  }\n}\n\nfunction responseOnTimeout() {\n  const req = this._httpMessage;\n  if (!req) return;\n  const res = req.res;\n  if (!res) return;\n  res.emit('timeout');\n}\n\nfunction requestOnPrefinish() {\n  const req = this;\n\n  if (req.shouldKeepAlive && req._ended)\n    responseKeepAlive(req);\n}\n\nfunction emitFreeNT(req) {\n  req._closed = true;\n  req.emit('close');\n  if (req.socket) {\n    req.socket.emit('free');\n  }\n}\n\nfunction tickOnSocket(req\x2C socket) {\n  const parser = parsers.alloc();\n  req.socket = socket;\n  const lenient = req.insecureHTTPParser === undefined ?\n    isLenient() : req.insecureHTTPParser;\n  parser.initialize(HTTPParser.RESPONSE\x2C\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE'\x2C req)\x2C\n                    req.maxHeaderSize || 0\x2C\n                    lenient ? kLenientAll : kLenientNone\x2C\n                    0);\n  parser.socket = socket;\n  parser.outgoing = req;\n  req.parser = parser;\n\n  socket.parser = parser;\n  socket._httpMessage = req;\n\n  // Propagate headers limit from request object to parser\n  if (typeof req.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\n  }\n\n  parser.onIncoming = parserOnIncomingClient;\n  socket.on('error'\x2C socketErrorListener);\n  socket.on('data'\x2C socketOnData);\n  socket.on('end'\x2C socketOnEnd);\n  socket.on('close'\x2C socketCloseListener);\n  socket.on('drain'\x2C ondrain);\n\n  if (\n    req.timeout !== undefined ||\n    (req.agent && req.agent.options && req.agent.options.timeout)\n  ) {\n    listenSocketTimeout(req);\n  }\n  req.emit('socket'\x2C socket);\n}\n\nfunction emitRequestTimeout() {\n  const req = this._httpMessage;\n  if (req) {\n    req.emit('timeout');\n  }\n}\n\nfunction listenSocketTimeout(req) {\n  if (req.timeoutCb) {\n    return;\n  }\n  // Set timeoutCb so it will get cleaned up on request end.\n  req.timeoutCb = emitRequestTimeout;\n  // Delegate socket timeout event.\n  if (req.socket) {\n    req.socket.once('timeout'\x2C emitRequestTimeout);\n  } else {\n    req.on('socket'\x2C (socket) => {\n      socket.once('timeout'\x2C emitRequestTimeout);\n    });\n  }\n}\n\nClientRequest.prototype.onSocket = function onSocket(socket\x2C err) {\n  // TODO(ronag): Between here and onSocketNT the socket\n  // has no 'error' handler.\n  process.nextTick(onSocketNT\x2C this\x2C socket\x2C err);\n};\n\nfunction onSocketNT(req\x2C socket\x2C err) {\n  if (req.destroyed || err) {\n    req.destroyed = true;\n\n    function _destroy(req\x2C err) {\n      if (!req.aborted && !err) {\n        err = connResetException('socket hang up');\n      }\n      if (err) {\n        req.emit('error'\x2C err);\n      }\n      req._closed = true;\n      req.emit('close');\n    }\n\n    if (socket) {\n      if (!err && req.agent && !socket.destroyed) {\n        socket.emit('free');\n      } else {\n        finished(socket.destroy(err || req[kError])\x2C (er) => {\n          _destroy(req\x2C er || err);\n        });\n        return;\n      }\n    }\n\n    _destroy(req\x2C err || req[kError]);\n  } else {\n    tickOnSocket(req\x2C socket);\n    req._flush();\n  }\n}\n\nClientRequest.prototype._deferToConnect = _deferToConnect;\nfunction _deferToConnect(method\x2C arguments_) {\n  // This function is for calls that need to happen once the socket is\n  // assigned to this request and writable. It's an important promisy\n  // thing for all the socket calls that happen either now\n  // (when a socket is assigned) or in the future (when a socket gets\n  // assigned out of the pool and is eventually writable).\n\n  const callSocketMethod = () => {\n    if (method)\n      ReflectApply(this.socket[method]\x2C this.socket\x2C arguments_);\n  };\n\n  const onSocket = () => {\n    if (this.socket.writable) {\n      callSocketMethod();\n    } else {\n      this.socket.once('connect'\x2C callSocketMethod);\n    }\n  };\n\n  if (!this.socket) {\n    this.once('socket'\x2C onSocket);\n  } else {\n    onSocket();\n  }\n}\n\nClientRequest.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (this._ended) {\n    return this;\n  }\n\n  listenSocketTimeout(this);\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n  if (callback) this.once('timeout'\x2C callback);\n\n  if (this.socket) {\n    setSocketTimeout(this.socket\x2C msecs);\n  } else {\n    this.once('socket'\x2C (sock) => setSocketTimeout(sock\x2C msecs));\n  }\n\n  return this;\n};\n\nfunction setSocketTimeout(sock\x2C msecs) {\n  if (sock.connecting) {\n    sock.once('connect'\x2C function() {\n      sock.setTimeout(msecs);\n    });\n  } else {\n    sock.setTimeout(msecs);\n  }\n}\n\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\n  this._deferToConnect('setNoDelay'\x2C [noDelay]);\n};\n\nClientRequest.prototype.setSocketKeepAlive =\n    function setSocketKeepAlive(enable\x2C initialDelay) {\n      this._deferToConnect('setKeepAlive'\x2C [enable\x2C initialDelay]);\n    };\n\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\n  this.setTimeout(0\x2C cb);\n};\n\nmodule.exports = {\n  ClientRequest\n};\n
code-source-info,0x334da658e66e,173,0,27343,C0O0C4O27343,,
code-creation,Function,10,170817,0x334da658f68e,1058, node:_http_client:1:1,0x334da658e5e8,~
code-source-info,0x334da658f68e
tick,0x7f40773a70af,170912,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x2a1384e1da2d,0x7f4060044ae0,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x2a1384e1cc26,0x7f406004833c,0x2a1384e1ad79,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,171130,0x334da65923a6,88,Agent node:https:180:15,0x2a1384e1d458,~
code-source-info,0x334da65923a6,141,4950,5326,C0O4964C2O4975C7O4998C12O5005C17O5024C18O5028C25O5050C34O5028C39O5079C43O5096C47O5105C49O5119C53O5163C58O5171C62O5156C66O5201C72O5238C74O5261C78O5271C82O5290C87O5325,,
code-creation,LazyCompile,10,171308,0x334da659364e,18,3685 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98774,0x224cfd0e44c0,~
code-source-info,0x334da659364e,130,98848,98891,C0O98865C8O98875C12O98874C17O98890,,
code-creation,Eval,10,171514,0x334da6593a26,5, node:http:1:1,0x334da6593880,~
script-source,174,node:http,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst httpAgent = require('_http_agent');\nconst { ClientRequest } = require('_http_client');\nconst { methods } = require('_http_common');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\n} = require('_http_outgoing');\nconst {\n  _connectionListener\x2C\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\n} = require('_http_server');\nlet maxHeaderSize;\n\n/**\n * Returns a new instance of `http.Server`.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n/**\n * @typedef {object} HTTPRequestOptions\n * @property {httpAgent.Agent | boolean} [agent]\n * @property {string} [auth]\n * @property {Function} [createConnection]\n * @property {number} [defaultPort]\n * @property {number} [family]\n * @property {object} [headers]\n * @property {number} [hints]\n * @property {string} [host]\n * @property {string} [hostname]\n * @property {boolean} [insecureHTTPParser]\n * @property {string} [localAddress]\n * @property {number} [localPort]\n * @property {Function} [lookup]\n * @property {number} [maxHeaderSize]\n * @property {string} [method]\n * @property {string} [path]\n * @property {number} [port]\n * @property {string} [protocol]\n * @property {boolean} [setHost]\n * @property {string} [socketPath]\n * @property {number} [timeout]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * Makes an HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction request(url\x2C options\x2C cb) {\n  return new ClientRequest(url\x2C options\x2C cb);\n}\n\n/**\n * Makes a `GET` HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(url\x2C options\x2C cb) {\n  const req = request(url\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\nmodule.exports = {\n  _connectionListener\x2C\n  METHODS: ArrayPrototypeSort(ArrayPrototypeSlice(methods))\x2C\n  STATUS_CODES\x2C\n  Agent: httpAgent.Agent\x2C\n  ClientRequest\x2C\n  IncomingMessage\x2C\n  OutgoingMessage\x2C\n  Server\x2C\n  ServerResponse\x2C\n  createServer\x2C\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  get\x2C\n  request\n};\n\nObjectDefineProperty(module.exports\x2C 'maxHeaderSize'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    if (maxHeaderSize === undefined) {\n      const { getOptionValue } = require('internal/options');\n      maxHeaderSize = getOptionValue('--max-http-header-size');\n    }\n\n    return maxHeaderSize;\n  }\n});\n\nObjectDefineProperty(module.exports\x2C 'globalAgent'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return httpAgent.globalAgent;\n  }\x2C\n  set(value) {\n    httpAgent.globalAgent = value;\n  }\n});\n
code-source-info,0x334da6593a26,174,0,4220,C0O0C4O4220,,
code-creation,Function,10,171812,0x334da6593f46,349, node:http:1:1,0x334da65939a0,~
code-source-info,0x334da6593f46,174,0,4220,C0O0C37O1159C42O1182C47O1204C52O1262C58O1262C62O1262C64O1312C70O1312C75O1294C81O1357C87O1357C92O1345C97O1410C103O1410C108O1390C113O1512C119O1512C124O1447C129O1469C134O1492C139O1617C145O1617C150O1549C155O1572C160O1588C166O1598C171O1646C172O1646C174O3354C181O3375C185O3426C191O3407C201O3459C209O3492C219O3501C225O3518C231O3537C237O3556C243O3566C249O3584C255O3600C261O3622C267O3645C273O3652C279O3369C283O3692C298O3783C306O3664C311O4026C326O4115C334O4164C342O3998C348O4219,,
tick,0x10f59e0,171910,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x224cfd0e919a,0x224cfd0d4aa3,0x224cfd0c4456,0x224cfd0c407a,0x224cfd0e8e8e,0x334da6593656,0x7f406004833c,0x2a1384e1ad84,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,172052,0x334da6594a3e,43,get node:http:133:6,0x334da6593b48,~
code-source-info,0x334da6594a3e,174,3786,3992,C0O3795C6O3863C12O3863C17O3844C22O3898C25O3914C32O3912C38O3967C42O3988,,
code-creation,LazyCompile,10,172125,0x334da6595036,10,get node:http:147:6,0x334da6593b98,~
code-source-info,0x334da6595036,174,4118,4160,C0O4127C5O4144C9O4156,,
code-creation,Function,11,172211,0x7f4060048be0,104,require node:internal/modules/cjs/helpers:101:31,0x224cfd0e6d68,^
code-source-info,0x7f4060048be0,105,3108,3154,,,
code-creation,Function,11,172255,0x7f4060048cc0,180,makeMethodProxy node:_tls_wrap:555:25,0x2a1384e3e300,^
code-source-info,0x7f4060048cc0,148,15700,15851,,,
code-creation,Function,11,172290,0x7f4060048de0,180,makeSocketMethodProxy node:_tls_wrap:1019:31,0x2a1384e3e468,^
code-source-info,0x7f4060048de0,148,28916,29084,,,
code-creation,Function,11,172323,0x7f4060048f00,148, node:_tls_wrap:1038:4,0x2a1384e3f2b8,^
code-source-info,0x7f4060048f00,148,29302,29380,,,
code-creation,Function,11,172363,0x7f4060049000,496,loadNativeModule node:internal/modules/cjs/helpers:44:26,0xa26aaacfb8,^
code-source-info,0x7f4060049000,105,1151,1431,,,
code-creation,Function,11,172397,0x7f4060049260,316, node:internal/bootstrap/loaders:290:15,0x2a1384e011b8,^
code-source-info,0x7f4060049260,9,9058,9163,,,
code-creation,Function,11,172415,0x7f4060049400,1112,getESMFacade node:internal/bootstrap/loaders:281:15,0x2ac221050bf8,^
code-source-info,0x7f4060049400,9,8694,9323,,,
code-creation,LazyCompile,10,172480,0x334da659565e,18,4404 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99122,0x224cfd0e4878,~
code-source-info,0x334da659565e,130,99196,99238,C0O99213C8O99223C12O99222C17O99237,,
tick,0x1066053,172620,1,0xabf8b0,6,0xd3aa20,0x7f40600497c0,0x224cfd0e91dd,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da6595666,0x7f406004833c,0x2a1384e1ad9a,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,172745,0x334da65959de,17,get node:tls:116:8,0x2a1384e1fd10,~
code-source-info,0x334da65959de,142,3920,4071,C0O3991C6O4014C9O4014C12O4043C16O4067,,
code-creation,LazyCompile,10,172865,0x334da659669e,29,cacheRootCertificates node:tls:108:31,0x2a1384e1fa90,~
code-source-info,0x334da659669e,142,3733,3797,C0O3740C7O3772C10O3772C14O3759C21O3757C28O3796,,
new,MemoryChunk,0x32809b900000,262144
new,MemoryChunk,0x157be9a40000,262144
new,MemoryChunk,0x37d98400000,262144
new,MemoryChunk,0x565c10c0000,262144
scavenge,begin,0,133317,1663277511723
tick,0xf0e205,173718,0,0x0,1
scavenge,end,0,134274,1663277511724
code-creation,LazyCompile,10,174134,0x334da65967c6,18,6113 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98625,0x224cfd0e4328,~
code-source-info,0x334da65967c6,130,98699,98744,C0O98716C8O98726C12O98725C17O98743,,
code-creation,LazyCompile,10,174307,0x334da6596db6,18,get node:crypto:294:8,0x3f792a6c6b98,~
code-source-info,0x334da6596db6,149,6917,6979,C0O6922C8O6929C13O6969C17O6977,,
code-creation,LazyCompile,10,174410,0x334da65978ee,38,lazyRequire node:internal/crypto/util:67:21,0x2a1384e343c8,~
code-source-info,0x334da65978ee,145,1210,1345,C0O1231C7O1247C11O1257C13O1284C21O1315C26O1313C35O1332C37O1343,,
tick,0xf5db32,174837,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x334da6597903,0x334da6596dbe,0x162283f,0x7f4060046fa4,0x7f406004723e,0x7f40600492e8,0xac2380,0x7f406004982b,0x224cfd0e91dd,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da65967ce,0x7f406004833c,0x2a1384e1ada5,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,174965,0x334da6598fb6,5, node:internal/crypto/webcrypto:1:1,0x334da6598b50,~
script-source,175,node:internal/crypto/webcrypto,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectDefineProperties\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  StringPrototypeRepeat\x2C\n} = primordials;\n\nconst {\n  kWebCryptoKeyFormatRaw\x2C\n  kWebCryptoKeyFormatPKCS8\x2C\n  kWebCryptoKeyFormatSPKI\x2C\n  kWebCryptoCipherEncrypt\x2C\n  kWebCryptoCipherDecrypt\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n  createSecretKey\x2C\n  isCryptoKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  asyncDigest\x2C\n} = require('internal/crypto/hash');\n\nconst {\n  getArrayBufferOrView\x2C\n  hasAnyNotIn\x2C\n  lazyRequire\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kExportFormats\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  kEnumerableProperty\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  getRandomValues: _getRandomValues\x2C\n  randomUUID: _randomUUID\x2C\n} = require('internal/crypto/random');\n\nasync function digest(algorithm\x2C data) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  return ReflectApply(asyncDigest\x2C this\x2C arguments);\n}\n\nfunction randomUUID() {\n  if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\n  return _randomUUID();\n}\n\nasync function generateKey(\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  algorithm = normalizeAlgorithm(algorithm);\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n  let result;\n  let resultType;\n  switch (algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      resultType = 'CryptoKeyPair';\n      result = await lazyRequire('internal/crypto/rsa')\n        .rsaKeyGenerate(algorithm\x2C extractable\x2C keyUsages);\n      break;\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      // Fall through\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      resultType = 'CryptoKeyPair';\n      result = await lazyRequire('internal/crypto/cfrg')\n        .cfrgGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n      break;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      resultType = 'CryptoKeyPair';\n      result = await lazyRequire('internal/crypto/ec')\n        .ecGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n      break;\n    case 'HMAC':\n      resultType = 'CryptoKey';\n      result = await lazyRequire('internal/crypto/mac')\n        .hmacGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n      break;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      resultType = 'CryptoKey';\n      result = await lazyRequire('internal/crypto/aes')\n        .aesGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n      break;\n    default:\n      throw lazyDOMException('Unrecognized name.');\n  }\n\n  if (\n    (resultType === 'CryptoKey' &&\n      (result.type === 'secret' || result.type === 'private') &&\n      result.usages.length === 0) ||\n    (resultType === 'CryptoKeyPair' && result.privateKey.usages.length === 0)\n  ) {\n    throw lazyDOMException(\n      'Usages cannot be empty when creating a key.'\x2C\n      'SyntaxError');\n  }\n\n  return result;\n}\n\nasync function deriveBits(algorithm\x2C baseKey\x2C length) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  algorithm = normalizeAlgorithm(algorithm);\n  if (!isCryptoKey(baseKey))\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveBits')) {\n    throw lazyDOMException(\n      'baseKey does not have deriveBits usage'\x2C\n      'InvalidAccessError');\n  }\n  if (baseKey.algorithm.name !== algorithm.name)\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\n  switch (algorithm.name) {\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      // Fall through\n    case 'ECDH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\n    case 'HKDF':\n      return lazyRequire('internal/crypto/hkdf')\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'PBKDF2':\n      return lazyRequire('internal/crypto/pbkdf2')\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\n  }\n  throw lazyDOMException('Unrecognized name.');\n}\n\nfunction getKeyLength({ name\x2C length\x2C hash }) {\n  switch (name) {\n    case 'AES-CTR':\n    case 'AES-CBC':\n    case 'AES-GCM':\n    case 'AES-KW':\n      if (length !== 128 && length !== 192 && length !== 256)\n        throw lazyDOMException('Invalid key length'\x2C 'OperationError');\n\n      return length;\n    case 'HMAC':\n      if (length === undefined) {\n        switch (hash?.name) {\n          case 'SHA-1':\n            return 160;\n          case 'SHA-256':\n            return 256;\n          case 'SHA-384':\n            return 384;\n          case 'SHA-512':\n            return 512;\n        }\n      }\n\n      if (typeof length === 'number' && length !== 0) {\n        return length;\n      }\n\n      throw lazyDOMException('Invalid key length'\x2C 'OperationError');\n    case 'HKDF':\n    case 'PBKDF2':\n      return null;\n  }\n}\n\nasync function deriveKey(\n  algorithm\x2C\n  baseKey\x2C\n  derivedKeyAlgorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  algorithm = normalizeAlgorithm(algorithm);\n  derivedKeyAlgorithm = normalizeAlgorithm(derivedKeyAlgorithm);\n  if (!isCryptoKey(baseKey))\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveKey')) {\n    throw lazyDOMException(\n      'baseKey does not have deriveKey usage'\x2C\n      'InvalidAccessError');\n  }\n  if (baseKey.algorithm.name !== algorithm.name)\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\n  validateObject(derivedKeyAlgorithm\x2C 'derivedKeyAlgorithm'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n\n  const length = getKeyLength(derivedKeyAlgorithm);\n  let bits;\n  switch (algorithm.name) {\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      // Fall through\n    case 'ECDH':\n      bits = await lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'HKDF':\n      bits = await lazyRequire('internal/crypto/hkdf')\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'PBKDF2':\n      bits = await lazyRequire('internal/crypto/pbkdf2')\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    default:\n      throw lazyDOMException('Unrecognized name.');\n  }\n\n  return ReflectApply(\n    importKey\x2C\n    this\x2C\n    ['raw'\x2C bits\x2C derivedKeyAlgorithm\x2C extractable\x2C keyUsages]\x2C\n  );\n}\n\nasync function exportKeySpki(key) {\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/rsa')\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      // Fall through\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/cfrg')\n          .cfrgExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyPkcs8(key) {\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/rsa')\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      // Fall through\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/cfrg')\n          .cfrgExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a pkcs8 ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyRaw(key) {\n  switch (key.algorithm.name) {\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\n      }\n      break;\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      // Fall through\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/cfrg')\n          .cfrgExportKey(key\x2C kWebCryptoKeyFormatRaw);\n      }\n      break;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      // Fall through\n    case 'HMAC':\n      return key[kKeyObject].export().buffer;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyJWK(key) {\n  const jwk = key[kKeyObject][kHandle].exportJwk({\n    key_ops: key.usages\x2C\n    ext: key.extractable\x2C\n  }\x2C true);\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsa);\n      return jwk;\n    case 'RSA-PSS':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsaPss);\n      return jwk;\n    case 'RSA-OAEP':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsaOaep);\n      return jwk;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      jwk.crv ||= key.algorithm.namedCurve;\n      return jwk;\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      jwk.crv ||= key.algorithm.name;\n      return jwk;\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      jwk.crv ||= key.algorithm.name;\n      jwk.alg = 'EdDSA';\n      return jwk;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      jwk.alg = lazyRequire('internal/crypto/aes')\n        .getAlgorithmName(key.algorithm.name\x2C key.algorithm.length);\n      return jwk;\n    case 'HMAC':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkHmac);\n      return jwk;\n    default:\n      // Fall through\n  }\n\n  throw lazyDOMException('Not yet supported'\x2C 'NotSupportedError');\n}\n\nasync function exportKey(format\x2C key) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  validateString(format\x2C 'format');\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n\n  if (!key.extractable)\n    throw lazyDOMException('key is not extractable'\x2C 'InvalidAccessException');\n\n  switch (format) {\n    case 'spki': return exportKeySpki(key);\n    case 'pkcs8': return exportKeyPkcs8(key);\n    case 'jwk': return exportKeyJWK(key);\n    case 'raw': return exportKeyRaw(key);\n  }\n  throw lazyDOMException(\n    'Export format is unsupported'\x2C 'NotSupportedError');\n}\n\nasync function importGenericSecretKey(\n  { name\x2C length }\x2C\n  format\x2C\n  keyData\x2C\n  extractable\x2C\n  keyUsages) {\n  const usagesSet = new SafeSet(keyUsages);\n  if (extractable)\n    throw lazyDOMException(`${name} keys are not extractable`\x2C 'SyntaxError');\n\n  if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n    throw lazyDOMException(\n      `Unsupported key usage for a ${name} key`\x2C\n      'SyntaxError');\n  }\n\n  switch (format) {\n    case 'raw': {\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n        throw lazyDOMException(\n          `Unsupported key usage for a ${name} key`\x2C\n          'SyntaxError');\n      }\n\n      const checkLength = keyData.byteLength * 8;\n\n      if (checkLength === 0 || length === 0)\n        throw lazyDOMException('Zero-length key is not supported'\x2C 'DataError');\n\n      // The Web Crypto spec allows for key lengths that are not multiples of\n      // 8. We don't. Our check here is stricter than that defined by the spec\n      // in that we require that algorithm.length match keyData.length * 8 if\n      // algorithm.length is specified.\n      if (length !== undefined && length !== checkLength) {\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\n      }\n\n      const keyObject = createSecretKey(keyData);\n      return new InternalCryptoKey(keyObject\x2C { name }\x2C keyUsages\x2C false);\n    }\n  }\n\n  throw lazyDOMException(\n    `Unable to import ${name} key with format ${format}`\x2C\n    'NotSupportedError');\n}\n\nasync function importKey(\n  format\x2C\n  keyData\x2C\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  validateString(format\x2C 'format');\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\n  if (format !== 'jwk')\n    keyData = getArrayBufferOrView(keyData\x2C 'keyData');\n  algorithm = normalizeAlgorithm(algorithm);\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n  switch (algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      return lazyRequire('internal/crypto/ec')\n        .ecImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      // Fall through\n    case 'X25519':\n      // Fall through\n    case 'X448':\n      return lazyRequire('internal/crypto/cfrg')\n        .cfrgImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      return lazyRequire('internal/crypto/aes')\n        .aesImportKey(algorithm\x2C format\x2C keyData\x2C extractable\x2C keyUsages);\n    case 'HKDF':\n      // Fall through\n    case 'PBKDF2':\n      return importGenericSecretKey(\n        algorithm\x2C\n        format\x2C\n        keyData\x2C\n        extractable\x2C\n        keyUsages);\n  }\n\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\n// subtle.wrapKey() is essentially a subtle.exportKey() followed\n// by a subtle.encrypt().\nasync function wrapKey(format\x2C key\x2C wrappingKey\x2C algorithm) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  algorithm = normalizeAlgorithm(algorithm);\n  let keyData = await ReflectApply(exportKey\x2C this\x2C [format\x2C key]);\n\n  if (format === 'jwk') {\n    if (keyData == null || typeof keyData !== 'object')\n      throw lazyDOMException('Invalid exported JWK key'\x2C 'DataError');\n    const ec = new TextEncoder();\n    const raw = JSONStringify(keyData);\n    keyData = ec.encode(raw + StringPrototypeRepeat(' '\x2C 8 - (raw.length % 8)));\n  }\n\n  return cipherOrWrap(\n    kWebCryptoCipherEncrypt\x2C\n    algorithm\x2C\n    wrappingKey\x2C\n    keyData\x2C\n    'wrapKey');\n}\n\n// subtle.unwrapKey() is essentially a subtle.decrypt() followed\n// by a subtle.importKey().\nasync function unwrapKey(\n  format\x2C\n  wrappedKey\x2C\n  unwrappingKey\x2C\n  unwrapAlgo\x2C\n  unwrappedKeyAlgo\x2C\n  extractable\x2C\n  keyUsages) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  wrappedKey = getArrayBufferOrView(wrappedKey\x2C 'wrappedKey');\n  unwrapAlgo = normalizeAlgorithm(unwrapAlgo);\n  let keyData = await cipherOrWrap(\n    kWebCryptoCipherDecrypt\x2C\n    unwrapAlgo\x2C\n    unwrappingKey\x2C\n    wrappedKey\x2C\n    'unwrapKey');\n\n  if (format === 'jwk') {\n    // The fatal: true option is only supported in builds that have ICU.\n    const options = process.versions.icu !== undefined ?\n      { fatal: true } : undefined;\n    const dec = new TextDecoder('utf-8'\x2C options);\n    try {\n      keyData = JSONParse(dec.decode(keyData));\n    } catch {\n      throw lazyDOMException('Invalid imported JWK key'\x2C 'DataError');\n    }\n  }\n\n  return ReflectApply(\n    importKey\x2C\n    this\x2C\n    [format\x2C keyData\x2C unwrappedKeyAlgo\x2C extractable\x2C keyUsages]\x2C\n  );\n}\n\nfunction signVerify(algorithm\x2C key\x2C data\x2C signature) {\n  algorithm = normalizeAlgorithm(algorithm);\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n  data = getArrayBufferOrView(data\x2C 'data');\n  let usage = 'sign';\n  if (signature !== undefined) {\n    signature = getArrayBufferOrView(signature\x2C 'signature');\n    usage = 'verify';\n  }\n\n  if (!ArrayPrototypeIncludes(key.usages\x2C usage) ||\n      algorithm.name !== key.algorithm.name) {\n    throw lazyDOMException(\n      `Unable to use this key to ${usage}`\x2C\n      'InvalidAccessError');\n  }\n\n  switch (algorithm.name) {\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSASSA-PKCS1-v1_5':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'ECDSA':\n      return lazyRequire('internal/crypto/ec')\n        .ecdsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'Ed25519':\n      // Fall through\n    case 'Ed448':\n      // Fall through\n      return lazyRequire('internal/crypto/cfrg')\n        .eddsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacSignVerify(key\x2C data\x2C algorithm\x2C signature);\n  }\n  throw lazyDOMException('Unrecognized named.'\x2C 'NotSupportedError');\n}\n\nasync function sign(algorithm\x2C key\x2C data) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  return signVerify(algorithm\x2C key\x2C data);\n}\n\nasync function verify(algorithm\x2C key\x2C signature\x2C data) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  return signVerify(algorithm\x2C key\x2C data\x2C signature);\n}\n\nasync function cipherOrWrap(mode\x2C algorithm\x2C key\x2C data\x2C op) {\n  algorithm = normalizeAlgorithm(algorithm);\n  // We use a Node.js style error here instead of a DOMException because\n  // the WebCrypto spec is not specific what kind of error is to be thrown\n  // in this case. Both Firefox and Chrome throw simple TypeErrors here.\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n  // The key algorithm and cipher algorithm must match\x2C and the\n  // key must have the proper usage.\n  if (key.algorithm.name !== algorithm.name ||\n      !ArrayPrototypeIncludes(key.usages\x2C op)) {\n    throw lazyDOMException(\n      'The requested operation is not valid for the provided key'\x2C\n      'InvalidAccessError');\n  }\n\n  // For the Web Crypto API\x2C the input data can be any ArrayBuffer\x2C\n  // TypedArray\x2C or DataView.\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  // While WebCrypto allows for larger input buffer sizes\x2C we limit\n  // those to sizes that can fit within uint32_t because of limitations\n  // in the OpenSSL API.\n  validateMaxBufferLength(data\x2C 'data');\n\n  switch (algorithm.name) {\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaCipher(mode\x2C key\x2C data\x2C algorithm);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      return lazyRequire('internal/crypto/aes')\n        .aesCipher(mode\x2C key\x2C data\x2C algorithm);\n    case 'AES-KW':\n      if (op === 'wrapKey' || op === 'unwrapKey') {\n        return lazyRequire('internal/crypto/aes')\n          .aesCipher(mode\x2C key\x2C data\x2C algorithm);\n      }\n  }\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nasync function encrypt(algorithm\x2C key\x2C data) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  return cipherOrWrap(kWebCryptoCipherEncrypt\x2C algorithm\x2C key\x2C data\x2C 'encrypt');\n}\n\nasync function decrypt(algorithm\x2C key\x2C data) {\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\n  return cipherOrWrap(kWebCryptoCipherDecrypt\x2C algorithm\x2C key\x2C data\x2C 'decrypt');\n}\n\n// The SubtleCrypto and Crypto classes are defined as part of the\n// Web Crypto API standard: https://www.w3.org/TR/WebCryptoAPI/\n\nclass SubtleCrypto {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n}\nconst subtle = ReflectConstruct(function() {}\x2C []\x2C SubtleCrypto);\n\nclass Crypto {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  get subtle() {\n    if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\n    return subtle;\n  }\n}\nconst crypto = ReflectConstruct(function() {}\x2C []\x2C Crypto);\n\nfunction getRandomValues(array) {\n  if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\n  return ReflectApply(_getRandomValues\x2C this\x2C arguments);\n}\n\nObjectDefineProperties(\n  Crypto.prototype\x2C {\n    [SymbolToStringTag]: {\n      __proto__: null\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n      value: 'Crypto'\x2C\n    }\x2C\n    subtle: kEnumerableProperty\x2C\n    getRandomValues: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: getRandomValues\x2C\n    }\x2C\n    randomUUID: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: randomUUID\x2C\n    }\x2C\n    CryptoKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: CryptoKey\x2C\n    }\n  });\n\nObjectDefineProperties(\n  SubtleCrypto.prototype\x2C {\n    [SymbolToStringTag]: {\n      __proto__: null\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n      value: 'SubtleCrypto'\x2C\n    }\x2C\n    encrypt: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: encrypt\x2C\n    }\x2C\n    decrypt: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: decrypt\x2C\n    }\x2C\n    sign: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: sign\x2C\n    }\x2C\n    verify: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: verify\x2C\n    }\x2C\n    digest: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: digest\x2C\n    }\x2C\n    generateKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: generateKey\x2C\n    }\x2C\n    deriveKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: deriveKey\x2C\n    }\x2C\n    deriveBits: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: deriveBits\x2C\n    }\x2C\n    importKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: importKey\x2C\n    }\x2C\n    exportKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: exportKey\x2C\n    }\x2C\n    wrapKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: wrapKey\x2C\n    }\x2C\n    unwrapKey: {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: unwrapKey\x2C\n    }\n  });\n\nmodule.exports = {\n  Crypto\x2C\n  CryptoKey\x2C\n  SubtleCrypto\x2C\n  crypto\x2C\n};\n
code-source-info,0x334da6598fb6,175,0,24596,C0O0C4O24596,,
code-creation,Function,10,176007,0x334da659a546,1142, node:internal/crypto/webcrypto:1:1,0x334da6598f30,~
code-source-info,0x334da659a
tick,0x7f4077424739,176110,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x334da6597903,0x334da6596dbe,0x162283f,0x7f4060046fa4,0x7f406004723e,0x7f40600492e8,0xac2380,0x7f406004982b,0x224cfd0e91dd,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da65967ce,0x7f406004833c,0x2a1384e1ada5,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,176317,0x334da659cc0e,2, node:internal/crypto/webcrypto:755:41,0x334da6599718,~
code-source-info,0x334da659cc0e,175,21509,21514,C1O21513,,
code-creation,LazyCompile,10,176440,0x334da659e936,11,SubtleCrypto node:internal/crypto/webcrypto:751:14,0x334da65996c8,~
code-source-info,0x334da659e936,175,21417,21466,C0O21426C5O21432C10O21426,,
code-creation,LazyCompile,10,176511,0x334da659ea1e,2, node:internal/crypto/webcrypto:767:41,0x334da6599828,~
code-source-info,0x334da659ea1e,175,21760,21765,C1O21764,,
code-creation,LazyCompile,10,176564,0x334da659ead6,11,Crypto node:internal/crypto/webcrypto:758:14,0x334da6599768,~
code-source-info,0x334da659ead6,175,21564,21613,C0O21573C5O21579C10O21573,,
code-creation,LazyCompile,10,176794,0x334da659eca6,18,2781 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99071,0x224cfd0e47f0,~
code-source-info,0x334da659eca6,130,99145,99190,C0O99162C8O99172C12O99171C17O99189,,
code-creation,LazyCompile,10,176931,0x334da659ef96,5,get node:stream:109:6,0xe029223b78,~
script-source,51,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst {\n  streamReturningOperators\x2C\n  promiseReturningOperators\x2C\n} = require('internal/streams/operators');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\nconst compose = require('internal/streams/compose');\nconst { pipeline } = require('internal/streams/pipeline');\nconst { destroyer } = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\nconst utils = require('internal/streams/utils');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\nStream.isDisturbed = utils.isDisturbed;\nStream.isErrored = utils.isErrored;\nStream.isReadable = utils.isReadable;\nStream.Readable = require('internal/streams/readable');\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return ReflectApply(op\x2C this\x2C args);\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isUint8Array = require('internal/util/types').isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0x334da659ef96,51,3816,3845,C0O3825C4O3841,,
tick,0x7f407731c3df,177252,0,0x0,3,0x11d7ee0,0x162283f,0x7f4060046fa4,0x7f406004723e,0x7f40600492e8,0xac2380,0x7f406004982b,0x224cfd0e91dd,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da659ecae,0x7f406004833c,0x2a1384e1adbb,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,177352,0x334da659f606,18,7310 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99170,0x224cfd0e4900,~
code-source-info,0x334da659f606,130,99244,99286,C0O99261C8O99271C12O99270C17O99285,,
code-creation,LazyCompile,10,177675,0x334da65a07de,277,7567 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:42763,0x224cfd0e3318,~
code-source-info,0x334da65a07de,130,42837,48374,C0O42837C56O42868C61O42868C65O42868C67O42878C72O42878C76O42878C78O42888C83O42888C87O42888C89O42912C94O42912C99O42909C105O42922C109O42929C119O42929C124O42922C126O42951C133O42951C137O42951C139O42982C146O42982C150O42982C152O43007C159O43007C163O43007C165O43028C172O43028C176O43028C178O43048C185O43048C189O43048C191O43068C192O43068C194O43437C271O43446C276O48373,,
code-creation,LazyCompile,10,177779,0x334da65a0c1e,18,9796 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99326,0x224cfd0e4a98,~
code-source-info,0x334da65a0c1e,130,99400,99443,C0O99417C8O99427C12O99426C17O99442,,
tick,0xd083f5,178158,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x224cfd0e919a,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da65a0c26,0x7f406004833c,0x334da65a081b,0x7f406004833c,0x2a1384e1adda,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,178459,0x334da65a2266,5, node:zlib:1:1,0x334da65a1b80,~
script-source,176,node:zlib,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  MathMaxApply\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_BROTLI_INVALID_PARAM\x2C\n    ERR_BUFFER_TOO_LARGE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_ZLIB_INITIALIZATION_FAILED\x2C\n  }\x2C\n  genericNodeError\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst { Transform\x2C finished } = require('stream');\nconst {\n  deprecate\n} = require('internal/util');\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst binding = internalBinding('zlib');\nconst assert = require('internal/assert');\nconst {\n  Buffer\x2C\n  kMaxLength\n} = require('buffer');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n} = require('internal/validators');\n\nconst kFlushFlag = Symbol('kFlushFlag');\nconst kError = Symbol('kError');\n\nconst constants = internalBinding('constants').zlib;\nconst {\n  // Zlib flush levels\n  Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH\x2C\n  // Zlib option values\n  Z_MIN_CHUNK\x2C Z_MIN_WINDOWBITS\x2C Z_MAX_WINDOWBITS\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C\n  Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_CHUNK\x2C Z_DEFAULT_COMPRESSION\x2C\n  Z_DEFAULT_STRATEGY\x2C Z_DEFAULT_WINDOWBITS\x2C Z_DEFAULT_MEMLEVEL\x2C Z_FIXED\x2C\n  // Node's compression stream modes (node_zlib_mode)\n  DEFLATE\x2C DEFLATERAW\x2C INFLATE\x2C INFLATERAW\x2C GZIP\x2C GUNZIP\x2C UNZIP\x2C\n  BROTLI_DECODE\x2C BROTLI_ENCODE\x2C\n  // Brotli operations (~flush levels)\n  BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_FLUSH\x2C\n  BROTLI_OPERATION_FINISH\x2C BROTLI_OPERATION_EMIT_METADATA\x2C\n} = constants;\n\n// Translation table for return codes.\nconst codes = {\n  Z_OK: constants.Z_OK\x2C\n  Z_STREAM_END: constants.Z_STREAM_END\x2C\n  Z_NEED_DICT: constants.Z_NEED_DICT\x2C\n  Z_ERRNO: constants.Z_ERRNO\x2C\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR\x2C\n  Z_DATA_ERROR: constants.Z_DATA_ERROR\x2C\n  Z_MEM_ERROR: constants.Z_MEM_ERROR\x2C\n  Z_BUF_ERROR: constants.Z_BUF_ERROR\x2C\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\n};\n\nfor (const ckey of ObjectKeys(codes)) {\n  codes[codes[ckey]] = ckey;\n}\n\nfunction zlibBuffer(engine\x2C buffer\x2C callback) {\n  validateFunction(callback\x2C 'callback');\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\n  // Buffer without copying.\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\n    buffer = Buffer.from(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\n  } else if (isAnyArrayBuffer(buffer)) {\n    buffer = Buffer.from(buffer);\n  }\n  engine.buffers = null;\n  engine.nread = 0;\n  engine.cb = callback;\n  engine.on('data'\x2C zlibBufferOnData);\n  engine.on('error'\x2C zlibBufferOnError);\n  engine.on('end'\x2C zlibBufferOnEnd);\n  engine.end(buffer);\n}\n\nfunction zlibBufferOnData(chunk) {\n  if (!this.buffers)\n    this.buffers = [chunk];\n  else\n    ArrayPrototypePush(this.buffers\x2C chunk);\n  this.nread += chunk.length;\n  if (this.nread > this._maxOutputLength) {\n    this.close();\n    this.removeAllListeners('end');\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\n  }\n}\n\nfunction zlibBufferOnError(err) {\n  this.removeAllListeners('end');\n  this.cb(err);\n}\n\nfunction zlibBufferOnEnd() {\n  let buf;\n  if (this.nread === 0) {\n    buf = Buffer.alloc(0);\n  } else {\n    const bufs = this.buffers;\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs\x2C this.nread));\n  }\n  this.close();\n  if (this._info)\n    this.cb(null\x2C { buffer: buf\x2C engine: this });\n  else\n    this.cb(null\x2C buf);\n}\n\nfunction zlibBufferSync(engine\x2C buffer) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    if (isAnyArrayBuffer(buffer)) {\n      buffer = Buffer.from(buffer);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n        buffer\n      );\n    }\n  }\n  buffer = processChunkSync(engine\x2C buffer\x2C engine._finishFlushFlag);\n  if (engine._info)\n    return { buffer\x2C engine };\n  return buffer;\n}\n\nfunction zlibOnError(message\x2C errno\x2C code) {\n  const self = this[owner_symbol];\n  // There is no way to cleanly recover.\n  // Continuing only obscures problems.\n\n  const error = genericNodeError(message\x2C { errno\x2C code });\n  error.errno = errno;\n  error.code = code;\n  self.destroy(error);\n  self[kError] = error;\n}\n\n// 1. Returns false for undefined and NaN\n// 2. Returns true for finite numbers\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\nconst checkFiniteNumber = hideStackFrames((number\x2C name) => {\n  // Common case\n  if (number === undefined) {\n    return false;\n  }\n\n  if (NumberIsFinite(number)) {\n    return true; // Is a valid number\n  }\n\n  if (NumberIsNaN(number)) {\n    return false;\n  }\n\n  validateNumber(number\x2C name);\n\n  // Infinite numbers\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\n});\n\n// 1. Returns def for number when it's undefined or NaN\n// 2. Returns number for finite numbers >= lower and <= upper\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\nconst checkRangesOrGetDefault = hideStackFrames(\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\n    if (!checkFiniteNumber(number\x2C name)) {\n      return def;\n    }\n    if (number < lower || number > upper) {\n      throw new ERR_OUT_OF_RANGE(name\x2C\n                                 `>= ${lower} and <= ${upper}`\x2C number);\n    }\n    return number;\n  }\n);\n\nconst FLUSH_BOUND = [\n  [ Z_NO_FLUSH\x2C Z_BLOCK ]\x2C\n  [ BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_EMIT_METADATA ]\x2C\n];\nconst FLUSH_BOUND_IDX_NORMAL = 0;\nconst FLUSH_BOUND_IDX_BROTLI = 1;\n\n// The base class for all Zlib-style streams.\nfunction ZlibBase(opts\x2C mode\x2C handle\x2C { flush\x2C finishFlush\x2C fullFlush }) {\n  let chunkSize = Z_DEFAULT_CHUNK;\n  let maxOutputLength = kMaxLength;\n  // The ZlibBase class is not exported to user land\x2C the mode should only be\n  // passed in by us.\n  assert(typeof mode === 'number');\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\n\n  let flushBoundIdx;\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\n  } else {\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\n  }\n\n  if (opts) {\n    chunkSize = opts.chunkSize;\n    if (!checkFiniteNumber(chunkSize\x2C 'options.chunkSize')) {\n      chunkSize = Z_DEFAULT_CHUNK;\n    } else if (chunkSize < Z_MIN_CHUNK) {\n      throw new ERR_OUT_OF_RANGE('options.chunkSize'\x2C\n                                 `>= ${Z_MIN_CHUNK}`\x2C chunkSize);\n    }\n\n    flush = checkRangesOrGetDefault(\n      opts.flush\x2C 'options.flush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C flush);\n\n    finishFlush = checkRangesOrGetDefault(\n      opts.finishFlush\x2C 'options.finishFlush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C\n      finishFlush);\n\n    maxOutputLength = checkRangesOrGetDefault(\n      opts.maxOutputLength\x2C 'options.maxOutputLength'\x2C\n      1\x2C kMaxLength\x2C kMaxLength);\n\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\n      opts = { ...opts };\n      opts.encoding = null;\n      opts.objectMode = false;\n      opts.writableObjectMode = false;\n    }\n  }\n\n  ReflectApply(Transform\x2C this\x2C [{ autoDestroy: true\x2C ...opts }]);\n  this[kError] = null;\n  this.bytesWritten = 0;\n  this._handle = handle;\n  handle[owner_symbol] = this;\n  // Used by processCallback() and zlibOnError()\n  handle.onerror = zlibOnError;\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\n  this._outOffset = 0;\n\n  this._chunkSize = chunkSize;\n  this._defaultFlushFlag = flush;\n  this._finishFlushFlag = finishFlush;\n  this._defaultFullFlushFlag = fullFlush;\n  this._info = opts && opts.info;\n  this._maxOutputLength = maxOutputLength;\n}\nObjectSetPrototypeOf(ZlibBase.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(ZlibBase\x2C Transform);\n\nObjectDefineProperty(ZlibBase.prototype\x2C '_closed'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return !this._handle;\n  }\n});\n\n// `bytesRead` made sense as a name when looking from the zlib engine's\n// perspective\x2C but it is inconsistent with all other streams exposed by Node.js\n// that have this concept\x2C where it stands for the number of bytes read\n// *from* the stream (that is\x2C net.Socket/tls.Socket & file system streams).\nObjectDefineProperty(ZlibBase.prototype\x2C 'bytesRead'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: deprecate(function() {\n    return this.bytesWritten;\n  }\x2C 'zlib.bytesRead is deprecated and will change its meaning in the ' +\n     'future. Use zlib.bytesWritten instead.'\x2C 'DEP0108')\x2C\n  set: deprecate(function(value) {\n    this.bytesWritten = value;\n  }\x2C 'Setting zlib.bytesRead is deprecated. ' +\n     'This feature will be removed in the future.'\x2C 'DEP0108')\n});\n\nZlibBase.prototype.reset = function() {\n  if (!this._handle)\n    assert(false\x2C 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class\x2C\n// internally\x2C when the last chunk has been written.\nZlibBase.prototype._flush = function(callback) {\n  this._transform(Buffer.alloc(0)\x2C ''\x2C callback);\n};\n\n// Force Transform compat behavior.\nZlibBase.prototype._final = function(callback) {\n  callback();\n};\n\n// If a flush is scheduled while another flush is still pending\x2C a way to figure\n// out which one is the "stronger" flush is needed.\n// This is currently only used to figure out which flush flag to use for the\n// last chunk.\n// Roughly\x2C the following holds:\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\nconst flushiness = [];\nlet i = 0;\nconst kFlushFlagList = [Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C\n                        Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH];\nfor (const flushFlag of kFlushFlagList) {\n  flushiness[flushFlag] = i++;\n}\n\nfunction maxFlush(a\x2C b) {\n  return flushiness[a] > flushiness[b] ? a : b;\n}\n\n// Set up a list of 'special' buffers that can be written using .write()\n// from the .flush() code as a way of introducing flushing operations into the\n// write sequence.\nconst kFlushBuffers = [];\n{\n  const dummyArrayBuffer = new ArrayBuffer();\n  for (const flushFlag of kFlushFlagList) {\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\n  }\n}\n\nZlibBase.prototype.flush = function(kind\x2C callback) {\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\n    callback = kind;\n    kind = this._defaultFullFlushFlag;\n  }\n\n  if (this.writableFinished) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (this.writableEnded) {\n    if (callback)\n      this.once('end'\x2C callback);\n  } else {\n    this.write(kFlushBuffers[kind]\x2C ''\x2C callback);\n  }\n};\n\nZlibBase.prototype.close = function(callback) {\n  if (callback) finished(this\x2C callback);\n  this.destroy();\n};\n\nZlibBase.prototype._destroy = function(err\x2C callback) {\n  _close(this);\n  callback(err);\n};\n\nZlibBase.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  let flushFlag = this._defaultFlushFlag;\n  // We use a 'fake' zero-length chunk to carry information about flushes from\n  // the public API to the actual stream implementation.\n  if (typeof chunk[kFlushFlag] === 'number') {\n    flushFlag = chunk[kFlushFlag];\n  }\n\n  // For the last chunk\x2C also apply `_finishFlushFlag`.\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\n    flushFlag = maxFlush(flushFlag\x2C this._finishFlushFlag);\n  }\n  processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n};\n\nZlibBase.prototype._processChunk = function(chunk\x2C flushFlag\x2C cb) {\n  // _processChunk() is left for backwards compatibility\n  if (typeof cb === 'function')\n    processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n  else\n    return processChunkSync(this\x2C chunk\x2C flushFlag);\n};\n\nfunction processChunkSync(self\x2C chunk\x2C flushFlag) {\n  let availInBefore = chunk.byteLength;\n  let availOutBefore = self._chunkSize - self._outOffset;\n  let inOff = 0;\n  let availOutAfter;\n  let availInAfter;\n\n  let buffers = null;\n  let nread = 0;\n  let inputRead = 0;\n  const state = self._writeState;\n  const handle = self._handle;\n  let buffer = self._outBuffer;\n  let offset = self._outOffset;\n  const chunkSize = self._chunkSize;\n\n  let error;\n  self.on('error'\x2C function onError(er) {\n    error = er;\n  });\n\n  while (true) {\n    handle.writeSync(flushFlag\x2C\n                     chunk\x2C // in\n                     inOff\x2C // in_off\n                     availInBefore\x2C // in_len\n                     buffer\x2C // out\n                     offset\x2C // out_off\n                     availOutBefore); // out_len\n    if (error)\n      throw error;\n    else if (self[kError])\n      throw self[kError];\n\n    availOutAfter = state[0];\n    availInAfter = state[1];\n\n    const inDelta = (availInBefore - availInAfter);\n    inputRead += inDelta;\n\n    const have = availOutBefore - availOutAfter;\n    if (have > 0) {\n      const out = buffer.slice(offset\x2C offset + have);\n      offset += have;\n      if (!buffers)\n        buffers = [out];\n      else\n        ArrayPrototypePush(buffers\x2C out);\n      nread += out.byteLength;\n\n      if (nread > self._maxOutputLength) {\n        _close(self);\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\n      }\n\n    } else {\n      assert(have === 0\x2C 'have should not go down');\n    }\n\n    // Exhausted the output buffer\x2C or used all the input create a new one.\n    if (availOutAfter === 0 || offset >= chunkSize) {\n      availOutBefore = chunkSize;\n      offset = 0;\n      buffer = Buffer.allocUnsafe(chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done. Need to reprocess.\n      // Also\x2C update the availInBefore to the availInAfter value\x2C\n      // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n      // it'll have the correct byte counts.\n      inOff += inDelta;\n      availInBefore = availInAfter;\n    } else {\n      break;\n    }\n  }\n\n  self.bytesWritten = inputRead;\n  _close(self);\n\n  if (nread === 0)\n    return Buffer.alloc(0);\n\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C nread));\n}\n\nfunction processChunk(self\x2C chunk\x2C flushFlag\x2C cb) {\n  const handle = self._handle;\n  if (!handle) return process.nextTick(cb);\n\n  handle.buffer = chunk;\n  handle.cb = cb;\n  handle.availOutBefore = self._chunkSize - self._outOffset;\n  handle.availInBefore = chunk.byteLength;\n  handle.inOff = 0;\n  handle.flushFlag = flushFlag;\n\n  handle.write(flushFlag\x2C\n               chunk\x2C // in\n               0\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               handle.availOutBefore); // out_len\n}\n\nfunction processCallback() {\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\n  // important to null out the values once they are no longer needed since\n  // `_handle` can stay in memory long after the buffer is needed.\n  const handle = this;\n  const self = this[owner_symbol];\n  const state = self._writeState;\n\n  if (self.destroyed) {\n    this.buffer = null;\n    this.cb();\n    return;\n  }\n\n  const availOutAfter = state[0];\n  const availInAfter = state[1];\n\n  const inDelta = handle.availInBefore - availInAfter;\n  self.bytesWritten += inDelta;\n\n  const have = handle.availOutBefore - availOutAfter;\n  if (have > 0) {\n    const out = self._outBuffer.slice(self._outOffset\x2C self._outOffset + have);\n    self._outOffset += have;\n    self.push(out);\n  } else {\n    assert(have === 0\x2C 'have should not go down');\n  }\n\n  if (self.destroyed) {\n    this.cb();\n    return;\n  }\n\n  // Exhausted the output buffer\x2C or used all the input create a new one.\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\n    handle.availOutBefore = self._chunkSize;\n    self._outOffset = 0;\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\n  }\n\n  if (availOutAfter === 0) {\n    // Not actually done. Need to reprocess.\n    // Also\x2C update the availInBefore to the availInAfter value\x2C\n    // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n    // it'll have the correct byte counts.\n    handle.inOff += inDelta;\n    handle.availInBefore = availInAfter;\n\n    this.write(handle.flushFlag\x2C\n               this.buffer\x2C // in\n               handle.inOff\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               self._chunkSize); // out_len\n    return;\n  }\n\n  if (availInAfter > 0) {\n    // If we have more input that should be written\x2C but we also have output\n    // space available\x2C that means that the compression library was not\n    // interested in receiving more data\x2C and in particular that the input\n    // stream has ended early.\n    // This applies to streams where we don't check data past the end of\n    // what was consumed; that is\x2C everything except Gunzip/Unzip.\n    self.push(null);\n  }\n\n  // Finished with the chunk.\n  this.buffer = null;\n  this.cb();\n}\n\nfunction _close(engine) {\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle)\n    return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nconst zlibDefaultOpts = {\n  flush: Z_NO_FLUSH\x2C\n  finishFlush: Z_FINISH\x2C\n  fullFlush: Z_FULL_FLUSH\n};\n// Base class for all streams actually backed by zlib and using zlib-specific\n// parameters.\nfunction Zlib(opts\x2C mode) {\n  let windowBits = Z_DEFAULT_WINDOWBITS;\n  let level = Z_DEFAULT_COMPRESSION;\n  let memLevel = Z_DEFAULT_MEMLEVEL;\n  let strategy = Z_DEFAULT_STRATEGY;\n  let dictionary;\n\n  if (opts) {\n    // windowBits is special. On the compression side\x2C 0 is an invalid value.\n    // But on the decompression side\x2C a value of 0 for windowBits tells zlib\n    // to use the window size in the zlib header of the compressed stream.\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\n        (mode === INFLATE ||\n         mode === GUNZIP ||\n         mode === UNZIP)) {\n      windowBits = 0;\n    } else {\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\n      windowBits = checkRangesOrGetDefault(\n        opts.windowBits\x2C 'options.windowBits'\x2C\n        min\x2C Z_MAX_WINDOWBITS\x2C Z_DEFAULT_WINDOWBITS);\n    }\n\n    level = checkRangesOrGetDefault(\n      opts.level\x2C 'options.level'\x2C\n      Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C Z_DEFAULT_COMPRESSION);\n\n    memLevel = checkRangesOrGetDefault(\n      opts.memLevel\x2C 'options.memLevel'\x2C\n      Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_MEMLEVEL);\n\n    strategy = checkRangesOrGetDefault(\n      opts.strategy\x2C 'options.strategy'\x2C\n      Z_DEFAULT_STRATEGY\x2C Z_FIXED\x2C Z_DEFAULT_STRATEGY);\n\n    dictionary = opts.dictionary;\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\n      if (isAnyArrayBuffer(dictionary)) {\n        dictionary = Buffer.from(dictionary);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.dictionary'\x2C\n          ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n          dictionary\n        );\n      }\n    }\n  }\n\n  const handle = new binding.Zlib(mode);\n  // Ideally\x2C we could let ZlibBase() set up _writeState. I haven't been able\n  // to come up with a good solution that doesn't break our internal API\x2C\n  // and with it all supported npm versions at the time of writing.\n  this._writeState = new Uint32Array(2);\n  handle.init(windowBits\x2C\n              level\x2C\n              memLevel\x2C\n              strategy\x2C\n              this._writeState\x2C\n              processCallback\x2C\n              dictionary);\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C zlibDefaultOpts]);\n\n  this._level = level;\n  this._strategy = strategy;\n}\nObjectSetPrototypeOf(Zlib.prototype\x2C ZlibBase.prototype);\nObjectSetPrototypeOf(Zlib\x2C ZlibBase);\n\n// This callback is used by `.params()` to wait until a full flush happened\n// before adjusting the parameters. In particular\x2C the call to the native\n// `params()` function should not happen while a write is currently in progress\n// on the threadpool.\nfunction paramsAfterFlushCallback(level\x2C strategy\x2C callback) {\n  assert(this._handle\x2C 'zlib binding closed');\n  this._handle.params(level\x2C strategy);\n  if (!this.destroyed) {\n    this._level = level;\n    this._strategy = strategy;\n    if (callback) callback();\n  }\n}\n\nZlib.prototype.params = function params(level\x2C strategy\x2C callback) {\n  checkRangesOrGetDefault(level\x2C 'level'\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL);\n  checkRangesOrGetDefault(strategy\x2C 'strategy'\x2C Z_DEFAULT_STRATEGY\x2C Z_FIXED);\n\n  if (this._level !== level || this._strategy !== strategy) {\n    this.flush(Z_SYNC_FLUSH\x2C\n               FunctionPrototypeBind(paramsAfterFlushCallback\x2C this\x2C\n                                     level\x2C strategy\x2C callback));\n  } else {\n    process.nextTick(callback);\n  }\n};\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate))\n    return new Deflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATE]);\n}\nObjectSetPrototypeOf(Deflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Deflate\x2C Zlib);\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate))\n    return new Inflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATE]);\n}\nObjectSetPrototypeOf(Inflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Inflate\x2C Zlib);\n\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip))\n    return new Gzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GZIP]);\n}\nObjectSetPrototypeOf(Gzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gzip\x2C Zlib);\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip))\n    return new Gunzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GUNZIP]);\n}\nObjectSetPrototypeOf(Gunzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gunzip\x2C Zlib);\n\nfunction DeflateRaw(opts) {\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\n  if (!(this instanceof DeflateRaw))\n    return new DeflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATERAW]);\n}\nObjectSetPrototypeOf(DeflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(DeflateRaw\x2C Zlib);\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw))\n    return new InflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATERAW]);\n}\nObjectSetPrototypeOf(InflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(InflateRaw\x2C Zlib);\n\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip))\n    return new Unzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C UNZIP]);\n}\nObjectSetPrototypeOf(Unzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Unzip\x2C Zlib);\n\nfunction createConvenienceMethod(ctor\x2C sync) {\n  if (sync) {\n    return function syncBufferWrapper(buffer\x2C opts) {\n      return zlibBufferSync(new ctor(opts)\x2C buffer);\n    };\n  }\n  return function asyncBufferWrapper(buffer\x2C opts\x2C callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    return zlibBuffer(new ctor(opts)\x2C buffer\x2C callback);\n  };\n}\n\nconst kMaxBrotliParam = MathMaxApply(ArrayPrototypeMap(\n  ObjectKeys(constants)\x2C\n  (key) => (StringPrototypeStartsWith(key\x2C 'BROTLI_PARAM_') ?\n    constants[key] :\n    0)\n));\n\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\n\nconst brotliDefaultOpts = {\n  flush: BROTLI_OPERATION_PROCESS\x2C\n  finishFlush: BROTLI_OPERATION_FINISH\x2C\n  fullFlush: BROTLI_OPERATION_FLUSH\n};\nfunction Brotli(opts\x2C mode) {\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\n\n  TypedArrayPrototypeFill(brotliInitParamsArray\x2C -1);\n  if (opts?.params) {\n    ArrayPrototypeForEach(ObjectKeys(opts.params)\x2C (origKey) => {\n      const key = +origKey;\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\n          (brotliInitParamsArray[key] | 0) !== -1) {\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\n      }\n\n      const value = opts.params[origKey];\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]'\x2C\n                                       'number'\x2C opts.params[origKey]);\n      }\n      brotliInitParamsArray[key] = value;\n    });\n  }\n\n  const handle = mode === BROTLI_DECODE ?\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\n\n  this._writeState = new Uint32Array(2);\n  // TODO(addaleax): Sometimes we generate better error codes in C++ land\x2C\n  // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with\n  // the current bindings setup\x2C though.\n  if (!handle.init(brotliInitParamsArray\x2C\n                   this._writeState\x2C\n                   processCallback)) {\n    throw new ERR_ZLIB_INITIALIZATION_FAILED();\n  }\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C brotliDefaultOpts]);\n}\nObjectSetPrototypeOf(Brotli.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Brotli\x2C Zlib);\n\nfunction BrotliCompress(opts) {\n  if (!(this instanceof BrotliCompress))\n    return new BrotliCompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_ENCODE]);\n}\nObjectSetPrototypeOf(BrotliCompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliCompress\x2C Brotli);\n\nfunction BrotliDecompress(opts) {\n  if (!(this instanceof BrotliDecompress))\n    return new BrotliDecompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_DECODE]);\n}\nObjectSetPrototypeOf(BrotliDecompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliDecompress\x2C Brotli);\n\n\nfunction createProperty(ctor) {\n  return {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: function(options) {\n      return new ctor(options);\n    }\n  };\n}\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(binding.Zlib.prototype\x2C 'jsref'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nmodule.exports = {\n  Deflate\x2C\n  Inflate\x2C\n  Gzip\x2C\n  Gunzip\x2C\n  DeflateRaw\x2C\n  InflateRaw\x2C\n  Unzip\x2C\n  BrotliCompress\x2C\n  BrotliDecompress\x2C\n\n  // Convenience methods.\n  // compress/decompress a string or buffer in one step.\n  deflate: createConvenienceMethod(Deflate\x2C false)\x2C\n  deflateSync: createConvenienceMethod(Deflate\x2C true)\x2C\n  gzip: createConvenienceMethod(Gzip\x2C false)\x2C\n  gzipSync: createConvenienceMethod(Gzip\x2C true)\x2C\n  deflateRaw: createConvenienceMethod(DeflateRaw\x2C false)\x2C\n  deflateRawSync: createConvenienceMethod(DeflateRaw\x2C true)\x2C\n  unzip: createConvenienceMethod(Unzip\x2C false)\x2C\n  unzipSync: createConvenienceMethod(Unzip\x2C true)\x2C\n  inflate: createConvenienceMethod(Inflate\x2C false)\x2C\n  inflateSync: createConvenienceMethod(Inflate\x2C true)\x2C\n  gunzip: createConvenienceMethod(Gunzip\x2C false)\x2C\n  gunzipSync: createConvenienceMethod(Gunzip\x2C true)\x2C\n  inflateRaw: createConvenienceMethod(InflateRaw\x2C false)\x2C\n  inflateRawSync: createConvenienceMethod(InflateRaw\x2C true)\x2C\n  brotliCompress: createConvenienceMethod(BrotliCompress\x2C false)\x2C\n  brotliCompressSync: createConvenienceMethod(BrotliCompress\x2C true)\x2C\n  brotliDecompress: createConvenienceMethod(BrotliDecompress\x2C false)\x2C\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress\x2C true)\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  createDeflate: createProperty(Deflate)\x2C\n  createInflate: createProperty(Inflate)\x2C\n  createDeflateRaw: createProperty(DeflateRaw)\x2C\n  createInflateRaw: createProperty(InflateRaw)\x2C\n  createGzip: createProperty(Gzip)\x2C\n  createGunzip: createProperty(Gunzip)\x2C\n  createUnzip: createProperty(Unzip)\x2C\n  createBrotliCompress: createProperty(BrotliCompress)\x2C\n  createBrotliDecompress: createProperty(BrotliDecompress)\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  codes: {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: ObjectFreeze(codes)\n  }\n});\n\n// These should be considered deprecated\n// expose all the zlib constants\nfor (const bkey of ObjectKeys(constants)) {\n  if (StringPrototypeStartsWith(bkey\x2C 'BROTLI')) continue;\n  ObjectDefineProperty(module.exports\x2C bkey\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C value: constants[bkey]\x2C writable: false\n  });\n}\n
code-source-info,0x334da65a2266,176,0,29517,C0O0C4O29517,,
code-creation,Function,10,179719,0x334da65a4076,4132, node:zlib:1:1,0x334da65a21e0,~
code-source-info,0x334da65a4076,176,0,29517,C0O0C360O1159C365O1174C371O1199C376O1220C382O1242C388O1267C393O1283C399O1301C405O1316C410O1342C415O1366C420O1382C426O1396C431O1420C437O1436C443O1465C448O1475C454O1502C460O1740C464O1740C470O1740C476O1556C482O1586C488O1612C494O1638C500O1660C506O1699C512O1719C517O1800C521O1800C527O1776C533O1787C539O1843C543O1843C549O1829C554O1938C558O1938C564O1879C570O1900C576O1920C582O1986C586O1986C590O1986C592O2026C596O2026C600O2026C602O2089C606O2089C612O2064C618O2074C624O2133C628O2133C634O2164C640O2116C646O2224C650O2224C656O2184C662O2204C668O2276C672O2276C676O2276C678O2313C682O2313C686O2313C688O2350C692O2350C698O2378C702O2350C704O3047C708O2418C713O2430C718O2439C723O2456C729O2470C734O2484C739O2520C745O2533C751O2551C757O2569C763O2582C769O2597C775O2613C781O2629C787O2646C793O2671C799O2691C805O2713C811O2733C817O2798C823O2807C829O2819C835O2828C841O2840C847O2846C853O2854C859O2863C865O2878C871O2934C876O2960C882O2986C888O3011C894O3112C904O3132C916O3164C928O3203C940O3237C952O3274C964O3316C976O3355C988O3393C1000O3435C1011O3474C1015O3474C1049O3466C1080O3466C1083O3497C1085O3508C1092O3516C1099O3455C1170O5973C1176O5973C1180O5973C1182O6610C1188O6610C1192O6610C1194O6945C1214O6951C1224O6963C1249O6978C1259O7004C1271O6945C1273O7072C1274O7072C1276O7106C1278O7106C1280O9209C1284O9239C1294O9260C1300O9209C1305O9272C1313O9272C1318O9316C1322O9346C1338O9433C1346O9316C1351O9778C1355O9808C1371O9902C1383O10027C1392O9902C1401O10095C1413O10200C1425O10095C1443O9778C1453O10270C1457O10279C1467O10295C1475O10523C1479O10532C1489O10549C1497O10662C1501O10671C1511O10688C1519O11108C1523O11108C1525O11120C1528O11146C1542O11147C1556O11159C1570O11168C1584O11209C1598O11223C1612O11237C1623O11272C1659O11259C1702O11259C1705O11292C1711O11303C1725O11314C1736O11248C1815O11594C1819O11594C1821O11627C1823O11627C1835O11672C1871O11659C1914O11659C1917O11694C1925O11728C1935O11728C1945O11719C1953O11756C1959O11769C1973O11793C1984O11648C2063O11813C2067O11822C2077O11838C2085O12245C2089O12254C2099O12270C2107O12357C2111O12366C2121O12385C2129O12450C2133O12459C2143O12480C2151O13019C2155O13028C2165O13052C2173O18685C2184O18696C2194O18723C2204O18746C2214O18685C2216O21173C2220O21199C2234O21219C2240O21173C2250O21231C2258O21231C2268O21790C2272O21795C2286O21812C2294O22461C2298O22490C2312O22506C2322O22461C2332O22518C2340O22518C2350O22692C2354O22721C2368O22737C2378O22692C2388O22749C2396O22749C2406O22911C2410O22937C2424O22953C2434O22911C2444O22965C2452O22965C2462O23132C2466O23160C2480O23176C2490O23132C2500O23188C2508O23188C2518O23431C2522O23463C2536O23479C2546O23431C2556O23491C2564O23491C2574O23680C2578O23712C2592O23728C2602O23680C2612O23740C2620O23740C2630O23909C2634O23936C2648O23952C2658O23909C2668O23964C2676O23964C2686O24415C2694O24449C2710O24428C2722O24415C2730O24415C2732O24597C2738O24629C2748O24597C2758O24597C2760O24662C2771O24673C2781O24714C2791O24752C2801O24662C2803O26116C2807O26144C2821O26160C2831O26116C2841O26172C2849O26172C2859O26374C2863O26410C2877O26428C2887O26374C2897O26440C2905O26440C2915O26658C2919O26696C2933O26714C2943O26658C2953O26726C2961O26726C2971O27113C2975O27142C2985O27147C3008O27190C3020O27230C3032O27113C3042O27277C3053O27298C3063O27309C3073O27320C3083O27328C3093O27338C3103O27352C3113O27366C3123O27375C3133O27393C3148O27506C3173O27562C3198O27610C3223O27660C3248O27711C3273O27773C3298O27825C3323O27877C3348O27926C3373O27982C3398O28032C3423O28086C3448O28139C3473O28201C3498O28262C3523O28332C3548O28399C3573O28473C3593O27292C3601O28556C3624O28584C3644O28626C3664O28671C3684O28719C3704O28761C3724O28799C3744O28838C3764O28885C3784O28943C3800O28990C3811O29071C3829O29095C3838O29172C3864O28526C3874O29294C3882O29294C3928O29286C3971O29286C3974O29321C3982O29325C3997O29368C3999O29408C4009O29417C4024O29485C4041O29380C4051O29275C4131O29516,,
tick,0x7f40773a70af,179871,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x224cfd0e919a,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da65a0c26,0x7f406004833c,0x334da65a081b,0x7f406004833c,0x2a1384e1adda,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,180205,0x334da65a95ce,135,fromArrayBuffer node:buffer:454:25,0x1d49834b4a88,~
code-source-info,0x334da65a95ce,24,13057,13730,C0O13122C4O13158C9O13189C11O13202C15O13219C20O13223C26O13254C29O13299C36O13310C40O13327C41O13341C46O13350C56O13356C61O13350C62O13399C66O13431C73O13513C75O13522C79O13535C80O13546C85O13559C87O13570C92O13591C102O13597C107O13591C110O13656C113O13681C129O13688C134O13728,,
tick,0x109f673,180317,0,0x0,0,0x11ec510,0x334da65a482b,0x7f4060044ae0,0x224cfd0e919a,0x7f40600491c0,0x224cfd0c4456,0x224cfd0c407a,0x7f4060048c35,0x334da65a0c26,0x7f406004833c,0x334da65a081b,0x7f406004833c,0x2a1384e1adda,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,180423,0x334da65a9966,29, node:zlib:806:3,0x334da65a3178,~
code-source-info,0x334da65a9966,176,24474,24561,C0O24484C8O24484C17O24538C22O24547C28O24561,,
code-creation,LazyCompile,10,180547,0x334da65ab98e,23,createConvenienceMethod node:zlib:789:33,0x334da65a2958,~
code-source-info,0x334da65ab98e,176,24032,24389,C0O24032C9O24049C13O24065C17O24174C18O24181C22O24387,,
code-creation,LazyCompile,10,180658,0x334da65abbbe,25,createProperty node:zlib:874:24,0x334da65a2ac8,~
code-source-info,0x334da65abbbe,176,26799,26961,C0O26799C9O26810C14O26897C24O26959,,
code-creation,Function,11,180761,0x7f40600498c0,252,createProperty node:zlib:874:24,0x334da65a2ac8,^
code-source-info,0x7f40600498c0,176,26799,26961,,,
code-creation,Function,11,180831,0x7f4060049a20,1120,Module.require node:internal/modules/cjs/loader:1020:36,0xa26aab2cc8,^
code-source-info,0x7f4060049a20,106,31917,32208,,,
code-creation,Function,11,180879,0x7f4060049ee0,924,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x2ac221050b80,^
code-source-info,0x7f4060049ee0,9,8006,8678,,,
code-creation,Function,11,180929,0x7f406004a2e0,276,FastBuffer node:internal/buffer:958:14,0x3e83b61426a8,^
code-source-info,0x7f406004a2e0,25,26364,26453,,,
code-creation,Function,11,180940,0x7f406004a460,288, node:zlib:806:3,0x334da65a3178,^
code-source-info,0x7f406004a460,176,24474,24561,,,
code-creation,Function,11,180973,0x7f406004a5e0,264,createConvenienceMethod node:zlib:789:33,0x334da65a2958,^
code-source-info,0x7f406004a5e0,176,24032,24389,,,
code-creation,LazyCompile,10,181311,0x334da65ac876,199,4847 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:36779,0x224cfd0e3070,~
code-source-info,0x334da65ac876,130,36853,37904,C0O36853C36O36898C41O36898C46O36895C62O37573C71O37678C75O37575C80O37573C84O37573C86O37683C93O37701C97O37703C107O37770C115O37781C119O37783C129O37692C148O37839C155O37857C163O37864C169O37880C177O37891C185O37900C191O37848C198O37903,,
code-creation,LazyCompile,10,181443,0x334da65aca1e,24, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:37516,0x334da65ac5c0,~
code-source-info,0x334da65aca1e,130,37590,37678,C0O37599C9O37599C15O37644C17O37656C23O37644,,
tick,0x7f40773a70af,181548,0,0x0,3,0x11d7ee0,0x7f406004833c,0x334da65a0826,0x7f406004833c,0x2a1384e1adda,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,181719,0x334da65ace2e,101,9864 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:37836,0x224cfd0e30f8,~
code-source-info,0x334da65ace2e,130,37910,38227,C0O37927C5O38005C9O38012C16O38012C25O38086C32O38086C40O38129C47O38129C55O38161C62O38161C70O38194C77O38194C85O38219C95O37936C100O38226,,
code-creation,LazyCompile,10,181824,0x334da65acfce,5,get node:internal/bootstrap/pre_execution:426:8,0xa26aaaec98,~
code-source-info,0x334da65acfce,100,13347,13379,C0O13358C4O13373,,
code-creation,LazyCompile,10,181893,0x334da65ad0a6,73,alloc node:buffer:365:30,0x1d49834b4740,~
code-source-info,0x334da65ad0a6,24,10581,10812,C0O10608C5O10608C9O10628C14O10659C20O10673C25O10696C30O10696C35O10726C40O10757C54O10733C59O10775C60O10782C67O10789C72O10810,,
code-creation,LazyCompile,10,182001,0x334da65ad676,78,8528 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:42427,0x224cfd0e3290,~
code-source-info,0x334da65ad676,130,42501,42831,C0O42501C11O42526C18O42526C22O42526C24O42544C31O42544C35O42544C37O42559C52O42717C72O42568C77O42830,,
code-creation,LazyCompile,10,182099,0x334da65ad886,92,fromObject node:buffer:500:20,0x1d49834b4b28,~
code-source-info,0x334da65ad886,24,14147,14434,C0O14165C8O14189C11O14210C16O14189C22O14240C30O14269C35O14276C40O14293C41O14304C44O14311C48O14330C49O14346C56O14351C63O14367C66O14384C71O14367C77O14397C80O14422C85O14404C89O14428C91O14433,,
code-creation,LazyCompile,10,182133,0x334da65ada0e,159,fromArrayLike node:buffer:485:23,0x1d49834b4ad8,~
code-source-info,0x334da65ada0e,24,13754,14126,C0O13772C6O13779C11O13789C16O13796C21O13813C22O13824C30O13841C34O13850C37O13831C42O13872C49O13882C54O13893C56O13891C59O13879C64O13912C67O13912C70O13940C77O13955C82O13966C85O13982C92O13940C98O13995C111O13995C116O14034C121O14052C131O14045C137O14064C140O14064C143O14081C145O14090C146O14097C153O14104C158O14124,,
code-creation,LazyCompile,10,182359,0x334da65aea3e,242,3091 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:48306,0x224cfd0e33a0,~
code-source-info,0x334da65aea3e,130,48380,54659,C0O48380C41O48421C46O48421C51O48418C56O48431C61O48431C65O48431C67O48498C72O48498C77O48453C83O48468C89O48482C95O48495C101O48542C106O48542C111O48514C117O48530C123O48539C129O48586C134O48586C139O48569C145O48583C151O48745C236O48730C241O54658,,
code-creation,LazyCompile,10,182492,0x334da65af60e,136,1607 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:60692,0x224cfd0e35c0,~
code-source-info,0x334da65af60e,130,60766,61910,C0O60766C16O60797C24O60797C31O61644C40O61753C44O61646C49O61644C53O61644C55O61758C62O61787C66O61801C76O61838C82O61767C101O61850C108O61879C116O61893C122O61906C128O61859C135O61909,,
code-creation,LazyCompile,10,182599,0x334da65af76e,24, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:61587,0x334da65aef70,~
code-source-info,0x334da65af76e,130,61661,61753,C0O61670C9O61670C15O61719C17O61731C23O61719,,
tick,0x7f40773a70af,182626,0,0x0,3,0x11d7ee0,0x7f406004833c,0x334da65aeac4,0x7f406004833c,0x2a1384e1ade5,0x224cfd0e7a3b,0x2a1384e18493,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,182826,0x334da65b015e,246,2091 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:54591,0x224cfd0e3428,~
code-source-info,0x334da65b015e,130,54665,58776,C0O54665C29O54688C34O54688C43O54696C47O54728C52O54728C57O54725C63O54738C68O54738C72O54738C74O54763C79O54763C84O54760C90O54793C95O54793C100O54790C106O54821C111O54821C116O54807C122O54818C128O54831C135O54831C139O54831C141O54855C145O54862C153O54862C158O54855C238O58764C240O58773C245O58775,,
code-creation,LazyCompile,10,183054,0x334da65b1516,615,5831 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:38159,0x224cfd0e3180,~
code-source-info,0x334da65b
code-creation,LazyCompile,10,183301,0x334da65b21ce,59,3071 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:40266,0x224cfd0e3208,~
code-source-info,0x334da65b21ce,130,40340,42495,C0O40340C14O40383C19O40383C24O40380C30O40445C35O40463C43O40732C53O40454C58O42494,,
code-creation,LazyCompile,10,183425,0x334da65b24b6,34, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:78105,0x2a1384e1a1f0,~
code-source-info,0x334da65b24b6,130,78179,78236,C0O78183C4O78190C11O78205C14O78207C19O78217C27O78190C33O78235,,
code-creation,LazyCompile,10,183525,0x334da65b278e,68, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:78209,0x2a1384e1a240,~
code-source-info,0x334da65b278e,130,78283,78558,C0O78283C9O78287C13O78294C22O78309C25O78311C35O78326C45O78345C53O78417C61O78294C67O78557,,
tick,0xa12250,183654,0,0x0,3,0x11d7ee0,0x7f406004833c,0x2a1384e1849d,0x224cfd0e7a3b,0x2a1384e173b4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,183701,0x334da65b2b7e,52,5519 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:58708,0x224cfd0e34b0,~
code-source-info,0x334da65b2b7e,130,58782,60056,C0O58782C26O58821C31O58821C36O58818C42O59048C46O59057C51O60055,,
code-creation,LazyCompile,10,183920,0x334da65b3836,239,58 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:61840,0x224cfd0e3648,~
code-source-info,0x334da65b3836,130,61914,66698,C0O61914C50O61945C55O61945C60O61955C65O61955C69O61955C71O61978C76O61979C85O61987C94O61995C103O62003C108O61975C114O62014C119O62014C123O62014C125O62024C130O62024C134O62024C136O62034C141O62034C145O62034C147O62044C152O62044C156O62044C158O62074C163O62074C168O62058C174O62071C180O62084C184O62084C186O62508C233O62493C238O66697,,
code-creation,LazyCompile,10,184028,0x334da65b3cee,45,2217 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:59988,0x224cfd0e3538,~
code-source-info,0x334da65b3cee,130,60062,60760,C0O60062C8O60105C13O60105C18O60102C24O60113C29O60130C39O60122C44O60759,,
code-creation,LazyCompile,10,184277,0x334da65b4e16,390,5370 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:78570,0x224cfd0e3758,~
code-source-info,0x334da65b4e16,130,78644,80858,C0O78644C27O78667C31O78674C42O78689C47O78674C72O78826C78O78805C84O78788C90O78770C96O78753C102O78741C106O78842C111O78842C116O78852C121O78852C125O78852C127O78862C132O78862C136O78862C138O78888C162O78870C164O78999C169O79019C176O79022C180O79038C187O79345C191O79362C195O79496C199O79503C209O79503C214O79496C216O79595C219O79612C223O79619C233O79678C241O79619C246O79611C253O79715C257O79722C269O79781C273O79722C278O79714C334O79785C336O80402C341O80427C386O80430C389O80857,,
code-creation,LazyCompile,10,184346,0x334da65b513e,48, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:79445,0x334da65b4248,~
code-source-info,0x334da65b513e,130,79519,79592,C0O79519C8O79533C12O79546C17O79546C25O79533C30O79533C32O79557C37O79564C47O79591,,
code-creation,LazyCompile,10,184408,0x334da65b56ee,67,1032 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89009,0x224cfd0e3c38,~
code-source-info,0x334da65b56ee,130,89083,89356,C0O89104C4O89111C12O89126C20O89111C26O89168C30O89192C59O89338C61O89353C66O89355,,
code-creation,LazyCompile,10,184540,0x334da65b5f7e,140,4936 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:80790,0x224cfd0e37e0,~
code-source-info,0x334da65b5f7e,130,80864,81976,C0O80864C11O80887C15O80894C23O80909C31O80894C38O80964C44O80949C48O80980C53O80980C57O80980C95O80988C97O81630C99O81644C105O81647C134O81660C139O81975,,
tick,0x10eadda,184772,0,0x0,2,0x11d7ee0,0x7f406004833c,0x334da65b5fb3,0x7f406004833c,0x334da65b4e8f,0x7f406004833c,0x2a1384e173c4,0x224cfd0e7a3b,0x2a1384e1675c,0x224cfd0e7a3b,0x224cfd0e841a,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,184895,0x334da65b70d6,389,7678 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:85280,0x224cfd0e3aa0,~
code-source-info,0x334da65b70d
code-creation,LazyCompile,10,185068,0x334da65b802e,83,8986 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:88210,0x224cfd0e3b28,~
code-source-info,0x334da65b802e,130,88284,88921,C0O88305C4O88312C12O88327C20O88312C27O88402C33O88394C39O88374C45O88367C49O88410C53O88417C57O88489C61O88508C65O88578C69O88584C73O88717C77O88730C82O88920,,
code-creation,LazyCompile,10,185204,0x334da65b8696,96,7873 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:85004,0x224cfd0e3a18,~
code-source-info,0x334da65b8696,130,85078,85348,C0O85099C4O85106C12O85121C20O85106C27O85180C33O85163C37O85196C48O85196C54O85275C56O85291C65O85332C67O85335C75O85335C90O85323C95O85347,,
code-creation,LazyCompile,10,185358,0x334da65b8eae,121,3915 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:93228,0x224cfd0e3e40,~
code-source-info,0x334da65b8eae,130,93302,94151,C0O93302C9O93323C13O93330C24O93345C29O93330C42O93415C48O93395C57O93442C66O93449C115O93472C120O94150,,
code-creation,LazyCompile,10,185511,0x334da65b9556,379,1465 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:94083,0x224cfd0e3ec8,~
code-source-info,0x334da65b
code-creation,LazyCompile,10,185660,0x334da65b9fb6,252,9597 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96803,0x224cfd0e40e8,~
code-source-info,0x334da65b9fb6,130,96877,98483,C0O96877C17O96904C21O96915C27O96933C31O96940C47O96904C49O97212C53O97223C59O97244C63O97251C79O97212C81O97362C85O97373C96O97546C100O97553C108O97568C116O97553C122O97606C126O97622C131O97622C135O97622C137O97632C142O97632C146O97632C148O97642C153O97642C157O97642C159O97652C164O97654C169O97652C173O97652C228O98426C230O98437C238O98456C246O98478C251O98482,,
code-creation,LazyCompile,10,185753,0x334da65ba43e,18,2037 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98975,0x224cfd0e46e0,~
code-source-info,0x334da65ba43e,130,99049,99090,C0O99066C8O99076C12O99075C17O99089,,
tick,0xd07590,185880,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x334da65ba446,0x7f406004833c,0x334da65ba04f,0x7f406004833c,0x334da65b95f6,0x7f406004833c,0x224cfd0e8444,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,186092,0x334da65baf36,5, node:os:1:1,0x334da65babe0,~
script-source,177,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  SymbolToPrimitive\x2C\n} = primordials;\n\nconst { safeGetenv } = internalBinding('credentials');\nconst constants = internalBinding('constants').os;\nconst isWindows = process.platform === 'win32';\n\nconst {\n  codes: {\n    ERR_SYSTEM_ERROR\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { validateInt32 } = require('internal/validators');\n\nconst {\n  getCPUs\x2C\n  getFreeMem\x2C\n  getHomeDirectory: _getHomeDirectory\x2C\n  getHostname: _getHostname\x2C\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\n  getLoadAvg\x2C\n  getPriority: _getPriority\x2C\n  getOSInformation: _getOSInformation\x2C\n  getTotalMem\x2C\n  getUserInfo\x2C\n  getUptime\x2C\n  isBigEndian\x2C\n  setPriority: _setPriority\n} = internalBinding('os');\n\nfunction getCheckedFunction(fn) {\n  return hideStackFrames(function checkError(...args) {\n    const ctx = {};\n    const ret = fn(...args\x2C ctx);\n    if (ret === undefined) {\n      throw new ERR_SYSTEM_ERROR(ctx);\n    }\n    return ret;\n  });\n}\n\nconst {\n  0: type\x2C\n  1: version\x2C\n  2: release\x2C\n} = _getOSInformation();\n\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\nconst getHostname = getCheckedFunction(_getHostname);\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\n/**\n * @returns {string}\n */\nconst getOSRelease = () => release;\n/**\n * @returns {string}\n */\nconst getOSType = () => type;\n/**\n * @returns {string}\n */\nconst getOSVersion = () => version;\n\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\ngetHostname[SymbolToPrimitive] = () => getHostname();\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\ngetOSType[SymbolToPrimitive] = () => getOSType();\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\ngetUptime[SymbolToPrimitive] = () => getUptime();\n\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\n\nconst avgValues = new Float64Array(3);\n\n/**\n * @returns {[number\x2C number\x2C number]}\n */\nfunction loadavg() {\n  getLoadAvg(avgValues);\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\n}\n\n/**\n * Returns an array of objects containing information about each\n * logical CPU core.\n *\n * @returns {Array<{\n *  model: string\x2C\n *  speed: number\x2C\n *  times: {\n *    user: number\x2C\n *    nice: number\x2C\n *    sys: number\x2C\n *    idle: number\x2C\n *    irq: number\x2C\n *  }\x2C\n * }>}\n */\nfunction cpus() {\n  // [] is a bugfix for a regression introduced in 51cea61\n  const data = getCPUs() || [];\n  const result = [];\n  let i = 0;\n  while (i < data.length) {\n    ArrayPrototypePush(result\x2C {\n      model: data[i++]\x2C\n      speed: data[i++]\x2C\n      times: {\n        user: data[i++]\x2C\n        nice: data[i++]\x2C\n        sys: data[i++]\x2C\n        idle: data[i++]\x2C\n        irq: data[i++]\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * @returns {string}\n */\nfunction arch() {\n  return process.arch;\n}\narch[SymbolToPrimitive] = () => process.arch;\n\n/**\n * @returns {string}\n */\nfunction platform() {\n  return process.platform;\n}\nplatform[SymbolToPrimitive] = () => process.platform;\n\n/**\n * @returns {string}\n */\nfunction tmpdir() {\n  let path;\n  if (isWindows) {\n    path = process.env.TEMP ||\n           process.env.TMP ||\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\n  } else {\n    path = safeGetenv('TMPDIR') ||\n           safeGetenv('TMP') ||\n           safeGetenv('TEMP') ||\n           '/tmp';\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\n  }\n\n  return path;\n}\ntmpdir[SymbolToPrimitive] = () => tmpdir();\n\n/**\n * @returns {'BE' | 'LE'}\n */\nfunction endianness() {\n  return kEndianness;\n}\nendianness[SymbolToPrimitive] = () => kEndianness;\n\n// Returns the number of ones in the binary representation of the decimal\n// number.\nfunction countBinaryOnes(n) {\n  // Count the number of bits set in parallel\x2C which is faster than looping\n  n = n - ((n >>> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction getCIDR(address\x2C netmask\x2C family) {\n  let ones = 0;\n  let split = '.';\n  let range = 10;\n  let groupLength = 8;\n  let hasZeros = false;\n\n  if (family === 'IPv6') {\n    split = ':';\n    range = 16;\n    groupLength = 16;\n  }\n\n  const parts = StringPrototypeSplit(netmask\x2C split);\n  for (let i = 0; i < parts.length; i++) {\n    if (parts[i] !== '') {\n      const binary = NumberParseInt(parts[i]\x2C range);\n      const tmp = countBinaryOnes(binary);\n      ones += tmp;\n      if (hasZeros) {\n        if (tmp !== 0) {\n          return null;\n        }\n      } else if (tmp !== groupLength) {\n        if ((binary & 1) !== 0) {\n          return null;\n        }\n        hasZeros = true;\n      }\n    }\n  }\n\n  return `${address}/${ones}`;\n}\n\n/**\n * @returns {Record<string\x2C Array<{\n *  address: string\x2C\n *  netmask: string\x2C\n *  family: 'IPv4' | 'IPv6'\x2C\n *  mac: string\x2C\n *  internal: boolean\x2C\n *  scopeid: number\x2C\n *  cidr: string | null\x2C\n * }>>}\n */\nfunction networkInterfaces() {\n  const data = getInterfaceAddresses();\n  const result = {};\n\n  if (data === undefined)\n    return result;\n  for (let i = 0; i < data.length; i += 7) {\n    const name = data[i];\n    const entry = {\n      address: data[i + 1]\x2C\n      netmask: data[i + 2]\x2C\n      family: data[i + 3]\x2C\n      mac: data[i + 4]\x2C\n      internal: data[i + 5]\x2C\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\n    };\n    const scopeid = data[i + 6];\n    if (scopeid !== -1)\n      entry.scopeid = scopeid;\n\n    const existing = result[name];\n    if (existing !== undefined)\n      ArrayPrototypePush(existing\x2C entry);\n    else\n      result[name] = [entry];\n  }\n\n  return result;\n}\n\n/**\n * @param {number} [pid=0]\n * @param {number} priority\n * @returns {void}\n */\nfunction setPriority(pid\x2C priority) {\n  if (priority === undefined) {\n    priority = pid;\n    pid = 0;\n  }\n\n  validateInt32(pid\x2C 'pid');\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\n\n  const ctx = {};\n\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\n    throw new ERR_SYSTEM_ERROR(ctx);\n}\n\n/**\n * @param {number} [pid=0]\n * @returns {number}\n */\nfunction getPriority(pid) {\n  if (pid === undefined)\n    pid = 0;\n  else\n    validateInt32(pid\x2C 'pid');\n\n  const ctx = {};\n  const priority = _getPriority(pid\x2C ctx);\n\n  if (priority === undefined)\n    throw new ERR_SYSTEM_ERROR(ctx);\n\n  return priority;\n}\n\n/**\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\n * be `Buffer` instances.\n * @returns {{\n *   uid: number\x2C\n *   gid: number\x2C\n *   username: string\x2C\n *   homedir: string\x2C\n *   shell: string | null\x2C\n * }}\n */\nfunction userInfo(options) {\n  if (typeof options !== 'object')\n    options = null;\n\n  const ctx = {};\n  const user = getUserInfo(options\x2C ctx);\n\n  if (user === undefined)\n    throw new ERR_SYSTEM_ERROR(ctx);\n\n  return user;\n}\n\nmodule.exports = {\n  arch\x2C\n  cpus\x2C\n  endianness\x2C\n  freemem: getFreeMem\x2C\n  getPriority\x2C\n  homedir: getHomeDirectory\x2C\n  hostname: getHostname\x2C\n  loadavg\x2C\n  networkInterfaces\x2C\n  platform\x2C\n  release: getOSRelease\x2C\n  setPriority\x2C\n  tmpdir\x2C\n  totalmem: getTotalMem\x2C\n  type: getOSType\x2C\n  userInfo\x2C\n  uptime: getUptime\x2C\n  version: getOSVersion\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n\n  EOL: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: isWindows ? '\\r\\n' : '\\n'\n  }\x2C\n\n  devNull: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\n  }\n});\n
code-source-info,0x334da65baf36,177,0,9145,C0O0C4O9145,,
code-creation,Function,10,186530,0x334da65bc0ee,823, node:os:1:1,0x334da65baeb0,~
code-source-info,0x334da65bc0ee
code-creation,LazyCompile,10,186807,0x334da65be366,26,getCheckedFunction node:os:63:28,0x334da65baf68,~
code-source-info,0x334da65be366,177,2035,2249,C0O2035C9O2044C21O2051C25O2247,,
tick,0xe6d82a,186973,0,0x0,0,0x11e69b0,0x334da65bc351,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x334da65ba446,0x7f406004833c,0x334da65ba04f,0x7f406004833c,0x334da65b95f6,0x7f406004833c,0x224cfd0e8444,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,187085,0x334da65bf6de,119,n /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:97321,0x334da65b9b10,~
code-source-info,0x334da65bf6de,130,97395,97545,C0O97399C4O97407C10O97418C12O97427C13O97433C15O97436C20O97460C33O97455C46O97455C47O97462C52O97471C58O97477C62O97484C67O97494C72O97509C77O97509C97O97520C105O97447C108O97529C111O97536C118O97544,,
code-creation,LazyCompile,10,187187,0x334da65bf976,122,s /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96881,0x334da65b99c8,~
code-source-info,0x334da65bf976,130,96955,97161,C0O96955C13O96965C22O96989C26O96996C37O96996C44O97026C51O97036C59O97044C66O97057C72O97069C84O97106C97O97132C101O97139C115O97139C121O97160,,
code-creation,LazyCompile,10,187303,0x334da65bff1e,33,o /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:97192,0x334da65b9a70,~
code-source-info,0x334da65bff1e,130,97266,97331,C0O97272C4O97279C12O97294C19O97327C26O97279C32O97330,,
new,MemoryChunk,0xa9718740000,262144
code-creation,LazyCompile,10,187492,0xa971874132e,66,8745 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96156,0x224cfd0e3f50,~
code-source-info,0xa971874132e,130,96230,96419,C0O96230C9O96251C13O96258C24O96273C29O96258C38O96318C45O96326C50O96362C60O96344C65O96418,,
code-creation,LazyCompile,10,187586,0xa97187414ee,93,3783 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96351,0x224cfd0e3fd8,~
code-source-info,0xa97187414ee,130,96425,96686,C0O96448C4O96455C12O96470C20O96455C27O96535C33O96520C37O96551C42O96551C47O96579C60O96584C65O96573C69O96646C82O96651C87O96640C92O96685,,
code-creation,LazyCompile,10,187671,0xa971874168e,118,join node:path:1166:7,0x3e83b617c5f8,~
code-source-info,0xa971874168e,41,35666,36076,C0O35666C3O35691C9O35698C14O35711C16O35722C17O35731C19O35756C21O35768C25O35761C30O35801C32O35805C36O35816C44O35816C49O35859C55O35866C60O35881C64O35917C71O35954C76O35968C87O35778C92O35743C95O35993C99O36025C101O36036C102O36041C107O36054C112O36054C117O36072,,
code-creation,LazyCompile,10,187750,0xa971874187e,159,normalize node:path:1127:12,0x3e83b617c558,~
code-source-info,0xa971874187e,41,34766,35370,C0O34779C8O34779C13O34823C19O34830C24O34843C26O34854C27O34885C34O34885C42O34924C44O34920C48O34980C53O35017C57O35024C61O34980C69O35033C71O35029C75O35084C80O35114C91O35091C98O35168C104O35175C109O35190C113O35214C115O35225C116O35232C126O35270C127O35281C131O35310C141O35328C150O35352C158O35366,,
code-creation,LazyCompile,10,187860,0xa9718741b36,59,1446 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96618,0x224cfd0e4060,~
code-source-info,0xa9718741b36,130,96692,96863,C0O96692C8O96715C12O96722C20O96737C28O96722C34O96780C38O96796C43O96796C47O96796C49O96804C53O96820C58O96862,,
code-creation,LazyCompile,10,187937,0xa9718741e5e,8,t.BootloaderEnvironment /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:93416,0x334da65b88c8,~
code-source-info,0xa9718741e5e,130,93490,93512,C0O93494C2O93509C7O93511,,
code-creation,LazyCompile,10,188012,0xa971874209e,84,get inspectorOptions /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:93609,0x334da65b8a60,~
code-source-info,0xa971874209e,130,93683,93847,C0O93699C5O93710C10O93735C12O93741C13O93748C14O93758C22O93766C27O93758C33O93784C43O93785C49O93800C54O93809C58O93821C63O93821C68O93829C80O93839C81O93845C83O93846,,
tick,0x7f40773a70af,188120,0,0x0,3,0x11d7ee0,0x224cfd0e889b,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,188180,0xa9718742206,5, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:93717,0xa9718741fa0,~
code-source-info,0xa9718742206,130,93791,93797,C0O93794C4O93797,,
code-creation,LazyCompile,10,188271,0xa97187423fe,36,info /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96288,0xa9718741178,~
code-source-info,0xa97187423fe,130,96362,96417,C0O96362C3O96371C6O96373C11O96390C17O96399C21O96407C29O96407C35O96416,,
code-creation,LazyCompile,10,188365,0xa97187425e6,39,checkAll /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96088,0x334da65b93a0,~
code-source-info,0xa97187425e6,130,96162,96197,C0O96162C9O96168C19O96171C22O96181C32O96181C38O96197,,
code-creation,LazyCompile,10,188416,0xa97187426fe,9, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96113,0xa9718742530,~
code-source-info,0xa97187426fe,130,96187,96195,C0O96190C3O96191C8O96195,,
code-creation,LazyCompile,10,188441,0xa971874280e,64,checkIsNotNodeGyp /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:95752,0x334da65b9350,~
code-source-info,0xa971874280e,130,95826,95924,C0O95833C6O95847C10O95855C15O95860C22O95866C32O95890C35O95897C40O95907C44O95915C51O95919C55O95906C59O95884C63O95924,,
code-creation,LazyCompile,10,188479,0xa9718742996,42,checkIsDebugMode /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:94527,0x334da65b91c0,~
code-source-info,0xa9718742996,130,94601,94719,C0O94626C5O94613C15O94629C18O94638C23O94655C34O94655C41O94719,,
code-creation,LazyCompile,10,188502,0xa9718742ade,61,checkLeaseFile /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:94709,0x334da65b9210,~
code-source-info,0xa9718742ade,130,94783,94949,C0O94797C5O94810C9O94822C12O94835C17O94845C22O94845C32O94858C35O94867C40O94884C51O94884C60O94948,,
code-creation,LazyCompile,10,188557,0xa9718742c9e,88,checkNotElectron /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:94937,0x334da65b9260,~
code-source-info,0xa9718742c9e,130,95011,95153,C3O95020C42O95027C48O95042C51O95051C56O95068C67O95068C74O95133C86O95143C87O95151,,
code-creation,Eval,10,188594,0xa9718742e9e,5, :1:1,0xa9718742dd0,~
script-source,178,<unknown>,window
code-source-info,0xa9718742e9e,178,0,6,C0O0C4O6,,
code-creation,LazyCompile,10,188691,0xa97187430fe,181,checkProcessFilter /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:95147,0x334da65b92b0,~
code-source-info,0xa97187430fe,130,95221,95524,C0O95229C2O95233C8O95240C16O95242C21O95267C26O95276C30O95284C37O95288C41O95268C50O95241C60O95302C64O95312C71O95316C80O95324C84O95339C95O95326C101O95360C106O95360C115O95325C125O95377C129O95382C135O95392C138O95401C143O95418C159O95491C169O95518C173O95418C180O95523,,
code-creation,LazyCompile,10,188775,0xa97187433ce,35,3121 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98415,0x224cfd0e4218,~
code-source-info,0xa97187433ce,130,98489,98635,C0O98489C5O98587C9O98593C15O98610C23O98617C29O98632C34O98634,,
code-creation,LazyCompile,10,188855,0xa971874357e,36,t /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:98429,0xa9718743288,~
code-source-info,0xa971874357e,130,98503,98587,C0O98513C9O98545C15O98547C21O98513C27O98553C29O98565C35O98553,,
code-creation,LazyCompile,10,188965,0xa97187436be,75,checkNotNpmPrefixCheckOnWindows /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:95535,0x334da65b9300,~
code-source-info,0xa97187436be,130,95609,95729,C0O95622C4O95630C9O95635C12O95649C16O95644C26O95675C29O95682C36O95693C40O95691C44O95669C54O95711C57O95707C67O95724C70O95720C74O95728,,
code-creation,LazyCompile,10,189039,0xa971874380e,18,1267 /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:99267,0x224cfd0e4a10,~
code-source-info,0xa971874380e,130,99341,99394,C0O99358C8O99368C12O99367C17O99393,,
tick,0xf7f2f1,189191,0,0x0,0,0xd5efa0,0xa97187420dd,0x224cfd0e8b5e,0x224cfd0e8950,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,189258,0xa9718743afe,32,t.createTargetId /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96747,0xa9718741a00,~
code-source-info,0xa9718743afe,130,96821,96862,C0O96847C5O96830C13O96842C18O96846C26O96847C31O96862,,
code-creation,LazyCompile,10,189390,0xa9718743c8e,130,randomBytes node:internal/crypto/random:93:21,0x3f792a6c9a20,~
code-source-info,0xa9718743c8e,150,1996,2507,C0O1996C12O2017C22O2047C29O2024C36O2060C40O2094C50O2094C54O2141C63O2141C68O2141C70O2166C74O2200C82O2219C92O2200C97O2241C99O2252C100O2328C108O2343C115O2354C123O2328C129O2506,,
code-creation,LazyCompile,10,189478,0xa971874511e,131,assertSize node:internal/crypto/random:77:20,0x3f792a6c99d0,~
code-source-info,0xa971874511e,150,1532,1974,C0O1572C8O1572C13O1604C15O1612C23O1628C28O1632C36O1660C38O1658C44O1687C49O1698C62O1778C74O1704C79O1698C80O1814C82O1823C88O1832C93O1848C106O1898C113O1913C119O1854C124O1848C125O1931C127O1943C130O1949,,
code-creation,LazyCompile,10,189584,0xa9718745356,190,randomFillSync node:internal/crypto/random:113:24,0x3f792a6c9a98,~
code-source-info,0xa9718745356,150,2532,3177,C16O2560C21O2565C29O2591C32O2591C38O2621C56O2627C61O2621C62O2751C71O2778C74O2825C85O2787C91O2841C95O2882C102O2893C108O2918C111O2967C125O2925C131O2987C132O2996C137O3007C139O3018C140O3034C147O3058C161O3034C167O3125C172O3125C178O3130C182O3137C184O3150C186O3150C187O3164C189O3175,,
code-creation,LazyCompile,10,189663,0xa971874556e,98,assertOffset node:internal/crypto/random:65:22,0x3f792a6c9980,~
code-source-info,0xa971874556e,150,1166,1511,C0O1200C8O1200C13O1236C15O1246C23O1280C30O1296C33O1280C39O1319C44O1323C52O1353C58O1375C63O1386C76O1437C86O1392C91O1386C92O1466C94O1480C97O1486,,
code-creation,LazyCompile,10,189788,0xa97187456ce,12,slice node:buffer:675:12,0x1d49834b6368,~
code-source-info,0xa97187456ce,24,19772,19817,C0O19797C5O19797C11O19817,,
code-creation,LazyCompile,10,189944,0xa9718745f9e,576, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91065,0x224cfd0e85f0,~
code-source-info,0xa9718745f9e
code-creation,LazyCompile,10,190005,0xa97187463f6,35, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91349,0xa9718745b08,~
code-source-info,0xa97187463f6,130,91423,91741,C0O91436C21O91465C22O91474C23O91486C28O91719C32O91723C33O91731C34O91739,,
code-creation,LazyCompile,10,190039,0xa97187465f6,81, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91087,0xa9718745ab8,~
code-source-info,0xa97187465f6,130,91161,91262,C0O91165C4O91171C5O91180C9O91184C14O91193C21O91205C24O91207C29O91207C35O91193C41O91218C48O91228C51O91230C56O91230C62O91219C67O91242C79O91252C80O91260,,
code-creation,LazyCompile,10,190100,0xa9718746726,9,get /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:89533,0x2a1384e05b00,~
code-source-info,0xa9718746726,130,89607,89622,C0O89610C5O89618C8O89621,,
code-creation,LazyCompile,10,190183,0xa97187468a6,115,readdirSync node:fs:1435:21,0x456f10ba958,~
code-source-info,0xa97187468a6,83,36531,36933,C0O36551C5O36561C11O36584C16O36591C22O36629C29O36631C36O36656C41O36664C48O36672C51O36683C56O36683C62O36748C67O36768C79O36664C85O36835C90O36835C94O36881C102O36897C105O36897C114O36931,,
tick,0xb07f21,190336,1,0xb14260,6,0xd3aa20,0xa97187468f5,0xa9718746619,0xa9718745fa8,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,190496,0xa9718746ab6,29, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91427,0xa9718746338,~
code-source-info,0xa9718746ab6,130,91501,91719,C0O91513C4O91521C11O91525C15O91529C23O91713C28O91718,,
code-creation,LazyCompile,10,190586,0xa9718746cee,94, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91473,0xa9718746a08,~
code-source-info,0xa9718746cee,130,91547,91713,C0O91563C10O91578C13O91580C25O91592C38O91592C48O91618C53O91629C63O91629C68O91629C78O91588C84O91703C90O91710C93O91712,,
code-creation,LazyCompile,10,190650,0xa9718746e86,32, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91560,0xa9718746b98,~
code-source-info,0xa9718746e86,130,91634,91680,C0O91639C7O91647C10O91649C17O91664C20O91666C25O91639C31O91680,,
code-creation,LazyCompile,10,190779,0xa97187471d6,566,c /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:130,0x2a1384e0e400,~
code-source-info,0xa97187471d6,130,204,818,C0O204C15O214C18O219C23O219C30O215C33O234C38O234C45O250C49O250C54O250C56O260C60O260C66O270C70O270C75O270C77O280C79O284C84O344C86O350C90O347C95O368C108O378C112O370C120O387C127O398C133O368C139O409C144O415C150O426C155O432C160O447C172O467C196O462C226O462C229O476C232O476C238O484C245O490C252O500C260O511C266O515C272O521C278O515C289O532C295O541C301O538C306O551C312O557C318O551C323O454C392O358C397O334C403O581C407O576C414O592C419O599C421O603C431O603C437O626C443O638C447O633C452O646C457O656C461O651C466O665C473O708C482O708C500O671C505O665C506O723C511O733C515O728C525O748C529O743C534O757C537O766C543O777C553O777C562O808C563O809C565O817,,
code-creation,LazyCompile,10,190933,0xa971874790e,410,c /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:30480,0x2a1384e12c68,~
code-source-info,0xa971874790e
code-creation,LazyCompile,10,191014,0xa9718747cbe,45,t.isWindows /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:36165,0x2a1384e14108,~
code-source-info,0xa9718747cbe,130,36239,36303,C0O36242C4O36265C12O36275C22O36288C24O36285C34O36298C37O36300C41O36295C44O36303,,
code-creation,LazyCompile,10,191085,0xa9718747e4e,168,c.makeRe /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:32233,0x2a1384e12fe0,~
code-source-info,0xa9718747e4e,130,32307,32555,C7O32307C33O32328C43O32354C52O32360C57O32354C58O32411C63O32437C65O32450C69O32445C78O32468C81O32464C91O32480C94O32476C102O32495C105O32497C110O32497C117O32494C123O32515C131O32526C134O32526C142O32534C145O32536C162O32536C167O32554,,
tick,0x124c294,191410,0,0x0,2,0x11d7ee0,0xa9718747ed4,0xa9718747a31,0xa971874725b,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,191850,0xa9718749a0e,10799,h /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:18835,0x2a1384e15830,~
code-source-info,0xa9718749a0e
code-creation,LazyCompile,10,192268,0xa971874d3b6,20,globChars /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:18382,0x2a1384e14968,~
code-source-info,0xa971874d3b6,130,18456,18469,C0O18459C4O18461C11O18466C17O18468C19O18469,,
code-creation,LazyCompile,10,192367,0xa971874d6a6,40,extglobChars /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:18149,0x2a1384e14898,~
code-source-info,0xa971874d6a6,130,18223,18445,C0O18227C5O18232C13O18277C39O18445,,
tick,0xe702c7,192479,0,0x0,0,0x11e69b0,0xa971874d6a6,0xa9718749b8d,0xa9718747ed4,0xa9718747a31,0xa971874725b,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,192552,0xa971874d87e,57,t.removePrefix /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:36380,0x2a1384e14228,~
code-source-info,0xa971874d87e,130,36454,36531,C7O36454C13O36471C16O36482C24O36482C31O36505C39O36505C48O36522C56O36530,,
scavenge,begin,0,149352,1663277511743
new,MemoryChunk,0x35967300000,262144
new,MemoryChunk,0x1c8aa8c00000,262144
new,MemoryChunk,0x3eeb8b180000,262144
tick,0x10aabe7,193626,0,0x0,1
new,MemoryChunk,0x3b7ada440000,262144
scavenge,end,0,150995,1663277511744
code-creation,LazyCompile,10,194334,0xa971874dbc6,21,G /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19782,0xa9718748210,~
code-source-info,0xa971874dbc6,130,19856,19873,C0O19867C5O19862C12O19870C14O19871C17O19867C20O19873,,
code-creation,LazyCompile,10,194422,0xa971874dcc6,29,M.advance /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19841,0xa97187482e0,~
code-source-info,0xa971874dcc6,130,19915,19935,C0O19931C5O19923C15O19925C21O19920C28O19935,,
code-creation,LazyCompile,10,194544,0xa971874de86,452,Z /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:20155,0xa9718748548,~
code-source-info,0xa971874de
code-creation,LazyCompile,10,194640,0xa971874e20e,50,Q /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19930,0xa9718748408,~
code-source-info,0xa971874e20e,130,20004,20061,C0O20008C10O20026C17O20035C23O20044C30O20016C36O20050C39O20054C44O20050C49O20060,,
tick,0x7f40773a70af,194838,0,0x0,3,0x11d7ee0,0xa971874dfcd,0xa971874ad9c,0xa9718747ed4,0xa9718747a31,0xa971874725b,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,194959,0xa971874e336,61,V /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19889,0xa97187483b8,~
code-source-info,0xa971874e336,130,19963,20001,C21O19976C33O19988C36O19986C42O19990C52O19999C55O19997C60O20000,,
code-creation,LazyCompile,10,195069,0xa971874e466,27,K /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19864,0xa9718748368,~
code-source-info,0xa971874e466,130,19938,19960,C0O19944C3O19944C10O19950C13O19952C17O19957C21O19944C26O19960,,
code-creation,RegExp,3,195232,0x7f406004a760,980,^[^@![\\].\x2C$*+?^{}()|\\\\/]+
code-creation,Function,11,195329,0x7f406004aba0,248,M.advance /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19841,0xa97187482e0,^
code-source-info,0x7f406004aba0,130,19915,19935,,,
code-creation,Function,11,195407,0x7f406004ad00,352,hideStackFrames node:internal/errors:398:25,0x2ac221066a48,^
code-source-info,0x7f406004ad00,11,11052,11293,,,
code-creation,Function,11,195466,0x7f406004aec0,908,s /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:96881,0x334da65b99c8,^
code-source-info,0x7f406004aec0,130,96955,97161,,,
code-creation,Function,11,195524,0x7f406004b2c0,916,n /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:97321,0x334da65b9b10,^
code-source-info,0x7f406004b2c0,130,97395,97545,,,
code-creation,Function,11,195577,0x7f406004b6c0,96,get node:internal/bootstrap/pre_execution:413:8,0xa26aaaebf8,^
code-source-info,0x7f406004b6c0,100,13112,13145,,,
code-creation,Function,11,195588,0x7f406004b780,232,G /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19782,0xa9718748210,^
code-source-info,0x7f406004b780,130,19856,19873,,,
code-creation,LazyCompile,10,195703,0xa971874ec8e,33,M.peek /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19809,0xa9718748260,~
code-source-info,0xa971874ec8e,130,19883,19902,C11O19891C16O19892C19O19894C26O19899C29O19891C32O19902,,
code-creation,RegExp,3,195792,0x7f406004b8e0,800,^\\([^?]
tick,0x7f40773a70af,195869,0,0x0,0,0x11f4560,0x162f8ee,0xa971874b5b5,0xa9718747ed4,0xa9718747a31,0xa971874725b,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,195935,0xa971874edf6,54,P /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19383,0xa97187481c0,~
code-source-info,0xa971874edf6,130,19457,19495,C0O19460C5O19464C20O19474C27O19480C35O19484C41O19486C53O19495,,
code-creation,LazyCompile,10,196068,0xa971874ef6e,172,c.compileRe /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:32004,0x2a1384e12f50,~
code-source-info,0xa971874ef6e,130,32078,32297,C26O32096C30O32101C35O32115C39O32122C40O32130C46O32140C59O32160C72O32182C82O32194C99O32204C104O32208C110O32218C114O32213C124O32237C135O32254C140O32256C145O32256C152O32269C156O32277C163O32291C171O32296,,
code-creation,LazyCompile,10,196152,0xa971874f1ae,77,c.toRegex /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:32492,0x2a1384e13060,~
code-source-info,0xa971874f1ae,130,32566,32688,C3O32586C9O32592C13O32614C22O32624C37O32599C42O32639C54O32649C60O32662C64O32657C69O32668C71O32668C72O32676C76O32686,,
code-creation,LazyCompile,10,196295,0xa971874f46e,292,h /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:30993,0xa97187477b8,~
code-source-info,0xa971874f46e,130,31067,31416,C13O31112C20O31114C27O31121C34O31123C46O31131C54O31139C63O31114C69O31092C74O31100C79O31109C84O31145C93O31151C101O31159C109O31167C117O31175C125O31183C131O31192C137O31200C143O31210C150O31213C155O31240C165O31250C168O31252C173O31252C182O31266C188O31281C194O31287C204O31293C207O31293C215O31318C218O31320C228O31330C231O31332C236O31332C242O31353C248O31359C258O31385C261O31387C271O31396C274O31398C279O31398C286O31410C291O31415,,
code-creation,LazyCompile,10,196433,0xa971874fb6e,259,c.test /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:31375,0x2a1384e12cb8,~
code-source-info,0xa971874fb6e,130,31449,31837,C13O31449C19O31462C24O31470C29O31479C35O31501C44O31507C49O31501C50O31554C55O31559C60O31564C64O31593C65O31601C71O31611C79O31620C83O31622C86O31624C94O31651C96O31652C100O31659C104O31662C106O31664C115O31671C119O31679C126O31688C128O31690C139O31700C147O31708C155O31721C159O31716C167O31740C171O31735C178O31758C182O31753C189O31767C192O31769C209O31769C216O31790C221O31790C227O31732C232O31808C236O31808C246O31825C252O31834C258O31836,,
code-creation,LazyCompile,10,196638,0xa971874fdd6,48,c /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:210,0xa9718746f68,~
code-source-info,0xa971874fdd6,130,284,333,C0O288C5O290C10O296C15O290C22O304C27O309C36O321C41O321C47O332,,
code-creation,LazyCompile,10,196706,0xa971874fece,2,p /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:30893,0xa9718747768,~
code-source-info,0xa971874fece,130,30967,30973,C0O30971C1O30973,,
code-creation,RegExp,3,196836,0x7f406004bc60,1220,(^[*!]|[/()[\\]{}"])
tick,0x7f4077333201,196966,0,0x0,2,0x11d7ee0,0xa971874b216,0xa9718747ed4,0xa9718747a31,0xa971874725b,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,197070,0xa9718750246,130,z /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19990,0xa9718748458,~
code-source-info,0xa9718750246,130,20064,20180,C0O20075C3O20091C8O20088C11O20088C14O20085C24O20100C30O20100C34O20097C44O20112C50O20112C54O20109C59O20119C64O20119C69O20123C78O20130C87O20077C90O20137C92O20145C97O20147C105O20153C109O20162C115O20166C124O20173C129O20179,,
code-creation,LazyCompile,10,197547,0xa9718750736,427,h.fastpaths /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:29327,0x2a1384e15880,~
code-source-info,0xa
code-creation,LazyCompile,10,197676,0xa9718750bfe,519,R /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:29831,0xa9718750540,~
code-source-info,0xa9718750bfe
code-creation,LazyCompile,10,197850,0xa9718751026,33,X /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:20109,0xa97187484a8,~
code-source-info,0xa9718751026,130,20183,20204,C0O20187C7O20189C12O20191C18O20194C21O20196C26O20196C32O20203,,
code-creation,Function,11,198064,0x7f406004c1a0,3828,Z /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:20155,0xa9718748548,^
code-source-info,0x7f406004c1a0,130,20229,20731,,,
tick,0xe75333,198137,0,0x0,0,0x11e14a0,0xa971874e049,0xa971874abab,0xa9718747ed4,0xa9718747a31,0xa971874725b,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,11,198185,0x7f406004d100,452,V /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19889,0xa97187483b8,^
code-source-info,0x7f406004d100,130,19963,20001,,,
code-creation,Function,11,198250,0x7f406004d340,448,Q /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19930,0xa9718748408,^
code-source-info,0x7f406004d340,130,20004,20061,,,
code-creation,Function,11,198405,0x7f406004d560,224,K /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:19864,0xa9718748368,^
code-source-info,0x7f406004d560,130,19938,19960,,,
code-creation,LazyCompile,10,198629,0xa971875166e,32,Y /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:20133,0xa97187484f8,~
code-source-info,0xa971875166e,130,20207,20226,C0O20211C7O20213C12O20215C18O20218C21O20220C26O20220C31O20225,,
tick,0x11b7d2d,199151,0,0x0,0,0x11f4560,0x1624e3e,0xa971874fc4b,0xa971874f4ad,0xa97187472be,0xa9718746d3c,0xa9718746acd,0xa9718746412,0xa9718746007,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,199359,0xa97187517a6,17, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:537,0xa9718746fb8,~
code-source-info,0xa97187517a6,130,611,623,C0O614C5O617C10O617C16O623,,
code-creation,LazyCompile,10,199446,0xa971875192e,44, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:91695,0xa9718745b40,~
code-source-info,0xa971875192e,130,91769,91875,C0O91779C6O91799C7O91808C11O91812C16O91823C26O91840C30O91855C42O91865C43O91873,,
code-creation,LazyCompile,10,199539,0xa9718751a7e,152,t.findOpenPortSync /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:84313,0x2a1384e16528,~
code-source-info,0xa9718751a7e,130,84387,84581,C4O84387C10O84393C23O84404C36O84420C47O84439C52O84439C56O84449C61O84454C66O84468C72O84484C76O84489C83O84496C87O84489C94O84501C95O84501C100O84513C106O84518C108O84527C109O84527C111O84534C114O84530C125O84540C129O84506C134O84474C137O84543C146O84549C151O84543,,
code-creation,LazyCompile,10,199632,0xa9718751d6e,48,i /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:84516,0x2a1384e165b8,~
code-source-info,0xa9718751d6e,130,84590,85071,C0O84590C11O84603C15O84603C17O84873C20O84883C24O84891C28O84880C37O84900C41O84873C43O85056C47O85070,,
code-creation,LazyCompile,10,199690,0xa9718751f06,41,t.randomInRange /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:88962,0x2a1384e168c8,~
code-source-info,0xa9718751f06,130,89036,89076,C0O89045C4O89050C9O89056C13O89061C18O89061C25O89072C28O89069C32O89050C37O89044C40O89076,,
code-creation,LazyCompile,10,199752,0xa971875201e,10, /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:84989,0xa9718751ca0,~
code-source-info,0xa971875201e,130,85063,85070,C0O85066C5O85066C9O85070,,
code-creation,LazyCompile,10,199812,0xa971875218e,91,t /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:84828,0xa9718751c50,~
code-source-info,0xa971875218e,130,84902,85055,C0O84920C7O84925C27O84959C35O84935C41O84971C44O85001C58O85029C62O84985C69O85039C74O85038C83O85048C87O85043C90O85054,,
code-creation,LazyCompile,10,199920,0xa9718752436,358,spawnSync node:child_process:783:19,0x224cfd0ea1a8,~
code-source-info,0xa
code-creation,LazyCompile,10,200155,0xa9718752d76,1133,normalizeSpawnArguments node:child_process:517:33,0x224cfd0ea088,~
code-source-info,0xa9718752d76,131,13255,17624,C0O13281C8O13281C13O13323C19O13330C24O13341C41O13347C46O13341C47O13410C52O13414C58O13440C63O13447C71O13483C76O13507C82O13527C88O13563C104O13569C109O13563C110O13634C113O13654C117O13672C121O13703C129O13738C137O13738C142O13795C147O13838C150O13861C158O13867C164O13960C171O13984C176O14008C184O13984C189O14093C198O14109C201O14125C206O14109C212O14137C223O14200C231O14143C236O14137C237O14260C246O14276C249O14292C254O14276C260O14304C271O14367C279O14310C284O14304C285O14429C292O14467C300O14511C308O14537C321O14651C329O14543C334O14537C335O14711C342O14732C347O14755C355O14732C360O14838C367O14865C372O14889C380O14865C385O14991C390O15031C393O15075C401O15075C406O15193C412O15222C426O15242C432O15251C433O15251C493O15222C499O15314C502O15326C509O15335C514O15375C522O15418C530O15444C533O15459C538O15463C548O15537C558O15541C565O15616C578O15646C595O15667C599O15723C609O15737C620O15793C628O15836C636O15854C639O15866C646O15875C651O15898C657O15942C661O15966C671O15980C680O16022C688O16048C693O16084C698O16048C705O16107C710O16107C715O16169C724O16184C729O16208C732O16367C735O16379C740O16383C748O16410C751O16448C762O16410C769O16486C772O16517C777O16521C781O16507C785O16560C788O16634C802O16627C815O16627C816O16645C822O16645C831O16616C834O16686C837O16698C844O16707C856O16872C863O16872C868O16872C870O16891C881O16929C884O16929C895O16901C903O17206C927O17199C957O17199C960O17235C962O17238C966O17249C971O17282C979O17314C991O17321C997O17282C1002O17188C1073O17344C1080O17447C1086O17457C1090O17486C1102O17500C1108O17514C1112O17547C1124O17592C1132O17622,,
tick,0x7f40773a70af,200325,0,0x0,3,0x11d7ee0,0xa971875244f,0xa97187521b1,0xa9718752023,0xa9718751ae2,0xa9718751948,0xa971874601e,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,200475,0xa971875419e,10, node:child_process:55:3,0x224cfd0ea3d8,~
code-source-info,0xa971875419e,131,1865,1894,C0O1879C2O1885C9O1893,,
code-creation,LazyCompile,10,200548,0xa97187542a6,46,validateTimeout node:child_process:921:25,0x224cfd0ea2e8,~
code-source-info,0xa97187542a6,131,24047,24211,C0O24061C7O24086C10O24086C17O24122C22O24135C38O24141C43O24135C45O24210,,
code-creation,LazyCompile,10,200602,0xa9718754416,41,validateMaxBuffer node:child_process:928:27,0x224cfd0ea338,~
code-source-info,0xa9718754416,131,24240,24487,C0O24256C12O24326C17O24339C33O24345C38O24339C40O24486,,
code-creation,LazyCompile,10,200676,0xa9718754596,53,sanitizeKillSignal node:child_process:937:28,0x224cfd0ea388,~
code-source-info,0xa9718754596,131,24517,24853,C0O24534C12O24610C17O24617C21O24650C22O24660C27O24690C45O24696C50O24690C52O24852,,
code-creation,LazyCompile,10,200850,0xa97187547fe,154,getValidStdio node:internal/child_process:974:23,0x224cfd0ee2a8,~
code-source-info,0xa97187547fe,132,27330,30228,C0O27330C15O27352C16O27352C18O27363C19O27363C21O27409C27O27446C32O27454C40O27490C47O27495C53O27522C68O27528C73O27522C74O27806C81O27813C86O27818C95O27818C100O27793C103O27932C110O27961C121O27940C128O30197C135O30206C141O30213C147O30218C153O30226,,
code-creation,LazyCompile,10,200929,0xa9718756d56,119,stdioStringToArray node:internal/child_process:235:28,0x224cfd0edef0,~
code-source-info,0xa9718756d56,132,6143,6531,C0O6180C3O6187C36O6263C53O6263C58O6313C60O6340C76O6340C81O6378C83O6404C96O6410C101O6404C102O6460C106O6473C111O6473C116O6514C118O6529,,
code-creation,LazyCompile,10,201071,0xa97187571ce,628, node:internal/child_process:993:39,0xa97187546c8,~
code-source-info,0xa97187571ce
code-creation,LazyCompile,10,201214,0xa9718757a4e,238,spawnSync node:internal/child_process:1097:19,0x224cfd0ee3c8,~
code-source-info,0xa9718757a4e,132,30771,31420,C0O30800C5O30811C10O30811C16O30841C22O30859C28O30879C35O30888C40O30921C42O30935C47O30942C51O30926C56O30975C63O30981C68O30994C70O31017C75O31036C82O31042C86O31046C91O31063C96O31046C101O31027C105O30951C110O30908C113O31110C122O31127C129O31133C132O31101C136O31163C145O31180C152O31186C155O31154C159O31205C165O31218C167O31233C170O31255C178O31285C182O31275C186O31233C191O31231C195O31303C200O31324C204O31314C208O31341C215O31359C218O31387C226O31359C231O31357C235O31404C237O31418,,
tick,0xd39637,201313,0,0x0,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa97187521b1,0xa9718752023,0xa9718751ae2,0xa9718751948,0xa971874601e,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749e3ca,202565,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa97187521b1,0xa9718752023,0xa9718751ae2,0xa9718751948,0xa971874601e,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,203385,0xa9718757cee,45,inspectorOpen node:inspector:166:23,0x2a1384e07208,~
code-source-info,0xa9718757cee,137,4265,4416,C0O4288C5O4292C10O4311C15O4317C20O4311C21O4362C26O4362C31O4382C35O4396C40O4396C44O4415,,
tick,0x7f4077311842,203552,1,0xc0aef0,6,0xd3aa20,0xa9718757d08,0xa9718746027,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749be8b,205299,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,205864,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,207027,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,208189,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,209222,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,210433,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,211513,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,212740,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,213827,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,214950,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,216055,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,217190,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,218279,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,219325,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,220408,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,221496,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,222652,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,223943,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,224970,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,226088,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,227328,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,228431,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,229614,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,230747,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,231834,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,232903,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,233998,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,235099,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,236270,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,237446,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,238531,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,239751,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,240839,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,242104,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,243156,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,244324,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,245493,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,246659,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,247915,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,248951,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,250126,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,251334,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,252464,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,253659,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,254857,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,256052,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,257217,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,258330,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,259461,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,260615,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,261685,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,262847,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,263993,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,265148,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,266258,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,267431,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,268507,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,269667,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,270755,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,272097,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,273177,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,274279,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,275477,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,276580,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f4077331008,277705,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40773b846e,278860,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f4077424bfb,279959,1,0xbd4f10,6,0xd3aa20,0xa9718757a58,0xa9718752596,0xa971874616b,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,280188,0xa97187587de,23,inspectorWaitForDebugger node:inspector:181:34,0x2a1384e07258,~
code-source-info,0xa97187587de,137,4595,4669,C0O4602C5O4607C10O4630C15O4636C20O4630C22O4668,,
tick,0x7f407749a374,281170,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,282293,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,283412,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,284623,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,285716,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,286955,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,288162,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,289240,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,290361,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,291429,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,292551,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,293587,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,294816,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,295986,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,297234,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,298254,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,299521,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,300633,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,301854,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,303127,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,304138,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,305254,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,306386,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,307542,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,308642,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,309762,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,310879,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,311979,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,313172,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,314363,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,315546,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,316601,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,317791,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,318899,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,320045,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,321174,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,322485,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,323603,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,324921,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,325773,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,326950,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,328101,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,329191,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,330339,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,331458,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,332572,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,333763,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,334895,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,335993,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,337160,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,338424,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,339520,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,340648,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,341703,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,342848,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,344004,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,345114,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,346345,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,347490,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,348565,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,349749,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,350979,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,352153,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,353308,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,354470,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,355625,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,356878,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,357957,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,359235,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,360335,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,361435,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,362580,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,363727,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,365067,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,366151,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,367386,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,368524,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,369605,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,370831,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,371782,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,373090,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,374138,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,375418,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,376527,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,377789,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,378886,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,380038,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,381189,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,382351,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,383482,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,384635,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,385692,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,386905,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,387916,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,389060,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,390259,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,391370,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,392543,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,393589,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,394856,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,395913,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,397137,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,398228,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,399438,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,400558,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,401669,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,402762,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,403987,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,405089,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,406213,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,407378,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,408510,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,409822,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,410850,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,412132,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,413319,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,414403,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,415621,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,416723,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,417844,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,419043,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,420111,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,421427,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,422492,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,423732,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,424894,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,426022,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,427127,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,428336,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,429514,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,430671,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,431885,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,433008,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,434148,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,435311,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,436441,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,437727,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,438852,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,440028,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,441241,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,442315,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,443547,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,444637,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,445757,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,446904,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,447974,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,449172,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,450298,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,451480,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,452676,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,453799,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,454913,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,456061,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,457105,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,458380,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,459462,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,460583,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,461698,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,462854,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,464017,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,465141,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,466331,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,467461,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,468592,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,469725,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,470888,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,471937,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,473104,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,474159,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,475357,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,476473,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,477641,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,478651,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,479840,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,480915,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,482045,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,483238,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,484217,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,485419,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,486471,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,487724,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,488816,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,489986,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,491121,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,492255,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,493421,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,494677,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,495884,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,496937,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,498100,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,499159,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,500251,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,501418,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,502511,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,503685,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,504957,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,506102,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,507265,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,508402,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,509568,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,510766,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,511886,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,513042,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,514108,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,515268,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,516374,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,517488,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,518632,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,519916,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,521005,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,522220,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,523305,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,524508,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,525608,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,526775,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,527934,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,529050,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,530190,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,531303,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,532419,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,533547,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,534781,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,535938,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,537100,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,538288,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,539384,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,540482,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,541726,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,542744,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,543905,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,545011,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,546159,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,547292,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,548437,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,549488,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,550660,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,551826,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,552930,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,554004,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,555093,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,556282,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,557362,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,558521,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,559785,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,560797,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,561903,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,563077,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,564182,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,565300,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,566482,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,567550,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,568711,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,569814,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,570948,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,572133,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,573270,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,574398,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,575517,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,576593,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,577778,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,578928,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,580085,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,581227,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,582458,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,583825,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,585054,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,586270,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,587366,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,588542,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,589740,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,590833,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,592012,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,593164,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,594302,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,595396,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,596691,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,597765,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,598837,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,600346,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,601663,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,602736,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,603984,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,605088,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,606451,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,607539,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,608657,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,609853,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,611007,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,612142,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,613262,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,614430,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,615545,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,616820,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,617964,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,619033,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,620174,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,621496,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,622580,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,624024,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,625030,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,626224,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,627416,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,628358,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,629589,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,630788,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,631840,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,632912,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,634135,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,635268,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,636497,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,637653,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,638804,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,639983,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,641102,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,642285,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,643584,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,644678,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,645848,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,647082,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,648120,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,649460,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,650484,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,651753,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,652766,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,654084,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,655308,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,656444,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,657702,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,658797,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,659896,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,661062,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,662244,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,663431,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,664593,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,665752,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,666916,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,667952,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,669123,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,670360,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,671558,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,672691,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,673851,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,675037,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,676286,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,677386,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,678585,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,679752,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,680950,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,682170,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,683238,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,684451,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,685609,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,686815,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,687938,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,689107,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,690190,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,691398,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,692648,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,693752,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,694965,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,696194,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,697610,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,698783,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,699939,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,701148,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,702320,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,703540,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,704871,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,705870,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,707046,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,708195,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,709294,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,710491,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,711578,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,712721,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,713816,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a376,715028,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,715421,0xa9718759fc6,111,installConsoleExtensions node:internal/util/inspector:26:34,0x3e83b6161208,~
code-source-info,0xa9718759fc6,38,623,1165,C0O663C6O674C7O681C8O708C14O708C19O694C24O767C30O767C35O805C40O848C46O848C51O824C56O916C61O916C67O968C71O983C73O1008C76O1044C81O1044C87O1081C92O1008C97O1006C101O1125C105O1123C110O1164,,
code-creation,LazyCompile,10,715666,0xa971875a186,42,tryGetCwd node:internal/process/execution:31:19,0x456f10a1cf0,~
script-source,81,node:internal/process/execution,'use strict';\n\nconst {\n  globalThis\x2C\n} = primordials;\n\nconst path = require('path');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET\x2C\n    ERR_EVAL_ESM_CANNOT_PRINT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  executionAsyncId\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  afterHooksExist\x2C\n  emitAfter\x2C\n  popAsyncContext\x2C\n} = require('internal/async_hooks');\n\n// shouldAbortOnUncaughtToggle is a typed array for faster\n// communication with JS.\nconst { shouldAbortOnUncaughtToggle } = internalBinding('util');\n\nfunction tryGetCwd() {\n  try {\n    return process.cwd();\n  } catch {\n    // getcwd(3) can fail if the current working directory has been deleted.\n    // Fall back to the directory name of the (absolute) executable path.\n    // It's not really correct but what are the alternatives?\n    return path.dirname(process.execPath);\n  }\n}\n\nfunction evalModule(source\x2C print) {\n  if (print) {\n    throw new ERR_EVAL_ESM_CANNOT_PRINT();\n  }\n  const { loadESM } = require('internal/process/esm_loader');\n  const { handleMainPromise } = require('internal/modules/run_main');\n  return handleMainPromise(loadESM((loader) => loader.eval(source)));\n}\n\nfunction evalScript(name\x2C body\x2C breakFirstLine\x2C print) {\n  const CJSModule = require('internal/modules/cjs/loader').Module;\n  const { kVmBreakFirstLineSymbol } = require('internal/util');\n  const { pathToFileURL } = require('url');\n\n  const cwd = tryGetCwd();\n  const origModule = globalThis.module;  // Set e.g. when called from the REPL.\n\n  const module = new CJSModule(name);\n  module.filename = path.join(cwd\x2C name);\n  module.paths = CJSModule._nodeModulePaths(cwd);\n\n  const asyncESM = require('internal/process/esm_loader');\n  const baseUrl = pathToFileURL(module.filename).href;\n\n  // Create wrapper for cache entry\n  const script = `\n    globalThis.module = module;\n    globalThis.exports = exports;\n    globalThis.__dirname = __dirname;\n    globalThis.require = require;\n    return (main) => main();\n  `;\n  globalThis.__filename = name;\n  const result = module._compile(script\x2C `${name}-wrapper`)(() =>\n    require('vm').runInThisContext(body\x2C {\n      filename: name\x2C\n      displayErrors: true\x2C\n      [kVmBreakFirstLineSymbol]: !!breakFirstLine\x2C\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C baseUrl\x2C importAssertions);\n      }\n    }));\n  if (print) {\n    const { log } = require('internal/console/global');\n    log(result);\n  }\n\n  if (origModule !== undefined)\n    globalThis.module = origModule;\n}\n\nconst exceptionHandlerState = {\n  captureFn: null\x2C\n  reportFlag: false\n};\n\nfunction setUncaughtExceptionCaptureCallback(fn) {\n  if (fn === null) {\n    exceptionHandlerState.captureFn = fn;\n    shouldAbortOnUncaughtToggle[0] = 1;\n    process.report.reportOnUncaughtException = exceptionHandlerState.reportFlag;\n    return;\n  }\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn'\x2C ['Function'\x2C 'null']\x2C fn);\n  }\n  if (exceptionHandlerState.captureFn !== null) {\n    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();\n  }\n  exceptionHandlerState.captureFn = fn;\n  shouldAbortOnUncaughtToggle[0] = 0;\n  exceptionHandlerState.reportFlag =\n    process.report.reportOnUncaughtException === true;\n  process.report.reportOnUncaughtException = false;\n}\n\nfunction hasUncaughtExceptionCaptureCallback() {\n  return exceptionHandlerState.captureFn !== null;\n}\n\nfunction noop() {}\n\n// XXX(joyeecheung): for some reason this cannot be defined at the top-level\n// and exported to be written to process._fatalException\x2C it has to be\n// returned as an *anonymous function* wrapped inside a factory function\x2C\n// otherwise it breaks the test-timers.setInterval async hooks test -\n// this may indicate that node::errors::TriggerUncaughtException() should\n// fix up the callback scope before calling into process._fatalException\x2C\n// or this function should take extra care of the async hooks before it\n// schedules a setImmediate.\nfunction createOnGlobalUncaughtException() {\n  // The C++ land node::errors::TriggerUncaughtException() will\n  // exit the process if it returns false\x2C and continue execution if it\n  // returns true (which indicates that the exception is handled by the user).\n  return (er\x2C fromPromise) => {\n    // It's possible that defaultTriggerAsyncId was set for a constructor\n    // call that threw and was never cleared. So clear it now.\n    clearDefaultTriggerAsyncId();\n\n    // If diagnostic reporting is enabled\x2C call into its handler to see\n    // whether it is interested in handling the situation.\n    // Ignore if the error is scoped inside a domain.\n    // use == in the checks as we want to allow for null and undefined\n    if (er == null || er.domain == null) {\n      try {\n        const report = internalBinding('report');\n        if (report != null && report.shouldReportOnUncaughtException()) {\n          report.writeReport(\n            typeof er?.message === 'string' ?\n              er.message :\n              'Exception'\x2C\n            'Exception'\x2C\n            null\x2C\n            er ?? {});\n        }\n      } catch {\n        // Ignore the exception. Diagnostic reporting is unavailable.\n      }\n    }\n\n    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';\n    process.emit('uncaughtExceptionMonitor'\x2C er\x2C type);\n    if (exceptionHandlerState.captureFn !== null) {\n      exceptionHandlerState.captureFn(er);\n    } else if (!process.emit('uncaughtException'\x2C er\x2C type)) {\n      // If someone handled it\x2C then great. Otherwise\x2C die in C++ land\n      // since that means that we'll exit the process\x2C emit the 'exit' event.\n      try {\n        if (!process._exiting) {\n          process._exiting = true;\n          process.exitCode = 1;\n          process.emit('exit'\x2C 1);\n        }\n      } catch {\n        // Nothing to be done about it at this point.\n      }\n      return false;\n    }\n\n    // If we handled an error\x2C then make sure any ticks get processed\n    // by ensuring that the next Immediate cycle isn't empty.\n    require('timers').setImmediate(noop);\n\n    // Emit the after() hooks now that the exception has been handled.\n    if (afterHooksExist()) {\n      do {\n        const asyncId = executionAsyncId();\n        if (asyncId === 0)\n          popAsyncContext(0);\n        else\n          emitAfter(asyncId);\n      } while (hasAsyncIdStack());\n    }\n    // And completely empty the id stack\x2C including anything that may be\n    // cached on the native side.\n    clearAsyncIdStack();\n\n    return true;\n  };\n}\n\nfunction readStdin(callback) {\n  process.stdin.setEncoding('utf8');\n\n  let code = '';\n  process.stdin.on('data'\x2C (d) => {\n    code += d;\n  });\n\n  process.stdin.on('end'\x2C () => {\n    callback(code);\n  });\n}\n\nmodule.exports = {\n  readStdin\x2C\n  tryGetCwd\x2C\n  evalModule\x2C\n  evalScript\x2C\n  onGlobalUncaughtException: createOnGlobalUncaughtException()\x2C\n  setUncaughtExceptionCaptureCallback\x2C\n  hasUncaughtExceptionCaptureCallback\n};\n
code-source-info,0xa971875a186,81,604,916,C3O621C6O636C11O636C15O642C18O872C23O884C31O900C36O884C41O910,,
tick,0x1590c6e,716084,0,0x0,0,0x7f4060045235,0xa971875a017,0xc0b590,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Script,10,716250,0xa971875b3ae,18, :1:1,0xa971875b2d8,~
script-source,179,,require('module').builtinModules\n//# sourceURL=eval-4bbb7d5d.cdp\n
code-source-info,0xa971875b3ae,179,0,65,C0O0C7O0C12O17C17O65,,
code-creation,Eval,10,716472,0xa971875b6c6,5, node:module:1:1,0xa971875b580,~
script-source,180,node:module,'use strict';\n\nconst { findSourceMap } = require('internal/source_map/source_map_cache');\nconst { Module } = require('internal/modules/cjs/loader');\nconst { SourceMap } = require('internal/source_map/source_map');\n\nModule.findSourceMap = findSourceMap;\nModule.SourceMap = SourceMap;\nmodule.exports = Module;\n
code-source-info,0xa971875b6c6,180,0,308,C0O0C4O308,,
code-creation,Function,10,716569,0xa971875b776,59, node:module:1:1,0xa971875b640,~
code-source-info,0xa971875b776,180,0,308,C0O41C3O41C8O23C13O109C16O109C21O98C26O171C29O171C34O157C39O215C41O236C45O253C47O270C51O283C53O298C58O307,,
code-creation,Eval,10,716864,0xa971875c236,5, node:internal/source_map/source_map:1:1,0xa971875bee0,~
script-source,181,node:internal/source_map/source_map,// This file is a modified version of:\n// https://cs.chromium.org/chromium/src/v8/tools/SourceMap.js?rcl=dd10454c1d\n// from the V8 codebase. Logic specific to WebInspector is removed and linting\n// is made to match the Node.js style guide.\n\n// Copyright 2013 the V8 project authors. All rights reserved.\n// Redistribution and use in source and binary forms\x2C with or without\n// modification\x2C are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n//       notice\x2C this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n//       copyright notice\x2C this list of conditions and the following\n//       disclaimer in the documentation and/or other materials provided\n//       with the distribution.\n//     * Neither the name of Google Inc. nor the names of its\n//       contributors may be used to endorse or promote products derived\n//       from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES\x2C INCLUDING\x2C BUT NOT\n// LIMITED TO\x2C THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT\x2C INDIRECT\x2C INCIDENTAL\x2C\n// SPECIAL\x2C EXEMPLARY\x2C OR CONSEQUENTIAL DAMAGES (INCLUDING\x2C BUT NOT\n// LIMITED TO\x2C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE\x2C\n// DATA\x2C OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY\x2C WHETHER IN CONTRACT\x2C STRICT LIABILITY\x2C OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE\x2C EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// This is a copy from blink dev tools\x2C see:\n// http://src.chromium.org/viewvc/blink/trunk/Source/devtools/front_end/SourceMap.js\n// revision: 153407\n\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms\x2C with or without\n * modification\x2C are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice\x2C this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice\x2C this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES\x2C INCLUDING\x2C BUT NOT\n * LIMITED TO\x2C THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT\x2C INDIRECT\x2C INCIDENTAL\x2C\n * SPECIAL\x2C EXEMPLARY\x2C OR CONSEQUENTIAL DAMAGES (INCLUDING\x2C BUT NOT\n * LIMITED TO\x2C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE\x2C\n * DATA\x2C OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY\x2C WHETHER IN CONTRACT\x2C STRICT LIABILITY\x2C OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE\x2C EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  StringPrototypeCharAt\x2C\n} = primordials;\n\nconst { validateObject } = require('internal/validators');\n\nlet base64Map;\n\nconst VLQ_BASE_SHIFT = 5;\nconst VLQ_BASE_MASK = (1 << 5) - 1;\nconst VLQ_CONTINUATION_MASK = 1 << 5;\n\nclass StringCharIterator {\n  /**\n   * @constructor\n   * @param {string} string\n   */\n  constructor(string) {\n    this._string = string;\n    this._position = 0;\n  }\n\n  /**\n   * @return {string}\n   */\n  next() {\n    return StringPrototypeCharAt(this._string\x2C this._position++);\n  }\n\n  /**\n   * @return {string}\n   */\n  peek() {\n    return StringPrototypeCharAt(this._string\x2C this._position);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasNext() {\n    return this._position < this._string.length;\n  }\n}\n\n/**\n * Implements Source Map V3 model.\n * See https://github.com/google/closure-compiler/wiki/Source-Maps\n * for format description.\n */\nclass SourceMap {\n  #payload;\n  #mappings = [];\n  #sources = {};\n  #sourceContentByURL = {};\n\n  /**\n   * @constructor\n   * @param {SourceMapV3} payload\n   */\n  constructor(payload) {\n    if (!base64Map) {\n      const base64Digits =\n             'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      base64Map = {};\n      for (let i = 0; i < base64Digits.length; ++i)\n        base64Map[base64Digits[i]] = i;\n    }\n    this.#payload = cloneSourceMapV3(payload);\n    this.#parseMappingPayload();\n  }\n\n  /**\n   * @return {object} raw source map v3 payload.\n   */\n  get payload() {\n    return cloneSourceMapV3(this.#payload);\n  }\n\n  #parseMappingPayload = () => {\n    if (this.#payload.sections) {\n      this.#parseSections(this.#payload.sections);\n    } else {\n      this.#parseMap(this.#payload\x2C 0\x2C 0);\n    }\n    ArrayPrototypeSort(this.#mappings\x2C compareSourceMapEntry);\n  };\n\n  /**\n   * @param {Array.<SourceMapV3.Section>} sections\n   */\n  #parseSections = (sections) => {\n    for (let i = 0; i < sections.length; ++i) {\n      const section = sections[i];\n      this.#parseMap(section.map\x2C section.offset.line\x2C section.offset.column);\n    }\n  };\n\n  /**\n   * @param {number} lineNumber in compiled resource\n   * @param {number} columnNumber in compiled resource\n   * @return {?Array}\n   */\n  findEntry(lineNumber\x2C columnNumber) {\n    let first = 0;\n    let count = this.#mappings.length;\n    while (count > 1) {\n      const step = count >> 1;\n      const middle = first + step;\n      const mapping = this.#mappings[middle];\n      if (lineNumber < mapping[0] ||\n          (lineNumber === mapping[0] && columnNumber < mapping[1])) {\n        count = step;\n      } else {\n        first = middle;\n        count -= step;\n      }\n    }\n    const entry = this.#mappings[first];\n    if (!first && entry && (lineNumber < entry[0] ||\n        (lineNumber === entry[0] && columnNumber < entry[1]))) {\n      return {};\n    } else if (!entry) {\n      return {};\n    }\n    return {\n      generatedLine: entry[0]\x2C\n      generatedColumn: entry[1]\x2C\n      originalSource: entry[2]\x2C\n      originalLine: entry[3]\x2C\n      originalColumn: entry[4]\x2C\n      name: entry[5]\x2C\n    };\n  }\n\n  /**\n   * @override\n   */\n  #parseMap(map\x2C lineNumber\x2C columnNumber) {\n    let sourceIndex = 0;\n    let sourceLineNumber = 0;\n    let sourceColumnNumber = 0;\n    let nameIndex = 0;\n\n    const sources = [];\n    const originalToCanonicalURLMap = {};\n    for (let i = 0; i < map.sources.length; ++i) {\n      const url = map.sources[i];\n      originalToCanonicalURLMap[url] = url;\n      ArrayPrototypePush(sources\x2C url);\n      this.#sources[url] = true;\n\n      if (map.sourcesContent && map.sourcesContent[i])\n        this.#sourceContentByURL[url] = map.sourcesContent[i];\n    }\n\n    const stringCharIterator = new StringCharIterator(map.mappings);\n    let sourceURL = sources[sourceIndex];\n    while (true) {\n      if (stringCharIterator.peek() === '\x2C')\n        stringCharIterator.next();\n      else {\n        while (stringCharIterator.peek() === ';') {\n          lineNumber += 1;\n          columnNumber = 0;\n          stringCharIterator.next();\n        }\n        if (!stringCharIterator.hasNext())\n          break;\n      }\n\n      columnNumber += decodeVLQ(stringCharIterator);\n      if (isSeparator(stringCharIterator.peek())) {\n        ArrayPrototypePush(this.#mappings\x2C [lineNumber\x2C columnNumber]);\n        continue;\n      }\n\n      const sourceIndexDelta = decodeVLQ(stringCharIterator);\n      if (sourceIndexDelta) {\n        sourceIndex += sourceIndexDelta;\n        sourceURL = sources[sourceIndex];\n      }\n      sourceLineNumber += decodeVLQ(stringCharIterator);\n      sourceColumnNumber += decodeVLQ(stringCharIterator);\n\n      let name;\n      if (!isSeparator(stringCharIterator.peek())) {\n        nameIndex += decodeVLQ(stringCharIterator);\n        name = map.names?.[nameIndex];\n      }\n\n      ArrayPrototypePush(\n        this.#mappings\x2C\n        [lineNumber\x2C columnNumber\x2C sourceURL\x2C sourceLineNumber\x2C\n         sourceColumnNumber\x2C name]\n      );\n    }\n  }\n}\n\n/**\n * @param {string} char\n * @return {boolean}\n */\nfunction isSeparator(char) {\n  return char === '\x2C' || char === ';';\n}\n\n/**\n * @param {SourceMap.StringCharIterator} stringCharIterator\n * @return {number}\n */\nfunction decodeVLQ(stringCharIterator) {\n  // Read unsigned value.\n  let result = 0;\n  let shift = 0;\n  let digit;\n  do {\n    digit = base64Map[stringCharIterator.next()];\n    result += (digit & VLQ_BASE_MASK) << shift;\n    shift += VLQ_BASE_SHIFT;\n  } while (digit & VLQ_CONTINUATION_MASK);\n\n  // Fix the sign.\n  const negative = result & 1;\n  // Use unsigned right shift\x2C so that the 32nd bit is properly shifted to the\n  // 31st\x2C and the 32nd becomes unset.\n  result >>>= 1;\n  if (!negative) {\n    return result;\n  }\n\n  // We need to OR here to ensure the 32nd bit (the sign bit in an Int32) is\n  // always set for negative numbers. If `result` were 1\x2C (meaning `negate` is\n  // true and all other bits were zeros)\x2C `result` would now be 0. But -0\n  // doesn't flip the 32nd bit as intended. All other numbers will successfully\n  // set the 32nd bit without issue\x2C so doing this is a noop for them.\n  return -result | (1 << 31);\n}\n\n/**\n * @param {SourceMapV3} payload\n * @return {SourceMapV3}\n */\nfunction cloneSourceMapV3(payload) {\n  validateObject(payload\x2C 'payload');\n  payload = { ...payload };\n  for (const key in payload) {\n    if (ObjectPrototypeHasOwnProperty(payload\x2C key) &&\n        ArrayIsArray(payload[key])) {\n      payload[key] = ArrayPrototypeSlice(payload[key]);\n    }\n  }\n  return payload;\n}\n\n/**\n * @param {Array} entry1 source map entry [lineNumber\x2C columnNumber\x2C sourceURL\x2C\n *  sourceLineNumber\x2C sourceColumnNumber]\n * @param {Array} entry2 source map entry.\n * @return {number}\n */\nfunction compareSourceMapEntry(entry1\x2C entry2) {\n  const { 0: lineNumber1\x2C 1: columnNumber1 } = entry1;\n  const { 0: lineNumber2\x2C 1: columnNumber2 } = entry2;\n  if (lineNumber1 !== lineNumber2) {\n    return lineNumber1 - lineNumber2;\n  }\n  return columnNumber1 - columnNumber2;\n}\n\nmodule.exports = {\n  SourceMap\n};\n
code-source-info,0xa971875c236,181,0,10628,C0O0C4O10628,,
code-creation,Function,10,717423,0xa971875cb06,328, node:internal/source_map/source_map:1:1,0xa971875c1b0,~
code-source-info,0xa971875cb06,181,0,10628,C0O0C65O3579C71O3595C77O3617C83O3640C89O3662C95O3695C101O3763C104O3763C109O3744C115O3800C116O3800C118O3835C120O3835C122O3860C124O3860C126O3904C128O3904C166O3913C309O10594C316O10615C322O10609C327O10627,,
code-creation,Function,10,717497,0xa971875cdbe,93,<instance_members_initializer> node:internal/source_map/source_map:124:3,0xa971875c648,~
code-source-info,0xa971875cdbe,181,4570,5714,C0O4570C29O4594C42O4611C54O4639C66O5221C81O5527C92O5714,,
tick,0x7f407774b79d,717573,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0xa971875b793,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0xa971875b3b5,0xc0b590,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0xf00810,718271,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0xf00849,719455,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x10f59ba,720516,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x10f59c9,721649,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec7d,722814,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec7d,723988,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec69,725090,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749e32f,726355,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec78,727475,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec58,728688,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec69,729837,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec7d,731014,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749e32f,732202,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec69,733451,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f40776ed3b4,734602,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec69,735808,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749e32f,737034,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x12dc254,738107,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749e32f,739359,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec7d,740703,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407732fbf6,741681,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0xd07595,742845,1,0xc0b590,5,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec69,743952,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407732f84b,745078,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f4077333703,746186,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec92,747304,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec7d,748436,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x129ec7d,749613,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749e32f,750718,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,751854,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,753068,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,754157,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,755283,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,756461,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,757554,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,758777,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,759872,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,761001,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,762047,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,763191,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,764393,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,765448,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,766611,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,767637,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,768756,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,769861,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,771077,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,772206,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,773346,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,774526,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,775636,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,776774,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,777917,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,779016,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,780213,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,781287,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,782405,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,783497,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,784637,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,785729,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,786869,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,788004,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,789076,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407749a374,790276,1,0xc0b590,6,0xd3aa20,0xa97187587e3,0xa97187461ba,0x224cfd0e8990,0x224cfd0e84bb,0x224cfd0e7a3b,0x224cfd0e5621,0x224cfd0e264f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x224cfd0c407a,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,790647,0x3b7ada461e0e,33,updateInspectorOption /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:93999,0x334da65b8b78,~
code-source-info,0x3b7ada461e0e,130,94073,94149,C0O94092C5O94109C7O94139C14O94142C18O94145C25O94134C32O94148,,
code-creation,LazyCompile,10,790986,0x3b7ada461f56,43,set inspectorOptions /home/abdel/.vscode-server/data/User/workspaceStorage/267c71dcedcc8c525cd45e451dd7a139/ms-vscode.js-debug/bootloader.js:2:93793,0x334da65b8ad8,~
code-source-info,0x3b7ada461f56,130,93867,93989,C0O93871C4O93894C15O93935C20O93971C24O93976C29O93976C35O93970C42O93988,,
tick,0x155e52e,791366,0,0x0,0,0x224cfd0c569d,0x224cfd0c43f8,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,RegExp,3,791490,0x7f406004d6a0,1524,(?:^|\\/)\\.?\\.$
code-creation,LazyCompile,10,791662,0x3b7ada462226,44,tryExtensions node:internal/modules/cjs/loader:411:23,0xa26aab2068,~
code-source-info,0x3b7ada462226,106,11835,12019,C0O11870C2O11882C6O11875C11O11918C16O11934C19O11928C23O11918C29O11953C31O11975C33O11991C34O11891C39O11857C42O12004C43O12017,,
code-creation,LazyCompile,10,791745,0x3b7ada462356,50,tryFile node:internal/modules/cjs/loader:395:17,0xa26aab1fc8,~
code-source-info,0x3b7ada462356,106,11411,11605,C0O11448C3O11448C8O11469C9O11476C14O11483C15O11490C16O11493C24O11518C26O11532C31O11544C36O11544C41O11565C42O11572C45O11579C49O11603,,
code-creation,Function,11,792249,0x7f406004dd00,212, node:vm:321:27,0x224cfd0db718,^
code-source-info,0x7f406004dd00,92,9845,9896,,,
code-creation,Function,11,792348,0x7f406004de40,2584,basename node:path:1306:11,0x3e83b617c738,^
code-source-info,0x7f406004de40,41,39511,41903,,,
tick,0x7f40773a70af,792476,0,0x0,0,0x11e14a0,0x224cfd0dcdd8,0x15e844f,0x224cfd0dba8c,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,11,792536,0x7f406004e8c0,1144,readPackageScope node:internal/modules/cjs/loader:332:26,0xa26aab1f28,^
code-source-info,0x7f406004e8c0,106,9253,9771,,,
code-creation,Eval,10,792679,0x3b7ada4635fe,5, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/no-cluster.js:1:1,0x3b7ada4634b8,~
script-source,182,/home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x3b7ada4635fe,182,0,119,C0O0C4O119,,
code-creation,Function,10,792760,0x3b7ada4636e6,29, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/no-cluster.js:1:1,0x3b7ada463578,~
code-source-info,0x3b7ada4636e6,182,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,Eval,10,793081,0x3b7ada463a9e,5, node:cluster:1:1,0x3b7ada463958,~
script-source,183,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\n
code-source-info,0x3b7ada463a9e,183,0,1291,C0O0C4O1291,,
code-creation,Function,10,793202,0x3b7ada463b46,39, node:cluster:1:1,0x3b7ada463a18,~
code-source-info,0x3b7ada463b46,183,0,1291,C0O1172C3O1200C7O1189C19O1227C24O1272C29O1244C33O1242C38O1290,,
tick,0xb52fa9,793656,1,0xb53890,6,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3b7ada463b63,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x3b7ada4636e9,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,794116,0x3b7ada4646e6,5, node:internal/cluster/primary:1:1,0x3b7ada464360,~
script-source,184,node:internal/cluster/primary,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSome\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst { fork } = require('child_process');\nconst path = require('path');\nconst EventEmitter = require('events');\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\nconst SharedHandle = require('internal/cluster/shared_handle');\nconst Worker = require('internal/cluster/worker');\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\nconst cluster = new EventEmitter();\nconst intercom = new EventEmitter();\nconst SCHED_NONE = 1;\nconst SCHED_RR = 2;\nconst minPort = 1024;\nconst maxPort = 65535;\nconst { validatePort } = require('internal/validators');\n\nmodule.exports = cluster;\n\nconst handles = new SafeMap();\ncluster.isWorker = false;\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\ncluster.isPrimary = true;\ncluster.Worker = Worker;\ncluster.workers = {};\ncluster.settings = {};\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\n\nlet ids = 0;\nlet debugPortOffset = 1;\nlet initialized = false;\n\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\nif (schedulingPolicy === 'rr')\n  schedulingPolicy = SCHED_RR;\nelse if (schedulingPolicy === 'none')\n  schedulingPolicy = SCHED_NONE;\nelse if (process.platform === 'win32') {\n  // Round-robin doesn't perform well on\n  // Windows due to the way IOCP is wired up.\n  schedulingPolicy = SCHED_NONE;\n} else\n  schedulingPolicy = SCHED_RR;\n\ncluster.schedulingPolicy = schedulingPolicy;\n\ncluster.setupPrimary = function(options) {\n  const settings = {\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\n    exec: process.argv[1]\x2C\n    execArgv: process.execArgv\x2C\n    silent: false\x2C\n    ...cluster.settings\x2C\n    ...options\n  };\n\n  // Tell V8 to write profile data for each process to a separate file.\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\n  // file. (Unusable because what V8 logs are memory addresses and each\n  // process has its own memory mappings.)\n  if (ArrayPrototypeSome(settings.execArgv\x2C\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\n      !ArrayPrototypeSome(settings.execArgv\x2C\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\n  }\n\n  cluster.settings = settings;\n\n  if (initialized === true)\n    return process.nextTick(setupSettingsNT\x2C settings);\n\n  initialized = true;\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\n\n  process.nextTick(setupSettingsNT\x2C settings);\n\n  process.on('internalMessage'\x2C (message) => {\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\n      return;\n\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.state === 'online' || worker.state === 'listening') {\n        process._debugProcess(worker.process.pid);\n      } else {\n        worker.once('online'\x2C function() {\n          process._debugProcess(this.process.pid);\n        });\n      }\n    }\n  });\n};\n\n// Deprecated alias must be same as setupPrimary\ncluster.setupMaster = cluster.setupPrimary;\n\nfunction setupSettingsNT(settings) {\n  cluster.emit('setup'\x2C settings);\n}\n\nfunction createWorkerProcess(id\x2C env) {\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\n  const execArgv = [...cluster.settings.execArgv];\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\n  const nodeOptions = process.env.NODE_OPTIONS || '';\n\n  if (ArrayPrototypeSome(execArgv\x2C\n                         (arg) => RegExpPrototypeExec(debugArgRegex\x2C arg) !== null) ||\n      RegExpPrototypeExec(debugArgRegex\x2C nodeOptions) !== null) {\n    let inspectPort;\n    if ('inspectPort' in cluster.settings) {\n      if (typeof cluster.settings.inspectPort === 'function')\n        inspectPort = cluster.settings.inspectPort();\n      else\n        inspectPort = cluster.settings.inspectPort;\n\n      validatePort(inspectPort);\n    } else {\n      inspectPort = process.debugPort + debugPortOffset;\n      if (inspectPort > maxPort)\n        inspectPort = inspectPort - maxPort + minPort - 1;\n      debugPortOffset++;\n    }\n\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\n  }\n\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\n    cwd: cluster.settings.cwd\x2C\n    env: workerEnv\x2C\n    serialization: cluster.settings.serialization\x2C\n    silent: cluster.settings.silent\x2C\n    windowsHide: cluster.settings.windowsHide\x2C\n    execArgv: execArgv\x2C\n    stdio: cluster.settings.stdio\x2C\n    gid: cluster.settings.gid\x2C\n    uid: cluster.settings.uid\n  });\n}\n\nfunction removeWorker(worker) {\n  assert(worker);\n  delete cluster.workers[worker.id];\n\n  if (ObjectKeys(cluster.workers).length === 0) {\n    assert(handles.size === 0\x2C 'Resource leak detected.');\n    intercom.emit('disconnect');\n  }\n}\n\nfunction removeHandlesForWorker(worker) {\n  assert(worker);\n\n  handles.forEach((handle\x2C key) => {\n    if (handle.remove(worker))\n      handles.delete(key);\n  });\n}\n\ncluster.fork = function(env) {\n  cluster.setupPrimary();\n  const id = ++ids;\n  const workerProcess = createWorkerProcess(id\x2C env);\n  const worker = new Worker({\n    id: id\x2C\n    process: workerProcess\n  });\n\n  worker.on('message'\x2C function(message\x2C handle) {\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\n  });\n\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\n    /*\n     * Remove the worker from the workers list only\n     * if it has disconnected\x2C otherwise we might\n     * still want to access it.\n     */\n    if (!worker.isConnected()) {\n      removeHandlesForWorker(worker);\n      removeWorker(worker);\n    }\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'dead';\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\n  });\n\n  worker.process.once('disconnect'\x2C () => {\n    /*\n     * Now is a good time to remove the handles\n     * associated with this worker because it is\n     * not connected to the primary anymore.\n     */\n    removeHandlesForWorker(worker);\n\n    /*\n     * Remove the worker from the workers list only\n     * if its process has exited. Otherwise\x2C we might\n     * still want to access it.\n     */\n    if (worker.isDead())\n      removeWorker(worker);\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'disconnected';\n    worker.emit('disconnect');\n    cluster.emit('disconnect'\x2C worker);\n  });\n\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\n  process.nextTick(emitForkNT\x2C worker);\n  cluster.workers[worker.id] = worker;\n  return worker;\n};\n\nfunction emitForkNT(worker) {\n  cluster.emit('fork'\x2C worker);\n}\n\ncluster.disconnect = function(cb) {\n  const workers = ObjectKeys(cluster.workers);\n\n  if (workers.length === 0) {\n    process.nextTick(() => intercom.emit('disconnect'));\n  } else {\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.isConnected()) {\n        worker.disconnect();\n      }\n    }\n  }\n\n  if (typeof cb === 'function')\n    intercom.once('disconnect'\x2C cb);\n};\n\nconst methodMessageMapping = {\n  close\x2C\n  exitedAfterDisconnect\x2C\n  listening\x2C\n  online\x2C\n  queryServer\x2C\n};\n\nfunction onmessage(message\x2C handle) {\n  const worker = this;\n\n  const fn = methodMessageMapping[message.act];\n\n  if (typeof fn === 'function')\n    fn(worker\x2C message);\n}\n\nfunction online(worker) {\n  worker.state = 'online';\n  worker.emit('online');\n  cluster.emit('online'\x2C worker);\n}\n\nfunction exitedAfterDisconnect(worker\x2C message) {\n  worker.exitedAfterDisconnect = true;\n  send(worker\x2C { ack: message.seq });\n}\n\nfunction queryServer(worker\x2C message) {\n  // Stop processing if worker already disconnecting\n  if (worker.exitedAfterDisconnect)\n    return;\n\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\n              `${message.fd}:${message.index}`;\n  let handle = handles.get(key);\n\n  if (handle === undefined) {\n    let address = message.address;\n\n    // Find shortest path for unix sockets because of the ~100 byte limit\n    if (message.port < 0 && typeof address === 'string' &&\n        process.platform !== 'win32') {\n\n      address = path.relative(process.cwd()\x2C address);\n\n      if (message.address.length < address.length)\n        address = message.address;\n    }\n\n    // UDP is exempt from round-robin connection balancing for what should\n    // be obvious reasons: it's connectionless. There is nothing to send to\n    // the workers except raw datagrams and that's pointless.\n    if (schedulingPolicy !== SCHED_RR ||\n        message.addressType === 'udp4' ||\n        message.addressType === 'udp6') {\n      handle = new SharedHandle(key\x2C address\x2C message);\n    } else {\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\n    }\n\n    handles.set(key\x2C handle);\n  }\n\n  if (!handle.data)\n    handle.data = message.data;\n\n  // Set custom server data\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\n    const { data } = handles.get(key);\n\n    if (errno)\n      handles.delete(key);  // Gives other workers a chance to retry.\n\n    send(worker\x2C {\n      errno\x2C\n      key\x2C\n      ack: message.seq\x2C\n      data\x2C\n      ...reply\n    }\x2C handle);\n  });\n}\n\nfunction listening(worker\x2C message) {\n  const info = {\n    addressType: message.addressType\x2C\n    address: message.address\x2C\n    port: message.port\x2C\n    fd: message.fd\n  };\n\n  worker.state = 'listening';\n  worker.emit('listening'\x2C info);\n  cluster.emit('listening'\x2C worker\x2C info);\n}\n\n// Server in worker is closing\x2C remove from list. The handle may have been\n// removed by a prior call to removeHandlesForWorker() so guard against that.\nfunction close(worker\x2C message) {\n  const key = message.key;\n  const handle = handles.get(key);\n\n  if (handle && handle.remove(worker))\n    handles.delete(key);\n}\n\nfunction send(worker\x2C message\x2C handle\x2C cb) {\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\n}\n\n// Extend generic Worker with methods specific to the primary process.\nWorker.prototype.disconnect = function() {\n  this.exitedAfterDisconnect = true;\n  send(this\x2C { act: 'disconnect' });\n  removeHandlesForWorker(this);\n  removeWorker(this);\n  return this;\n};\n\nWorker.prototype.destroy = function(signo) {\n  const proc = this.process;\n\n  signo = signo || 'SIGTERM';\n\n  if (this.isConnected()) {\n    this.once('disconnect'\x2C () => proc.kill(signo));\n    this.disconnect();\n    return;\n  }\n\n  proc.kill(signo);\n};\n
code-source-info,0x3b7ada4646e6,184,0,10812,C0O0C4O10812,,
tick,0x7f40773a70af,794976,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3b7ada463b63,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x3b7ada4636e9,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,10,795108,0x3b7ada4650ae,640, node:internal/cluster/primary:1:1,0x3b7ada464660,~
code-source-info,0x3b7ada4650ae
tick,0x155df04,795860,0,0x0,0,0x7f40600432df,0x3b7ada463b63,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x3b7ada4636e9,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,796170,0x3b7ada466736,5, node:internal/cluster/round_robin_handle:1:1,0x3b7ada466520,~
script-source,185,node:internal/cluster/round_robin_handle,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  ObjectCreate\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst net = require('net');\nconst { sendHelper } = require('internal/cluster/utils');\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\nconst { constants } = internalBinding('tcp_wrap');\n\nmodule.exports = RoundRobinHandle;\n\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\n  this.key = key;\n  this.all = new SafeMap();\n  this.free = new SafeMap();\n  this.handles = init(ObjectCreate(null));\n  this.handle = null;\n  this.server = net.createServer(assert.fail);\n\n  if (fd >= 0)\n    this.server.listen({ fd\x2C backlog });\n  else if (port >= 0) {\n    this.server.listen({\n      port\x2C\n      host: address\x2C\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\n      backlog\x2C\n    });\n  } else\n    this.server.listen({\n      path: address\x2C\n      backlog\x2C\n      readableAll\x2C\n      writableAll\x2C\n    });  // UNIX socket path.\n  this.server.once('listening'\x2C () => {\n    this.handle = this.server._handle;\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\n    this.server._handle = null;\n    this.server = null;\n  });\n}\n\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\n  assert(this.all.has(worker.id) === false);\n  this.all.set(worker.id\x2C worker);\n\n  const done = () => {\n    if (this.handle.getsockname) {\n      const out = {};\n      this.handle.getsockname(out);\n      // TODO(bnoordhuis) Check err.\n      send(null\x2C { sockname: out }\x2C null);\n    } else {\n      send(null\x2C null\x2C null);  // UNIX socket.\n    }\n\n    this.handoff(worker);  // In case there are connections pending.\n  };\n\n  if (this.server === null)\n    return done();\n\n  // Still busy binding.\n  this.server.once('listening'\x2C done);\n  this.server.once('error'\x2C (err) => {\n    send(err.errno\x2C null);\n  });\n};\n\nRoundRobinHandle.prototype.remove = function(worker) {\n  const existed = this.all.delete(worker.id);\n\n  if (!existed)\n    return false;\n\n  this.free.delete(worker.id);\n\n  if (this.all.size !== 0)\n    return false;\n\n  while (!isEmpty(this.handles)) {\n    const handle = peek(this.handles);\n    handle.close();\n    remove(handle);\n  }\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\n  append(this.handles\x2C handle);\n  // eslint-disable-next-line node-core/no-array-destructuring\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\n\n  if (ArrayIsArray(workerEntry)) {\n    const { 0: workerId\x2C 1: worker } = workerEntry;\n    this.free.delete(workerId);\n    this.handoff(worker);\n  }\n};\n\nRoundRobinHandle.prototype.handoff = function(worker) {\n  if (!this.all.has(worker.id)) {\n    return;  // Worker is closing (or has closed) the server.\n  }\n\n  const handle = peek(this.handles);\n\n  if (handle === null) {\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\n    return;\n  }\n\n  remove(handle);\n\n  const message = { act: 'newconn'\x2C key: this.key };\n\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\n    if (reply.accepted)\n      handle.close();\n    else\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\n\n    this.handoff(worker);\n  });\n};\n
code-source-info,0x3b7ada466736,185,0,3381,C0O0C4O3381,,
code-creation,Function,10,796498,0x3b7ada466afe,217, node:internal/cluster/round_robin_handle:1:1,0x3b7ada4666b0,~
code-source-info,0x3b7ada466afe,185,0,3381,C0O0C49O25C55O41C61O52C67O68C73O110C76O110C80O110C82O150C85O150C89O150C91O189C94O189C99O174C105O272C108O272C113O232C119O240C125O246C131O255C137O261C143O326C146O326C151O312C157O356C159O371C163O1351C172O1365C176O2016C185O2033C189O2414C198O2435C202O2790C211O2808C216O3380,,
code-creation,Eval,10,796972,0x3b7ada46743e,5, node:internal/cluster/utils:1:1,0x3b7ada4672c8,~
script-source,186,node:internal/cluster/utils,'use strict';\n\nconst {\n  ReflectApply\x2C\n  SafeMap\x2C\n} = primordials;\n\nmodule.exports = {\n  sendHelper\x2C\n  internal\n};\n\nconst callbacks = new SafeMap();\nlet seq = 0;\n\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\n  if (!proc.connected)\n    return false;\n\n  // Mark message as internal. See INTERNAL_PREFIX\n  // in lib/internal/child_process.js\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\n\n  if (typeof cb === 'function')\n    callbacks.set(seq\x2C cb);\n\n  seq += 1;\n  return proc.send(message\x2C handle);\n}\n\n// Returns an internalMessage listener that hands off normal messages\n// to the callback but intercepts and redirects ACK messages.\nfunction internal(worker\x2C cb) {\n  return function onInternalMessage(message\x2C handle) {\n    if (message.cmd !== 'NODE_CLUSTER')\n      return;\n\n    let fn = cb;\n\n    if (message.ack !== undefined) {\n      const callback = callbacks.get(message.ack);\n\n      if (callback !== undefined) {\n        fn = callback;\n        callbacks.delete(message.ack);\n      }\n    }\n\n    ReflectApply(fn\x2C worker\x2C arguments);\n  };\n}\n
code-source-info,0x3b7ada46743e,186,0,1053,C0O0C4O1053,,
code-creation,Function,10,797173,0x3b7ada4675fe,72, node:internal/cluster/utils:1:1,0x3b7ada4673b8,~
code-source-info,0x3b7ada4675fe,186,0,1053,C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O134C60O134C65O134C67O159C68O159C71O1052,,
tick,0xf52001,797295,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3b7ada466b5c,0x7f4060044ae0,0x7f40600432df,0x3b7ada4651a8,0x7f4060044ae0,0x7f40600432df,0x3b7ada463b63,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x3b7ada4636e9,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,797848,0x3b7ada467c0e,5, node:internal/cluster/shared_handle:1:1,0x3b7ada467a88,~
script-source,187,node:internal/cluster/shared_handle,'use strict';\nconst { SafeMap } = primordials;\nconst assert = require('internal/assert');\nconst dgram = require('internal/dgram');\nconst net = require('net');\n\nmodule.exports = SharedHandle;\n\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\n  this.key = key;\n  this.workers = new SafeMap();\n  this.handle = null;\n  this.errno = 0;\n\n  let rval;\n  if (addressType === 'udp4' || addressType === 'udp6')\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n  else\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n  if (typeof rval === 'number')\n    this.errno = rval;\n  else\n    this.handle = rval;\n}\n\nSharedHandle.prototype.add = function(worker\x2C send) {\n  assert(!this.workers.has(worker.id));\n  this.workers.set(worker.id\x2C worker);\n  send(this.errno\x2C null\x2C this.handle);\n};\n\nSharedHandle.prototype.remove = function(worker) {\n  if (!this.workers.has(worker.id))\n    return false;\n\n  this.workers.delete(worker.id);\n\n  if (this.workers.size !== 0)\n    return false;\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n
code-source-info,0x3b7ada467c0e,187,0,1102,C0O0C4O1102,,
code-creation,Function,10,798015,0x3b7ada467e46,89, node:internal/cluster/shared_handle:1:1,0x3b7ada467b88,~
code-source-info,0x3b7ada467e46,187,0,1102,C0O0C22O22C28O62C31O62C35O62C37O104C40O104C44O104C46O143C49O143C53O143C55O160C57O175C61O685C70O699C74O861C83O878C88O1101,,
tick,0x12a733e,798129,1,0xb53890,5,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3b7ada4651b1,0x7f4060044ae0,0x7f40600432df,0x3b7ada463b63,0x7f4060044ae0,0x7f406004a048,0x7f40600491c0,0x224cfd0c4456,0x7f4060049cc1,0x7f4060048c35,0x3b7ada4636e9,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,798517,0x3b7ada46843e,5, node:internal/cluster/worker:1:1,0x3b7ada4682b8,~
script-source,188,node:internal/cluster/worker,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\n\nconst { kEmptyObject } = require('internal/util');\n\nmodule.exports = Worker;\n\n// Common Worker implementation shared between the cluster primary and workers.\nfunction Worker(options) {\n  if (!(this instanceof Worker))\n    return new Worker(options);\n\n  ReflectApply(EventEmitter\x2C this\x2C []);\n\n  if (options === null || typeof options !== 'object')\n    options = kEmptyObject;\n\n  this.exitedAfterDisconnect = undefined;\n\n  this.state = options.state || 'none';\n  this.id = options.id | 0;\n\n  if (options.process) {\n    this.process = options.process;\n    this.process.on('error'\x2C (code\x2C signal) =>\n      this.emit('error'\x2C code\x2C signal)\n    );\n    this.process.on('message'\x2C (message\x2C handle) =>\n      this.emit('message'\x2C message\x2C handle)\n    );\n  }\n}\n\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\n\nWorker.prototype.kill = function() {\n  ReflectApply(this.destroy\x2C this\x2C arguments);\n};\n\nWorker.prototype.send = function() {\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\n};\n\nWorker.prototype.isDead = function() {\n  return this.process.exitCode != null || this.process.signalCode != null;\n};\n\nWorker.prototype.isConnected = function() {\n  return this.process.connected;\n};\n
code-source-info,0x3b7ada46843e,188,0,1377,C0O0C4O1377,,
code-creation,Function,10,798640,0x3b7ada4687b6,158, node:internal/cluster/worker:1:1,0x3b7ada4683b8,~
code-source-info,0x3b7ada4687b6,188,0,1377,C0O0C20O25C25O49C31O102C34O102C38O102C40O147C43O147C48O130C54O174C56O189C60O874C63O902C71O926C76O874C81O938C87O938C92O983C95O990C104O1005C108O1071C111O1078C120O1093C124O1179C127O1186C136O1203C140O1297C143O1304C152O1326C157O1376,,
tick,0xce8cf1,799291,1,0xb10740,6,0xd3aa20,0x224cfd0c8026,0x224cfd0c79f1,0x3b7ada462383,0x3b7ada46223d,0x224cfd0c73a6,0x224cfd0c57f8,0x224cfd0c43f8,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Eval,10,799647,0x3b7ada4693a6,5, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x3b7ada469200,~
script-source,189,/home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x3b7ada4693a6,189,0,494,C0O0C4O494,,
code-creation,Function,10,799763,0x3b7ada46964e,157, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x3b7ada469320,~
code-source-info,0x3b7ada46964e,189,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
tick,0x1b37242,800369,0,0x0,2,0x11ed380,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,800492,0x3b7ada469e9e,914,Socket node:net:294:16,0x24759bdcc298,~
code-source-info,0x3b7ada469e9e
code-creation,LazyCompile,10,800673,0x3b7ada46a56e,109,Duplex node:internal/streams/duplex:54:16,0xe029230490,~
script-source,57,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  const keys = ObjectKeys(Writable.prototype);\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i];\n    if (!Duplex.prototype[method])\n      Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this\x2C options);\n  Writable.call(this\x2C options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false)\n      this.readable = false;\n\n    if (options.writable === false)\n      this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n    }\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\n  writableHighWaterMark:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\n  writableObjectMode:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\n  writableBuffer:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\n  writableLength:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\n  writableFinished:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\n  writableCorked:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\n  writableEnded:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\n  writableNeedDrain:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\n  }\n});\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  if (!duplexify) {\n    duplexify = require('internal/streams/duplexify');\n  }\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0x3b7ada46a56e,57,2011,2420,C0O2025C2O2036C7O2060C12O2067C17O2087C18O2091C23O2100C28O2100C34O2123C39O2132C44O2132C50O2155C51O2174C55O2185C59O2216C65O2225C70O2242C71O2256C75O2282C81O2291C86O2308C87O2322C91O2348C97O2362C102O2381C103O2400C108O2419,,
code-creation,LazyCompile,10,800982,0x3b7ada46a806,220,Readable node:internal/streams/readable:181:18,0xe02923b3d0,~
script-source,58,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  SymbolAsyncIterator\x2C\n  Symbol\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\n\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst BufferList = require('internal/streams/buffer_list');\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n} = require('internal/streams/state');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n} = require('internal/errors').codes;\nconst { validateObject } = require('internal/validators');\n\nconst kPaused = Symbol('kPaused');\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Duplex streams are both readable and writable\x2C but share\n  // the same options object.\n  // However\x2C some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean')\n    isDuplex = stream instanceof Stream.Duplex;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode);\n\n  if (isDuplex)\n    this.objectMode = this.objectMode ||\n      !!(options && options.readableObjectMode);\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = [];\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  this.constructed = true;\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this[kPaused] = null;\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false;\n\n  // Has it been destroyed.\n  this.destroyed = false;\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null;\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false;\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n  this.multiAwaitDrain = false;\n\n  // If true\x2C a maybeReadMore has been scheduled.\n  this.readingMore = false;\n\n  this.dataEmitted = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor\x2C at least with V8 6.5.\n  const isDuplex = this instanceof Stream.Duplex;\n\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n    if (options.signal && !isDuplex)\n      addAbortSignalNoValidate(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  destroyImpl.construct(this\x2C () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this\x2C this._readableState);\n    }\n  });\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\n};\n\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\n  debug('readableAddChunk'\x2C chunk);\n  const state = stream._readableState;\n\n  let err;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n        } else {\n          chunk = Buffer.from(chunk\x2C encoding);\n          encoding = '';\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = '';\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = '';\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n    }\n  }\n\n  if (err) {\n    errorOrDestroy(stream\x2C err);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream\x2C state);\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted)\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n      else\n        addChunk(stream\x2C state\x2C chunk\x2C true);\n    } else if (state.ended) {\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    } else if (state.destroyed || state.errored) {\n      return false;\n    } else {\n      state.reading = false;\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk);\n        if (state.objectMode || chunk.length !== 0)\n          addChunk(stream\x2C state\x2C chunk\x2C false);\n        else\n          maybeReadMore(stream\x2C state);\n      } else {\n        addChunk(stream\x2C state\x2C chunk\x2C false);\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n    maybeReadMore(stream\x2C state);\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return !state.ended &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync &&\n      stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n    state.dataEmitted = true;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront)\n      state.buffer.unshift(chunk);\n    else\n      state.buffer.push(chunk);\n\n    if (state.needReadable)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return state[kPaused] === true || state.flowing === false;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  const buffer = this._readableState.buffer;\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of buffer) {\n    content += decoder.write(data);\n  }\n  buffer.clear();\n  if (content !== '')\n    buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && state.ended))\n    return 0;\n  if (state.objectMode)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length)\n      return state.buffer.first().length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return state.ended ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state.emittedReadable = false;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       state.ended)) {\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = state.needReadable;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if (state.ended || state.reading || state.destroyed || state.errored ||\n      !state.constructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n\n    // Call internal read method\n    this._read(state.highWaterMark);\n\n    state.sync = false;\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended)\n      state.needReadable = true;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && state.ended)\n      endReadable(this);\n  }\n\n  if (ret !== null) {\n    state.dataEmitted = true;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    const chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  if (state.sync) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    state.emittedReadable = true;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable'\x2C state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state.needReadable =\n    !state.flowing &&\n    !state.ended &&\n    state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended &&\n         (state.length < state.highWaterMark ||\n          (state.flowing && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state.multiAwaitDrain = false;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    const ret = dest.write(chunk);\n    debug('dest.write'\x2C ret);\n    if (ret === false) {\n      pause();\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause();\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      src.listenerCount('data')) {\n      src.resume();\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false)\n      this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable'\x2C state.length\x2C state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  } else if (!state.readableListening) {\n    state.flowing = null;\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state.flowing = !state.readableListening;\n    resume(this\x2C state);\n  }\n  state[kPaused] = false;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState[kPaused] = true;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow'\x2C state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  const opts = {\n    destroyOnReturn: true\x2C\n    destroyOnError: true\x2C\n    ...options\x2C\n  };\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  const state = stream._readableState;\n\n  let error = state.errored;\n  let errorEmitted = state.errorEmitted;\n  let endEmitted = state.endEmitted;\n  let closeEmitted = state.closeEmitted;\n\n  stream\n    .on('readable'\x2C next)\n    .on('error'\x2C function(err) {\n      error = err;\n      errorEmitted = true;\n      next.call(this);\n    })\n    .on('end'\x2C function() {\n      endEmitted = true;\n      next.call(this);\n    })\n    .on('close'\x2C function() {\n      closeEmitted = true;\n      next.call(this);\n    });\n\n  let errorThrown = false;\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (errorEmitted) {\n        throw error;\n      } else if (endEmitted) {\n        break;\n      } else if (closeEmitted) {\n        break;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    if (opts.destroyOnError) {\n      destroyImpl.destroyer(stream\x2C err);\n    }\n    errorThrown = true;\n    throw err;\n  } finally {\n    if (!errorThrown && opts.destroyOnReturn) {\n      if (state.autoDestroy || !endEmitted) {\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\n        destroyImpl.destroyer(stream\x2C null);\n      }\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    __proto__: null\x2C\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\n  }\x2C\n\n  readableDidRead: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\n  }\x2C\n\n  readableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      );\n    }\n  }\x2C\n\n  readableHighWaterMark: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\n  }\x2C\n\n  readableBuffer: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState && this._readableState.buffer;\n    }\n  }\x2C\n\n  readableFlowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\n  }\x2C\n\n  readableLength: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\n  }\x2C\n\n  readableObjectMode: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\n  }\x2C\n\n  readableEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      if (this._readableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\n  }\x2C\n\n  readableEnded: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null\x2C\n    get() {\n      return this.pipes.length;\n    }\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null\x2C\n    get() {\n      return this[kPaused] !== false;\n    }\x2C\n    set(value) {\n      this[kPaused] = !!value;\n    }\n  }\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let ret;\n  if (state.objectMode)\n    ret = state.buffer.shift();\n  else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if (state.decoder)\n      ret = state.buffer.join('');\n    else if (state.buffer.length === 1)\n      ret = state.buffer.first();\n    else\n      ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n\x2C state.decoder);\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable'\x2C state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.errorEmitted && !state.closeEmitted &&\n      !state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\n  }).wrap(src);\n};\n
code-source-info,0x3b7ada46a806,58,6246,7126,C0O6246C9O6260C16O6271C21O6297C28O6304C33O6326C34O6481C41O6497C44O6504C48O6486C52O6515C71O6537C76O6535C80O6584C84O6622C92O6649C95O6670C99O6660C103O6700C111O6730C114O6754C118O6744C122O6787C130O6819C133O6845C137O6835C141O6872C149O6883C151O6899C158O6932C166O6899C171O6954C178O6961C186O6961C192O6985C199O6997C212O6997C219O7125,,
tick,0x7f40773a70af,802823,0,0x0,3,0x11ed380,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
tick,0x7f407731c3c8,802901,0,0x0,3,0x11ed380,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,802919,0x3b7ada46aa5e,18,Stream node:internal/streams/legacy:10:16,0xe02923dbc0,~
script-source,59,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0x3b7ada46aa5e,59,127,160,C0O138C5O141C10O141C17O159,,
code-creation,LazyCompile,10,803340,0x3b7ada46ae2e,354,ReadableState node:internal/streams/readable:78:23,0xe02923b380,~
code-source-info,0x3b7ada46ae2e
code-creation,LazyCompile,10,803480,0x3b7ada46b23e,98,getHighWaterMark node:internal/streams/state:19:26,0x3e83b617cee8,~
code-source-info,0x3b7ada46b23e,62,424,832,C0O478C12O478C18O529C21O552C26O557C33O585C38O611C47O633C56O678C69O684C74O678C75O732C80O739C84O754C85O781C88O818C93O788C97O830,,
code-creation,LazyCompile,10,803547,0x3b7ada46b39e,26,highWaterMarkFrom node:internal/streams/state:10:27,0x3e83b617cd88,~
code-source-info,0x3b7ada46b39e,62,168,309,C0O218C7O250C15O270C19O288C25O307,,
tick,0x7f40773a70af,803794,0,0x0,3,0x11d7ee0,0x3b7ada46b24a,0x3b7ada46ae86,0x3b7ada46a84d,0x3b7ada46a58a,0x3b7ada46a00e,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,803909,0x3b7ada46b4a6,17,BufferList node:internal/streams/buffer_list:14:14,0xe02923f960,~
script-source,61,node:internal/streams/buffer_list,'use strict';\n\nconst {\n  StringPrototypeSlice\x2C\n  SymbolIterator\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { inspect } = require('internal/util/inspect');\n\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  push(v) {\n    const entry = { data: v\x2C next: null };\n    if (this.length > 0)\n      this.tail.next = entry;\n    else\n      this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  }\n\n  unshift(v) {\n    const entry = { data: v\x2C next: this.head };\n    if (this.length === 0)\n      this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  }\n\n  shift() {\n    if (this.length === 0)\n      return;\n    const ret = this.head.data;\n    if (this.length === 1)\n      this.head = this.tail = null;\n    else\n      this.head = this.head.next;\n    --this.length;\n    return ret;\n  }\n\n  clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  }\n\n  join(s) {\n    if (this.length === 0)\n      return '';\n    let p = this.head;\n    let ret = '' + p.data;\n    while ((p = p.next) !== null)\n      ret += s + p.data;\n    return ret;\n  }\n\n  concat(n) {\n    if (this.length === 0)\n      return Buffer.alloc(0);\n    const ret = Buffer.allocUnsafe(n >>> 0);\n    let p = this.head;\n    let i = 0;\n    while (p) {\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n\x2C hasStrings) {\n    const data = this.head.data;\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0\x2C n);\n      this.head.data = data.slice(n);\n      return slice;\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift();\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\n  }\n\n  first() {\n    return this.head.data;\n  }\n\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data;\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = '';\n    let p = this.head;\n    let c = 0;\n    do {\n      const str = p.data;\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n      } else {\n        if (n === str.length) {\n          ret += str;\n          ++c;\n          if (p.next)\n            this.head = p.next;\n          else\n            this.head = this.tail = null;\n        } else {\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\n          this.head = p;\n          p.data = StringPrototypeSlice(str\x2C n);\n        }\n        break;\n      }\n      ++c;\n    } while ((p = p.next) !== null);\n    this.length -= c;\n    return ret;\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n);\n    const retLen = n;\n    let p = this.head;\n    let c = 0;\n    do {\n      const buf = p.data;\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n        n -= buf.length;\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n          ++c;\n          if (p.next)\n            this.head = p.next;\n          else\n            this.head = this.tail = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\n                                 retLen - n);\n          this.head = p;\n          p.data = buf.slice(n);\n        }\n        break;\n      }\n      ++c;\n    } while ((p = p.next) !== null);\n    this.length -= c;\n    return ret;\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\n    });\n  }\n};\n
code-source-info,0x3b7ada46b4a6,61,265,338,C0O274C1O284C5O296C6O306C10O318C11O330C16O337,,
code-creation,LazyCompile,10,804479,0x3b7ada46b616,98,construct node:internal/streams/destroy:225:19,0xe02922f0a0,~
script-source,56,node:internal/streams/destroy,'use strict';\n\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w.destroyed = true;\n  }\n  if (r) {\n    r.destroyed = true;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w.closed = true;\n    }\n    if (r) {\n      r.closed = true;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    const result = self._destroy(err || null\x2C onDestroy);\n    if (result != null) {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          function() {\n            process.nextTick(onDestroy\x2C null);\n          }\x2C\n          function(err) {\n            process.nextTick(onDestroy\x2C err);\n          });\n      }\n    }\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w.closeEmitted = true;\n  }\n  if (r) {\n    r.closeEmitted = true;\n  }\n\n  if ((w && w.emitClose) || (r && r.emitClose)) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\n    return;\n  }\n\n  if (w) {\n    w.errorEmitted = true;\n  }\n  if (r) {\n    r.errorEmitted = true;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = false;\n    r.endEmitted = false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.ended = false;\n    w.ending = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.finished = false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    return this;\n  }\n\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\n    stream.destroy(err);\n  else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r.constructed = false;\n  }\n  if (w) {\n    w.constructed = false;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r.constructed = true;\n    }\n    if (w) {\n      w.constructed = true;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      process.nextTick(emitConstructNT\x2C stream);\n    }\n  }\n\n  try {\n    const result = stream._construct(onConstruct);\n    if (result != null) {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          function() {\n            if (!called) {\n              process.nextTick(onConstruct\x2C null);\n            }\n          }\x2C\n          function(err) {\n            if (!called) {\n              process.nextTick(onConstruct\x2C err);\n            }\n          });\n      }\n    }\n  } catch (err) {\n    onConstruct(err);\n  }\n}\n\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct);\n}\n\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function';\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream) return;\n  if (isRequest(stream)) return stream.abort();\n  if (isRequest(stream.req)) return stream.req.abort();\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\n  if (typeof stream.close === 'function') return stream.close();\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\n};\n
code-source-info,0x3b7ada46b616,56,4626,5014,C0O4661C8O4694C9O4701C10O4726C15O4761C20O4780C24O4793C25O4807C29O4822C33O4835C34O4849C38O4872C45O4877C48O4872C54O4908C61O4922C64O4908C72O4934C77O4959C78O4966C79O4974C82O4982C90O4982C97O5013,,
tick,0x7f40773a70af,805087,0,0x0,3,0x11d7ee0,0x3b7ada46a8da,0x3b7ada46a58a,0x3b7ada46a00e,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,805285,0x3b7ada46b896,266,Writable node:internal/streams/writable:220:18,0x456f1087e58,~
script-source,65,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\n\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n} = require('internal/streams/state');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_STREAM_CANNOT_PIPE\x2C\n  ERR_STREAM_DESTROYED\x2C\n  ERR_STREAM_ALREADY_FINISHED\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n  ERR_STREAM_WRITE_AFTER_END\x2C\n  ERR_UNKNOWN_ENCODING\n} = require('internal/errors').codes;\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinished = Symbol('kOnFinished');\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Duplex streams are both readable and writable\x2C but share\n  // the same options object.\n  // However\x2C some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream\x2C\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\n  if (typeof isDuplex !== 'boolean')\n    isDuplex = stream instanceof Stream.Duplex;\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode);\n\n  if (isDuplex)\n    this.objectMode = this.objectMode ||\n      !!(options && options.writableObjectMode);\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  // if _final has been called.\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // At the start of calling end()\n  this.ending = false;\n  // When end() has been called\x2C and returned.\n  this.ended = false;\n  // When 'finish' is emitted.\n  this.finished = false;\n\n  // Has it been destroyed\n  this.destroyed = false;\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false);\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  this.writecb = null;\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  this.constructed = true;\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false;\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null;\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false;\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false;\n\n  this[kOnFinished] = [];\n}\n\nfunction resetBuffer(state) {\n  state.buffered = [];\n  state.bufferedIndex = 0;\n  state.allBuffers = true;\n  state.allNoop = true;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this.buffered.length - this.bufferedIndex;\n  }\n});\n\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes\x2C too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false\x2C as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor\x2C at least with V8 6.5.\n  const isDuplex = (this instanceof Stream.Duplex);\n\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n    if (options.signal)\n      addAbortSignalNoValidate(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  destroyImpl.construct(this\x2C () => {\n    const state = this._writableState;\n\n    if (!state.writing) {\n      clearBuffer(this\x2C state);\n    }\n\n    finishMaybe(this\x2C state);\n  });\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = state.defaultEncoding;\n  } else {\n    if (!encoding)\n      encoding = state.defaultEncoding;\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (typeof cb !== 'function')\n      cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n    }\n  }\n\n  let err;\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark;\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false;\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false;\n    }\n  } else {\n    state.writelen = len;\n    state.writecb = callback;\n    state.writing = true;\n    state.sync = true;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state.sync = false;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n  const sync = state.sync;\n  const cb = state.writecb;\n\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null &&\n          state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++;\n      } else {\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state.afterWriteTickInfo = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\n    state.needDrain;\n  if (needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb();\n  }\n\n  if (state.destroyed) {\n    errorBuffer(state);\n  }\n\n  finishMaybe(stream\x2C state);\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return;\n  }\n\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    const { chunk\x2C callback } = state.buffered[n];\n    const len = state.objectMode ? 1 : chunk.length;\n    state.length -= len;\n    callback(new ERR_STREAM_DESTROYED('write'));\n  }\n\n  const onfinishCallbacks = state[kOnFinished].splice(0);\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\n  }\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if (state.corked ||\n      state.bufferProcessing ||\n      state.destroyed ||\n      !state.constructed) {\n    return;\n  }\n\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state.bufferProcessing = true;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = state.allNoop ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = state.allBuffers;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && !state.writing);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true;\n    finishMaybe(this\x2C state\x2C true);\n    state.ended = true;\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb\x2C err);\n    } else {\n      state[kOnFinished].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.constructed &&\n          state.length === 0 &&\n          !state.errored &&\n          state.buffered.length === 0 &&\n          !state.finished &&\n          !state.writing &&\n          !state.errorEmitted &&\n          !state.closeEmitted);\n}\n\nfunction callFinal(stream\x2C state) {\n  let called = false;\n\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    state.pendingcb--;\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0);\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err);\n      }\n      errorOrDestroy(stream\x2C err\x2C state.sync);\n    } else if (needFinish(state)) {\n      state.prefinished = true;\n      stream.emit('prefinish');\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++;\n      process.nextTick(finish\x2C stream\x2C state);\n    }\n  }\n\n  state.sync = true;\n  state.pendingcb++;\n\n  try {\n    const result = stream._final(onFinish);\n    if (result != null) {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          function() {\n            if (!called) {\n              process.nextTick(onFinish\x2C null);\n            }\n          }\x2C\n          function(err) {\n            if (!called) {\n              process.nextTick(onFinish\x2C err);\n            }\n          });\n      }\n    }\n  } catch (err) {\n    onFinish(err);\n  }\n\n  state.sync = false;\n}\n\nfunction prefinish(stream\x2C state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true;\n      callFinal(stream\x2C state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0 && needFinish(state)) {\n      state.pendingcb++;\n      if (sync) {\n        process.nextTick(finish\x2C stream\x2C state);\n      } else {\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state.finished = true;\n\n  const onfinishCallbacks = state[kOnFinished].splice(0);\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]();\n  }\n\n  stream.emit('finish');\n\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value;\n      }\n    }\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\n        !w.ending && !w.ended;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\n  }\x2C\n\n  writableFinished: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.finished : false;\n    }\n  }\x2C\n\n  writableObjectMode: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.objectMode : false;\n    }\n  }\x2C\n\n  writableBuffer: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState && this._writableState.getBuffer();\n    }\n  }\x2C\n\n  writableEnded: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.ending : false;\n    }\n  }\x2C\n\n  writableNeedDrain: {\n    __proto__: null\x2C\n    get() {\n      const wState = this._writableState;\n      if (!wState) return false;\n      return !wState.destroyed && !wState.ending && wState.needDrain;\n    }\n  }\x2C\n\n  writableHighWaterMark: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState && this._writableState.highWaterMark;\n    }\n  }\x2C\n\n  writableCorked: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? this._writableState.corked : 0;\n    }\n  }\x2C\n\n  writableLength: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState && this._writableState.length;\n    }\n  }\x2C\n\n  writableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      );\n    }\n  }\x2C\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if (!state.destroyed &&\n    (state.bufferedIndex < state.buffered.length ||\n      state[kOnFinished].length)) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n
code-source-info,0x3b7ada46b896,65,7428,8948,C0O7428C9O8002C16O8019C19O8026C23O8008C27O8038C33O8056C44O8056C51O8112C58O8119C63O8141C64O8145C83O8167C88O8165C92O8214C96O8252C104O8280C107O8302C111O8292C115O8333C123O8362C126O8385C130O8375C134O8417C142O8447C145O8471C149O8461C153O8504C161O8532C164O8554C168O8544C172O8585C180O8617C183O8643C187O8633C191O8670C197O8684C204O8717C212O8684C217O8739C224O8746C232O8746C238O8770C245O8782C258O8782C265O8947,,
tick,0x7f407774b79d,806535,0,0x0,3,0x11d7ee0,0x3b7ada46a59a,0x3b7ada46a00e,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,806700,0x3b7ada46bd4e,341,WritableState node:internal/streams/writable:77:23,0x456f1087cf8,~
code-source-info,0x3b7ada46bd4e
code-creation,LazyCompile,10,806892,0x3b7ada46c15e,23,resetBuffer node:internal/streams/writable:202:21,0x456f1087d48,~
code-source-info,0x3b7ada46c15e,65,7005,7117,C0O7017C2O7032C6O7040C7O7060C11O7067C12O7084C16O7094C17O7108C22O7116,,
code-creation,LazyCompile,10,807023,0x3b7ada46c266,21,set node:internal/streams/readable:1175:8,0xe02923c378,~
code-source-info,0x3b7ada46c266,58,35825,35952,C0O35875C6O35906C13O35934C15O35930C20O35951,,
tick,0x7f40773a70af,807159,0,0x0,3,0x11d7ee0,0x15d5439,0x3b7ada46a5b5,0x3b7ada46a00e,0x3b7ada46968f,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,807207,0x3b7ada46c3be,131,createHandle node:net:146:22,0x24759bdcc068,~
code-source-info,0x3b7ada46c3be,116,3816,4176,C0O3836C13O3836C18O3879C23O3879C28O3902C30O3911C35O3929C42O3952C46O3964C49O3978C57O3987C60O4001C67O3936C72O4014C73O4022C75O4031C80O4048C87O4070C91O4082C94O4095C102O4104C105O4117C112O4055C117O4130C118O4138C125O4144C130O4138,,
code-creation,LazyCompile,10,807343,0x3b7ada46c55e,14,set node:net:1848:6,0x24759bdce1c0,~
code-source-info,0x3b7ada46c55e,116,49778,49811,C0O49784C2O49796C7O49805C13O49809,,
code-creation,LazyCompile,10,807422,0x3b7ada46c64e,8,get node:net:1847:6,0x24759bdce170,~
code-source-info,0x3b7ada46c64e,116,49743,49771,C0O49748C2O49760C4O49759C7O49769,,
code-creation,LazyCompile,10,807551,0x3b7ada46c7e6,196,Readable.on node:internal/streams/readable:874:33,0xe02923bcb0,~
code-source-info,0x3b7ada46c7e6,58,27740,28639,C0O27765C5O27772C10O27782C15O27785C29O27785C35O27826C40O27845C42O27852C47O28034C55O28034C62O28060C65O28027C69O28153C75O28161C80O28183C85O28183C91O28202C93O28209C98O28242C104O28263C110O28290C112O28335C118O28314C122O28349C123O28363C127O28378C128O28400C132O28415C140O28442C145O28456C150O28415C155O28482C161O28500C164O28500C170O28544C176O28563C179O28571C187O28571C193O28626C195O28637,,
code-creation,LazyCompile,10,807686,0x3b7ada46ca5e,135,initSocketHandle node:net:263:26,0x24759bdcc248,~
code-source-info,0x3b7ada46ca5e,116,6540,7118,C0O6556C5O6556C9O6572C10O6587C14O6673C20O6693C27O6701C32O6715C36O6732C43O6749C45O6747C49O6767C51O6772C57O6810C62O6791C66O6789C70O6839C72O6844C74O6843C78O6858C80O6894C82O6899C84O6898C88O6918C90O6959C94O6977C99O6982C105O7015C106O7022C107O7031C109O7036C114O7045C118O7075C123O7083C128O7083C134O7117,,
code-creation,LazyCompile,10,807813,0x3b7ada46cc8e,120,undestroy node:internal/streams/destroy:160:19,0xe02922efe0,~
code-source-info,0x3b7ada46cc8e,56,3064,3661,C0O3086C5O3119C10O3138C14O3151C15O3165C19O3177C20O3186C24O3199C25O3214C29O3227C30O3239C34O3252C35O3262C39O3274C40O3289C44O3302C45O3312C49O3325C50O3333C54O3346C55O3359C59O3375C63O3388C64O3402C68O3414C69O3426C73O3439C74O3448C78O3461C79O3476C83O3489C84O3499C88O3511C89O3526C93O3539C94O3547C98O3560C99O3569C103O3582C104O3596C108O3609C109O3623C113O3636C114O3647C119O3660,,
code-creation,LazyCompile,10,807951,0x3b7ada46cf06,32,getNewAsyncId node:net:165:23,0x24759bdcc0b8,~
code-source-info,0x3b7ada46cf06,116,4201,4317,C0O4214C4O4247C14O4280C17O4280C22O4302C27O4302C31O4315,,
code-creation,LazyCompile,10,808083,0x3b7ada46d01e,5,get /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/redir-stdout.js:19:10,0x3b7ada4693d8,~
code-source-info,0x3b7ada46d01e,189,392,404,C0O398C4O404,,
tick,0x1549280,808241,0,0x0,0,0x7ffe3d183188,0x3b7ada4696da,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,Function,11,808573,0x7f406004eda0,7896,realpathSync node:fs:2460:22,0x456f10bbac8,^
code-source-info,0x7f406004eda0,83,65535,69426,,,
code-creation,Function,11,808657,0x7f4060050ce0,72,isUint32 node:internal/validators:41:18,0x1d4983483d08,^
code-source-info,0x7f4060050ce0,16,811,856,,,
code-creation,Function,11,808727,0x7f4060050da0,72,isInt32 node:internal/validators:37:17,0x1d4983483880,^
code-source-info,0x7f4060050da0,16,749,792,,,
code-creation,Eval,10,809206,0x3b7ada46dd36,5, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/soft-exit.js:1:1,0x3b7ada46dbf0,~
script-source,190,/home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x3b7ada46dd36,190,0,85,C0O0C4O85,,
code-creation,Function,10,809483,0x3b7ada46ddd6,56, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/node_modules/0x/lib/preload/soft-exit.js:1:1,0x3b7ada46dcb0,~
code-source-info,0x3b7ada46ddd6,190,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
tick,0x7f40773a70af,809643,1,0xaf61c0,3,0xd3aa20,0x224cfd0dbb89,0x224cfd0db2df,0x224cfd0d9a45,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x7f4060049cc1,0x224cfd0c3253,0x224cfd0c3005,0xa26aa8f3dc,0xa26aa8aa6d
code-creation,LazyCompile,10,810150,0x3b7ada46e826,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:566:36,0xa26aa8d368,~
code-source-info,0x3b7ada46e826,100,18064,18286,C0O18071C8O18075C14O18120C17O18128C28O18128C34O18240C40O18240C45O18277C49O18285,,
code-creation,LazyCompile,10,810273,0x3b7ada46e94e,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x224cfd0c2390,~
code-source-info,0x3b7ada46e94e,129,2325,2630,C7O2341C14O2345C22O2375C25O2375C30O2421C33O2421C38O2457C40O2481C45O2492C50O2481C56O2593C61O2600C73O2600C79O2629,,
code-creation,LazyCompile,10,810353,0x3b7ada46eac6,68,resolveMainPath node:internal/modules/run_main:15:25,0x224cfd0c2250,~
code-source-info,0x3b7ada46eac6,129,398,812,C0O570C5O577C12O587C15O592C20O592C30O577C36O622C38O641C39O648C40O681C48O681C53O727C55O758C60O769C65O794C67O810,,
tick,0x1091f29,810479,0,0x0,0,0xf2e620,0x224cfd0c760b,0x224cfd0c7258,0x3b7ada46eae4,0x3b7ada46e967,0xa26aa8aa91
code-creation,LazyCompile,10,810608,0x3b7ada46ed4e,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x224cfd0c22a0,~
code-source-info,0x3b7ada46ed4e,129,841,1564,C0O1026C8O1026C13O1085C19O1092C24O1101C25O1113C26O1156C34O1156C39O1213C41O1245C46O1261C47O1273C48O1321C54O1337C60O1337C67O1384C68O1396C69O1399C75O1416C81O1416C88O1463C89O1476C90O1491C95O1491C100O1521C102O1539C107O1544C114O1549C117O1562,,
code-creation,Eval,10,810886,0x3b7ada46f216,5, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/app.js:1:1,0x3b7ada46f0b0,~
script-source,191,/home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/app.js,const http = require('node:http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req\x2C res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type'\x2C 'text/plain');\n  res.end('Hello\x2C World!\\n');\n});\n\nserver.listen(port\x2C hostname\x2C () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});
code-source-info,0x3b7ada46f216,191,0,346,C0O0C4O346,,
code-creation,Function,10,810975,0x3b7ada46f366,71, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/app.js:1:1,0x3b7ada46f190,~
code-source-info,0x3b7ada46f366,191,0,346,C0O0C11O13C14O13C19O53C21O53C23O79C27O79C29O106C39O106C45O248C56O261C64O248C70O345,,
code-creation,LazyCompile,10,811188,0x3b7ada46f5d6,19,createServer node:http:58:22,0x334da6593a58,~
code-source-info,0x3b7ada46f5d6,174,1965,2036,C0O1993C13O2000C18O2034,,
code-creation,LazyCompile,10,811358,0x3b7ada46f8c6,246,Server node:_http_server:393:16,0x3f792a6f8e38,~
code-source-info,0x3b7ada46f8c6,166,13600,14833,C0O13631C2O13642C7O13662C18O13669C23O13706C24O13710C30O13751C33O13782C38O13805C49O13863C57O13904C73O13910C78O13904C79O13973C82O13990C87O13990C93O14013C98O14017C103O14024C113O14084C121O14118C129O14166C137O14024C143O14195C147O14227C155O14227C161O14487C162O14510C166O14527C177O14527C183O14568C184O14581C188O14588C192O14610C196O14620C197O14641C201O14651C202O14677C206O14684C212O14704C216O14733C217O14753C221O14760C223O14765C228O14783C231O14816C236O14783C240O14781C245O14832,,
code-creation,LazyCompile,10,811521,0x3b7ada46fc56,287,Server node:net:1277:16,0x24759bdcc6a8,~
code-source-info,0x3b7ada46fc
tick,0x7f40773a70af,811715,0,0x0,3,0x11ed380,0x3b7ada46f5e3,0x3b7ada46f38d,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,811787,0x3b7ada46ff6e,101,storeHTTPOptions node:_http_server:378:26,0x3f792a6f8de8,~
code-source-info,0x3b7ada46ff6e,166,13037,13583,C0O13051C2O13056C5O13084C16O13103C18O13074C22O13122C24O13127C27O13154C38O13144C42O13221C47O13238C49O13275C62O13275C67O13329C69O13348C73O13403C78O13425C80O13467C88O13467C93O13536C95O13560C100O13582,,
code-creation,LazyCompile,10,812024,0x3b7ada47018e,75,parseUniqueHeadersOption node:_http_outgoing:587:34,0x334da6585290,~
code-source-info,0x3b7ada47018e,170,17980,18217,C0O17994C5O17999C11O18028C12O18040C13O18063C18O18063C24O18098C29O18121C31O18126C33O18126C38O18149C45O18153C50O18187C54O18153C59O18149C64O18132C69O18108C72O18201C74O18215,,
code-creation,LazyCompile,10,812221,0x3b7ada47048e,717,Server.listen node:net:1513:35,0x24759bdcdca8,~
code-source-info,0x3b7ada47048e
code-creation,LazyCompile,10,812382,0x3b7ada470aa6,183,normalizeArgs node:net:226:23,0x24759bdcc1f8,~
code-source-info,0x3b7ada470aa6,116,5739,6443,C0O5754C2O5771C8O5778C13O5791C18O5813C20O5817C24O5839C28O5851C30O5862C31O5883C32O5887C36O5908C38O5914C48O5995C55O6020C58O6024C64O6073C66O6086C72O6144C74O6157C78O6178C85O6185C92O6203C99O6229C101O6248C104O6242C108O6287C112O6294C115O6281C119O6302C123O6336C132O6343C143O6370C152O6377C161O6386C170O6394C172O6398C176O6420C180O6430C182O6441,,
code-creation,LazyCompile,10,812457,0x3b7ada470c7e,19,isPipeName node:net:171:20,0x24759bdcc108,~
code-source-info,0x3b7ada470c7e,116,4339,4403,C0O4347C9O4379C15O4391C18O4401,,
code-creation,LazyCompile,10,812560,0x3b7ada470d76,39,once node:events:646:44,0x1d49834a9458,~
code-source-info,0x3b7ada470d76,23,18886,18999,C0O18907C3O18907C7O18940C24O18949C30O18940C36O18985C38O18997,,
code-creation,LazyCompile,10,812642,0x3b7ada470f26,60,_onceWrap node:events:632:19,0x1d49834a9408,~
code-source-info,0x3b7ada470f26,23,18459,18682,C0O18502C6O18526C12O18537C18O18545C24O18551C31O18581C34O18593C39O18593C45O18608C47O18625C51O18639C53O18652C57O18665C59O18680,,
tick,0x7f40773a70af,812800,0,0x0,3,0x11d7ee0,0x3b7ada470d8e,0x3b7ada4704c1,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,812913,0x3b7ada47105e,23,toNumber node:net:1324:18,0x24759bdcc6f8,~
code-source-info,0x3b7ada47105e,116,34944,34992,C0O34950C5O34962C12O34973C22O34990,,
code-creation,LazyCompile,10,813020,0x3b7ada471156,19,getFlags node:net:142:18,0x24759bdcc018,~
code-source-info,0x3b7ada471156,116,3716,3793,C0O3731C1O3747C8O3758C11O3771C18O3791,,
code-creation,LazyCompile,10,813120,0x3b7ada47136e,138,addAbortSignalOption node:net:1260:30,0x24759bdcc658,~
code-source-info,0x3b7ada47136e,116,33142,33553,C0O33142C15O33162C22O33173C31O33203C32O33210C33O33217C40O33245C48O33217C53O33282C59O33322C63O33322C65O33355C68O33366C74O33381C79O33389C87O33389C94O33425C97O33432C108O33432C114O33474C117O33479C130O33479C137O33552,,
code-creation,LazyCompile,10,813215,0x3b7ada471606,83,lookupAndListen node:net:1622:25,0x24759bdcc900,~
code-source-info,0x3b7ada471606,116,44257,44645,C0O44257C25O44310C33O44333C41O44339C50O44337C58O44357C65O44361C70O44368C75O44361C82O44644,,
code-creation,Eval,10,813636,0x3b7ada472406,5, node:dns:1:1,0x3b7ada472060,~
script-source,192,node:dns,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst cares = internalBinding('cares_wrap');\nconst { toASCII } = require('internal/idna');\nconst { isIP } = require('internal/net');\nconst { customPromisifyArgs } = require('internal/util');\nconst errors = require('internal/errors');\nconst {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  Resolver\x2C\n  validateHints\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultVerbatim\x2C\n  setDefaultResultOrder\x2C\n  errorCodes: dnsErrorCodes\x2C\n} = require('internal/dns/utils');\nconst {\n  NODATA\x2C\n  FORMERR\x2C\n  SERVFAIL\x2C\n  NOTFOUND\x2C\n  NOTIMP\x2C\n  REFUSED\x2C\n  BADQUERY\x2C\n  BADNAME\x2C\n  BADFAMILY\x2C\n  BADRESP\x2C\n  CONNREFUSED\x2C\n  TIMEOUT\x2C\n  EOF\x2C\n  FILE\x2C\n  NOMEM\x2C\n  DESTRUCTION\x2C\n  BADSTR\x2C\n  BADFLAGS\x2C\n  NONAME\x2C\n  BADHINTS\x2C\n  NOTINITIALIZED\x2C\n  LOADIPHLPAPI\x2C\n  ADDRGETNETWORKPARAMS\x2C\n  CANCELLED\x2C\n} = dnsErrorCodes;\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_MISSING_ARGS\x2C\n} = errors.codes;\nconst {\n  validateCallback\x2C\n  validatePort\x2C\n  validateString\x2C\n  validateOneOf\x2C\n} = require('internal/validators');\n\nconst {\n  GetAddrInfoReqWrap\x2C\n  GetNameInfoReqWrap\x2C\n  QueryReqWrap\x2C\n} = cares;\n\nconst kPerfHooksDnsLookupContext = Symbol('kPerfHooksDnsLookupContext');\nconst kPerfHooksDnsLookupServiceContext = Symbol('kPerfHooksDnsLookupServiceContext');\nconst kPerfHooksDnsLookupResolveContext = Symbol('kPerfHooksDnsLookupResolveContext');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nconst dnsException = errors.dnsException;\n\nlet promises = null; // Lazy loaded\n\nfunction onlookup(err\x2C addresses) {\n  if (err) {\n    return this.callback(dnsException(err\x2C 'getaddrinfo'\x2C this.hostname));\n  }\n  this.callback(null\x2C addresses[0]\x2C this.family || isIP(addresses[0]));\n  if (this[kPerfHooksDnsLookupContext] && hasObserver('dns')) {\n    stopPerf(this\x2C kPerfHooksDnsLookupContext);\n  }\n}\n\n\nfunction onlookupall(err\x2C addresses) {\n  if (err) {\n    return this.callback(dnsException(err\x2C 'getaddrinfo'\x2C this.hostname));\n  }\n\n  const family = this.family;\n  for (let i = 0; i < addresses.length; i++) {\n    const addr = addresses[i];\n    addresses[i] = {\n      address: addr\x2C\n      family: family || isIP(addr)\n    };\n  }\n\n  this.callback(null\x2C addresses);\n  if (this[kPerfHooksDnsLookupContext] && hasObserver('dns')) {\n    stopPerf(this\x2C kPerfHooksDnsLookupContext);\n  }\n}\n\n\n// Easy DNS A/AAAA look up\n// lookup(hostname\x2C [options\x2C] callback)\nfunction lookup(hostname\x2C options\x2C callback) {\n  let hints = 0;\n  let family = -1;\n  let all = false;\n  let verbatim = getDefaultVerbatim();\n\n  // Parse arguments\n  if (hostname) {\n    validateString(hostname\x2C 'hostname');\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n    family = 0;\n  } else {\n    validateCallback(callback);\n\n    if (options !== null && typeof options === 'object') {\n      hints = options.hints >>> 0;\n      family = options.family >>> 0;\n      all = options.all === true;\n      if (typeof options.verbatim === 'boolean') {\n        verbatim = options.verbatim === true;\n      }\n\n      validateHints(hints);\n    } else {\n      family = options >>> 0;\n    }\n  }\n\n  validateOneOf(family\x2C 'family'\x2C [0\x2C 4\x2C 6]);\n\n  if (!hostname) {\n    emitInvalidHostnameWarning(hostname);\n    if (all) {\n      process.nextTick(callback\x2C null\x2C []);\n    } else {\n      process.nextTick(callback\x2C null\x2C null\x2C family === 6 ? 6 : 4);\n    }\n    return {};\n  }\n\n  const matchedFamily = isIP(hostname);\n  if (matchedFamily) {\n    if (all) {\n      process.nextTick(\n        callback\x2C null\x2C [{ address: hostname\x2C family: matchedFamily }]);\n    } else {\n      process.nextTick(callback\x2C null\x2C hostname\x2C matchedFamily);\n    }\n    return {};\n  }\n\n  const req = new GetAddrInfoReqWrap();\n  req.callback = callback;\n  req.family = family;\n  req.hostname = hostname;\n  req.oncomplete = all ? onlookupall : onlookup;\n\n  const err = cares.getaddrinfo(\n    req\x2C toASCII(hostname)\x2C family\x2C hints\x2C verbatim\n  );\n  if (err) {\n    process.nextTick(callback\x2C dnsException(err\x2C 'getaddrinfo'\x2C hostname));\n    return {};\n  }\n  if (hasObserver('dns')) {\n    const detail = {\n      hostname\x2C\n      family\x2C\n      hints\x2C\n      verbatim\x2C\n    };\n    startPerf(req\x2C kPerfHooksDnsLookupContext\x2C { type: 'dns'\x2C name: 'lookup'\x2C detail });\n  }\n  return req;\n}\n\nObjectDefineProperty(lookup\x2C customPromisifyArgs\x2C\n                     { __proto__: null\x2C value: ['address'\x2C 'family']\x2C enumerable: false });\n\n\nfunction onlookupservice(err\x2C hostname\x2C service) {\n  if (err)\n    return this.callback(dnsException(err\x2C 'getnameinfo'\x2C this.hostname));\n\n  this.callback(null\x2C hostname\x2C service);\n  if (this[kPerfHooksDnsLookupServiceContext] && hasObserver('dns')) {\n    stopPerf(this\x2C kPerfHooksDnsLookupServiceContext);\n  }\n}\n\n\nfunction lookupService(address\x2C port\x2C callback) {\n  if (arguments.length !== 3)\n    throw new ERR_MISSING_ARGS('address'\x2C 'port'\x2C 'callback');\n\n  if (isIP(address) === 0)\n    throw new ERR_INVALID_ARG_VALUE('address'\x2C address);\n\n  validatePort(port);\n\n  validateCallback(callback);\n\n  port = +port;\n\n  const req = new GetNameInfoReqWrap();\n  req.callback = callback;\n  req.hostname = address;\n  req.port = port;\n  req.oncomplete = onlookupservice;\n\n  const err = cares.getnameinfo(req\x2C address\x2C port);\n  if (err) throw dnsException(err\x2C 'getnameinfo'\x2C address);\n  if (hasObserver('dns')) {\n    startPerf(req\x2C kPerfHooksDnsLookupServiceContext\x2C {\n      type: 'dns'\x2C\n      name: 'lookupService'\x2C\n      detail: {\n        host: address\x2C\n        port\x2C\n      }\x2C\n    });\n  }\n  return req;\n}\n\nObjectDefineProperty(lookupService\x2C customPromisifyArgs\x2C\n                     { __proto__: null\x2C value: ['hostname'\x2C 'service']\x2C enumerable: false });\n\n\nfunction onresolve(err\x2C result\x2C ttls) {\n  if (ttls && this.ttl)\n    result = ArrayPrototypeMap(\n      result\x2C (address\x2C index) => ({ address\x2C ttl: ttls[index] }));\n\n  if (err)\n    this.callback(dnsException(err\x2C this.bindingName\x2C this.hostname));\n  else {\n    this.callback(null\x2C result);\n    if (this[kPerfHooksDnsLookupResolveContext] && hasObserver('dns')) {\n      stopPerf(this\x2C kPerfHooksDnsLookupResolveContext);\n    }\n  }\n}\n\nfunction resolver(bindingName) {\n  function query(name\x2C /* options\x2C */ callback) {\n    let options;\n    if (arguments.length > 2) {\n      options = callback;\n      callback = arguments[2];\n    }\n\n    validateString(name\x2C 'name');\n    validateCallback(callback);\n\n    const req = new QueryReqWrap();\n    req.bindingName = bindingName;\n    req.callback = callback;\n    req.hostname = name;\n    req.oncomplete = onresolve;\n    req.ttl = !!(options && options.ttl);\n    const err = this._handle[bindingName](req\x2C toASCII(name));\n    if (err) throw dnsException(err\x2C bindingName\x2C name);\n    if (hasObserver('dns')) {\n      startPerf(req\x2C kPerfHooksDnsLookupResolveContext\x2C {\n        type: 'dns'\x2C\n        name: bindingName\x2C\n        detail: {\n          host: name\x2C\n          ttl: req.ttl\x2C\n        }\x2C\n      });\n    }\n    return req;\n  }\n  ObjectDefineProperty(query\x2C 'name'\x2C { __proto__: null\x2C value: bindingName });\n  return query;\n}\n\nconst resolveMap = ObjectCreate(null);\nResolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\nResolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\nResolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\nResolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\nResolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\nResolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\nResolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\nResolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\nResolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\nResolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\nResolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\nResolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\nResolver.prototype.reverse = resolver('getHostByAddr');\n\nResolver.prototype.resolve = resolve;\n\nfunction resolve(hostname\x2C rrtype\x2C callback) {\n  let resolver;\n  if (typeof rrtype === 'string') {\n    resolver = resolveMap[rrtype];\n  } else if (typeof rrtype === 'function') {\n    resolver = resolveMap.A;\n    callback = rrtype;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('rrtype'\x2C 'string'\x2C rrtype);\n  }\n\n  if (typeof resolver === 'function') {\n    return ReflectApply(resolver\x2C this\x2C [hostname\x2C callback]);\n  }\n  throw new ERR_INVALID_ARG_VALUE('rrtype'\x2C rrtype);\n}\n\nfunction defaultResolverSetServers(servers) {\n  const resolver = new Resolver();\n\n  resolver.setServers(servers);\n  setDefaultResolver(resolver);\n  bindDefaultResolver(module.exports\x2C Resolver.prototype);\n\n  if (promises !== null)\n    bindDefaultResolver(promises\x2C promises.Resolver.prototype);\n}\n\nmodule.exports = {\n  lookup\x2C\n  lookupService\x2C\n\n  Resolver\x2C\n  setDefaultResultOrder\x2C\n  setServers: defaultResolverSetServers\x2C\n\n  // uv_getaddrinfo flags\n  ADDRCONFIG: cares.AI_ADDRCONFIG\x2C\n  ALL: cares.AI_ALL\x2C\n  V4MAPPED: cares.AI_V4MAPPED\x2C\n\n  // ERROR CODES\n  NODATA\x2C\n  FORMERR\x2C\n  SERVFAIL\x2C\n  NOTFOUND\x2C\n  NOTIMP\x2C\n  REFUSED\x2C\n  BADQUERY\x2C\n  BADNAME\x2C\n  BADFAMILY\x2C\n  BADRESP\x2C\n  CONNREFUSED\x2C\n  TIMEOUT\x2C\n  EOF\x2C\n  FILE\x2C\n  NOMEM\x2C\n  DESTRUCTION\x2C\n  BADSTR\x2C\n  BADFLAGS\x2C\n  NONAME\x2C\n  BADHINTS\x2C\n  NOTINITIALIZED\x2C\n  LOADIPHLPAPI\x2C\n  ADDRGETNETWORKPARAMS\x2C\n  CANCELLED\x2C\n};\n\nbindDefaultResolver(module.exports\x2C getDefaultResolver());\n\nObjectDefineProperties(module.exports\x2C {\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      if (promises === null) {\n        promises = require('internal/dns/promises');\n      }\n      return promises;\n    }\n  }\n});\n
code-source-info,0x3b7ada472406,192,0,10903,C0O0C4O10903,,
code-creation,Function,10,814265,0x3b7ada472f6e,1540, node:dns:1:1,0x3b7ada472380,~
code-source-info,0x3b7ada472f6e
tick,0x7f407732ae33,814422,1,0xb53890,3,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3b7ada47162f,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
tick,0x1119ff0,814948,1,0xb53890,2,0xd3aa20,0x7f4060044a18,0x7f40600432df,0x3b7ada47308d,0x7f4060044ae0,0x7f40600432df,0x3b7ada47162f,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,Eval,10,815205,0x3b7ada474ff6,5, node:internal/dns/utils:1:1,0x3b7ada474cc0,~
script-source,193,node:internal/dns/utils,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst { isIP } = require('internal/net');\nconst { getOptionValue } = require('internal/options');\nconst {\n  validateArray\x2C\n  validateInt32\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst {\n  ChannelWrap\x2C\n  strerror\x2C\n  AI_ADDRCONFIG\x2C\n  AI_ALL\x2C\n  AI_V4MAPPED\x2C\n} = internalBinding('cares_wrap');\nconst IANA_DNS_PORT = 53;\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\nconst {\n  ERR_DNS_SET_SERVERS_FAILED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_IP_ADDRESS\x2C\n} = errors.codes;\n\nfunction validateTimeout(options) {\n  const { timeout = -1 } = { ...options };\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1\x2C 2 ** 31 - 1);\n  return timeout;\n}\n\nfunction validateTries(options) {\n  const { tries = 4 } = { ...options };\n  validateInt32(tries\x2C 'options.tries'\x2C 1\x2C 2 ** 31 - 1);\n  return tries;\n}\n\n// Resolver instances correspond 1:1 to c-ares channels.\nclass Resolver {\n  constructor(options = undefined) {\n    const timeout = validateTimeout(options);\n    const tries = validateTries(options);\n    this._handle = new ChannelWrap(timeout\x2C tries);\n  }\n\n  cancel() {\n    this._handle.cancel();\n  }\n\n  getServers() {\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      if (!val[1] || val[1] === IANA_DNS_PORT)\n        return val[0];\n\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\n      return `${host}:${val[1]}`;\n    });\n  }\n\n  setServers(servers) {\n    validateArray(servers\x2C 'servers');\n\n    // Cache the original servers because in the event of an error while\n    // setting the servers\x2C c-ares won't have any servers available for\n    // resolution.\n    const orig = this._handle.getServers() || [];\n    const newSet = [];\n\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\n      validateString(serv\x2C `servers[${index}]`);\n      let ipVersion = isIP(serv);\n\n      if (ipVersion !== 0)\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\n\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\n\n      // Check for an IPv6 in brackets.\n      if (match) {\n        ipVersion = isIP(match[1]);\n\n        if (ipVersion !== 0) {\n          const port = NumberParseInt(\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\n        }\n      }\n\n      // addr::port\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\n\n      if (addrSplitMatch) {\n        const hostIP = addrSplitMatch[1];\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\n\n        ipVersion = isIP(hostIP);\n\n        if (ipVersion !== 0) {\n          return ArrayPrototypePush(\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\n        }\n      }\n\n      throw new ERR_INVALID_IP_ADDRESS(serv);\n    });\n\n    const errorNumber = this._handle.setServers(newSet);\n\n    if (errorNumber !== 0) {\n      // Reset the servers to the old servers\x2C because ares probably unset them.\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\n      const err = strerror(errorNumber);\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\n    }\n  }\n\n  setLocalAddress(ipv4\x2C ipv6) {\n    validateString(ipv4\x2C 'ipv4');\n\n    if (ipv6 !== undefined) {\n      validateString(ipv6\x2C 'ipv6');\n    }\n\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\n  }\n}\n\nlet defaultResolver = new Resolver();\nconst resolverKeys = [\n  'getServers'\x2C\n  'resolve'\x2C\n  'resolve4'\x2C\n  'resolve6'\x2C\n  'resolveAny'\x2C\n  'resolveCaa'\x2C\n  'resolveCname'\x2C\n  'resolveMx'\x2C\n  'resolveNaptr'\x2C\n  'resolveNs'\x2C\n  'resolvePtr'\x2C\n  'resolveSoa'\x2C\n  'resolveSrv'\x2C\n  'resolveTxt'\x2C\n  'reverse'\x2C\n];\n\nfunction getDefaultResolver() {\n  return defaultResolver;\n}\n\nfunction setDefaultResolver(resolver) {\n  defaultResolver = resolver;\n}\n\nfunction bindDefaultResolver(target\x2C source) {\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\n  });\n}\n\nfunction validateHints(hints) {\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\n  }\n}\n\nlet invalidHostnameWarningEmitted = false;\nfunction emitInvalidHostnameWarning(hostname) {\n  if (!invalidHostnameWarningEmitted) {\n    process.emitWarning(\n      `The provided hostname "${hostname}" is not a valid ` +\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0118'\n    );\n    invalidHostnameWarningEmitted = true;\n  }\n}\n\nlet dnsOrder = getOptionValue('--dns-result-order') || 'ipv4first';\n\nfunction getDefaultVerbatim() {\n  switch (dnsOrder) {\n    case 'verbatim':\n      return true;\n    case 'ipv4first':\n    default:\n      return false;\n  }\n}\n\nfunction setDefaultResultOrder(value) {\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\n  dnsOrder = value;\n}\n\n// ERROR CODES\nconst errorCodes = {\n  NODATA: 'ENODATA'\x2C\n  FORMERR: 'EFORMERR'\x2C\n  SERVFAIL: 'ESERVFAIL'\x2C\n  NOTFOUND: 'ENOTFOUND'\x2C\n  NOTIMP: 'ENOTIMP'\x2C\n  REFUSED: 'EREFUSED'\x2C\n  BADQUERY: 'EBADQUERY'\x2C\n  BADNAME: 'EBADNAME'\x2C\n  BADFAMILY: 'EBADFAMILY'\x2C\n  BADRESP: 'EBADRESP'\x2C\n  CONNREFUSED: 'ECONNREFUSED'\x2C\n  TIMEOUT: 'ETIMEOUT'\x2C\n  EOF: 'EOF'\x2C\n  FILE: 'EFILE'\x2C\n  NOMEM: 'ENOMEM'\x2C\n  DESTRUCTION: 'EDESTRUCTION'\x2C\n  BADSTR: 'EBADSTR'\x2C\n  BADFLAGS: 'EBADFLAGS'\x2C\n  NONAME: 'ENONAME'\x2C\n  BADHINTS: 'EBADHINTS'\x2C\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\n  CANCELLED: 'ECANCELLED'\x2C\n};\n\nmodule.exports = {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  validateTimeout\x2C\n  validateTries\x2C\n  Resolver\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultVerbatim\x2C\n  setDefaultResultOrder\x2C\n  errorCodes\x2C\n};\n
code-source-info,0x3b7ada474ff6,193,0,6033,C0O0C4O6033,,
code-creation,Function,10,815594,0x3b7ada475b5e,493, node:internal/dns/utils:1:1,0x3b7ada474f70,~
code-source-info,0x3b7ada475b5e,193,0,6033,C0O0C140O25C146O50C152O72C158O93C164O115C170O140C176O158C182O181C188O244C191O244C196O289C199O289C204O280C210O341C213O341C218O322C223O451C226O451C231O380C237O397C243O414C249O431C255O564C258O564C263O493C269O508C275O520C281O537C287O547C293O617C295O617C297O636C301O636C303O674C307O674C309O796C314O706C320O736C326O761C378O3648C380O3648C385O3648C387O3685C391O3685C393O4426C394O4426C396O4803C399O4803C407O4803C409O5173C414O5788C421O5809C427O5832C433O5854C439O5876C445O5893C451O5912C457O5929C463O5941C469O5971C475O5993C481O6018C487O5803C492O6032,,
tick,0xe631a6,816047,0,0x0,0,0x11e7ab0,0x3b7ada475c87,0x7f4060044ae0,0x7f40600432df,0x3b7ada47308d,0x7f4060044ae0,0x7f40600432df,0x3b7ada47162f,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,816169,0x3b7ada4768c6,50,Resolver node:internal/dns/utils:53:14,0x3b7ada4752f8,~
code-source-info,0x3b7ada4768c6,193,1203,1370,C10O1247C13O1247C18O1291C21O1291C26O1319C28O1338C39O1334C44O1332C49O1369,,
code-creation,LazyCompile,10,816292,0x3b7ada4771ee,43,validateTimeout node:internal/dns/utils:39:25,0x3b7ada475028,~
code-source-info,0x3b7ada4771ee,193,828,964,C0O867C5O850C14O885C35O885C40O947C42O962,,
code-creation,LazyCompile,10,816376,0x3b7ada47732e,43,validateTries node:internal/dns/utils:45:23,0x3b7ada475078,~
code-source-info,0x3b7ada47732e,193,988,1114,C0O1024C5O1010C14O1042C35O1042C40O1099C42O1112,,
code-creation,LazyCompile,10,816630,0x3b7ada4775be,46,resolver node:dns:288:18,0x3b7ada472618,~
code-source-info,0x3b7ada4775be,192,7356,8265,C0O7356C14O8170C24O8191C31O8232C38O8170C43O8250C45O8263,,
code-creation,Function,11,816773,0x7f4060050e60,384,resolver node:dns:288:18,0x3b7ada472618,^
code-source-info,0x7f4060050e60,192,7356,8265,,,
code-creation,Function,11,816879,0x7f4060051040,160,isUint8Array node:internal/util/types:13:22,0x1d4983485250,^
code-source-info,0x7f4060051040,17,257,342,,,
code-creation,Function,11,816943,0x7f4060051140,592,alignPool node:buffer:163:19,0x1d49834b4380,^
code-source-info,0x7f4060051140,24,4119,4223,,,
code-creation,Function,11,816996,0x7f4060051400,156,checkListener node:events:265:23,0x1d49834a8b90,^
code-source-info,0x7f4060051400,23,7730,7786,,,
code-creation,Function,11,817046,0x7f4060051500,128,addListener node:events:604:58,0x1d49834a9280,^
code-source-info,0x7f4060051500,23,17710,17782,,,
code-creation,Function,11,817153,0x7f40600515e0,188,isURLInstance node:internal/url:1509:23,0x3e83b616f190,^
code-source-info,0x7f40600515e0,39,42025,42122,,,
tick,0x7f40773a70af,817282,0,0x0,0,0x11e14a0,0x3b7ada4775eb,0x3b7ada47333e,0x7f4060044ae0,0x7f40600432df,0x3b7ada47162f,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,Function,11,817364,0x7f4060051700,396, node:internal/fs/utils:689:40,0x1d94759c9818,^
code-source-info,0x7f4060051700,84,18705,18826,,,
code-creation,Function,11,817452,0x7f4060051900,560,handleErrorFromBinding node:internal/fs/utils:343:32,0x1d94759c8da0,^
code-source-info,0x7f4060051900,84,7973,8471,,,
code-creation,LazyCompile,10,817875,0x3b7ada478916,5,getDefaultResolver node:internal/dns/utils:160:28,0x3b7ada4750c8,~
code-source-info,0x3b7ada478916,193,3950,3982,C0O3957C4O3980,,
code-creation,LazyCompile,10,818134,0x3b7ada478a5e,39,bindDefaultResolver node:internal/dns/utils:168:29,0x3b7ada475168,~
code-source-info,0x3b7ada478a5e,193,4085,4231,C0O4085C13O4106C24O4128C32O4106C38O4230,,
tick,0x7f40773a70af,818412,0,0x0,3,0x11d7ee0,0x3b7ada473526,0x7f4060044ae0,0x7f40600432df,0x3b7ada47162f,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,818492,0x3b7ada478b96,37, node:internal/dns/utils:169:39,0x3b7ada4789a8,~
code-source-info,0x3b7ada478b96,193,4142,4227,C0O4157C7O4171C15O4199C23O4206C26O4171C31O4169C36O4226,,
code-creation,LazyCompile,10,819066,0x3b7ada47902e,518,lookup node:dns:141:16,0x3b7ada4724d8,~
code-source-info,0x3b7ada47902e
tick,0xf59841,819413,0,0x0,3,0x11d7ee0,0x3b7ada47903a,0x3b7ada471651,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,819623,0x3b7ada47941e,25,getDefaultVerbatim node:internal/dns/utils:195:28,0x3b7ada475258,~
code-source-info,0x3b7ada47941e,193,4884,5011,C0O4891C21O4938C22O4950C23O4992C24O5005,,
code-creation,LazyCompile,10,819779,0x3b7ada4794f6,26,isIP node:internal/net:39:14,0x24759bdd4e80,~
code-source-info,0x3b7ada4794f6,117,1142,1215,C0O1150C3O1154C9O1165C11O1174C12O1177C15O1181C21O1192C23O1201C24O1204C25O1213,,
code-creation,LazyCompile,10,819853,0x3b7ada4795f6,16,isIPv4 node:internal/net:31:16,0x24759bdd4de0,~
code-source-info,0x3b7ada4795f6,117,1012,1061,C0O1020C7O1047C10O1027C15O1059,,
code-creation,LazyCompile,10,820070,0x3b7ada47985e,368,nextTick node:internal/process/task_queues:104:18,0x3e83b6151328,~
script-source,32,node:internal/process/task_queues,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n} = primordials;\n\nconst {\n  // For easy access to the nextTick state in the C++ land\x2C\n  // and to avoid unnecessary calls into JS land.\n  tickInfo\x2C\n  // Used to run V8's micro task queue.\n  runMicrotasks\x2C\n  setTickCallback\x2C\n  enqueueMicrotask\n} = internalBinding('task_queue');\n\nconst {\n  setHasRejectionToWarn\x2C\n  hasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\n} = require('internal/process/promises');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\n} = require('internal/async_hooks');\nconst FixedQueue = require('internal/fixed_queue');\n\nconst {\n  validateCallback\x2C\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { AsyncResource } = require('async_hooks');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasTickScheduled = 0;\n\nfunction hasTickScheduled() {\n  return tickInfo[kHasTickScheduled] === 1;\n}\n\nfunction setHasTickScheduled(value) {\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\n}\n\nconst queue = new FixedQueue();\n\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\nfunction runNextTicks() {\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    runMicrotasks();\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    return;\n\n  processTicksAndRejections();\n}\n\nfunction processTicksAndRejections() {\n  let tock;\n  do {\n    while ((tock = queue.shift()) !== null) {\n      const asyncId = tock[async_id_symbol];\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch (args.length) {\n            case 1: callback(args[0]); break;\n            case 2: callback(args[0]\x2C args[1]); break;\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\n            default: callback(...args);\n          }\n        }\n      } finally {\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n      }\n\n      emitAfter(asyncId);\n    }\n    runMicrotasks();\n  } while (!queue.isEmpty() || processPromiseRejections());\n  setHasTickScheduled(false);\n  setHasRejectionToWarn(false);\n}\n\n// `nextTick()` will not enqueue any callback when the process is about to\n// exit since the callback would not have a chance to be executed.\nfunction nextTick(callback) {\n  validateCallback(callback);\n\n  if (process._exiting)\n    return;\n\n  let args;\n  switch (arguments.length) {\n    case 1: break;\n    case 2: args = [arguments[1]]; break;\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\n    default:\n      args = new Array(arguments.length - 1);\n      for (let i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n  }\n\n  if (queue.isEmpty())\n    setHasTickScheduled(true);\n  const asyncId = newAsyncId();\n  const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    [async_id_symbol]: asyncId\x2C\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args\n  };\n  if (initHooksExist())\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n\nfunction runMicrotask() {\n  this.runInAsyncScope(() => {\n    const callback = this.callback;\n    try {\n      callback();\n    } finally {\n      this.emitDestroy();\n    }\n  });\n}\n\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\n\nfunction queueMicrotask(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  const asyncResource = new AsyncResource(\n    'Microtask'\x2C\n    defaultMicrotaskResourceOpts\n  );\n  asyncResource.callback = callback;\n\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\n}\n\nmodule.exports = {\n  setupTaskQueue() {\n    // Sets the per-isolate promise rejection callback\n    listenForRejections();\n    // Sets the callback to be run in every tick.\n    setTickCallback(processTicksAndRejections);\n    return {\n      nextTick\x2C\n      runNextTicks\n    };\n  }\x2C\n  queueMicrotask\n};\n
code-source-info,0x3b7ada47985e
code-creation,LazyCompile,10,820423,0x3b7ada479b46,21, node:internal/validators:231:42,0x1d49834842b0,~
code-source-info,0x3b7ada479b46,16,7162,7263,C0O7180C6O7220C13O7226C18O7220C20O7262,,
tick,0x7f40773a70af,820628,0,0x0,3,0x11d7ee0,0x3b7ada479865,0x3b7ada479165,0x3b7ada471651,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,820744,0x3b7ada479c46,15,isEmpty node:internal/fixed_queue:95:10,0x3e83b61563a0,~
script-source,34,node:internal/fixed_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n
code-source-info,0x3b7ada479c46,34,3637,3677,C0O3658C5O3663C10O3663C14O3673,,
code-creation,LazyCompile,10,821041,0x3b7ada479d3e,13,isEmpty node:internal/fixed_queue:67:10,0x3e83b6156130,~
code-source-info,0x3b7ada479d3e,34,3084,3129,C0O3105C5O3118C9O3109C12O3125,,
code-creation,LazyCompile,10,821124,0x3b7ada479e2e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x3e83b6151238,~
code-source-info,0x3b7ada479e2e,32,1104,1162,C0O1116C7O1125C12O1146C19O1144C24O1161,,
code-creation,LazyCompile,10,821210,0x3b7ada479f26,23,newAsyncId node:internal/async_hooks:416:20,0x2ac2210791a8,~
script-source,13,node:internal/async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectDefineProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst promiseHooks = require('internal/promise_hooks');\n\nconst async_wrap = internalBinding('async_wrap');\nconst { setCallbackTrampoline } = async_wrap;\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\n * hooks for each type.\n *\n * async_id_fields is a Float64Array wrapping the double array of\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\n * the various asynchronous states of the application. These are:\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\n *    current execution stack.\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\n *    the resource corresponding to the current execution stack.\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\n *    of retrieving the triggerAsyncId value is:\n *    1. the value passed directly to the constructor\n *    2. value set in kDefaultTriggerAsyncId\n *    3. executionAsyncId of the current resource.\n *\n * async_ids_stack is a Float64Array that contains part of the async ID\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\n * popAsyncContext() call removes two doubles from it.\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\n * side are used instead in pushAsyncContext() and popAsyncContext().\n */\nconst {\n  async_hook_fields\x2C\n  async_id_fields\x2C\n  execution_async_resources\n} = async_wrap;\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\n// responsible for the current execution stack. This is unwound as each resource\n// exits. In the case of a fatal exception this stack is emptied after calling\n// each hook's after() callback.\nconst {\n  pushAsyncContext: pushAsyncContext_\x2C\n  popAsyncContext: popAsyncContext_\x2C\n  executionAsyncResource: executionAsyncResource_\x2C\n  clearAsyncIdStack\x2C\n} = async_wrap;\n// Properties in active_hooks are used to keep track of the set of hooks being\n// executed in case another hook is enabled/disabled. The new set of hooks is\n// then restored once the active set of hooks is finished executing.\nconst active_hooks = {\n  // Array of all AsyncHooks that will be iterated whenever an async event\n  // fires. Using var instead of (preferably const) in order to assign\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\n  // execution.\n  array: []\x2C\n  // Use a counter to track nested calls of async hook callbacks and make sure\n  // the active_hooks.array isn't altered mid execution.\n  call_depth: 0\x2C\n  // Use to temporarily store and updated active_hooks.array if the user\n  // enables or disables a hook while hooks are being processed. If a hook is\n  // enabled() or disabled() during hook execution then the current set of\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\n  // subsequent changes are on the duplicated array. When all hooks have\n  // completed executing active_hooks.tmp_array is assigned to\n  // active_hooks.array.\n  tmp_array: null\x2C\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\n  // is written back to async_hook_fields when active_hooks.array is restored.\n  tmp_fields: null\n};\n\nconst { registerDestroyHook } = async_wrap;\nconst { enqueueMicrotask } = internalBinding('task_queue');\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\n\n// Each constant tracks how many callbacks there are for any given step of\n// async execution. These are tracked so if the user didn't include callbacks\n// for a given step\x2C that step can bail out early.\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\n} = async_wrap.constants;\n\nconst { async_id_symbol\x2C\n        trigger_async_id_symbol } = internalBinding('symbols');\n\n// Lazy load of internal/util/inspect;\nlet inspect;\n\n// Used in AsyncHook and AsyncResource.\nconst init_symbol = Symbol('init');\nconst before_symbol = Symbol('before');\nconst after_symbol = Symbol('after');\nconst destroy_symbol = Symbol('destroy');\nconst promise_resolve_symbol = Symbol('promiseResolve');\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\nconst emitPromiseResolveNative =\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\n\nlet domain_cb;\nfunction useDomainTrampoline(fn) {\n  domain_cb = fn;\n}\n\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\n  const index = async_hook_fields[kStackLength] - 1;\n  execution_async_resources[index] = resource;\n\n  if (asyncId !== 0 && hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n\n  let result;\n  if (asyncId === 0 && typeof domain_cb === 'function') {\n    args.unshift(cb);\n    result = domain_cb.apply(this\x2C args);\n  } else {\n    result = cb.apply(this\x2C args);\n  }\n\n  if (asyncId !== 0 && hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  execution_async_resources.pop();\n  return result;\n}\n\nconst topLevelResource = {};\n\nfunction executionAsyncResource() {\n  // Indicate to the native layer that this function is likely to be used\x2C\n  // in which case it will inform JS about the current async resource via\n  // the trampoline above.\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\n\n  const index = async_hook_fields[kStackLength] - 1;\n  if (index === -1) return topLevelResource;\n  const resource = execution_async_resources[index] ||\n    executionAsyncResource_(index);\n  return lookupPublicResource(resource);\n}\n\nfunction inspectExceptionValue(e) {\n  inspect ??= require('internal/util/inspect').inspect;\n  return { message: inspect(e) };\n}\n\n// Used to fatally abort the process if a callback throws.\nfunction fatalError(e) {\n  if (typeof e?.stack === 'string') {\n    process._rawDebug(e.stack);\n  } else {\n    const o = inspectExceptionValue(e);\n    ErrorCaptureStackTrace(o\x2C fatalError);\n    process._rawDebug(o.stack);\n  }\n\n  const { getOptionValue } = require('internal/options');\n  if (getOptionValue('--abort-on-uncaught-exception')) {\n    process.abort();\n  }\n  process.exit(1);\n}\n\nfunction lookupPublicResource(resource) {\n  if (typeof resource !== 'object' || resource === null) return resource;\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\n  // AsyncWrap instances.\n  const publicResource = resource[resource_symbol];\n  if (publicResource !== undefined)\n    return publicResource;\n  return resource;\n}\n\n// Emit From Native //\n\n// Used by C++ to call all init() callbacks. Because some state can be setup\n// from C++ there's no need to perform all the same operations as in\n// emitInitScript.\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  active_hooks.call_depth += 1;\n  resource = lookupPublicResource(resource);\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\n        active_hooks.array[i][init_symbol](\n          asyncId\x2C type\x2C triggerAsyncId\x2C\n          resource\n        );\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\n  // will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\n// Called from native. The asyncId stack handling is taken care of there\n// before this is called.\nfunction emitHook(symbol\x2C asyncId) {\n  active_hooks.call_depth += 1;\n  // Use a single try/catch for all hook to avoid setting up one per\n  // iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][symbol] === 'function') {\n        active_hooks.array[i][symbol](asyncId);\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case\n  // active_hooks.tmp_array will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\nfunction emitHookFactory(symbol\x2C name) {\n  const fn = emitHook.bind(undefined\x2C symbol);\n\n  // Set the name property of the function as it looks good in the stack trace.\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: name\n  });\n  return fn;\n}\n\n// Manage Active Hooks //\n\nfunction getHookArrays() {\n  if (active_hooks.call_depth === 0)\n    return [active_hooks.array\x2C async_hook_fields];\n  // If this hook is being enabled while in the middle of processing the array\n  // of currently active hooks then duplicate the current set of active hooks\n  // and store this there. This shouldn't fire until the next time hooks are\n  // processed.\n  if (active_hooks.tmp_array === null)\n    storeActiveHooks();\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\n}\n\n\nfunction storeActiveHooks() {\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\n  // 4. So do this the long way.\n  active_hooks.tmp_fields = [];\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\n}\n\nfunction copyHooks(destination\x2C source) {\n  destination[kInit] = source[kInit];\n  destination[kBefore] = source[kBefore];\n  destination[kAfter] = source[kAfter];\n  destination[kDestroy] = source[kDestroy];\n  destination[kPromiseResolve] = source[kPromiseResolve];\n}\n\n\n// Then restore the correct hooks array in case any hooks were added/removed\n// during hook callback execution.\nfunction restoreActiveHooks() {\n  active_hooks.array = active_hooks.tmp_array;\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\n\n  active_hooks.tmp_array = null;\n  active_hooks.tmp_fields = null;\n}\n\nfunction trackPromise(promise\x2C parent) {\n  if (promise[async_id_symbol]) {\n    return;\n  }\n\n  // Get trigger id from parent async id before making the async id of the\n  // child so if a new one must be made it will be lower than the child.\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\n    getDefaultTriggerAsyncId();\n\n  promise[async_id_symbol] = newAsyncId();\n  promise[trigger_async_id_symbol] = triggerAsyncId;\n}\n\nfunction promiseInitHook(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const triggerAsyncId = promise[trigger_async_id_symbol];\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\n}\n\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\n  promiseInitHook(promise\x2C parent);\n  destroyTracking(promise\x2C parent);\n}\n\nfunction destroyTracking(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  registerDestroyHook(promise\x2C asyncId);\n}\n\nfunction promiseBeforeHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  const triggerId = promise[trigger_async_id_symbol];\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\n}\n\nfunction promiseAfterHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  if (hasHooks(kAfter)) {\n    emitAfterNative(asyncId);\n  }\n  if (asyncId === executionAsyncId()) {\n    // This condition might not be true if async_hooks was enabled during\n    // the promise callback execution.\n    // Popping it off the stack can be skipped in that case\x2C because it is\n    // known that it would correspond to exactly one call with\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\n    popAsyncContext(asyncId);\n  }\n}\n\nfunction promiseResolveHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  emitPromiseResolveNative(asyncId);\n}\n\nlet wantPromiseHook = false;\nfunction enableHooks() {\n  async_hook_fields[kCheck] += 1;\n\n  setCallbackTrampoline(callbackTrampoline);\n}\n\nlet stopPromiseHook;\nfunction updatePromiseHookMode() {\n  wantPromiseHook = true;\n  let initHook;\n  if (initHooksExist()) {\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\n      promiseInitHook;\n  } else if (destroyHooksExist()) {\n    initHook = destroyTracking;\n  }\n  if (stopPromiseHook) stopPromiseHook();\n  stopPromiseHook = promiseHooks.createHook({\n    init: initHook\x2C\n    before: promiseBeforeHook\x2C\n    after: promiseAfterHook\x2C\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\n  });\n}\n\nfunction disableHooks() {\n  async_hook_fields[kCheck] -= 1;\n\n  wantPromiseHook = false;\n\n  setCallbackTrampoline();\n\n  // Delay the call to `disablePromiseHook()` because we might currently be\n  // between the `before` and `after` calls of a Promise.\n  enqueueMicrotask(disablePromiseHookIfNecessary);\n}\n\nfunction disablePromiseHookIfNecessary() {\n  if (!wantPromiseHook && stopPromiseHook) {\n    stopPromiseHook();\n  }\n}\n\n// Internal Embedder API //\n\n// Increment the internal id counter and return the value. Important that the\n// counter increment first. Since it's done the same way in\n// Environment::new_async_uid()\nfunction newAsyncId() {\n  return ++async_id_fields[kAsyncIdCounter];\n}\n\nfunction getOrSetAsyncId(object) {\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\n    return object[async_id_symbol];\n  }\n\n  return object[async_id_symbol] = newAsyncId();\n}\n\n\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\n// the user to safeguard this call and make sure it's zero'd out when the\n// constructor is complete.\nfunction getDefaultTriggerAsyncId() {\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\n  if (defaultTriggerAsyncId < 0)\n    return async_id_fields[kExecutionAsyncId];\n  return defaultTriggerAsyncId;\n}\n\n\nfunction clearDefaultTriggerAsyncId() {\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\n}\n\n/**\n * Sets a default top level trigger ID to be used\n *\n * @template {Array<unknown>} T\n * @template {unknown} R\n * @param {number} triggerAsyncId\n * @param { (...T: args) => R } block\n * @param  {T} args\n * @returns {R}\n */\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\n  if (triggerAsyncId === undefined)\n    return block.apply(null\x2C args);\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\n  // CHECK(triggerAsyncId > 0)\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\n\n  try {\n    return block.apply(null\x2C args);\n  } finally {\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\n  }\n}\n\nfunction hasHooks(key) {\n  return async_hook_fields[key] > 0;\n}\n\nfunction enabledHooksExist() {\n  return hasHooks(kCheck);\n}\n\nfunction initHooksExist() {\n  return hasHooks(kInit);\n}\n\nfunction afterHooksExist() {\n  return hasHooks(kAfter);\n}\n\nfunction destroyHooksExist() {\n  return hasHooks(kDestroy);\n}\n\nfunction promiseResolveHooksExist() {\n  return hasHooks(kPromiseResolve);\n}\n\n\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  // Short circuit all checks for the common case. Which is that no hooks have\n  // been set. Do this to remove performance impact for embedders (and core).\n  if (!hasHooks(kInit))\n    return;\n\n  if (triggerAsyncId === null) {\n    triggerAsyncId = getDefaultTriggerAsyncId();\n  }\n\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n\n  if (hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n}\n\n\nfunction emitAfterScript(asyncId) {\n  if (hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  popAsyncContext(asyncId);\n}\n\n\nfunction emitDestroyScript(asyncId) {\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\n  if (!hasHooks(kDestroy) || asyncId <= 0)\n    return;\n  async_wrap.queueDestroyAsyncId(asyncId);\n}\n\n\nfunction hasAsyncIdStack() {\n  return hasHooks(kStackLength);\n}\n\n\n// This is the equivalent of the native push_async_ids() call.\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\n  const offset = async_hook_fields[kStackLength];\n  execution_async_resources[offset] = resource;\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\n  async_hook_fields[kStackLength]++;\n  async_id_fields[kExecutionAsyncId] = asyncId;\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\n}\n\n\n// This is the equivalent of the native pop_async_ids() call.\nfunction popAsyncContext(asyncId) {\n  const stackLength = async_hook_fields[kStackLength];\n  if (stackLength === 0) return false;\n\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\n    // Do the same thing as the native code (i.e. crash hard).\n    return popAsyncContext_(asyncId);\n  }\n\n  const offset = stackLength - 1;\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\n  execution_async_resources.pop();\n  async_hook_fields[kStackLength] = offset;\n  return offset > 0;\n}\n\n\nfunction executionAsyncId() {\n  return async_id_fields[kExecutionAsyncId];\n}\n\nfunction triggerAsyncId() {\n  return async_id_fields[kTriggerAsyncId];\n}\n\n\nmodule.exports = {\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  getHookArrays\x2C\n  symbols: {\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n    promise_resolve_symbol\x2C owner_symbol\n  }\x2C\n  constants: {\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\n  }\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getOrSetAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  afterHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit: emitInitScript\x2C\n  emitBefore: emitBeforeScript\x2C\n  emitAfter: emitAfterScript\x2C\n  emitDestroy: emitDestroyScript\x2C\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  registerDestroyHook\x2C\n  useDomainTrampoline\x2C\n  nativeHooks: {\n    init: emitInitNative\x2C\n    before: emitBeforeNative\x2C\n    after: emitAfterNative\x2C\n    destroy: emitDestroyNative\x2C\n    promise_resolve: emitPromiseResolveNative\n  }\x2C\n  asyncWrap: {\n    Providers: async_wrap.Providers\x2C\n  }\n};\n
code-source-info,0x3b7ada479f26,13,14473,14524,C0O14480C7O14505C16O14520C22O14522,,
tick,0xf9a328,822231,0,0x0,3,0x11d7ee0,0x3b7ada47995a,0x3b7ada479165,0x3b7ada471651,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,822353,0x3b7ada47a04e,35,getDefaultTriggerAsyncId node:internal/async_hooks:432:34,0x2ac221079248,~
code-source-info,0x3b7ada47a04e,13,14932,15189,C0O14969C7O14985C9O14984C13O15078C14O15104C19O15113C26O15136C28O15135C31O15155C32O15158C34O15187,,
code-creation,LazyCompile,10,822466,0x3b7ada47a15e,13,initHooksExist node:internal/async_hooks:478:24,0x2ac221079438,~
code-source-info,0x3b7ada47a15e,13,16153,16185,C0O16160C5O16176C8O16167C12O16183,,
code-creation,LazyCompile,10,822532,0x3b7ada47a246,16,hasHooks node:internal/async_hooks:470:18,0x2ac221079398,~
code-source-info,0x3b7ada47a246,13,16021,16067,C0O16031C7O16055C12O16061C15O16065,,
code-creation,LazyCompile,10,822614,0x3b7ada47a356,59,push node:internal/fixed_queue:99:7,0x3e83b61563f0,~
code-source-info,0x3b7ada47a356,34,3685,3945,C0O3707C5O3712C10O3712C16O3871C23O3887C26O3883C32O3881C38O3864C42O3925C47O3930C52O3930C58O3944,,
tick,0x7f40773a70af,822786,0,0x0,3,0x11d7ee0,0x3b7ada4799c7,0x3b7ada479165,0x3b7ada471651,0x3b7ada470611,0x3b7ada46f3a6,0x224cfd0d9ba9,0x224cfd0d6023,0x224cfd0d54c6,0x224cfd0c44d0,0x3b7ada46e997,0xa26aa8aa91
code-creation,LazyCompile,10,822925,0x3b7ada47a49e,24,isFull node:internal/fixed_queue:71:9,0x3e83b6156180,~
code-source-info,0x3b7ada47a49e,34,3139,3200,C0O3162C4O3166C10O3173C12O3171C16O3189C20O3180C23O3196,,
code-creation,LazyCompile,10,823035,0x3b7ada47a5ae,37,push node:internal/fixed_queue:75:7,0x3e83b61561e8,~
code-source-info,0x3b7ada47a5ae,34,3208,3291,C0O3226C5O3236C12O3241C16O3270C20O3274C26O3281C28O3279C31O3262C36O3290,,
code-creation,LazyCompile,10,823200,0x3b7ada47a75e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x3e83b61512d8,~
code-source-info,0x3b7ada47a75e
code-creation,LazyCompile,10,823294,0x3b7ada47aa36,43,shift node:internal/fixed_queue:108:8,0x3e83b6156440,~
code-source-info,0x3b7ada47aa36,34,3954,4180,C0O3981C5O4009C10O4009C15O4031C20O4031C26O4049C32O4148C36O4141C40O4164C42O4176,,
code-creation,LazyCompile,10,823360,0x3b7ada47ab7e,54,shift node:internal/fixed_queue:80:8,0x3e83b6156250,~
code-source-info,0x3b7ada47ab7e,34,3300,3510,C0O3331C5O3341C9O3335C13O3354C15O3388C16O3400C17O3410C22O3420C28O3428C32O3465C36O3472C42O3479C44O3477C47O3457C51O3490C53O3506,,
code-creation,LazyCompile,10,823430,0x3b7ada47acb6,42,emitBeforeScript node:internal/async_hooks:509:26,0x2ac2210795e8,~
code-source-info,0x3b7ada47acb6,13,16823,16974,C0O16863C12O16863C17O16919C22O16932C25O16923C31O16946C36O16946C41O16973,,
code-creation,LazyCompile,10,823466,0x3b7ada47ae06,180,pushAsyncContext node:internal/async_hooks:539:26,0x2ac221079790,~
code-source-info,0x3b7ada47ae06,13,17467,18012,C0O17522C7O17540C9O17539C13O17557C20O17591C24O17605C26O17616C32O17623C35O17634C40O17650C44O17620C49O17662C54O17669C59O17712C60O17715C65O17726C72O17749C78O17756C83O17772C85O17771C88O17754C92O17794C97O17805C104O17828C107O17832C113O17839C118O17855C120O17854C123O17837C127O17875C134O17893C142O17906C146O17912C153O17928C158O17947C162O17960C169O17976C174O17993C179O18011,,
code-creation,LazyCompile,10,823549,0x3b7ada47aff6,70,doListen node:net:1624:40,0x3b7ada471550,~
code-source-info,0x3b7ada47aff6,116,44394,44641,C0O44423C4O44440C7O44445C15O44445C23O44484C35O44526C63O44526C69O44640,,
code-creation,LazyCompile,10,823653,0x3b7ada47b2de,209,listenInCluster node:net:1470:25,0x24759bdcc888,~
code-source-info,0x3b7ada47b2de,116,39139,40375,C0O39139C38O39245C44O39273C52O39300C60O39310C69O39308C77O39333C84O39345C92O39358C94O39533C97O39540C120O39540C125O39602C126O39609C127O39637C134O39652C140O39671C146O39694C152O39715C158O39723C164O39734C174O39750C181O39821C188O39829C202O39829C208O40374,,
tick,0x12544f6,823816,0,0x0,2,0x11d7ee0,0x3b7ada47b356,0x3b7ada47b035,0x3b7ada47a7fa
code-creation,LazyCompile,10,823966,0x3b7ada47b61e,443,setupListenHandle node:net:1385:27,0x24759bdcc798,~
code-source-info,0x3b7ada47b61e,116,36540,38865,C0O36593C23O36593C28O36810C34O36825C42O36825C48O36891C56O36891C60O36952C62O37040C72O37088C77O37114C92O37095C98O37161C102O37201C104O37222C110O37259C116O37299C122O37336C126O37372C130O37397C148O37404C154O37468C160O37520C177O37520C183O37582C186O37590C200O37590C205O37632C206O37639C207O37650C209O37663C213O37678C215O37683C221O37721C226O37702C230O37700C234O37738C241O37759C245O37782C252O37790C257O37804C261O38036C266O38044C273O38051C280O38044C286O38071C288O38097C305O38097C311O38161C316O38169C321O38169C325O38182C326O38195C330O38207C337O38239C339O38238C346O38296C360O38207C365O38427C366O38434C367O38512C369O38546C375O38552C381O38562C387O38568C390O38532C394O38656C400O38673C405O38673C409O38685C416O38717C418O38716C425O38772C436O38685C442O38864,,
code-creation,LazyCompile,10,824130,0x3b7ada47b9a6,10, node:net:39:63,0x24759bdcca18,~
code-source-info,0x3b7ada47b9a6,116,1480,1505,C0O1492C2O1498C9O1504,,
code-creation,LazyCompile,10,824280,0x3b7ada47bbf6,379,createServerHandle node:net:1327:28,0x24759bdcc748,~
code-source-info,0x3b7ada47bbf
code-creation,LazyCompile,10,824517,0x3b7ada47bfde,121,defaultTriggerAsyncIdScope node:internal/async_hooks:455:36,0x2ac221079318,~
code-source-info,0x3b7ada47bfde,13,15544,16002,C0O15544C11O15581C15O15632C22O15632C28O15650C29O15765C36O15781C38O15780C42O15808C49O15824C54O15848C61O15892C68O15892C86O15929C93O15945C98O15969C120O16001,,
code-creation,LazyCompile,10,824623,0x3b7ada47c14e,13,destroyHooksExist node:internal/async_hooks:486:27,0x2ac2210794f8,~
code-source-info,0x3b7ada47c14e,13,16272,16307,C0O16279C5O16295C8O16286C12O16305,,
code-creation,LazyCompile,10,824673,0x3b7ada47c23e,32,emitAfterScript node:internal/async_hooks:517:25,0x2ac221079638,~
code-source-info,0x3b7ada47c23e,13,17001,17097,C0O17015C5O17028C8O17019C14O17041C19O17041C23O17070C26O17070C31O17096,,
code-creation,LazyCompile,10,824797,0x3b7ada47c3a6,167,popAsyncContext node:internal/async_hooks:553:25,0x2ac2210797e0,~
code-source-info,0x3b7ada47c3a6,13,18101,18688,C0O18135C7O18153C9O18152C13O18170C14O18186C19O18193C20O18206C21O18210C24O18214C31O18237C36O18253C38O18252C44O18272C49O18354C54O18361C58O18387C59O18410C61O18422C65O18429C72O18445C77O18466C80O18477C87O18495C90O18492C93O18464C97O18508C104O18524C109O18543C112O18554C119O18572C122O18581C125O18569C128O18541C132O18589C137O18615C142O18615C146O18624C153O18642C158O18656C162O18668C163O18682C166O18686,,
tick,0x7f40773a70af,824943,0,0x0,3,0x11d7ee0,0x3b7ada47c258,0x3b7ada47a858
code-creation,LazyCompile,10,825029,0x3b7ada47c586,13,enabledHooksExist node:internal/async_hooks:474:27,0x2ac2210793e8,~
code-source-info,0x3b7ada47c586,13,16095,16128,C0O16102C5O16118C8O16109C12O16126,,
code-creation,LazyCompile,10,825123,0x3b7ada47c67e,21,emitListeningNT node:net:1463:25,0x24759bdcc838,~
code-source-info,0x3b7ada47c67e,116,39021,39112,C0O39074C6O39092C14O39092C20O39111,,
code-creation,LazyCompile,10,825195,0x3b7ada47c7b6,95,onceWrapper node:events:622:21,0x1d49834a93b8,~
code-source-info,0x3b7ada47c7b6,23,18195,18439,C0O18195C2O18212C8O18230C13O18237C18O18257C23O18268C28O18237C34O18281C35O18292C39O18318C45O18325C50O18350C55O18359C60O18369C65O18359C70O18377C71O18394C76O18403C81O18414C86O18403C92O18433C94O18438,,
code-creation,LazyCompile,10,825314,0x3b7ada47c976,307,removeListener node:events:675:28,0x1d49834a9520,~
code-source-info,0x3b7ada47c
code-creation,LazyCompile,10,825462,0x3b7ada47cc66,49, /home/abdel/Github/nodejs/Guide/Diagnostics - Flame Graphs/app.js:12:31,0x3b7ada46f298,~
code-source-info,0x3b7ada47cc66,191,271,344,C0O281C4O289C14O321C29O333C42O289C48O343,,
code-creation,LazyCompile,10,825716,0x3b7ada47cd8e,38,log node:internal/console/constructor:375:6,0x3e83b615fe08,~
code-source-info,0x3b7ada47cd8e,37,11530,11614,C0O11530C3O11546C5O11551C7O11550C13O11568C18O11585C20O11584C24O11602C30O11567C37O11613,,
code-creation,LazyCompile,10,825810,0x3b7ada47cec6,50,value node:internal/console/constructor:336:20,0x3e83b615fca8,~
code-source-info,0x3b7ada47cec6,37,10076,10248,C0O10104C2O10109C4O10108C8O10134C13O10128C19O10150C24O10150C29O10191C36O10211C44O10198C49O10242,,
code-creation,LazyCompile,10,825845,0x3b7ada47cfde,27,get node:internal/console/constructor:208:14,0xa26aa9b060,~
code-source-info,0x3b7ada47cfde,37,5926,6018,C0O5943C6O5956C9O5972C16O5963C22O5992C26O6006,,
code-creation,LazyCompile,10,825938,0x3b7ada47d13e,96,value node:internal/console/constructor:314:20,0x3e83b615fc20,~
code-source-info,0x3b7ada47d13e,37,9494,9976,C0O9523C2O9528C4O9527C8O9547C10O9557C15O9594C21O9629C29O9679C34O9679C41O9695C48O9739C53O9750C58O9750C64O9767C66O9802C72O9836C74O9851C78O9878C80O9893C81O9909C87O9924C93O9947C95O9970,,
tick,0x7f40773a70af,826091,0,0x0,3,0x11d7ee0,0x3b7ada47ced3,0x3b7ada47cda6,0xc0c690,0x3b7ada47cc90,0x3b7ada47c7f7,0xa26aaa1ff2,0x3b7ada47c68c,0x3b7ada47a7d1
code-creation,LazyCompile,10,826172,0x3b7ada47d2fe,38,formatWithOptions node:internal/util/inspect:2101:27,0x1d498349e198,~
script-source,20,node:internal/util/inspect,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeUnshift\x2C\n  BigIntPrototypeValueOf\x2C\n  BooleanPrototypeValueOf\x2C\n  DatePrototypeGetTime\x2C\n  DatePrototypeToISOString\x2C\n  DatePrototypeToString\x2C\n  ErrorPrototypeToString\x2C\n  FunctionPrototypeCall\x2C\n  FunctionPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGetSize\x2C\n  MapPrototypeEntries\x2C\n  MathFloor\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathRound\x2C\n  MathSqrt\x2C\n  MathTrunc\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  NumberParseFloat\x2C\n  NumberParseInt\x2C\n  NumberPrototypeValueOf\x2C\n  Object\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectPrototypePropertyIsEnumerable\x2C\n  ObjectSeal\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectOwnKeys\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  RegExpPrototypeToString\x2C\n  SafeStringIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SetPrototypeGetSize\x2C\n  SetPrototypeValues\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeNormalize\x2C\n  StringPrototypePadEnd\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  StringPrototypeValueOf\x2C\n  SymbolPrototypeToString\x2C\n  SymbolPrototypeValueOf\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n  Uint8Array\x2C\n  globalThis\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst {\n  getOwnNonIndexProperties\x2C\n  getPromiseDetails\x2C\n  getProxyDetails\x2C\n  kPending\x2C\n  kRejected\x2C\n  previewEntries\x2C\n  getConstructorName: internalGetConstructorName\x2C\n  getExternalValue\x2C\n  propertyFilter: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\n  }\n} = internalBinding('util');\n\nconst {\n  customInspectSymbol\x2C\n  isError\x2C\n  join\x2C\n  removeColors\n} = require('internal/util');\n\nconst {\n  isStackOverflowError\n} = require('internal/errors');\n\nconst {\n  isAsyncFunction\x2C\n  isGeneratorFunction\x2C\n  isAnyArrayBuffer\x2C\n  isArrayBuffer\x2C\n  isArgumentsObject\x2C\n  isBoxedPrimitive\x2C\n  isDataView\x2C\n  isExternal\x2C\n  isMap\x2C\n  isMapIterator\x2C\n  isModuleNamespaceObject\x2C\n  isNativeError\x2C\n  isPromise\x2C\n  isSet\x2C\n  isSetIterator\x2C\n  isWeakMap\x2C\n  isWeakSet\x2C\n  isRegExp\x2C\n  isDate\x2C\n  isTypedArray\x2C\n  isStringObject\x2C\n  isNumberObject\x2C\n  isBooleanObject\x2C\n  isBigIntObject\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nlet hexSlice;\nlet internalUrl;\n\nfunction pathToFileUrlHref(filepath) {\n  internalUrl ??= require('internal/url');\n  return internalUrl.pathToFileURL(filepath).href;\n}\n\nconst builtInObjects = new SafeSet(\n  ArrayPrototypeFilter(\n    ObjectGetOwnPropertyNames(globalThis)\x2C\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\n  )\n);\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\n\n// These options must stay in sync with `getUserOptions`. So if any option will\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\nconst inspectDefaultOptions = ObjectSeal({\n  showHidden: false\x2C\n  depth: 2\x2C\n  colors: false\x2C\n  customInspect: true\x2C\n  showProxy: false\x2C\n  maxArrayLength: 100\x2C\n  maxStringLength: 10000\x2C\n  breakLength: 80\x2C\n  compact: 3\x2C\n  sorted: false\x2C\n  getters: false\x2C\n  numericSeparator: false\x2C\n});\n\nconst kObjectType = 0;\nconst kArrayType = 1;\nconst kArrayExtrasType = 2;\n\n/* eslint-disable no-control-regex */\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\n/* eslint-enable no-control-regex */\n\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\n\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\n\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\n\nconst kMinLineLength = 16;\n\n// Constants to map the iterator state.\nconst kWeak = 0;\nconst kIterator = 1;\nconst kMapEntries = 2;\n\n// Escaped control characters (plus the single quote and the backslash). Use\n// empty strings to fill up unused entries.\nconst meta = [\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\n];\n\n// Regex used for ansi escape code splitting\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\n// Matches all ansi escape code sequences in a string\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\nconst ansi = new RegExp(ansiPattern\x2C 'g');\n\nlet getStringWidth;\n\nfunction getUserOptions(ctx\x2C isCrossContext) {\n  const ret = {\n    stylize: ctx.stylize\x2C\n    showHidden: ctx.showHidden\x2C\n    depth: ctx.depth\x2C\n    colors: ctx.colors\x2C\n    customInspect: ctx.customInspect\x2C\n    showProxy: ctx.showProxy\x2C\n    maxArrayLength: ctx.maxArrayLength\x2C\n    maxStringLength: ctx.maxStringLength\x2C\n    breakLength: ctx.breakLength\x2C\n    compact: ctx.compact\x2C\n    sorted: ctx.sorted\x2C\n    getters: ctx.getters\x2C\n    numericSeparator: ctx.numericSeparator\x2C\n    ...ctx.userOptions\n  };\n\n  // Typically\x2C the target value will be an instance of `Object`. If that is\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\n  // to avoid passing it objects from this Context in that case\x2C so we remove\n  // the prototype from the returned object itself + the `stylize()` function\x2C\n  // and remove all other non-primitives\x2C including non-primitive user options.\n  if (isCrossContext) {\n    ObjectSetPrototypeOf(ret\x2C null);\n    for (const key of ObjectKeys(ret)) {\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\n          ret[key] !== null) {\n        delete ret[key];\n      }\n    }\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\n      let stylized;\n      try {\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\n      } catch {\n        // Continue regardless of error.\n      }\n\n      if (typeof stylized !== 'string') return value;\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\n      return stylized;\n    }\x2C null);\n  }\n\n  return ret;\n}\n\n/**\n * Echos the value of any input. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {any} value The value to print out.\n * @param {object} opts Optional options object that alters the output.\n */\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\nfunction inspect(value\x2C opts) {\n  // Default options\n  const ctx = {\n    budget: {}\x2C\n    indentationLvl: 0\x2C\n    seen: []\x2C\n    currentDepth: 0\x2C\n    stylize: stylizeNoColor\x2C\n    showHidden: inspectDefaultOptions.showHidden\x2C\n    depth: inspectDefaultOptions.depth\x2C\n    colors: inspectDefaultOptions.colors\x2C\n    customInspect: inspectDefaultOptions.customInspect\x2C\n    showProxy: inspectDefaultOptions.showProxy\x2C\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\n    breakLength: inspectDefaultOptions.breakLength\x2C\n    compact: inspectDefaultOptions.compact\x2C\n    sorted: inspectDefaultOptions.sorted\x2C\n    getters: inspectDefaultOptions.getters\x2C\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\n  };\n  if (arguments.length > 1) {\n    // Legacy...\n    if (arguments.length > 2) {\n      if (arguments[2] !== undefined) {\n        ctx.depth = arguments[2];\n      }\n      if (arguments.length > 3 && arguments[3] !== undefined) {\n        ctx.colors = arguments[3];\n      }\n    }\n    // Set user-specified options\n    if (typeof opts === 'boolean') {\n      ctx.showHidden = opts;\n    } else if (opts) {\n      const optKeys = ObjectKeys(opts);\n      for (let i = 0; i < optKeys.length; ++i) {\n        const key = optKeys[i];\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\n        // this function public or add a new API with a similar or better\n        // functionality.\n        if (\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\n          key === 'stylize') {\n          ctx[key] = opts[key];\n        } else if (ctx.userOptions === undefined) {\n          // This is required to pass through the actual user input.\n          ctx.userOptions = opts;\n        }\n      }\n    }\n  }\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n  return formatValue(ctx\x2C value\x2C 0);\n}\ninspect.custom = customInspectSymbol;\n\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\n  __proto__: null\x2C\n  get() {\n    return inspectDefaultOptions;\n  }\x2C\n  set(options) {\n    validateObject(options\x2C 'options');\n    return ObjectAssign(inspectDefaultOptions\x2C options);\n  }\n});\n\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n// Each color consists of an array with the color code as first entry and the\n// reset code as second entry.\nconst defaultFG = 39;\nconst defaultBG = 49;\ninspect.colors = ObjectAssign(ObjectCreate(null)\x2C {\n  reset: [0\x2C 0]\x2C\n  bold: [1\x2C 22]\x2C\n  dim: [2\x2C 22]\x2C // Alias: faint\n  italic: [3\x2C 23]\x2C\n  underline: [4\x2C 24]\x2C\n  blink: [5\x2C 25]\x2C\n  // Swap foreground and background colors\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\n  hidden: [8\x2C 28]\x2C // Alias: conceal\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\n  black: [30\x2C defaultFG]\x2C\n  red: [31\x2C defaultFG]\x2C\n  green: [32\x2C defaultFG]\x2C\n  yellow: [33\x2C defaultFG]\x2C\n  blue: [34\x2C defaultFG]\x2C\n  magenta: [35\x2C defaultFG]\x2C\n  cyan: [36\x2C defaultFG]\x2C\n  white: [37\x2C defaultFG]\x2C\n  bgBlack: [40\x2C defaultBG]\x2C\n  bgRed: [41\x2C defaultBG]\x2C\n  bgGreen: [42\x2C defaultBG]\x2C\n  bgYellow: [43\x2C defaultBG]\x2C\n  bgBlue: [44\x2C defaultBG]\x2C\n  bgMagenta: [45\x2C defaultBG]\x2C\n  bgCyan: [46\x2C defaultBG]\x2C\n  bgWhite: [47\x2C defaultBG]\x2C\n  framed: [51\x2C 54]\x2C\n  overlined: [53\x2C 55]\x2C\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\n  redBright: [91\x2C defaultFG]\x2C\n  greenBright: [92\x2C defaultFG]\x2C\n  yellowBright: [93\x2C defaultFG]\x2C\n  blueBright: [94\x2C defaultFG]\x2C\n  magentaBright: [95\x2C defaultFG]\x2C\n  cyanBright: [96\x2C defaultFG]\x2C\n  whiteBright: [97\x2C defaultFG]\x2C\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\n  bgRedBright: [101\x2C defaultBG]\x2C\n  bgGreenBright: [102\x2C defaultBG]\x2C\n  bgYellowBright: [103\x2C defaultBG]\x2C\n  bgBlueBright: [104\x2C defaultBG]\x2C\n  bgMagentaBright: [105\x2C defaultBG]\x2C\n  bgCyanBright: [106\x2C defaultBG]\x2C\n  bgWhiteBright: [107\x2C defaultBG]\x2C\n});\n\nfunction defineColorAlias(target\x2C alias) {\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\n    __proto__: null\x2C\n    get() {\n      return this[target];\n    }\x2C\n    set(value) {\n      this[target] = value;\n    }\x2C\n    configurable: true\x2C\n    enumerable: false\n  });\n}\n\ndefineColorAlias('gray'\x2C 'grey');\ndefineColorAlias('gray'\x2C 'blackBright');\ndefineColorAlias('bgGray'\x2C 'bgGrey');\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\ndefineColorAlias('dim'\x2C 'faint');\ndefineColorAlias('strikethrough'\x2C 'crossedout');\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\ndefineColorAlias('hidden'\x2C 'conceal');\ndefineColorAlias('inverse'\x2C 'swapColors');\ndefineColorAlias('inverse'\x2C 'swapcolors');\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\n\n// TODO(BridgeAR): Add function style support for more complex styles.\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = ObjectAssign(ObjectCreate(null)\x2C {\n  special: 'cyan'\x2C\n  number: 'yellow'\x2C\n  bigint: 'yellow'\x2C\n  boolean: 'yellow'\x2C\n  undefined: 'grey'\x2C\n  null: 'bold'\x2C\n  string: 'green'\x2C\n  symbol: 'green'\x2C\n  date: 'magenta'\x2C\n  // "name": intentionally not styling\n  // TODO(BridgeAR): Highlight regular expressions properly.\n  regexp: 'red'\x2C\n  module: 'underline'\n});\n\nfunction addQuotes(str\x2C quotes) {\n  if (quotes === -1) {\n    return `"${str}"`;\n  }\n  if (quotes === -2) {\n    return `\\`${str}\\``;\n  }\n  return `'${str}'`;\n}\n\nfunction escapeFn(str) {\n  const charCode = StringPrototypeCharCodeAt(str);\n  return meta.length > charCode ? meta[charCode] : `\\\\u${charCode.toString(16)}`;\n}\n\n// Escape control characters\x2C single quotes and the backslash.\n// This is similar to JSON stringify escaping.\nfunction strEscape(str) {\n  let escapeTest = strEscapeSequencesRegExp;\n  let escapeReplace = strEscapeSequencesReplacer;\n  let singleQuote = 39;\n\n  // Check for double quotes. If not present\x2C do not escape single quotes and\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\n  // backticks. If they do not exist\x2C use those as fallback instead of the\n  // double quotes.\n  if (StringPrototypeIncludes(str\x2C "'")) {\n    // This invalidates the charCode and therefore can not be matched for\n    // anymore.\n    if (!StringPrototypeIncludes(str\x2C '"')) {\n      singleQuote = -1;\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\n               !StringPrototypeIncludes(str\x2C '${')) {\n      singleQuote = -2;\n    }\n    if (singleQuote !== 39) {\n      escapeTest = strEscapeSequencesRegExpSingle;\n      escapeReplace = strEscapeSequencesReplacerSingle;\n    }\n  }\n\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\n    return addQuotes(str\x2C singleQuote);\n  if (str.length > 100) {\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\n    return addQuotes(str\x2C singleQuote);\n  }\n\n  let result = '';\n  let last = 0;\n  for (let i = 0; i < str.length; i++) {\n    const point = StringPrototypeCharCodeAt(str\x2C i);\n    if (point === singleQuote ||\n        point === 92 ||\n        point < 32 ||\n        (point > 126 && point < 160)) {\n      if (last === i) {\n        result += meta[point];\n      } else {\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\n      }\n      last = i + 1;\n    } else if (point >= 0xd800 && point <= 0xdfff) {\n      if (point <= 0xdbff && i + 1 < str.length) {\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\n        if (point >= 0xdc00 && point <= 0xdfff) {\n          i++;\n          continue;\n        }\n      }\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${point.toString(16)}`;\n      last = i + 1;\n    }\n  }\n\n  if (last !== str.length) {\n    result += StringPrototypeSlice(str\x2C last);\n  }\n  return addQuotes(result\x2C singleQuote);\n}\n\nfunction stylizeWithColor(str\x2C styleType) {\n  const style = inspect.styles[styleType];\n  if (style !== undefined) {\n    const color = inspect.colors[style];\n    if (color !== undefined)\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\n  }\n  return str;\n}\n\nfunction stylizeNoColor(str) {\n  return str;\n}\n\n// Return a new empty array to push in the results of the default formatter.\nfunction getEmptyFormatArray() {\n  return [];\n}\n\nfunction isInstanceof(object\x2C proto) {\n  try {\n    return object instanceof proto;\n  } catch {\n    return false;\n  }\n}\n\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\n  let firstProto;\n  const tmp = obj;\n  while (obj || isUndetectableObject(obj)) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '' &&\n        isInstanceof(tmp\x2C descriptor.value)) {\n      if (protoProps !== undefined &&\n         (firstProto !== obj ||\n         !builtInObjects.has(descriptor.value.name))) {\n        addPrototypeProperties(\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\n      }\n      return String(descriptor.value.name);\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n    if (firstProto === undefined) {\n      firstProto = obj;\n    }\n  }\n\n  if (firstProto === null) {\n    return null;\n  }\n\n  const res = internalGetConstructorName(tmp);\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return `${res} <Complex prototype>`;\n  }\n\n  const protoConstr = getConstructorName(\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\n\n  if (protoConstr === null) {\n    return `${res} <${inspect(firstProto\x2C {\n      ...ctx\x2C\n      customInspect: false\x2C\n      depth: -1\n    })}>`;\n  }\n\n  return `${res} <${protoConstr}>`;\n}\n\n// This function has the side effect of adding prototype properties to the\n// `output` argument (which is an array). This is intended to highlight user\n// defined prototype properties.\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\n  let depth = 0;\n  let keys;\n  let keySet;\n  do {\n    if (depth !== 0 || main === obj) {\n      obj = ObjectGetPrototypeOf(obj);\n      // Stop as soon as a null prototype is encountered.\n      if (obj === null) {\n        return;\n      }\n      // Stop as soon as a built-in object type is detected.\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n      if (descriptor !== undefined &&\n          typeof descriptor.value === 'function' &&\n          builtInObjects.has(descriptor.value.name)) {\n        return;\n      }\n    }\n\n    if (depth === 0) {\n      keySet = new SafeSet();\n    } else {\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\n    }\n    // Get all own property names and symbols.\n    keys = ReflectOwnKeys(obj);\n    ArrayPrototypePush(ctx.seen\x2C main);\n    for (const key of keys) {\n      // Ignore the `constructor` property and keys that exist on layers above.\n      if (key === 'constructor' ||\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\n          (depth !== 0 && keySet.has(key))) {\n        continue;\n      }\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n      if (typeof desc.value === 'function') {\n        continue;\n      }\n      const value = formatProperty(\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\n      if (ctx.colors) {\n        // Faint!\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\n      } else {\n        ArrayPrototypePush(output\x2C value);\n      }\n    }\n    ArrayPrototypePop(ctx.seen);\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\n  // is not a good choice here\x2C because it's as if the properties are declared\n  // on the current object from the users perspective.\n  } while (++depth !== 3);\n}\n\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\n  if (constructor === null) {\n    if (tag !== '' && fallback !== tag) {\n      return `[${fallback}${size}: null prototype] [${tag}] `;\n    }\n    return `[${fallback}${size}: null prototype] `;\n  }\n\n  if (tag !== '' && constructor !== tag) {\n    return `${constructor}${size} [${tag}] `;\n  }\n  return `${constructor}${size} `;\n}\n\n// Look up the keys of the object.\nfunction getKeys(value\x2C showHidden) {\n  let keys;\n  const symbols = ObjectGetOwnPropertySymbols(value);\n  if (showHidden) {\n    keys = ObjectGetOwnPropertyNames(value);\n    if (symbols.length !== 0)\n      ArrayPrototypePushApply(keys\x2C symbols);\n  } else {\n    // This might throw if `value` is a Module Namespace Object from an\n    // unevaluated module\x2C but we don't want to perform the actual type\n    // check because it's expensive.\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\n    // and modify this logic as needed.\n    try {\n      keys = ObjectKeys(value);\n    } catch (err) {\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\n             isModuleNamespaceObject(value));\n      keys = ObjectGetOwnPropertyNames(value);\n    }\n    if (symbols.length !== 0) {\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\n    }\n  }\n  return keys;\n}\n\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\n  let fallback = '';\n  if (constructor === null) {\n    fallback = internalGetConstructorName(value);\n    if (fallback === tag) {\n      fallback = 'Object';\n    }\n  }\n  return getPrefix(constructor\x2C tag\x2C fallback);\n}\n\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\n  }\n  recurseTimes += 1;\n  ctx.indentationLvl += 2;\n  const res = [\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\n  ];\n  ctx.indentationLvl -= 2;\n  return reduceToSingleString(\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\n}\n\n// Note: using `formatValue` directly requires the indentation level to be\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\n// value afterwards again.\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\n  // Primitive types cannot have properties.\n  if (typeof value !== 'object' &&\n      typeof value !== 'function' &&\n      !isUndetectableObject(value)) {\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\n  }\n  if (value === null) {\n    return ctx.stylize('null'\x2C 'null');\n  }\n\n  // Memorize the context for custom inspection on proxies.\n  const context = value;\n  // Always check for proxies to prevent side effects and to prevent triggering\n  // any proxy handlers.\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\n  if (proxy !== undefined) {\n    if (proxy === null || proxy[0] === null) {\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\n    }\n    if (ctx.showProxy) {\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\n    }\n    value = proxy;\n  }\n\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it.\n  if (ctx.customInspect) {\n    const maybeCustom = value[customInspectSymbol];\n    if (typeof maybeCustom === 'function' &&\n        // Filter out the util module\x2C its inspect function is special.\n        maybeCustom !== inspect &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)) {\n      // This makes sure the recurseTimes are reported as before while using\n      // a counter internally.\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\n      const isCrossContext =\n        proxy !== undefined || !(context instanceof Object);\n      const ret = FunctionPrototypeCall(\n        maybeCustom\x2C\n        context\x2C\n        depth\x2C\n        getUserOptions(ctx\x2C isCrossContext)\x2C\n        inspect\n      );\n      // If the custom inspection method returned `this`\x2C don't go into\n      // infinite recursion.\n      if (ret !== context) {\n        if (typeof ret !== 'string') {\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\n        }\n        return ret.replace(/\\n/g\x2C `\\n${' '.repeat(ctx.indentationLvl)}`);\n      }\n    }\n  }\n\n  // Using an array here is actually better for the average case than using\n  // a Set. `seen` will only check for the depth and will never grow too large.\n  if (ctx.seen.includes(value)) {\n    let index = 1;\n    if (ctx.circular === undefined) {\n      ctx.circular = new SafeMap();\n      ctx.circular.set(value\x2C index);\n    } else {\n      index = ctx.circular.get(value);\n      if (index === undefined) {\n        index = ctx.circular.size + 1;\n        ctx.circular.set(value\x2C index);\n      }\n    }\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\n  }\n\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\n}\n\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\n  let keys;\n  let protoProps;\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\n    protoProps = [];\n  }\n\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\n  // Reset the variable to check for this later on.\n  if (protoProps !== undefined && protoProps.length === 0) {\n    protoProps = undefined;\n  }\n\n  let tag = value[SymbolToStringTag];\n  // Only list the tag in case it's non-enumerable / not an own property.\n  // Otherwise we'd print this twice.\n  if (typeof tag !== 'string' ||\n      (tag !== '' &&\n      (ctx.showHidden ?\n        ObjectPrototypeHasOwnProperty :\n        ObjectPrototypePropertyIsEnumerable)(\n        value\x2C SymbolToStringTag\n      ))) {\n    tag = '';\n  }\n  let base = '';\n  let formatter = getEmptyFormatArray;\n  let braces;\n  let noIterator = true;\n  let i = 0;\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n\n  let extrasType = kObjectType;\n\n  // Iterators and the rest are split to reduce checks.\n  // We have to check all values in case the constructor is set to null.\n  // Otherwise it would not possible to identify all types properly.\n  if (SymbolIterator in value || constructor === null) {\n    noIterator = false;\n    if (ArrayIsArray(value)) {\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\n      const prefix = (constructor !== 'Array' || tag !== '') ?\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\n        '';\n      keys = getOwnNonIndexProperties(value\x2C filter);\n      braces = [`${prefix}[`\x2C ']'];\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\n        return `${braces[0]}]`;\n      extrasType = kArrayExtrasType;\n      formatter = formatArray;\n    } else if (isSet(value)) {\n      const size = SetPrototypeGetSize(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\n      keys = getKeys(value\x2C ctx.showHidden);\n      formatter = constructor !== null ?\n        formatSet.bind(null\x2C value) :\n        formatSet.bind(null\x2C SetPrototypeValues(value));\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\n        return `${prefix}{}`;\n      braces = [`${prefix}{`\x2C '}'];\n    } else if (isMap(value)) {\n      const size = MapPrototypeGetSize(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\n      keys = getKeys(value\x2C ctx.showHidden);\n      formatter = constructor !== null ?\n        formatMap.bind(null\x2C value) :\n        formatMap.bind(null\x2C MapPrototypeEntries(value));\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\n        return `${prefix}{}`;\n      braces = [`${prefix}{`\x2C '}'];\n    } else if (isTypedArray(value)) {\n      keys = getOwnNonIndexProperties(value\x2C filter);\n      let bound = value;\n      let fallback = '';\n      if (constructor === null) {\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\n        // Reconstruct the array information.\n        bound = new primordials[fallback](value);\n      }\n      const size = TypedArrayPrototypeGetLength(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\n      braces = [`${prefix}[`\x2C ']'];\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\n        return `${braces[0]}]`;\n      // Special handle the value. The original value is required below. The\n      // bound function is required to reconstruct missing information.\n      formatter = formatTypedArray.bind(null\x2C bound\x2C size);\n      extrasType = kArrayExtrasType;\n    } else if (isMapIterator(value)) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = getIteratorBraces('Map'\x2C tag);\n      // Add braces to the formatter parameters.\n      formatter = formatIterator.bind(null\x2C braces);\n    } else if (isSetIterator(value)) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = getIteratorBraces('Set'\x2C tag);\n      // Add braces to the formatter parameters.\n      formatter = formatIterator.bind(null\x2C braces);\n    } else {\n      noIterator = true;\n    }\n  }\n  if (noIterator) {\n    keys = getKeys(value\x2C ctx.showHidden);\n    braces = ['{'\x2C '}'];\n    if (constructor === 'Object') {\n      if (isArgumentsObject(value)) {\n        braces[0] = '[Arguments] {';\n      } else if (tag !== '') {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\n      }\n      if (keys.length === 0 && protoProps === undefined) {\n        return `${braces[0]}}`;\n      }\n    } else if (typeof value === 'function') {\n      base = getFunctionBase(value\x2C constructor\x2C tag);\n      if (keys.length === 0 && protoProps === undefined)\n        return ctx.stylize(base\x2C 'special');\n    } else if (isRegExp(value)) {\n      // Make RegExps say that they are RegExps\n      base = RegExpPrototypeToString(\n        constructor !== null ? value : new RegExp(value)\n      );\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\n      if (prefix !== 'RegExp ')\n        base = `${prefix}${base}`;\n      if ((keys.length === 0 && protoProps === undefined) ||\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\n        return ctx.stylize(base\x2C 'regexp');\n      }\n    } else if (isDate(value)) {\n      // Make dates with properties first say the date\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\n        DatePrototypeToString(value) :\n        DatePrototypeToISOString(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\n      if (prefix !== 'Date ')\n        base = `${prefix}${base}`;\n      if (keys.length === 0 && protoProps === undefined) {\n        return ctx.stylize(base\x2C 'date');\n      }\n    } else if (isError(value)) {\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\n      if (keys.length === 0 && protoProps === undefined)\n        return base;\n    } else if (isAnyArrayBuffer(value)) {\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\n      // Can't do the same for DataView because it has a non-primitive\n      // .buffer property that we need to recurse for.\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\n        'SharedArrayBuffer';\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\n      if (typedArray === undefined) {\n        formatter = formatArrayBuffer;\n      } else if (keys.length === 0 && protoProps === undefined) {\n        return prefix +\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\n      }\n      braces[0] = `${prefix}{`;\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\n    } else if (isDataView(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\n      // .buffer goes last\x2C it's not a primitive like the others.\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\n    } else if (isPromise(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\n      formatter = formatPromise;\n    } else if (isWeakSet(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\n    } else if (isWeakMap(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\n    } else if (isModuleNamespaceObject(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\n      // Special handle keys for namespace objects.\n      formatter = formatNamespaceObject.bind(null\x2C keys);\n    } else if (isBoxedPrimitive(value)) {\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\n      if (keys.length === 0 && protoProps === undefined) {\n        return base;\n      }\n    } else {\n      if (keys.length === 0 && protoProps === undefined) {\n        if (isExternal(value)) {\n          const address = getExternalValue(value).toString(16);\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\n        }\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\n      }\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\n    }\n  }\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    let constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\n    if (constructor !== null)\n      constructorName = `[${constructorName}]`;\n    return ctx.stylize(constructorName\x2C 'special');\n  }\n  recurseTimes += 1;\n\n  ctx.seen.push(value);\n  ctx.currentDepth = recurseTimes;\n  let output;\n  const indentationLvl = ctx.indentationLvl;\n  try {\n    output = formatter(ctx\x2C value\x2C recurseTimes);\n    for (i = 0; i < keys.length; i++) {\n      output.push(\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType));\n    }\n    if (protoProps !== undefined) {\n      output.push(...protoProps);\n    }\n  } catch (err) {\n    const constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\n  }\n  if (ctx.circular !== undefined) {\n    const index = ctx.circular.get(value);\n    if (index !== undefined) {\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\n      // Add reference always to the very beginning of the output.\n      if (ctx.compact !== true) {\n        base = base === '' ? reference : `${reference} ${base}`;\n      } else {\n        braces[0] = `${reference} ${braces[0]}`;\n      }\n    }\n  }\n  ctx.seen.pop();\n\n  if (ctx.sorted) {\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\n    if (extrasType === kObjectType) {\n      output = output.sort(comparator);\n    } else if (keys.length > 1) {\n      const sorted = output.slice(output.length - keys.length).sort(comparator);\n      output.splice(output.length - keys.length\x2C keys.length\x2C ...sorted);\n    }\n  }\n\n  const res = reduceToSingleString(\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\n  const newLength = budget + res.length;\n  ctx.budget[ctx.indentationLvl] = newLength;\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\n  // This limit also makes sure that huge objects don't block the event loop\n  // significantly.\n  if (newLength > 2 ** 27) {\n    ctx.depth = -1;\n  }\n  return res;\n}\n\nfunction getIteratorBraces(type\x2C tag) {\n  if (tag !== `${type} Iterator`) {\n    if (tag !== '')\n      tag += '] [';\n    tag += `${type} Iterator`;\n  }\n  return [`[${tag}] {`\x2C '}'];\n}\n\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\n  let fn;\n  let type;\n  if (isNumberObject(value)) {\n    fn = NumberPrototypeValueOf;\n    type = 'Number';\n  } else if (isStringObject(value)) {\n    fn = StringPrototypeValueOf;\n    type = 'String';\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\n    // since they just noisy up the output and are redundant\n    // Make boxed primitive Strings look like such\n    keys.splice(0\x2C value.length);\n  } else if (isBooleanObject(value)) {\n    fn = BooleanPrototypeValueOf;\n    type = 'Boolean';\n  } else if (isBigIntObject(value)) {\n    fn = BigIntPrototypeValueOf;\n    type = 'BigInt';\n  } else {\n    fn = SymbolPrototypeValueOf;\n    type = 'Symbol';\n  }\n  let base = `[${type}`;\n  if (type !== constructor) {\n    if (constructor === null) {\n      base += ' (null prototype)';\n    } else {\n      base += ` (${constructor})`;\n    }\n  }\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\n  if (tag !== '' && tag !== constructor) {\n    base += ` [${tag}]`;\n  }\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\n    return base;\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\n}\n\nfunction getClassBase(value\x2C constructor\x2C tag) {\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\n  const name = (hasName && value.name) || '(anonymous)';\n  let base = `class ${name}`;\n  if (constructor !== 'Function' && constructor !== null) {\n    base += ` [${constructor}]`;\n  }\n  if (tag !== '' && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  if (constructor !== null) {\n    const superName = ObjectGetPrototypeOf(value).name;\n    if (superName) {\n      base += ` extends ${superName}`;\n    }\n  } else {\n    base += ' extends [null prototype]';\n  }\n  return `[${base}]`;\n}\n\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\n  const stringified = FunctionPrototypeToString(value);\n  if (stringified.startsWith('class') && stringified.endsWith('}')) {\n    const slice = stringified.slice(5\x2C -1);\n    const bracketIndex = slice.indexOf('{');\n    if (bracketIndex !== -1 &&\n        (!slice.slice(0\x2C bracketIndex).includes('(') ||\n          // Slow path to guarantee that it's indeed a class.\n          classRegExp.test(slice.replace(stripCommentsRegExp)))) {\n      return getClassBase(value\x2C constructor\x2C tag);\n    }\n  }\n  let type = 'Function';\n  if (isGeneratorFunction(value)) {\n    type = `Generator${type}`;\n  }\n  if (isAsyncFunction(value)) {\n    type = `Async${type}`;\n  }\n  let base = `[${type}`;\n  if (constructor === null) {\n    base += ' (null prototype)';\n  }\n  if (value.name === '') {\n    base += ' (anonymous)';\n  } else {\n    base += `: ${value.name}`;\n  }\n  base += ']';\n  if (constructor !== type && constructor !== null) {\n    base += ` ${constructor}`;\n  }\n  if (tag !== '' && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  return base;\n}\n\nfunction identicalSequenceRange(a\x2C b) {\n  for (let i = 0; i < a.length - 3; i++) {\n    // Find the first entry of b that matches the current entry of a.\n    const pos = b.indexOf(a[i]);\n    if (pos !== -1) {\n      const rest = b.length - pos;\n      if (rest > 3) {\n        let len = 1;\n        const maxLen = MathMin(a.length - i\x2C rest);\n        // Count the number of consecutive entries.\n        while (maxLen > len && a[i + len] === b[pos + len]) {\n          len++;\n        }\n        if (len > 3) {\n          return { len\x2C offset: i };\n        }\n      }\n    }\n  }\n\n  return { len: 0\x2C offset: 0 };\n}\n\nfunction getStackString(error) {\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\n}\n\nfunction getStackFrames(ctx\x2C err\x2C stack) {\n  const frames = stack.split('\\n');\n\n  // Remove stack frames identical to frames in cause.\n  if (err.cause && isError(err.cause)) {\n    const causeStack = getStackString(err.cause);\n    const causeStackStart = causeStack.indexOf('\\n    at');\n    if (causeStackStart !== -1) {\n      const causeFrames = causeStack.slice(causeStackStart + 1).split('\\n');\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\n      if (len > 0) {\n        const skipped = len - 2;\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\n      }\n    }\n  }\n  return frames;\n}\n\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\n  // A stack trace may contain arbitrary data. Only manipulate the output\n  // for "regular errors" (errors that "look normal") for now.\n  let len = name.length;\n\n  if (constructor === null ||\n      (name.endsWith('Error') &&\n      stack.startsWith(name) &&\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\n    let fallback = 'Error';\n    if (constructor === null) {\n      const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/) ||\n        stack.match(/^([a-z_A-Z0-9-]*Error)$/);\n      fallback = (start && start[1]) || '';\n      len = fallback.length;\n      fallback = fallback || 'Error';\n    }\n    const prefix = getPrefix(constructor\x2C tag\x2C fallback).slice(0\x2C -1);\n    if (name !== prefix) {\n      if (prefix.includes(name)) {\n        if (len === 0) {\n          stack = `${prefix}: ${stack}`;\n        } else {\n          stack = `${prefix}${stack.slice(len)}`;\n        }\n      } else {\n        stack = `${prefix} [${name}]${stack.slice(len)}`;\n      }\n    }\n  }\n  return stack;\n}\n\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\n  if (!ctx.showHidden && keys.length !== 0) {\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\n      const index = keys.indexOf(name);\n      // Only hide the property in case it's part of the original stack\n      if (index !== -1 && stack.includes(err[name])) {\n        keys.splice(index\x2C 1);\n      }\n    }\n  }\n}\n\nfunction markNodeModules(ctx\x2C line) {\n  let tempLine = '';\n  let nodeModule;\n  let pos = 0;\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\n    // '/node_modules/'.length === 14\n    tempLine += line.slice(pos\x2C nodeModule.index + 14);\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\n    pos = nodeModule.index + nodeModule[0].length;\n  }\n  if (pos !== 0) {\n    line = tempLine + line.slice(pos);\n  }\n  return line;\n}\n\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\n  let cwdStartPos = line.indexOf(workingDirectory);\n  let tempLine = '';\n  let cwdLength = workingDirectory.length;\n  if (cwdStartPos !== -1) {\n    if (line.slice(cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\n      cwdLength += 7;\n      cwdStartPos -= 7;\n    }\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\n    const end = start !== cwdStartPos && line.endsWith(')') ? -1 : line.length;\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\n    const cwdSlice = line.slice(start\x2C workingDirectoryEndPos);\n\n    tempLine += line.slice(0\x2C start);\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\n    tempLine += line.slice(workingDirectoryEndPos\x2C end);\n    if (end === -1) {\n      tempLine += ctx.stylize(')'\x2C 'undefined');\n    }\n  } else {\n    tempLine += line;\n  }\n  return tempLine;\n}\n\nfunction safeGetCWD() {\n  let workingDirectory;\n  try {\n    workingDirectory = process.cwd();\n  } catch {\n    return;\n  }\n  return workingDirectory;\n}\n\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\n  const name = err.name != null ? String(err.name) : 'Error';\n  let stack = getStackString(err);\n\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\n\n  if ('cause' in err &&\n      (keys.length === 0 || !keys.includes('cause'))) {\n    keys.push('cause');\n  }\n\n  // Print errors aggregated into AggregateError\n  if (ArrayIsArray(err.errors) &&\n      (keys.length === 0 || !keys.includes('errors'))) {\n    keys.push('errors');\n  }\n\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\n\n  // Ignore the error message if it's contained in the stack.\n  let pos = (err.message && stack.indexOf(err.message)) || -1;\n  if (pos !== -1)\n    pos += err.message.length;\n  // Wrap the error in brackets in case it has no stack trace.\n  const stackStart = stack.indexOf('\\n    at'\x2C pos);\n  if (stackStart === -1) {\n    stack = `[${stack}]`;\n  } else {\n    let newStack = stack.slice(0\x2C stackStart);\n    const stackFramePart = stack.slice(stackStart + 1);\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\n    if (ctx.colors) {\n      // Highlight userland code and node modules.\n      const workingDirectory = safeGetCWD();\n      let esmWorkingDirectory;\n      for (let line of lines) {\n        const core = line.match(coreModuleRegExp);\n        if (core !== null && NativeModule.exists(core[1])) {\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\n        } else {\n          newStack += '\\n';\n\n          line = markNodeModules(ctx\x2C line);\n          if (workingDirectory !== undefined) {\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\n            if (newLine === line) {\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\n            }\n            line = newLine;\n          }\n\n          newStack += line;\n        }\n      }\n    } else {\n      newStack += `\\n${lines.join('\\n')}`;\n    }\n    stack = newStack;\n  }\n  // The message and the stack have to be indented as well!\n  if (ctx.indentationLvl !== 0) {\n    const indentation = ' '.repeat(ctx.indentationLvl);\n    stack = stack.replace(/\\n/g\x2C `\\n${indentation}`);\n  }\n  return stack;\n}\n\nfunction groupArrayElements(ctx\x2C output\x2C value) {\n  let totalLength = 0;\n  let maxLength = 0;\n  let i = 0;\n  let outputLength = output.length;\n  if (ctx.maxArrayLength < output.length) {\n    // This makes sure the "... n more items" part is not taken into account.\n    outputLength--;\n  }\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\n  const dataLen = new Array(outputLength);\n  // Calculate the total length of all output entries and the individual max\n  // entries length of all output entries. We have to remove colors first\x2C\n  // otherwise the length would not be calculated properly.\n  for (; i < outputLength; i++) {\n    const len = getStringWidth(output[i]\x2C ctx.colors);\n    dataLen[i] = len;\n    totalLength += len + separatorSpace;\n    if (maxLength < len)\n      maxLength = len;\n  }\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\n  // in-between two entries.\n  const actualMax = maxLength + separatorSpace;\n  // Check if at least three entries fit next to each other and prevent grouping\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\n  // space in-between small entries would be enormous.\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\n\n    const approxCharHeights = 2.5;\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\n    // Dynamically check how many columns seem possible.\n    const columns = MathMin(\n      // Ideally a square should be drawn. We expect a character to be about 2.5\n      // times as high as wide. This is the area formula to calculate a square\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\n      // Divide that by `actualMax` to receive the correct number of columns.\n      // The added bias increases the columns for short entries.\n      MathRound(\n        MathSqrt(\n          approxCharHeights * biasedMax * outputLength\n        ) / biasedMax\n      )\x2C\n      // Do not exceed the breakLength.\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\n      // Limit array grouping for small `compact` modes as the user requested\n      // minimal grouping.\n      ctx.compact * 4\x2C\n      // Limit the columns to a maximum of fifteen.\n      15\n    );\n    // Return with the original output if no grouping should happen.\n    if (columns <= 1) {\n      return output;\n    }\n    const tmp = [];\n    const maxLineLength = [];\n    for (let i = 0; i < columns; i++) {\n      let lineMaxLength = 0;\n      for (let j = i; j < output.length; j += columns) {\n        if (dataLen[j] > lineMaxLength)\n          lineMaxLength = dataLen[j];\n      }\n      lineMaxLength += separatorSpace;\n      maxLineLength[i] = lineMaxLength;\n    }\n    let order = StringPrototypePadStart;\n    if (value !== undefined) {\n      for (let i = 0; i < output.length; i++) {\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\n          order = StringPrototypePadEnd;\n          break;\n        }\n      }\n    }\n    // Each iteration creates a single line of grouped entries.\n    for (let i = 0; i < outputLength; i += columns) {\n      // The last lines may contain less entries than columns.\n      const max = MathMin(i + columns\x2C outputLength);\n      let str = '';\n      let j = i;\n      for (; j < max - 1; j++) {\n        // Calculate extra color padding in case it's active. This has to be\n        // done line by line as some lines might contain more colors than\n        // others.\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\n      }\n      if (order === StringPrototypePadStart) {\n        const padding = maxLineLength[j - i] +\n                        output[j].length -\n                        dataLen[j] -\n                        separatorSpace;\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\n      } else {\n        str += output[j];\n      }\n      ArrayPrototypePush(tmp\x2C str);\n    }\n    if (ctx.maxArrayLength < output.length) {\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\n    }\n    output = tmp;\n  }\n  return output;\n}\n\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\n  if (isStackOverflowError(err)) {\n    ctx.seen.pop();\n    ctx.indentationLvl = indentationLvl;\n    return ctx.stylize(\n      `[${constructorName}: Inspection interrupted ` +\n        'prematurely. Maximum call stack size exceeded.]'\x2C\n      'special'\n    );\n  }\n  /* c8 ignore next */\n  assert.fail(err.stack);\n}\n\nfunction addNumericSeparator(integerString) {\n  let result = '';\n  let i = integerString.length;\n  const start = integerString.startsWith('-') ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    result = `_${integerString.slice(i - 3\x2C i)}${result}`;\n  }\n  return i === integerString.length ?\n    integerString :\n    `${integerString.slice(0\x2C i)}${result}`;\n}\n\nfunction addNumericSeparatorEnd(integerString) {\n  let result = '';\n  let i = 0;\n  for (; i < integerString.length - 3; i += 3) {\n    result += `${integerString.slice(i\x2C i + 3)}_`;\n  }\n  return i === 0 ?\n    integerString :\n    `${result}${integerString.slice(i)}`;\n}\n\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\n  if (!numericSeparator) {\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\n    if (ObjectIs(number\x2C -0)) {\n      return fn('-0'\x2C 'number');\n    }\n    return fn(`${number}`\x2C 'number');\n  }\n  const integer = MathTrunc(number);\n  const string = String(integer);\n  if (integer === number) {\n    if (!NumberIsFinite(number) || string.includes('e')) {\n      return fn(string\x2C 'number');\n    }\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\n  }\n  if (NumberIsNaN(number)) {\n    return fn(string\x2C 'number');\n  }\n  return fn(`${\n    addNumericSeparator(string)\n  }.${\n    addNumericSeparatorEnd(String(number).slice(string.length + 1))\n  }`\x2C 'number');\n}\n\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\n  const string = String(bigint);\n  if (!numericSeparator) {\n    return fn(`${string}n`\x2C 'bigint');\n  }\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\n}\n\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\n  if (typeof value === 'string') {\n    let trailer = '';\n    if (value.length > ctx.maxStringLength) {\n      const remaining = value.length - ctx.maxStringLength;\n      value = value.slice(0\x2C ctx.maxStringLength);\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\n    }\n    if (ctx.compact !== true &&\n        // We do not support handling unicode characters width with\n        // the readline getStringWidth function as there are\n        // performance implications.\n        value.length > kMinLineLength &&\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\n      return value\n        .split(/(?<=\\n)/)\n        .map((line) => fn(strEscape(line)\x2C 'string'))\n        .join(` +\\n${' '.repeat(ctx.indentationLvl + 2)}`) + trailer;\n    }\n    return fn(strEscape(value)\x2C 'string') + trailer;\n  }\n  if (typeof value === 'number')\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\n  if (typeof value === 'bigint')\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\n  if (typeof value === 'boolean')\n    return fn(`${value}`\x2C 'boolean');\n  if (typeof value === 'undefined')\n    return fn('undefined'\x2C 'undefined');\n  // es6 symbol primitive\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\n}\n\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\n  const output = new Array(keys.length);\n  for (let i = 0; i < keys.length; i++) {\n    try {\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\n                                 kObjectType);\n    } catch (err) {\n      assert(isNativeError(err) && err.name === 'ReferenceError');\n      // Use the existing functionality. This makes sure the indentation and\n      // line breaks are always correct. Otherwise it is very difficult to keep\n      // this aligned\x2C even though this is a hacky way of dealing with this.\n      const tmp = { [keys[i]]: '' };\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\n      const pos = output[i].lastIndexOf(' ');\n      // We have to find the last whitespace and have to replace that value as\n      // it will be visualized as a regular string.\n      output[i] = output[i].slice(0\x2C pos + 1) +\n                  ctx.stylize('<uninitialized>'\x2C 'special');\n    }\n  }\n  // Reset the keys to an empty array. This prevents duplicated inspection.\n  keys.length = 0;\n  return output;\n}\n\n// The array is sparse and/or has extra keys\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\n  const keys = ObjectKeys(value);\n  let index = i;\n  for (; i < keys.length && output.length < maxLength; i++) {\n    const key = keys[i];\n    const tmp = +key;\n    // Arrays can only have up to 2^32 - 1 entries\n    if (tmp > 2 ** 32 - 2) {\n      break;\n    }\n    if (`${index}` !== key) {\n      if (!numberRegExp.test(key)) {\n        break;\n      }\n      const emptyItems = tmp - index;\n      const ending = emptyItems > 1 ? 's' : '';\n      const message = `<${emptyItems} empty item${ending}>`;\n      output.push(ctx.stylize(message\x2C 'undefined'));\n      index = tmp;\n      if (output.length === maxLength) {\n        break;\n      }\n    }\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\n    index++;\n  }\n  const remaining = value.length - index;\n  if (output.length !== maxLength) {\n    if (remaining > 0) {\n      const ending = remaining > 1 ? 's' : '';\n      const message = `<${remaining} empty item${ending}>`;\n      output.push(ctx.stylize(message\x2C 'undefined'));\n    }\n  } else if (remaining > 0) {\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  }\n  return output;\n}\n\nfunction formatArrayBuffer(ctx\x2C value) {\n  let buffer;\n  try {\n    buffer = new Uint8Array(value);\n  } catch {\n    return [ctx.stylize('(detached)'\x2C 'special')];\n  }\n  if (hexSlice === undefined)\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\n    '$1 '));\n  const remaining = buffer.length - ctx.maxArrayLength;\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\n}\n\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\n  const valLen = value.length;\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    // Special handle sparse arrays.\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\n    }\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\n  }\n  if (remaining > 0)\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  return output;\n}\n\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = value.length - maxLength;\n  const output = new Array(maxLength);\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\n    formatNumber :\n    formatBigInt;\n  for (let i = 0; i < maxLength; ++i) {\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\n  }\n  if (remaining > 0) {\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\n  }\n  if (ctx.showHidden) {\n    // .buffer goes last\x2C it's not a primitive like the others.\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\n    ctx.indentationLvl += 2;\n    for (const key of [\n      'BYTES_PER_ELEMENT'\x2C\n      'length'\x2C\n      'byteLength'\x2C\n      'byteOffset'\x2C\n      'buffer'\x2C\n    ]) {\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\n    }\n    ctx.indentationLvl -= 2;\n  }\n  return output;\n}\n\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const output = [];\n  ctx.indentationLvl += 2;\n  for (const v of value) {\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\n  }\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const output = [];\n  ctx.indentationLvl += 2;\n  for (const { 0: k\x2C 1: v } of value) {\n    output.push(\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\n    );\n  }\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\n  const output = new Array(maxLength);\n  ctx.indentationLvl += 2;\n  for (let i = 0; i < maxLength; i++) {\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\n  }\n  ctx.indentationLvl -= 2;\n  if (state === kWeak && !ctx.sorted) {\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    ArrayPrototypeSort(output);\n  }\n  const remaining = entries.length - maxLength;\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C\n                       `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  }\n  return output;\n}\n\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\n  const len = entries.length / 2;\n  const remaining = len - maxArrayLength;\n  const maxLength = MathMin(maxArrayLength\x2C len);\n  let output = new Array(maxLength);\n  let i = 0;\n  ctx.indentationLvl += 2;\n  if (state === kWeak) {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      output[i] =\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\n    }\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    if (!ctx.sorted)\n      output = output.sort();\n  } else {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      const res = [\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\n      ];\n      output[i] = reduceToSingleString(\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\n    }\n  }\n  ctx.indentationLvl -= 2;\n  if (remaining > 0) {\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  }\n  return output;\n}\n\nfunction formatWeakCollection(ctx) {\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\n}\n\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\n  const entries = previewEntries(value);\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\n  const entries = previewEntries(value);\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\n  if (isKeyValue) {\n    // Mark entry iterators as such.\n    braces[0] = braces[0].replace(/ Iterator] {$/\x2C ' Entries] {');\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\n  }\n\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\n}\n\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\n  let output;\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\n  if (state === kPending) {\n    output = [ctx.stylize('<pending>'\x2C 'special')];\n  } else {\n    ctx.indentationLvl += 2;\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\n    ctx.indentationLvl -= 2;\n    output = [\n      state === kRejected ?\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\n        str\x2C\n    ];\n  }\n  return output;\n}\n\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\n                        original = value) {\n  let name\x2C str;\n  let extra = ' ';\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\n    { value: value[key]\x2C enumerable: true };\n  if (desc.value !== undefined) {\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\n    ctx.indentationLvl += diff;\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\n      extra = `\\n${' '.repeat(ctx.indentationLvl)}`;\n    }\n    ctx.indentationLvl -= diff;\n  } else if (desc.get !== undefined) {\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\n    const s = ctx.stylize;\n    const sp = 'special';\n    if (ctx.getters && (ctx.getters === true ||\n          (ctx.getters === 'get' && desc.set === undefined) ||\n          (ctx.getters === 'set' && desc.set !== undefined))) {\n      try {\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\n        ctx.indentationLvl += 2;\n        if (tmp === null) {\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\n        } else if (typeof tmp === 'object') {\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\n        } else {\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\n        }\n        ctx.indentationLvl -= 2;\n      } catch (err) {\n        const message = `<Inspection threw (${err.message})>`;\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\n      }\n    } else {\n      str = ctx.stylize(`[${label}]`\x2C sp);\n    }\n  } else if (desc.set !== undefined) {\n    str = ctx.stylize('[Setter]'\x2C 'special');\n  } else {\n    str = ctx.stylize('undefined'\x2C 'undefined');\n  }\n  if (type === kArrayType) {\n    return str;\n  }\n  if (typeof key === 'symbol') {\n    const tmp = RegExpPrototypeSymbolReplace(\n      strEscapeSequencesReplacer\x2C\n      SymbolPrototypeToString(key)\x2C\n      escapeFn\n    );\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\n  } else if (key === '__proto__') {\n    name = "['__proto__']";\n  } else if (desc.enumerable === false) {\n    const tmp = RegExpPrototypeSymbolReplace(\n      strEscapeSequencesReplacer\x2C key\x2C escapeFn);\n    name = `[${tmp}]`;\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\n    name = ctx.stylize(key\x2C 'name');\n  } else {\n    name = ctx.stylize(strEscape(key)\x2C 'string');\n  }\n  return `${name}:${extra}${str}`;\n}\n\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\n  // length of at least `output.length`. In addition\x2C some cases have a\n  // whitespace in-between each other that is added to the total as well.\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n  // function. Check the performance overhead and make it an opt-in in case it's\n  // significant.\n  let totalLength = output.length + start;\n  if (totalLength + output.length > ctx.breakLength)\n    return false;\n  for (let i = 0; i < output.length; i++) {\n    if (ctx.colors) {\n      totalLength += removeColors(output[i]).length;\n    } else {\n      totalLength += output[i].length;\n    }\n    if (totalLength > ctx.breakLength) {\n      return false;\n    }\n  }\n  // Do not line up properties on the same line if `base` contains line breaks.\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\n}\n\nfunction reduceToSingleString(\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\n  if (ctx.compact !== true) {\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\n      // Memorize the original output length. In case the output is grouped\x2C\n      // prevent lining up the entries on a single line.\n      const entries = output.length;\n      // Group array elements together if the array contains at least six\n      // separate entries.\n      if (extrasType === kArrayExtrasType && entries > 6) {\n        output = groupArrayElements(ctx\x2C output\x2C value);\n      }\n      // `ctx.currentDepth` is set to the most inner depth of the currently\n      // inspected object part while `recurseTimes` is the actual current depth\n      // that is inspected.\n      //\n      // Example:\n      //\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\n      //\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\n      // depth of 1.\n      //\n      // Consolidate all entries of the local most inner depth up to\n      // `ctx.compact`\x2C as long as the properties are smaller than\n      // `ctx.breakLength`.\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\n          entries === output.length) {\n        // Line up all entries on a single line in case the entries do not\n        // exceed `breakLength`. Add 10 as constant to start next to all other\n        // factors that may reduce `breakLength`.\n        const start = output.length + ctx.indentationLvl +\n                      braces[0].length + base.length + 10;\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\n          const joinedOutput = join(output\x2C '\x2C ');\n          if (!joinedOutput.includes('\\n')) {\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\n              ` ${braces[1]}`;\n          }\n        }\n      }\n    }\n    // Line up each entry on an individual line.\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\n  }\n  // Line up all entries on a single line in case the entries do not exceed\n  // `breakLength`.\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\n      braces[1];\n  }\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\n  // we need to force the first item to be on the next line or the\n  // items will not line up correctly.\n  const ln = base === '' && braces[0].length === 1 ?\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\n  // Line up each entry on an individual line.\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\n}\n\nfunction hasBuiltInToString(value) {\n  // Prevent triggering proxy traps.\n  const getFullProxy = false;\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\n  if (proxyTarget !== undefined) {\n    if (proxyTarget === null) {\n      return true;\n    }\n    value = proxyTarget;\n  }\n\n  // Count objects that have no `toString` function as built-in.\n  if (typeof value.toString !== 'function') {\n    return true;\n  }\n\n  // The object has a own `toString` property. Thus it's not not a built-in one.\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\n    return false;\n  }\n\n  // Find the object that has the `toString` property as own property in the\n  // prototype chain.\n  let pointer = value;\n  do {\n    pointer = ObjectGetPrototypeOf(pointer);\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\n\n  // Check closer if the object is a built-in.\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\n  return descriptor !== undefined &&\n    typeof descriptor.value === 'function' &&\n    builtInObjects.has(descriptor.value.name);\n}\n\nconst firstErrorLine = (error) =>\n  StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\nlet CIRCULAR_ERROR_MESSAGE;\nfunction tryStringify(arg) {\n  try {\n    return JSONStringify(arg);\n  } catch (err) {\n    // Populate the circular error message lazily\n    if (!CIRCULAR_ERROR_MESSAGE) {\n      try {\n        const a = {}; a.a = a; JSONStringify(a);\n      } catch (circularError) {\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\n      }\n    }\n    if (err.name === 'TypeError' &&\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\n      return '[Circular]';\n    }\n    throw err;\n  }\n}\n\nfunction format(...args) {\n  return formatWithOptionsInternal(undefined\x2C args);\n}\n\nfunction formatWithOptions(inspectOptions\x2C ...args) {\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C { allowArray: true });\n  return formatWithOptionsInternal(inspectOptions\x2C args);\n}\n\nfunction formatNumberNoColor(number\x2C options) {\n  return formatNumber(\n    stylizeNoColor\x2C\n    number\x2C\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\n  );\n}\n\nfunction formatBigIntNoColor(bigint\x2C options) {\n  return formatBigInt(\n    stylizeNoColor\x2C\n    bigint\x2C\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\n  );\n}\n\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\n  const first = args[0];\n  let a = 0;\n  let str = '';\n  let join = '';\n\n  if (typeof first === 'string') {\n    if (args.length === 1) {\n      return first;\n    }\n    let tempStr;\n    let lastPos = 0;\n\n    for (let i = 0; i < first.length - 1; i++) {\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\n        if (a + 1 !== args.length) {\n          switch (nextChar) {\n            case 115: { // 's'\n              const tempArg = args[++a];\n              if (typeof tempArg === 'number') {\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\n              } else if (typeof tempArg === 'bigint') {\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\n              } else if (typeof tempArg !== 'object' ||\n                         tempArg === null ||\n                         !hasBuiltInToString(tempArg)) {\n                tempStr = String(tempArg);\n              } else {\n                tempStr = inspect(tempArg\x2C {\n                  ...inspectOptions\x2C\n                  compact: 3\x2C\n                  colors: false\x2C\n                  depth: 0\n                });\n              }\n              break;\n            }\n            case 106: // 'j'\n              tempStr = tryStringify(args[++a]);\n              break;\n            case 100: { // 'd'\n              const tempNum = args[++a];\n              if (typeof tempNum === 'bigint') {\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\n              } else if (typeof tempNum === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\n              }\n              break;\n            }\n            case 79: // 'O'\n              tempStr = inspect(args[++a]\x2C inspectOptions);\n              break;\n            case 111: // 'o'\n              tempStr = inspect(args[++a]\x2C {\n                ...inspectOptions\x2C\n                showHidden: true\x2C\n                showProxy: true\x2C\n                depth: 4\n              });\n              break;\n            case 105: { // 'i'\n              const tempInteger = args[++a];\n              if (typeof tempInteger === 'bigint') {\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\n              } else if (typeof tempInteger === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumberNoColor(\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\n              }\n              break;\n            }\n            case 102: { // 'f'\n              const tempFloat = args[++a];\n              if (typeof tempFloat === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumberNoColor(\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\n              }\n              break;\n            }\n            case 99: // 'c'\n              a += 1;\n              tempStr = '';\n              break;\n            case 37: // '%'\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\n              lastPos = i + 1;\n              continue;\n            default: // Any other character is not a correct placeholder\n              continue;\n          }\n          if (lastPos !== i - 1) {\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\n          }\n          str += tempStr;\n          lastPos = i + 1;\n        } else if (nextChar === 37) {\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\n          lastPos = i + 1;\n        }\n      }\n    }\n    if (lastPos !== 0) {\n      a++;\n      join = ' ';\n      if (lastPos < first.length) {\n        str += StringPrototypeSlice(first\x2C lastPos);\n      }\n    }\n  }\n\n  while (a < args.length) {\n    const value = args[a];\n    str += join;\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\n    join = ' ';\n    a++;\n  }\n  return str;\n}\n\nif (internalBinding('config').hasIntl) {\n  const icu = internalBinding('icu');\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\n  // best thing possible at the moment\x2C since it's difficult to know what\n  // the receiving end supports.\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\n    let width = 0;\n\n    if (removeControlChars)\n      str = stripVTControlCharacters(str);\n    for (let i = 0; i < str.length; i++) {\n      // Try to avoid calling into C++ by first handling the ASCII portion of\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\n      const code = str.charCodeAt(i);\n      if (code >= 127) {\n        width += icu.getStringWidth(str.slice(i).normalize('NFC'));\n        break;\n      }\n      width += code >= 32 ? 1 : 0;\n    }\n    return width;\n  };\n} else {\n  /**\n   * Returns the number of columns required to display the given string.\n   */\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\n    let width = 0;\n\n    if (removeControlChars)\n      str = stripVTControlCharacters(str);\n    str = StringPrototypeNormalize(str\x2C 'NFC');\n    for (const char of new SafeStringIterator(str)) {\n      const code = StringPrototypeCodePointAt(char\x2C 0);\n      if (isFullWidthCodePoint(code)) {\n        width += 2;\n      } else if (!isZeroWidthCodePoint(code)) {\n        width++;\n      }\n    }\n\n    return width;\n  };\n\n  /**\n   * Returns true if the character represented by a given\n   * Unicode code point is full-width. Otherwise returns false.\n   */\n  const isFullWidthCodePoint = (code) => {\n    // Code points are partially derived from:\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n    return code >= 0x1100 && (\n      code <= 0x115f ||  // Hangul Jamo\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n      (code >= 0x3250 && code <= 0x4dbf) ||\n      // CJK Unified Ideographs .. Yi Radicals\n      (code >= 0x4e00 && code <= 0xa4c6) ||\n      // Hangul Jamo Extended-A\n      (code >= 0xa960 && code <= 0xa97c) ||\n      // Hangul Syllables\n      (code >= 0xac00 && code <= 0xd7a3) ||\n      // CJK Compatibility Ideographs\n      (code >= 0xf900 && code <= 0xfaff) ||\n      // Vertical Forms\n      (code >= 0xfe10 && code <= 0xfe19) ||\n      // CJK Compatibility Forms .. Small Form Variants\n      (code >= 0xfe30 && code <= 0xfe6b) ||\n      // Halfwidth and Fullwidth Forms\n      (code >= 0xff01 && code <= 0xff60) ||\n      (code >= 0xffe0 && code <= 0xffe6) ||\n      // Kana Supplement\n      (code >= 0x1b000 && code <= 0x1b001) ||\n      // Enclosed Ideographic Supplement\n      (code >= 0x1f200 && code <= 0x1f251) ||\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\n      // Emoticons 0x1f600 - 0x1f64f\n      (code >= 0x1f300 && code <= 0x1f64f) ||\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n      (code >= 0x20000 && code <= 0x3fffd)\n    );\n  };\n\n  const isZeroWidthCodePoint = (code) => {\n    return code <= 0x1F || // C0 control codes\n      (code >= 0x7F && code <= 0x9F) || // C1 control codes\n      (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\n      (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\n      // Combining Diacritical Marks for Symbols\n      (code >= 0x20D0 && code <= 0x20FF) ||\n      (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\n      (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\n      (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\n  };\n}\n\n/**\n * Remove all VT control characters. Use to estimate displayed string width.\n */\nfunction stripVTControlCharacters(str) {\n  validateString(str\x2C 'str');\n\n  return str.replace(ansi\x2C '');\n}\n\nmodule.exports = {\n  identicalSequenceRange\x2C\n  inspect\x2C\n  inspectDefaultOptions\x2C\n  format\x2C\n  formatWithOptions\x2C\n  getStringWidth\x2C\n  stripVTControlCharacters\x2C\n};\n
code-source-info,0x3b7ada47d2fe,20,70055,70216,C0O70055C8O70085C16O70100C24O70085C29O70159C32O70166C37O70214,,
tick,0x7f407774b6d7,829327,0,0x0,3,0x11d7ee0,0x3b7ada47cef2,0x3b7ada47cda6,0xc0c690,0x3b7ada47cc90,0x3b7ada47c7f7,0xa26aaa1ff2,0x3b7ada47c68c,0x3b7ada47a7d1
tick,0x7f407774b6ef,829434,0,0x0,3,0x11d7ee0,0x3b7ada47cef2,0x3b7ada47cda6,0xc0c690,0x3b7ada47cc90,0x3b7ada47c7f7,0xa26aaa1ff2,0x3b7ada47c68c,0x3b7ada47a7d1
tick,0x7f40773a70af,829484,0,0x0,3,0x11d7ee0,0x3b7ada47cef2,0x3b7ada47cda6,0xc0c690,0x3b7ada47cc90,0x3b7ada47c7f7,0xa26aaa1ff2,0x3b7ada47c68c,0x3b7ada47a7d1
code-creation,LazyCompile,10,829568,0x3b7ada47d586,763,formatWithOptionsInternal node:internal/util/inspect:2122:35,0x1d498349e2b0,~
code-source-info,0x3b7ada47d
code-creation,LazyCompile,10,829787,0x3b7ada47dc6e,269,value node:internal/console/constructor:271:20,0x3e83b615fb98,~
code-source-info,0x3b7ada47dc6e,37,7948,9392,C0O8005C5O8046C7O8051C9O8050C13O8091C15O8108C17O8104C21O8141C23O8158C29O8173C34O8209C38O8234C44O8261C49O8305C55O8312C60O8329C68O8333C75O8384C90O8442C98O8393C105O8476C107O8497C112O8521C122O8544C123O8561C128O8586C133O8586C138O8600C145O8917C153O8917C160O8940C165O8964C176O8964C182O9001C187O9001C206O9197C216O9201C222O9236C224O9236C238O9341C239O9348C250O9348C268O9391,,
code-creation,LazyCompile,10,829961,0x3b7ada47defe,31,listenerCount node:events:840:23,0x1d49834a97c8,~
code-source-info,0x3b7ada47defe,23,24135,24403,C0O24166C5O24178C7O24229C9O24235C13O24248C17O24294C19O24303C20O24315C24O24371C28O24378C29O24392C30O24401,,
code-creation,LazyCompile,10,830100,0x3b7ada47dff6,26,Writable.write node:internal/streams/writable:335:36,0x456f1088008,~
code-source-info,0x3b7ada47dff6,65,10787,10865,C0O10813C15O10820C22O10854C25O10863,,
code-creation,LazyCompile,10,830251,0x3b7ada47e1de,338,_write node:internal/streams/writable:285:16,0x456f1087fb8,~
code-source-info,0x3b7ada47e1de
tick,0x7f40773a70af,830410,0,0x0,3,0x11d7ee0,0x3b7ada47e005,0x3b7ada47dd29,0x3b7ada47cdac,0xc0c690,0x3b7ada47cc90,0x3b7ada47c7f7,0xa26aaa1ff2,0x3b7ada47c68c,0x3b7ada47a7d1
code-creation,LazyCompile,10,830506,0x3b7ada47e5a6,217,writeOrBuffer node:internal/streams/writable:367:23,0x456f1088218,~
code-source-info,0x3b7ada47e5a6,65,11706,12697,C0O11771C10O11794C15O11805C22O11821C25O11818C29O11886C34O11901C38O11893C42O11990C44O12004C45O12020C49O12041C55O12058C61O12074C67O12092C73O12117C78O12126C90O12133C96O12140C102O12150C106O12126C111O12177C119O12200C124O12222C125O12239C129O12268C137O12288C142O12305C143O12319C149O12349C151O12364C155O12375C157O12389C161O12405C162O12419C166O12431C167O12442C171O12461C176O12491C190O12461C195O12505C196O12516C200O12646C204O12667C211O12685C216O12695,,
code-creation,LazyCompile,10,830653,0x3b7ada47e7de,26,Socket._write node:net:885:35,0x24759bdcd9e8,~
code-source-info,0x3b7ada47e7de,116,22626,22699,C0O22656C19O22656C25O22698,,
code-creation,LazyCompile,10,830765,0x3b7ada47e9de,186,Socket._writeGeneric node:net:848:42,0x24759bdcd8a8,~
code-source-info,0x3b7ada47e9de,116,21736,22489,C0O21736C21O21938C27O21956C29O21974C33O21986C35O22008C39O22029C52O22029C58O22132C59O22139C60O22146C61O22164C65O22174C67O22196C71O22215C77O22230C84O22237C87O22233C93O22230C97O22263C98O22276C99O22289C104O22289C108O22311C110O22318C114O22334C130O22340C138O22382C157O22388C163O22438C169O22449C173O22454C176O22481C180O22475C185O22488,,
code-creation,LazyCompile,10,830908,0x3b7ada47ec46,45,_unrefTimer node:net:441:52,0x24759bdccab8,~
code-source-info,0x3b7ada47ec46,116,12062,12172,C0O12082C5O12090C9O12121C11O12127C13O12126C18O12144C20O12146C22O12145C26O12156C31O12156C35O12106C40O12069C44O12171,,
code-creation,LazyCompile,10,830993,0x3b7ada47ed66,55,writeGeneric node:internal/stream_base_commons:147:22,0x1d94759d8a60,~
script-source,91,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  errnoException\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateCallback } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  const stream = this.handle[owner_symbol];\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  // TODO (ronag): This should be moved before if(stream.destroyed)\n  // in order to avoid swallowing error.\n  if (status < 0) {\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function')\n      this.callback(ex);\n    else\n      stream.destroy(ex);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n  const stream = this[owner_symbol];\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(errnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\n  // and will not deliver any more read events after this point.\n  // (equivalently\x2C it should have called readStop on itself already).\n  // Some streams may be reset and explicitly started again with a call\n  // to readStart\x2C such as TTY.\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(errnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateCallback(callback);\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateCallback(callback);\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n};\n
code-source-info,0x3b7ada47ed66,91,3597,3781,C0O3640C5O3661C7O3660C11O3640C17O3690C29O3690C35O3730C47O3730C52O3768C54O3779,,
code-creation,LazyCompile,10,831345,0x3b7ada47eeb6,47,createWriteWrap node:internal/stream_base_commons:109:25,0x1d94759d89a0,~
code-source-info,0x3b7ada47eeb6,91,2719,2933,C0O2754C5O2754C11O2774C13O2785C17O2797C19O2812C23O2833C24O2843C28O2854C29O2864C33O2871C34O2882C38O2892C40O2905C44O2920C46O2931,,
tick,0x1091ee9,831508,0,0x0,0,0xf2fb90,0x3b7ada47eece,0x3b7ada47ed71,0x3b7ada47ea7b,0x3b7ada47e7f1,0x3b7ada47e664,0x3b7ada47e32a,0x3b7ada47e005,0x3b7ada47dd29,0x3b7ada47cdac,0xc0c690,0x3b7ada47cc90,0x3b7ada47c7f7,0xa26aaa1ff2,0x3b7ada47c68c,0x3b7ada47a7d1
code-creation,LazyCompile,10,831610,0x3b7ada47f0be,215,handleWriteReq node:internal/stream_base_commons:45:24,0x1d94759d8900,~
code-source-info,0x3b7ada47f0be,91,1174,2006,C0O1208C5O1227C80O1297C85O1297C92O1327C99O1347C101O1346C106O1376C108O1387C112O1401C114O1412C115O1477C120O1477C126O1506C127O1562C132O1562C138O1589C139O1628C144O1628C150O1656C151O1753C156O1753C162O1780C163O1821C168O1828C173O1828C180O1875C185O1875C192O1907C199O1927C201O1926C206O1956C208O1967C212O1983C214O1994,,
code-creation,LazyCompile,10,831726,0x3b7ada47f306,92,afterWriteDispatched node:internal/stream_base_commons:155:30,0x1d94759d8ad0,~
code-source-info,0x3b7ada47f306,91,3812,4086,C0O3831C2O3843C7O3859C9O3858C12O3841C16O3877C18O3891C23O3907C25O3906C30O3887C34O3931C35O3939C40O3950C42O3960C48O3993C56O3960C62O3957C66O4001C67O4014C73O4034C81O4069C86O4069C91O4085,,
code-creation,LazyCompile,10,831908,0x3b7ada47f55e,323,onwrite node:internal/streams/writable:427:17,0x456f1088308,~
code-source-info,0x3b7ada47f55e
code-creation,LazyCompile,10,832147,0x3b7ada47f85e,62,Readable.removeListener node:internal/streams/readable:904:45,0xe02923bd20,~
code-source-info,0x3b7ada47f85e,58,28742,29299,C0O28767C5O28774C10O28784C15O28799C29O28799C35O28873C37O28880C42O29230C45O29238C53O29238C59O29286C61O29297,,
code-creation,LazyCompile,10,832380,0x3b7ada47f9f6,46,afterWriteTick node:internal/streams/writable:484:24,0x456f1088358,~
code-source-info,0x3b7ada47f9f6,65,15130,15246,C0O15133C5O15141C10O15148C15O15155C20O15165C21O15190C25O15200C40O15207C45O15244,,
code-creation,LazyCompile,10,832486,0x3b7ada47fb36,104,afterWrite node:internal/streams/writable:489:20,0x456f10883a8,~
code-source-info,0x3b7ada47fb36,65,15267,15623,C0O15323C7O15341C14O15360C20O15367C25O15386C30O15399C32O15420C33O15436C37O15456C45O15456C50O15493C60O15493C65O15504C71O15519C75O15527C78O15478C81O15550C87O15567C90O15567C94O15594C97O15594C103O15622,,
code-creation,LazyCompile,10,832576,0x3b7ada47fcc6,35,get node:internal/streams/duplex:97:8,0xe0292305b0,~
code-source-info,0x3b7ada47fcc6,57,3571,3780,C0O3591C6O3636C12O3676C13O3689C14O3716C19O3731C25O3749C30O3764C34O3774,,
code-creation,LazyCompile,10,832668,0x3b7ada47fe06,87, node:internal/console/constructor:355:10,0xa26aa9bd50,~
code-source-info,0x3b7ada47fe06,37,10677,11495,C0O10894C7O10911C9O10907C17O10939C26O10958C31O10971C35O10999C40O11014C46O11410C54O11410C61O11433C66O11457C79O11457C86O11494,,
tick,0x7f40773a70af,833010,0,0x0,3,0x11d7ee0,0x3b7ada47fb81,0x3b7ada47fa1e,0x3b7ada47a7d1
code-creation,LazyCompile,10,833177,0x3b7ada47ff5e,85,finishMaybe node:internal/streams/writable:733:21,0x456f1088680,~
code-source-info,0x3b7ada47ff5e,65,21384,21676,C0O21410C3O21414C9O21439C12O21439C17O21479C23O21489C31O21498C37O21525C43O21540C47O21550C51O21570C54O21578C68O21578C75O21634C78O21634C84O21675,,
code-creation,LazyCompile,10,833377,0x1c8aa8c3f736,73,needFinish node:internal/streams/writable:652:20,0x456f1088590,~
code-source-info,0x1c8aa8c3f736,65,19399,19690,C0O19425C6O19451C12O19482C18O19489C23O19515C30O19542C35O19551C41O19558C46O19584C53O19613C60O19641C67O19674C72O19688,,
code-creation,LazyCompile,10,833612,0x1c8aa8c3fa36,627,processPromiseRejections node:internal/process/promises:211:34,0x3e83b6154bd0,~
script-source,33,node:internal/process/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst {\n  tickInfo\x2C\n  promiseRejectEvents: {\n    kPromiseRejectWithNoHandler\x2C\n    kPromiseHandlerAddedAfterReject\x2C\n    kPromiseResolveAfterResolved\x2C\n    kPromiseRejectAfterResolved\n  }\x2C\n  setPromiseRejectCallback\n} = internalBinding('task_queue');\n\nconst {\n  noSideEffectsToString\x2C\n  triggerUncaughtException\n} = internalBinding('errors');\n\nconst {\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  symbols: {\n    async_id_symbol: kAsyncIdSymbol\x2C\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\n  }\n} = require('internal/async_hooks');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasRejectionToWarn = 1;\n\nconst maybeUnhandledPromises = new SafeWeakMap();\nconst pendingUnhandledRejections = [];\nconst asyncHandledRejections = [];\nlet lastPromiseId = 0;\n\n// --unhandled-rejections=none:\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\nconst kIgnoreUnhandledRejections = 0;\n\n// --unhandled-rejections=warn:\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\nconst kAlwaysWarnUnhandledRejections = 1;\n\n// --unhandled-rejections=strict:\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\n// and exit the process.\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\nconst kStrictUnhandledRejections = 2;\n\n// --unhandled-rejections=throw:\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\n// and exit the process.\nconst kThrowUnhandledRejections = 3;\n\n// --unhandled-rejections=warn-with-error-code:\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\n\nconst kWarnWithErrorCodeUnhandledRejections = 4;\n\nlet unhandledRejectionsMode;\n\nfunction setHasRejectionToWarn(value) {\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\n}\n\nfunction hasRejectionToWarn() {\n  return tickInfo[kHasRejectionToWarn] === 1;\n}\n\nfunction isErrorLike(o) {\n  return typeof o === 'object' &&\n         o !== null &&\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\n}\n\nfunction getUnhandledRejectionsMode() {\n  const { getOptionValue } = require('internal/options');\n  switch (getOptionValue('--unhandled-rejections')) {\n    case 'none':\n      return kIgnoreUnhandledRejections;\n    case 'warn':\n      return kAlwaysWarnUnhandledRejections;\n    case 'strict':\n      return kStrictUnhandledRejections;\n    case 'throw':\n      return kThrowUnhandledRejections;\n    case 'warn-with-error-code':\n      return kWarnWithErrorCodeUnhandledRejections;\n    default:\n      return kThrowUnhandledRejections;\n  }\n}\n\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\n  if (unhandledRejectionsMode === undefined) {\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\n  }\n  switch (type) {\n    case kPromiseRejectWithNoHandler:\n      unhandledRejection(promise\x2C reason);\n      break;\n    case kPromiseHandlerAddedAfterReject:\n      handledRejection(promise);\n      break;\n    case kPromiseResolveAfterResolved:\n      resolveError('resolve'\x2C promise\x2C reason);\n      break;\n    case kPromiseRejectAfterResolved:\n      resolveError('reject'\x2C promise\x2C reason);\n      break;\n  }\n}\n\nfunction resolveError(type\x2C promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\n  });\n}\n\nfunction unhandledRejection(promise\x2C reason) {\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\n    if (promiseInfo.domain) {\n      return promiseInfo.domain.emit('error'\x2C reason);\n    }\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\n  };\n\n  maybeUnhandledPromises.set(promise\x2C {\n    reason\x2C\n    uid: ++lastPromiseId\x2C\n    warned: false\x2C\n    domain: process.domain\x2C\n    emit\n  });\n  // This causes the promise to be referenced at least for one tick.\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\n  setHasRejectionToWarn(true);\n}\n\nfunction handledRejection(promise) {\n  const promiseInfo = maybeUnhandledPromises.get(promise);\n  if (promiseInfo !== undefined) {\n    maybeUnhandledPromises.delete(promise);\n    if (promiseInfo.warned) {\n      const { uid } = promiseInfo;\n      // Generate the warning object early to get a good stack trace.\n      // eslint-disable-next-line no-restricted-syntax\n      const warning = new Error('Promise rejection was handled ' +\n                                `asynchronously (rejection id: ${uid})`);\n      warning.name = 'PromiseRejectionHandledWarning';\n      warning.id = uid;\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\n      setHasRejectionToWarn(true);\n      return;\n    }\n  }\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\n    setHasRejectionToWarn(false);\n}\n\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\n  const warning = getErrorWithoutStack(\n    unhandledRejectionErrName\x2C\n    'Unhandled promise rejection. This error originated either by ' +\n      'throwing inside of an async function without a catch block\x2C ' +\n      'or by rejecting a promise which was not handled with .catch(). ' +\n      'To terminate the node process on unhandled promise ' +\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\n      `(rejection id: ${uid})`\n  );\n  try {\n    if (isErrorLike(reason)) {\n      warning.stack = reason.stack;\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\n    } else {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    }\n  } catch {\n    try {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    } catch {\n      // Ignore.\n    }\n  }\n\n  process.emitWarning(warning);\n}\n\n// If this method returns true\x2C we've executed user code or triggered\n// a warning to be emitted which requires the microtask and next tick\n// queues to be drained again.\nfunction processPromiseRejections() {\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\n\n  while (asyncHandledRejections.length > 0) {\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\n    if (!process.emit('rejectionHandled'\x2C promise)) {\n      process.emitWarning(warning);\n    }\n  }\n\n  let len = pendingUnhandledRejections.length;\n  while (len--) {\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\n    const promiseInfo = maybeUnhandledPromises.get(promise);\n    if (promiseInfo === undefined) {\n      continue;\n    }\n    promiseInfo.warned = true;\n    const { reason\x2C uid\x2C emit } = promiseInfo;\n\n    let needPop = true;\n    const {\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\n    } = promise;\n    // We need to check if async_hooks are enabled\n    // don't use enabledHooksExist as a Promise could\n    // come from a vm.* context and not have an async id\n    if (typeof promiseAsyncId !== 'undefined') {\n      pushAsyncContext(\n        promiseAsyncId\x2C\n        promiseTriggerAsyncId\x2C\n        promise\n      );\n    }\n    try {\n      switch (unhandledRejectionsMode) {\n        case kStrictUnhandledRejections: {\n          const err = isErrorLike(reason) ?\n            reason : generateUnhandledRejectionError(reason);\n          // This destroys the async stack\x2C don't clear it after\n          triggerUncaughtException(err\x2C true /* fromPromise */);\n          if (typeof promiseAsyncId !== 'undefined') {\n            pushAsyncContext(\n              promise[kAsyncIdSymbol]\x2C\n              promise[kTriggerAsyncIdSymbol]\x2C\n              promise\n            );\n          }\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\n          break;\n        }\n        case kIgnoreUnhandledRejections: {\n          emit(reason\x2C promise\x2C promiseInfo);\n          break;\n        }\n        case kAlwaysWarnUnhandledRejections: {\n          emit(reason\x2C promise\x2C promiseInfo);\n          emitUnhandledRejectionWarning(uid\x2C reason);\n          break;\n        }\n        case kThrowUnhandledRejections: {\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\n          if (!handled) {\n            const err = isErrorLike(reason) ?\n              reason : generateUnhandledRejectionError(reason);\n              // This destroys the async stack\x2C don't clear it after\n            triggerUncaughtException(err\x2C true /* fromPromise */);\n            needPop = false;\n          }\n          break;\n        }\n        case kWarnWithErrorCodeUnhandledRejections: {\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\n          if (!handled) {\n            emitUnhandledRejectionWarning(uid\x2C reason);\n            process.exitCode = 1;\n          }\n          break;\n        }\n      }\n    } finally {\n      if (needPop) {\n        if (typeof promiseAsyncId !== 'undefined') {\n          popAsyncContext(promiseAsyncId);\n        }\n      }\n    }\n    maybeScheduledTicksOrMicrotasks = true;\n  }\n  return maybeScheduledTicksOrMicrotasks ||\n         pendingUnhandledRejections.length !== 0;\n}\n\nfunction getErrorWithoutStack(name\x2C message) {\n  // Reset the stack to prevent any overhead.\n  const tmp = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\n  ObjectDefineProperty(err\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: name\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: true\x2C\n  });\n  return err;\n}\n\nfunction generateUnhandledRejectionError(reason) {\n  const message =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block\x2C ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason ' +\n    `"${noSideEffectsToString(reason)}".`;\n\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\n  err.code = 'ERR_UNHANDLED_REJECTION';\n  return err;\n}\n\nfunction listenForRejections() {\n  setPromiseRejectCallback(promiseRejectHandler);\n}\nmodule.exports = {\n  hasRejectionToWarn\x2C\n  setHasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n};\n
code-source-info,0x1c8aa8c3fa
tick,0x7f407731c46f,834414,0,0x0,3,0x11d7ee0,0x3b7ada47a87b
code-creation,LazyCompile,10,834543,0x1c8aa8c3febe,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x3e83b6154140,~
code-source-info,0x1c8aa8c3febe,33,2095,2155,C0O2107C7O2116C12O2139C19O2137C24O2154,,
tick,0x7f40773b8296,1233156,0,0x0,8
tick,0x1238b34,1233784,0,0x0,5
tick,0x142bc41,1234906,0,0x0,5
tick,0x7f40773b8296,8943428,0,0x0,8
tick,0x7f407749b0bd,8943913,0,0x0,6
tick,0xeb3d42,8945002,0,0x0,1
new,MemoryChunk,0x162e86f80000,262144
new,MemoryChunk,0x3fb9fb480000,262144
new,MemoryChunk,0x862b0ac0000,262144
new,MemoryChunk,0x32b48f040000,262144
new,MemoryChunk,0x77ca3740000,262144
new,MemoryChunk,0x2e11533c0000,262144
new,MemoryChunk,0xcbe36540000,262144
new,MemoryChunk,0xc15d89c0000,262144
markcompact,begin,0,416108,1663277520496
tick,0xe920be,8946127,0,0x0,1
tick,0x7f407749b18d,8947251,0,0x0,1
markcompact,end,0,417738,1663277520498
delete,MemoryChunk,0xc15d89c0000
delete,MemoryChunk,0xcbe36540000
delete,MemoryChunk,0x2e11533c0000
delete,MemoryChunk,0x77ca3740000
delete,MemoryChunk,0x32b48f040000
delete,MemoryChunk,0x862b0ac0000
delete,MemoryChunk,0x3fb9fb480000
delete,MemoryChunk,0x162e86f80000
delete,MemoryChunk,0x27e8010c0000
delete,MemoryChunk,0x31b90db80000
delete,MemoryChunk,0x2a191fd80000
delete,MemoryChunk,0xc330a5c0000
tick,0xb042b1,8948447,0,0x0,6
tick,0x7f40773b8296,9549184,0,0x0,8
tick,0xeccfa5,9549778,0,0x0,1
tick,0xeb82df,9550853,0,0x0,1
markcompact,begin,0,426870,1663277521101
sfi-move,0x334da6581118,0x2d5a783742a0
sfi-move,0x334da6581168,0x2d5a78374690
sfi-move,0x334da65811b8,0x2d5a78374340
sfi-move,0x334da6581bf0,0x2d5a78374948
sfi-move,0x334da6581c40,0x2d5a78374998
sfi-move,0x334da6581c90,0x2d5a783749e8
sfi-move,0x334da6581ce0,0x2d5a78374a38
sfi-move,0x334da6581d30,0x2d5a78374a88
sfi-move,0x334da6581d80,0x2d5a78374ad8
sfi-move,0x334da6581dd0,0x2d5a78374b28
sfi-move,0x334da6581e20,0x2d5a78374b78
sfi-move,0x334da6581e70,0x2d5a78374bc8
sfi-move,0x334da6581ef8,0x2d5a78374c50
sfi-move,0x334da6581f80,0x2d5a78374cd8
sfi-move,0x2a1384e011b8,0x3eeb8b1956d0
code-move,0x2a1384e012be,0x3eeb8b1a434e
tick,0x7f40773a70af,9552057,0,0x0,1
sfi-move,0x334da6582008,0x2d5a78374d60
sfi-move,0x334da6582090,0x2d5a78374de8
sfi-move,0x334da6582118,0x2d5a78374e70
sfi-move,0x334da65821a0,0x2d5a78374ef8
sfi-move,0x334da6582228,0x2d5a78374f80
code-move,0x2a1384e01636,0x3eeb8b19b776
code-move,0x2a1384e0178e,0x3eeb8b18f9ae
code-move,0x2a1384e018f6,0x3eeb8b1b999e
code-move,0x2a1384e01b6e,0x3eeb8b1867de
code-move,0x2a1384e023a6,0x3eeb8b1b26a6
code-move,0x2a1384e024d6,0x3eeb8b1b0c56
sfi-move,0x2a1384e02d50,0x3eeb8b1b0340
sfi-move,0x2a1384e02dc8,0x3eeb8b1b03b8
sfi-move,0x2a1384e02e18,0x3eeb8b197290
sfi-move,0x2a1384e02e68,0x3eeb8b1ad080
sfi-move,0x2a1384e02eb8,0x3eeb8b1ad0d0
sfi-move,0x2a1384e02f08,0x3eeb8b194eb0
sfi-move,0x2a1384e02f58,0x3eeb8b194f00
sfi-move,0x2a1384e02fa8,0x3eeb8b194f50
sfi-move,0x2a1384e02ff8,0x3eeb8b194fa0
sfi-move,0x2a1384e03048,0x3eeb8b1a3e00
sfi-move,0x2a1384e030d0,0x3eeb8b1a3e88
sfi-move,0x2a1384e03160,0x3eeb8b1a3f18
sfi-move,0x2a1384e031e8,0x3eeb8b1a3fa0
sfi-move,0x2a1384e03238,0x3eeb8b1a3ff0
sfi-move,0x2a1384e03288,0x3eeb8b1a4040
sfi-move,0x2a1384e032d8,0x3eeb8b1a4090
sfi-move,0x2a1384e03328,0x3eeb8b1a40e0
sfi-move,0x2a1384e033b0,0x3eeb8b1a0eb0
sfi-move,0x2a1384e03438,0x3eeb8b1a0f38
sfi-move,0x2a1384e034c8,0x3eeb8b1a0fc8
sfi-move,0x2a1384e03550,0x3eeb8b1a1050
tick,0x7f407749e170,9553815,0,0x0,1
sfi-move,0x334da65822b0,0x35967337260
sfi-move,0x334da6582338,0x3596732ff68
sfi-move,0x334da65823c0,0x3596731c640
sfi-move,0x334da6582410,0x35967303628
sfi-move,0x334da6582460,0x3596733a948
sfi-move,0x334da65824b0,0x3596733a5b8
code-move,0x2a1384e0556e,0x3eeb8b187556
code-move,0x2a1384e0567e,0x3eeb8b1831f6
code-move,0x2a1384e0578e,0x3eeb8b1832de
code-move,0x334da6583fa6,0x3596733169e
tick,0x7f40773a70af,9554349,0,0x0,1
sfi-move,0x334da6585060,0x3596733f788
sfi-move,0x334da65850b0,0x3596733f7d8
code-move,0x2a1384e05886,0x3eeb8b1acb4e
code-move,0x2a1384e059b6,0x3eeb8b1acc7e
sfi-move,0x2a1384e05b00,0x3eeb8b1acdc8
code-move,0x2a1384e05c4e,0x3eeb8b1acee6
sfi-move,0x334da6585100,0x3596733f828
sfi-move,0x334da6585150,0x3596733f878
sfi-move,0x334da65851a0,0x3596733f8c8
sfi-move,0x334da65851f0,0x3596733f918
sfi-move,0x334da6585240,0x3596733f968
sfi-move,0x334da6585290,0x35967335c70
sfi-move,0x334da65852e0,0x35967328340
sfi-move,0x334da6585330,0x35967328390
sfi-move,0x334da6585380,0x3596732fe70
sfi-move,0x334da65853d0,0x3596732fec0
sfi-move,0x334da6585420,0x3596732cab0
sfi-move,0x334da6585470,0x3596732cb00
sfi-move,0x334da65854c0,0x3596732cb50
sfi-move,0x334da6585510,0x3596732eba0
tick,0x7f4077497839,9555524,0,0x0,1
code-move,0x2a1384e06996,0x3eeb8b1a1f76
sfi-move,0x334da6585560,0x3596732ebf0
sfi-move,0x334da65855b0,0x3596732ec40
sfi-move,0x334da6585600,0x35967334e10
sfi-move,0x334da6585650,0x35967334e60
sfi-move,0x334da65856a0,0x35967334eb0
sfi-move,0x334da65856f0,0x35967334f00
sfi-move,0x334da6585740,0x35967334f50
sfi-move,0x334da65857c8,0x3596732fc18
sfi-move,0x334da6585850,0x3596732fca0
sfi-move,0x334da65858a0,0x3596732fcf0
sfi-move,0x334da65858f0,0x3596732e990
sfi-move,0x334da6585940,0x3596732e9e0
sfi-move,0x334da65859c8,0x3596732ea68
sfi-move,0x334da6585a50,0x3596732c780
code-move,0x2a1384e06ade,0x3eeb8b1a20ae
sfi-move,0x2a1384e07208,0x3eeb8b1a00a0
sfi-move,0x2a1384e07258,0x3eeb8b1a00d8
sfi-move,0x2a1384e072a8,0x3eeb8b195768
sfi-move,0x334da6585ac8,0x3596732c7f8
sfi-move,0x2a1384e072f8,0x3eeb8b1957b8
sfi-move,0x2a1384e07348,0x3eeb8b195808
sfi-move,0x2a1384e07398,0x3eeb8b195858
sfi-move,0x2a1384e073e8,0x3eeb8b1958a8
sfi-move,0x2a1384e07438,0x3eeb8b1958f8
tick,0x7f4077497839,9556545,0,0x0,1
sfi-move,0x334da6585b40,0x3596732bf08
sfi-move,0x334da6585b90,0x3596732bf58
sfi-move,0x334da6585be0,0x3596732bfa8
sfi-move,0x334da6585c30,0x3596732bff8
sfi-move,0x334da6585c80,0x3596732c048
sfi-move,0x334da6585cd0,0x3596732c098
sfi-move,0x334da6585d20,0x3596732a390
sfi-move,0x334da6585d70,0x3596732a3e0
tick,0x7f40773a70af,9557742,0,0x0,1
sfi-move,0x334da6585dc0,0x3596732a430
sfi-move,0x334da6585e10,0x3596732a480
sfi-move,0x334da6585e60,0x3596732a4d0
sfi-move,0x334da6585eb0,0x3596732a520
sfi-move,0x334da6585f00,0x3596732a100
sfi-move,0x334da6585f88,0x3596732a188
sfi-move,0x334da6586010,0x3596732a210
sfi-move,0x334da6586098,0x35967329b68
sfi-move,0x334da65860e8,0x35967329bb8
sfi-move,0x334da6586138,0x35967329c08
sfi-move,0x334da6586188,0x35967329600
sfi-move,0x334da65861d8,0x35967329650
sfi-move,0x334da6586228,0x359673296a0
sfi-move,0x334da6586278,0x359673296f0
sfi-move,0x334da65862c8,0x35967329740
sfi-move,0x334da6586318,0x3596732af20
sfi-move,0x2a1384e09938,0x3eeb8b19aa80
sfi-move,0x2a1384e09988,0x3eeb8b19aad0
sfi-move,0x2a1384e099d8,0x3eeb8b19ab20
sfi-move,0x2a1384e09a28,0x3eeb8b19ab70
sfi-move,0x2a1384e09a78,0x3eeb8b19abc0
sfi-move,0x2a1384e09ac8,0x3eeb8b19ac10
sfi-move,0x334da658a0d8,0x35967329e08
sfi-move,0x334da658a128,0x35967329e58
sfi-move,0x334da658a178,0x35967329ea8
code-move,0x334da658a886,0x3596732983e
tick,0x7f407749e16e,9559196,0,0x0,1
sfi-move,0x2a1384e09b18,0x3eeb8b19ac60
sfi-move,0x2a1384e09b68,0x3eeb8b19acb0
sfi-move,0x2a1384e09bb8,0x3eeb8b19ad00
sfi-move,0x2a1384e09c40,0x3eeb8b19ad88
sfi-move,0x2a1384e09c90,0x3eeb8b19add8
sfi-move,0x2a1384e09ce0,0x3eeb8b19ae28
sfi-move,0x2a1384e09d30,0x3eeb8b19ae78
sfi-move,0x2a1384e09d80,0x3eeb8b19aec8
sfi-move,0x2a1384e09dd0,0x3eeb8b19af18
sfi-move,0x2a1384e09e20,0x3eeb8b19af68
sfi-move,0x2a1384e09e70,0x3eeb8b19afb8
sfi-move,0x2a1384e09ec0,0x3eeb8b19b008
sfi-move,0x2a1384e09f10,0x3eeb8b19b058
sfi-move,0x2a1384e09f80,0x3eeb8b19b0c8
sfi-move,0x2a1384e09ff0,0x3eeb8b19b138
sfi-move,0x2a1384e0a060,0x3eeb8b19b1a8
sfi-move,0x2a1384e0a0d0,0x3eeb8b19b218
sfi-move,0x334da658b6e8,0x359673329c8
sfi-move,0x334da658b738,0x35967332a00
sfi-move,0x2a1384e0a148,0x3eeb8b19b290
sfi-move,0x2a1384e0a198,0x3eeb8b1834c0
sfi-move,0x2a1384e0cc08,0x3eeb8b183b68
sfi-move,0x2a1384e0cc58,0x3eeb8b183bb8
sfi-move,0x2a1384e0cca8,0x3eeb8b183c08
sfi-move,0x2a1384e0ccf8,0x3eeb8b183c58
sfi-move,0x2a1384e0cd48,0x3eeb8b183ca8
sfi-move,0x2a1384e0cd98,0x3eeb8b183cf8
code-move,0x2a1384e0ded6,0x3eeb8b1965ee
sfi-move,0x334da658b788,0x35967332fe0
sfi-move,0x334da658b7d8,0x35967333030
sfi-move,0x334da658b828,0x35967333080
tick,0x7f40773a70af,9559880,0,0x0,1
sfi-move,0x334da658b878,0x359673330d0
sfi-move,0x2a1384e0e3b0,0x3eeb8b196a38
sfi-move,0x2a1384e0e400,0x3eeb8b196a88
sfi-move,0x2a1384e0e450,0x3eeb8b196ac0
sfi-move,0x2a1384e0e4d8,0x3eeb8b196b30
sfi-move,0x2a1384e0e5e0,0x3eeb8b196c00
sfi-move,0x2a1384e0e660,0x3eeb8b196c68
sfi-move,0x2a1384e0e6f0,0x3eeb8b196cd8
sfi-move,0x2a1384e0e780,0x3eeb8b196d48
sfi-move,0x2a1384e0e800,0x3eeb8b196db0
sfi-move,0x2a1384e0e880,0x3eeb8b196e18
sfi-move,0x2a1384e0e900,0x3eeb8b196e80
sfi-move,0x2a1384e0e988,0x3eeb8b196ef0
sfi-move,0x2a1384e0ea08,0x3eeb8b196f58
sfi-move,0x2a1384e0ea88,0x3eeb8b196fc0
sfi-move,0x2a1384e0eb08,0x3eeb8b184328
sfi-move,0x2a1384e0eb88,0x3eeb8b184390
code-move,0x2a1384e0ed6e,0x3eeb8b184576
code-move,0x2a1384e0f1e6,0x3eeb8b1849ee
sfi-move,0x2a1384e0f618,0x3eeb8b184da0
sfi-move,0x2a1384e0f668,0x3eeb8b184df0
sfi-move,0x2a1384e0f6e8,0x3eeb8b184e58
sfi-move,0x2a1384e0f778,0x3eeb8b184ec8
sfi-move,0x2a1384e0f800,0x3eeb8b184f38
sfi-move,0x2a1384e0f880,0x3eeb8b184fa0
code-move,0x2a1384e0f9ae,0x3eeb8b1850b6
sfi-move,0x2a1384e0fbd8,0x3eeb8b1852e0
code-move,0x2a1384e0fcbe,0x3eeb8b1853ae
sfi-move,0x2a1384e0fdb0,0x3eeb8b1854a0
sfi-move,0x334da658b8c8,0x35967333120
sfi-move,0x334da658b940,0x35967333198
sfi-move,0x2a1384e0fe40,0x3eeb8b1bc7e0
sfi-move,0x2a1384e0fec0,0x3eeb8b1bc848
sfi-move,0x2a1384e0ff50,0x3eeb8b1bc8d8
sfi-move,0x2a1384e0ffe0,0x3eeb8b1bc948
sfi-move,0x2a1384e10070,0x3eeb8b1bc9d8
sfi-move,0x2a1384e10100,0x3eeb8b1bca68
sfi-move,0x2a1384e10190,0x3eeb8b1bcaf8
sfi-move,0x2a1384e10210,0x3eeb8b1bcb60
code-move,0x2a1384e10376,0x3eeb8b1bccae
sfi-move,0x2a1384e10820,0x3eeb8b1bcf28
code-move,0x2a1384e10906,0x3eeb8b1bcff6
sfi-move,0x2a1384e10ac8,0x3eeb8b1bd1b8
sfi-move,0x2a1384e10b18,0x3eeb8b1bd208
sfi-move,0x2a1384e10b68,0x3eeb8b1bd258
sfi-move,0x2a1384e10bb8,0x3eeb8b1bd2a8
sfi-move,0x2a1384e10c08,0x3eeb8b1bd2f8
sfi-move,0x2a1384e10c58,0x3eeb8b1bd348
sfi-move,0x334da658b990,0x359673331e8
sfi-move,0x2a1384e10ca8,0x3eeb8b1bd398
sfi-move,0x2a1384e10cf8,0x3eeb8b1bd3e8
sfi-move,0x2a1384e10d48,0x3eeb8b1bd438
sfi-move,0x2a1384e10d98,0x3eeb8b1bd488
sfi-move,0x2a1384e10de8,0x3eeb8b1bd4d8
sfi-move,0x334da658b9e0,0x35967333238
code-move,0x2a1384e10ee6,0x3eeb8b1bd5d6
sfi-move,0x2a1384e11368,0x3eeb8b1bd960
sfi-move,0x2a1384e113b8,0x3eeb8b1bd9b0
sfi-move,0x334da658ba30,0x35967333270
sfi-move,0x334da658ba80,0x359673332c0
sfi-move,0x334da658bad0,0x35967333310
sfi-move,0x2a1384e11408,0x3eeb8b1bda00
sfi-move,0x2a1384e11458,0x3eeb8b1bda50
sfi-move,0x2a1384e114a8,0x3eeb8b1bdaa0
sfi-move,0x2a1384e114f8,0x3eeb8b1bdaf0
sfi-move,0x2a1384e11548,0x3eeb8b1bdb40
sfi-move,0x2a1384e11598,0x3eeb8b1bdb90
sfi-move,0x2a1384e115e8,0x3eeb8b1bdbe0
sfi-move,0x2a1384e11638,0x3eeb8b1bdc30
sfi-move,0x2a1384e11688,0x3eeb8b1bdc80
sfi-move,0x2a1384e116d8,0x3eeb8b1bdcd0
code-move,0x2a1384e1182e,0x3eeb8b1bde06
tick,0x7f4077497839,9561648,0,0x0,1
sfi-move,0x334da658bb48,0x35967333388
sfi-move,0x334da658bb98,0x359673333d8
code-move,0x334da658ccce,0x359673336f6
code-move,0x334da658d306,0x35967333d2e
code-move,0x334da658d666,0x3596733408e
code-move,0x334da658d73e,0x35967334166
sfi-move,0x2a1384e11ad0,0x3eeb8b1be0a8
code-move,0x2a1384e11bae,0x3eeb8b1be16e
sfi-move,0x2a1384e11e80,0x3eeb8b1be330
sfi-move,0x2a1384e11ed0,0x3eeb8b1be380
code-move,0x2a1384e11fbe,0x3eeb8b1be456
sfi-move,0x2a1384e122b0,0x3eeb8b1be710
code-move,0x2a1384e1240e,0x3eeb8b1be856
code-move,0x2a1384e128ee,0x3eeb8b1bed36
code-move,0x2a1384e12b7e,0x3eeb8b1bee16
sfi-move,0x2a1384e12c68,0x3eeb8b1bef00
sfi-move,0x2a1384e12cb8,0x3eeb8b1bef38
sfi-move,0x2a1384e12d38,0x3eeb8b1bef88
sfi-move,0x2a1384e12dc8,0x3eeb8b1beff8
sfi-move,0x2a1384e12e50,0x3eeb8b1bf068
sfi-move,0x2a1384e12ed0,0x3eeb8b1bf0d0
sfi-move,0x2a1384e12f50,0x3eeb8b1bf138
sfi-move,0x2a1384e12fe0,0x3eeb8b1bf190
sfi-move,0x2a1384e13060,0x3eeb8b1bf1e0
code-move,0x2a1384e131ce,0x3eeb8b1bf31e
code-move,0x2a1384e134ee,0x3eeb8b1bf63e
sfi-move,0x2a1384e138a0,0x3eeb8b1bf970
sfi-move,0x2a1384e138f0,0x3eeb8b1bf9c0
sfi-move,0x2a1384e13940,0x3eeb8b1bfa10
code-move,0x2a1384e13aae,0x3eeb8b1bfb66
sfi-move,0x2a1384e13d18,0x3eeb8b1bfdd0
sfi-move,0x2a1384e13da8,0x3eeb8b1bfe40
sfi-move,0x2a1384e13e38,0x3eeb8b1bfed0
sfi-move,0x2a1384e13ec8,0x3eeb8b1bff60
sfi-move,0x334da658e6a0,0x3596732d188
sfi-move,0x334da658e6f0,0x3596732d1d8
sfi-move,0x334da658e740,0x3596732d228
sfi-move,0x334da658e790,0x3596732d278
sfi-move,0x334da658e7e0,0x3596732d2c8
tick,0x7f4077497839,9563165,0,0x0,1
tick,0x7f4077497839,9563230,0,0x0,1
sfi-move,0x334da658e830,0x3596732d318
sfi-move,0x334da658e880,0x3596732d368
sfi-move,0x334da658e8d0,0x3596732d3b8
sfi-move,0x334da658e920,0x3596732d408
sfi-move,0x334da658e970,0x3596732d458
sfi-move,0x334da658e9c0,0x3596732d4a8
sfi-move,0x334da658ea10,0x3596732d4f8
sfi-move,0x334da658ea60,0x3596732d548
sfi-move,0x334da658eab0,0x3596732d598
sfi-move,0x334da658eb00,0x3596732d5e8
sfi-move,0x334da658eb50,0x3596732d638
sfi-move,0x334da658eba0,0x3596732d688
sfi-move,0x334da658ebf0,0x3596732d6d8
sfi-move,0x334da658ec40,0x3596732d728
sfi-move,0x334da658ecb8,0x3596732d7a0
sfi-move,0x334da658ed08,0x3596732d7f0
sfi-move,0x334da658ed80,0x3596732d868
sfi-move,0x334da658edd0,0x3596732d8b8
sfi-move,0x334da658ee20,0x3596732d908
sfi-move,0x334da658ee70,0x3596732d958
sfi-move,0x334da658eec0,0x3596732d9a8
sfi-move,0x334da658ef10,0x3596732d9f8
sfi-move,0x334da658ef60,0x3596732da48
sfi-move,0x334da658efb0,0x3596732da98
sfi-move,0x334da658f000,0x3596732dae8
sfi-move,0x334da658f050,0x3596732db38
sfi-move,0x334da658f0a0,0x3596732db88
code-move,0x334da65923a6,0x3596733493e
code-move,0x334da659364e,0x359673026ae
sfi-move,0x334da6593a58,0x35967302908
sfi-move,0x334da6593aa8,0x35967302940
sfi-move,0x2a1384e13f58,0x3b7ada474cc0
sfi-move,0x334da6593af8,0x35967302990
sfi-move,0x334da6593b48,0x359673029e0
sfi-move,0x334da6593b98,0x35967302a18
sfi-move,0x334da6593be8,0x35967302a50
tick,0x7f40773a70af,9564703,0,0x0,1
sfi-move,0x2a1384e13fe8,0x3b7ada472780
sfi-move,0x2a1384e14078,0x3b7ada472060
sfi-move,0x2a1384e14108,0x3b7ada46f0b0
sfi-move,0x2a1384e14198,0x3b7ada46dbf0
sfi-move,0x2a1384e14228,0x3b7ada46b118
sfi-move,0x2a1384e142b8,0x3b7ada469200
code-move,0x334da6594a3e,0x35967302de6
code-move,0x334da6595036,0x359673033de
code-move,0x2a1384e1447e,0x3b7ada477556
code-move,0x2a1384e14806,0x3b7ada47bef6
sfi-move,0x2a1384e14898,0x3b7ada467a88
sfi-move,0x2a1384e14968,0x3b7ada466520
code-move,0x334da659565e,0xce3b4ad83d6
code-move,0x334da65959de,0xce3b4af5746
tick,0x7f40773a70af,9565424,0,0x0,1
code-move,0x334da659669e,0xce3b4af68be
code-move,0x334da65967c6,0xce3b4af69e6
code-move,0x334da6596db6,0xce3b4af6f56
code-move,0x334da65978ee,0xce3b4af7a8e
sfi-move,0x334da6598fe8,0xce3b4af8f38
sfi-move,0x334da6599038,0xce3b4af8f88
sfi-move,0x334da6599088,0xce3b4af8fd8
sfi-move,0x334da65990d8,0xce3b4af9028
sfi-move,0x334da6599128,0xce3b4af9078
sfi-move,0x334da6599178,0xce3b4af90c8
sfi-move,0x334da65991c8,0xce3b4af9118
sfi-move,0x334da6599218,0xce3b4af9168
sfi-move,0x334da6599268,0xce3b4af91b8
sfi-move,0x334da65992b8,0xce3b4af9208
sfi-move,0x334da6599308,0xce3b4af9258
sfi-move,0x334da6599358,0xce3b4af92a8
sfi-move,0x334da65993a8,0xce3b4af92f8
sfi-move,0x334da65993f8,0xce3b4af9348
sfi-move,0x334da6599448,0xce3b4af9398
sfi-move,0x334da6599498,0xce3b4af93e8
sfi-move,0x334da65994e8,0xce3b4af9438
sfi-move,0x334da6599538,0xce3b4ad2a18
sfi-move,0x334da6599588,0xce3b4ad2988
sfi-move,0x334da65995d8,0xce3b4ad2080
sfi-move,0x334da6599628,0xce3b4ad05f0
sfi-move,0x334da6599678,0xce3b4ad04d0
sfi-move,0x334da65996c8,0xce3b4ad03b0
tick,0x7f40773a70af,9566544,0,0x0,1
sfi-move,0x334da6599718,0xce3b4ad0320
sfi-move,0x334da6599768,0xce3b4ad0290
code-move,0x2a1384e151ce,0x3b7ada467f66
sfi-move,0x334da65997d8,0xce3b4ad00e0
sfi-move,0x334da6599828,0xce3b4acffd8
code-move,0x334da659cc0e,0xce3b4aef97e
sfi-move,0x2a1384e15790,0x3b7ada46dc70
sfi-move,0x2a1384e157e0,0x3b7ada4692e0
sfi-move,0x2a1384e15830,0x3b7ada464210
code-move,0x334da659e936,0x279f2a334436
code-move,0x334da659ea1e,0x279f2a334506
code-move,0x334da659ead6,0x279f2a3345be
code-move,0x334da659eca6,0x279f2a33474e
code-move,0x334da659ef96,0x279f2a3349be
code-move,0x334da659f606,0x279f2a33502e
sfi-move,0x334da659ff08,0x279f2a335380
sfi-move,0x334da659ff58,0x279f2a3353d0
sfi-move,0x334da659ffa8,0x279f2a335420
sfi-move,0x334da659fff8,0x279f2a335470
sfi-move,0x334da65a00a8,0x279f2a335508
sfi-move,0x334da65a00f8,0x279f2a335558
sfi-move,0x334da65a0148,0x279f2a3355a8
sfi-move,0x334da65a0198,0x279f2a3355f8
sfi-move,0x334da65a01e8,0x279f2a335648
sfi-move,0x334da65a0238,0x279f2a335698
sfi-move,0x2a1384e15880,0x3b7ada463fd0
sfi-move,0x334da65a0288,0x279f2a3356e8
sfi-move,0x334da65a02d8,0x279f2a335738
sfi-move,0x334da65a0328,0x279f2a335788
sfi-move,0x334da65a0378,0x279f2a3357d8
sfi-move,0x334da65a03c8,0x279f2a335828
tick,0x7f4077497839,9567938,0,0x0,1
code-move,0x2a1384e159b6,0x3b7ada47d39e
code-move,0x2a1384e16196,0x3b7ada4640d6
sfi-move,0x2a1384e16460,0x3b7ada46dd10
sfi-move,0x2a1384e16528,0x3b7ada4635b0
sfi-move,0x2a1384e165b8,0x3b7ada47b908
code-move,0x334da65a07de,0x279f2a335c3e
code-move,0x2a1384e1670e,0x3b7ada4757a6
sfi-move,0x2a1384e168c8,0x3b7ada469888
code-move,0x334da65a0c1e,0x279f2a304ef6
code-move,0x2a1384e169f6,0x3b7ada4683ae
sfi-move,0x2a1384e16cf0,0x3b7ada467c08
sfi-move,0x2a1384e16d40,0x3b7ada466670
sfi-move,0x2a1384e16d98,0x3b7ada4666a8
sfi-move,0x2a1384e16de8,0x3b7ada4666f8
sfi-move,0x2a1384e16e38,0x3b7ada466730
sfi-move,0x2a1384e16e88,0x3b7ada464620
sfi-move,0x2a1384e16ed8,0x3b7ada464658
sfi-move,0x2a1384e16f68,0x3b7ada475590
sfi-move,0x2a1384e16ff8,0x3b7ada475600
sfi-move,0x2a1384e17088,0x3b7ada475690
sfi-move,0x2a1384e17118,0x3b7ada467538
code-move,0x2a1384e172e6,0x3b7ada467706
code-move,0x2a1384e17746,0x3b7ada463c26
sfi-move,0x334da65a2298,0x69ecac32530
sfi-move,0x334da65a22e8,0x69ecac32580
sfi-move,0x334da65a2338,0x69ecac325d0
sfi-move,0x334da65a2388,0x69ecac32620
sfi-move,0x334da65a23d8,0x69ecac32670
sfi-move,0x334da65a2428,0x69ecac326c0
code-move,0x2a1384e17a1e,0x3b7ada442cf6
code-move,0x2a1384e17b4e,0x3b7ada466a16
sfi-move,0x2a1384e17c98,0x3b7ada466b60
code-move,0x2a1384e17de6,0x3b7ada466c96
code-move,0x2a1384e1835e,0x3b7ada4670be
code-move,0x2a1384e1848e,0x3b7ada462b3e
sfi-move,0x2a1384e193f0,0x3b7ada462ff8
sfi-move,0x2a1384e19440,0x3b7ada463048
sfi-move,0x2a1384e19490,0x3b7ada463098
sfi-move,0x2a1384e194e0,0x3b7ada475848
sfi-move,0x2a1384e19530,0x3b7ada475898
sfi-move,0x2a1384e19580,0x3b7ada4758e8
sfi-move,0x2a1384e195d0,0x3b7ada475938
sfi-move,0x2a1384e19620,0x3b7ada475988
sfi-move,0x2a1384e19670,0x3b7ada4759d8
sfi-move,0x2a1384e196c0,0x3b7ada475a28
sfi-move,0x2a1384e19710,0x3b7ada475a78
sfi-move,0x2a1384e19760,0x3b7ada475ac8
sfi-move,0x2a1384e197b0,0x3b7ada475b18
sfi-move,0x2a1384e19800,0x3b7ada475b68
sfi-move,0x2a1384e19850,0x3b7ada475bb8
sfi-move,0x2a1384e198a0,0x3b7ada475c08
sfi-move,0x2a1384e198f0,0x3b7ada475c58
sfi-move,0x2a1384e19940,0x3b7ada475ca8
sfi-move,0x2a1384e19990,0x3b7ada475cf8
sfi-move,0x2a1384e19a00,0x3b7ada475d68
tick,0x7f4077497839,9569469,0,0x0,1
sfi-move,0x334da65a2478,0x69ecac32710
sfi-move,0x334da65a24c8,0x69ecac32760
sfi-move,0x334da65a2518,0x69ecac327b0
sfi-move,0x334da65a2598,0x69ecac32830
sfi-move,0x2a1384e19a70,0x3b7ada475dd8
sfi-move,0x2a1384e19ae8,0x3b7ada475e50
sfi-move,0x2a1384e19b58,0x3b7ada475ec0
sfi-move,0x2a1384e19bc8,0x3b7ada475f30
sfi-move,0x2a1384e19c38,0x3b7ada475fa0
sfi-move,0x2a1384e19ca8,0x3b7ada476010
sfi-move,0x2a1384e19d18,0x3b7ada476080
sfi-move,0x2a1384e19d88,0x3b7ada4760f0
sfi-move,0x2a1384e19df8,0x3b7ada476160
sfi-move,0x2a1384e19e68,0x3b7ada4761d0
sfi-move,0x2a1384e19ed0,0x3b7ada476238
sfi-move,0x2a1384e19f20,0x3b7ada476288
sfi-move,0x2a1384e19f70,0x3b7ada4762d8
sfi-move,0x334da65a25e8,0x69ecac32880
sfi-move,0x334da65a2638,0x69ecac328d0
tick,0x7f40773a70af,9569856,0,0x0,1
sfi-move,0x2a1384e19fc0,0x3b7ada476328
sfi-move,0x2a1384e1a010,0x3b7ada476378
sfi-move,0x2a1384e1a060,0x3b7ada4763c8
sfi-move,0x2a1384e1a0b0,0x3b7ada476418
sfi-move,0x2a1384e1a100,0x3b7ada476468
sfi-move,0x334da65a2688,0x69ecac32920
sfi-move,0x334da65a26d8,0x69ecac32970
sfi-move,0x334da65a2728,0x69ecac329c0
sfi-move,0x334da65a2778,0x69ecac32a10
sfi-move,0x334da65a27c8,0x69ecac32a60
sfi-move,0x334da65a2818,0x69ecac32ab0
sfi-move,0x334da65a2868,0x69ecac32b00
sfi-move,0x334da65a28b8,0x69ecac07a18
sfi-move,0x334da65a2908,0x279f2a31e5e0
sfi-move,0x334da65a29d8,0x69ecac15e60
sfi-move,0x334da65a2a28,0x69ecac15dc8
sfi-move,0x334da65a2a78,0x69ecac0a788
sfi-move,0x334da65a2b40,0x69ecac09f98
sfi-move,0x334da65a2b90,0x69ecac09d58
sfi-move,0x334da65a2be0,0x69ecac3a350
sfi-move,0x2a1384e1a150,0x3b7ada4764b8
sfi-move,0x2a1384e1a1a0,0x3b7ada476508
sfi-move,0x2a1384e1a1f0,0x3b7ada476558
sfi-move,0x2a1384e1a240,0x3b7ada476590
sfi-move,0x334da65a2c30,0x69ecac3a3a0
sfi-move,0x334da65a2c80,0x69ecac35f08
sfi-move,0x334da65a2cd0,0x69ecac35f58
sfi-move,0x334da65a2d58,0x69ecac30e60
sfi-move,0x334da65a2de0,0x69ecac30c60
sfi-move,0x334da65a2e68,0x69ecac18738
sfi-move,0x334da65a2ef0,0x69ecac16c90
sfi-move,0x334da65a2f78,0x69ecac15d10
sfi-move,0x334da65a3008,0x69ecac0c9c8
sfi-move,0x334da65a3098,0x69ecac09058
sfi-move,0x334da65a3128,0x69ecac03910
sfi-move,0x334da65a31c8,0x69ecac03960
sfi-move,0x334da65a3218,0x279f2a31d6c0
code-move,0x2a1384e1acae,0x3b7ada473186
code-move,0x2a1384e1b886,0x3b7ada473d5e
code-move,0x2a1384e1be5e,0x3b7ada4742b6
sfi-move,0x2a1384e1c080,0x3b7ada4744d8
sfi-move,0x2a1384e1c0f0,0x3b7ada474548
sfi-move,0x2a1384e1c140,0x3b7ada474598
sfi-move,0x2a1384e1c190,0x3b7ada464df0
sfi-move,0x2a1384e1c1e0,0x3b7ada464e40
sfi-move,0x2a1384e1c250,0x3b7ada464eb0
sfi-move,0x2a1384e1c2c8,0x3b7ada464f28
sfi-move,0x2a1384e1c340,0x3b7ada464fa0
sfi-move,0x334da65a7e68,0xce3b4afb108
sfi-move,0x334da65a7ed8,0xce3b4afb178
sfi-move,0x334da65a7f48,0xce3b4aeff30
sfi-move,0x334da65a7fb8,0x279f2a326158
sfi-move,0x334da65a8028,0x279f2a3261c8
sfi-move,0x334da65a8098,0x279f2a329738
sfi-move,0x334da65a8108,0x279f2a3297a8
sfi-move,0x334da65a8678,0x69ecac2e508
sfi-move,0x334da65a86e8,0x279f2a327ac8
sfi-move,0x334da65a8758,0x279f2a327b38
sfi-move,0x334da65a87c8,0x279f2a324900
sfi-move,0x334da65a8838,0x279f2a324970
code-move,0x2a1384e1c7c6,0x3b7ada465426
code-move,0x2a1384e1cb56,0x3b7ada4657b6
sfi-move,0x334da65a88a8,0x279f2a324488
sfi-move,0x334da65a8918,0x279f2a3244f8
sfi-move,0x334da65a8ea8,0x279f2a304dd0
sfi-move,0x334da65a8f18,0x279f2a304e40
code-move,0x2a1384e1cc1e,0x3b7ada46587e
sfi-move,0x2a1384e1d340,0x3b7ada465d08
sfi-move,0x2a1384e1d3b8,0x3b7ada465d80
sfi-move,0x2a1384e1d408,0x3b7ada465dd0
sfi-move,0x2a1384e1d458,0x3b7ada465e20
tick,0x7f40773a70af,9572283,0,0x0,1
tick,0x7f4077497839,9572338,0,0x0,1
sfi-move,0x2a1384e1d4a8,0x3b7ada465e58
sfi-move,0x334da65a8f88,0xce3b4afff00
sfi-move,0x334da65a8ff8,0xce3b4afff70
sfi-move,0x334da65a9068,0xce3b4afcee8
sfi-move,0x334da65a90d8,0xce3b4afcf58
sfi-move,0x334da65a9148,0xce3b4afcfc8
sfi-move,0x2a1384e1d4f8,0x3b7ada465ea8
sfi-move,0x2a1384e1d548,0x3b7ada465ef8
sfi-move,0x2a1384e1d598,0x3b7ada465f48
sfi-move,0x2a1384e1d5e8,0x3b7ada465f98
sfi-move,0x2a1384e1d638,0x3b7ada465fe8
sfi-move,0x2a1384e1d688,0x3b7ada466038
code-move,0x334da65a95ce,0x35967334b06
code-move,0x2a1384e1eb7e,0xa97187575f6
sfi-move,0x2a1384e1fa90,0xa971875cbe0
sfi-move,0x2a1384e1fae0,0xa971875cc18
sfi-move,0x2a1384e1fb30,0xa971875cc68
sfi-move,0x2a1384e1fb80,0xa9718754188
sfi-move,0x2a1384e1fbd0,0xa971875c170
sfi-move,0x2a1384e1fc20,0xa971875c1c0
sfi-move,0x2a1384e1fc70,0xa971875c210
sfi-move,0x2a1384e1fcc0,0xa9718757800
sfi-move,0x2a1384e1fd10,0xa9718757850
sfi-move,0x2a1384e1fd98,0xa971875c768
sfi-move,0x2a1384e1fde8,0xa971875c7b8
sfi-move,0x2a1384e21660,0xa971875bcb8
sfi-move,0x2a1384e216d0,0xa971875b310
sfi-move,0x2a1384e22000,0xa9718753f20
sfi-move,0x2a1384e22070,0xa9718753f90
sfi-move,0x2a1384e220e0,0xa9718754000
sfi-move,0x2a1384e22150,0xa9718754070
sfi-move,0x2a1384e221c0,0xa971875b840
sfi-move,0x2a1384e22230,0xa971874fee8
sfi-move,0x2a1384e222a0,0xa971874ff58
sfi-move,0x2a1384e22310,0xa971874ffc8
sfi-move,0x2a1384e22380,0xa9718750038
new,MemoryChunk,0x8e566140000,262144
sfi-move,0x2a1384e224b0,0xa971874e4c8
sfi-move,0x2a1384e225b8,0xa971874e5d0
sfi-move,0x2a1384e226c0,0xa971874e6d8
sfi-move,0x2a1384e227e8,0xa971874d990
sfi-move,0x2a1384e22910,0xa971874dab8
sfi-move,0x2a1384e22a38,0xa9718753500
sfi-move,0x2a1384e22b60,0xa9718753628
sfi-move,0x2a1384e233f8,0xa971875d1d8
sfi-move,0x2a1384e23468,0xa971875d248
sfi-move,0x2a1384e234d8,0xa971875d2b8
sfi-move,0x2a1384e23548,0xa971875d328
sfi-move,0x2a1384e235b8,0xa971875d398
sfi-move,0x2a1384e23628,0xa971875d408
sfi-move,0x2a1384e23698,0xa971875d478
sfi-move,0x2a1384e23708,0xa971875d4e8
sfi-move,0x2a1384e23778,0xa971875d558
sfi-move,0x2a1384e23ed0,0xa971875ac20
sfi-move,0x2a1384e23f40,0xa971875ac90
sfi-move,0x2a1384e23fb0,0xa971875ad00
sfi-move,0x2a1384e24020,0xa971875ad70
sfi-move,0x2a1384e24090,0xa971875ade0
sfi-move,0x2a1384e24100,0xa971875ae50
sfi-move,0x2a1384e24170,0xa971875aec0
sfi-move,0x2a1384e241e0,0xa971875af30
sfi-move,0x2a1384e24250,0xa971875afa0
sfi-move,0x2a1384e24388,0xa971875b0d8
sfi-move,0x334da65ab890,0x8e566142f98
sfi-move,0x334da65ab8e0,0x8e566142fe8
sfi-move,0x334da65abac0,0x8e5661430c8
sfi-move,0x334da65ac430,0x8e566143788
sfi-move,0x334da65ac480,0x8e5661437d8
sfi-move,0x334da65ac4d0,0x8e566143828
sfi-move,0x334da65ac520,0x8e566143878
sfi-move,0x334da65ac570,0x8e5661438c8
sfi-move,0x334da65ac5c0,0x8e566143918
sfi-move,0x334da65ac5f8,0x8e566143950
tick,0xe4bb59,9574161,0,0x0,1
sfi-move,0x334da65ac648,0x8e5661439a0
code-move,0x334da65ac876,0x8e566143bce
code-move,0x334da65aca1e,0x8e566143d76
sfi-move,0x334da65acbd0,0x8e566143f28
code-move,0x334da65ace2e,0x8e56614416e
code-move,0x334da65acfce,0x8e56614430e
code-move,0x334da65ad0a6,0x8e5661443e6
sfi-move,0x334da65ad240,0x8e566144500
sfi-move,0x334da65ad2c8,0x8e566144570
sfi-move,0x334da65ad318,0x8e5661445c0
code-move,0x334da65ad676,0x8e566144906
code-move,0x334da65ad886,0x8e566144ae6
code-move,0x334da65ada0e,0x8e566144c6e
sfi-move,0x334da65ae230,0x8e566144e90
sfi-move,0x334da65ae280,0x8e566144ee0
sfi-move,0x334da65ae308,0x8e566144f50
sfi-move,0x334da65ae358,0x8e566144fa0
sfi-move,0x334da65ae3a8,0x8e566144ff0
sfi-move,0x334da65ae3f8,0x8e566145040
sfi-move,0x334da65ae448,0x8e566145090
sfi-move,0x334da65ae498,0x8e5661450e0
sfi-move,0x334da65ae4e8,0x8e566145130
sfi-move,0x334da65ae538,0x8e566145180
sfi-move,0x334da65ae588,0x8e5661451d0
sfi-move,0x334da65ae5d8,0x8e566145220
sfi-move,0x334da65ae628,0x8e566145270
sfi-move,0x334da65ae678,0x8e5661452c0
code-move,0x334da65aea3e,0x8e566145686
sfi-move,0x2a1384e24618,0x3f792a6ce6c0
sfi-move,0x334da65aeed0,0x8e566145b18
sfi-move,0x334da65aef20,0x8e566145b68
sfi-move,0x334da65aef70,0x8e566145bb8
sfi-move,0x2a1384e24688,0x3f792a6ce730
tick,0x7f40773a70af,9574763,0,0x0,1
sfi-move,0x2a1384e24920,0x3f792a6d9e78
sfi-move,0x2a1384e24990,0x3f792a6d9ee8
sfi-move,0x2a1384e24c28,0x3f792a6cb690
sfi-move,0x2a1384e24c98,0x3f792a6cb700
sfi-move,0x2a1384e24f30,0x3f792a6cb998
sfi-move,0x2a1384e24fa0,0x3f792a6cba08
sfi-move,0x334da65aefa8,0x8e566145bf0
code-move,0x334da65af60e,0x8e566146256
code-move,0x334da65af76e,0x8e5661463b6
sfi-move,0x334da65afb30,0x8e5661465a0
sfi-move,0x334da65afb80,0x8e5661465f0
sfi-move,0x334da65afbd0,0x8e566146640
sfi-move,0x334da65afc20,0x8e566146690
sfi-move,0x334da65afc70,0x8e5661466e0
sfi-move,0x334da65afcc0,0x8e566146730
sfi-move,0x334da65afd10,0x8e566146780
sfi-move,0x334da65afd60,0x8e5661467d0
sfi-move,0x334da65afdb0,0x8e566146820
sfi-move,0x2a1384e25238,0x24759bdce720
sfi-move,0x2a1384e252a8,0x24759bdce790
sfi-move,0x2a1384e25838,0x24759bdced20
sfi-move,0x2a1384e258a8,0x24759bdced90
sfi-move,0x2a1384e25918,0x24759bdcee00
sfi-move,0x2a1384e25988,0x24759bdcee70
sfi-move,0x334da65afe00,0x8e566146870
code-move,0x334da65b015e,0x8e566146bce
sfi-move,0x334da65b0570,0x8e566146fc8
sfi-move,0x334da65b05e0,0x8e566147038
sfi-move,0x334da65b0648,0x8e5661470a0
sfi-move,0x334da65b0698,0x8e5661470f0
sfi-move,0x334da65b0700,0x8e566147158
sfi-move,0x334da65b0770,0x8e5661471c8
sfi-move,0x334da65b07e0,0x8e566147238
sfi-move,0x334da65b0830,0x8e566147288
sfi-move,0x334da65b08a0,0x8e5661472f8
sfi-move,0x334da65b0910,0x8e566147368
tick,0x7f407749e170,9576365,0,0x0,1
sfi-move,0x334da65b0960,0x8e5661473b8
sfi-move,0x334da65b09c8,0x8e566147420
sfi-move,0x334da65b0a18,0x8e566147470
sfi-move,0x334da65b0a68,0x8e5661474c0
code-move,0x334da65b1516,0x8e566147f6e
sfi-move,0x334da65b1f28,0x8e566148648
sfi-move,0x334da65b1f78,0x8e566148698
sfi-move,0x334da65b2040,0x8e566148760
code-move,0x334da65b21ce,0x8e5661488ee
tick,0x7f40773a70af,9576661,0,0x0,1
sfi-move,0x2a1384e259f8,0x24759bdceee0
code-move,0x334da65b24b6,0x8e566148ace
sfi-move,0x334da65b2608,0x8e566148b90
sfi-move,0x334da65b2658,0x8e566148be0
code-move,0x334da65b278e,0x8e566148d16
sfi-move,0x334da65b2988,0x8e566148eb0
sfi-move,0x334da65b29d8,0x8e566148f00
sfi-move,0x334da65b2a28,0x8e566148f50
sfi-move,0x334da65b2a78,0x8e566148fa0
sfi-move,0x2a1384e25a68,0x24759bdcef50
code-move,0x334da65b2b7e,0x8e56614908e
sfi-move,0x334da65b32b8,0x8e5661492c0
sfi-move,0x334da65b3308,0x8e566149310
sfi-move,0x334da65b3358,0x8e566149360
sfi-move,0x2a1384e25ad8,0x24759bdcefc0
sfi-move,0x2a1384e25be8,0x24759bdcf0d0
sfi-move,0x334da65b33a8,0x8e5661493b0
sfi-move,0x334da65b3430,0x8e566149420
sfi-move,0x334da65b3480,0x8e566149470
sfi-move,0x334da65b34d0,0x8e5661494c0
sfi-move,0x334da65b3520,0x8e566149510
sfi-move,0x334da65b3570,0x8e566149560
sfi-move,0x2a1384e25d10,0x24759bdffc10
code-move,0x334da65b3836,0x8e566149826
sfi-move,0x334da65b3b88,0x8e566149b30
code-move,0x334da65b3cee,0x8e566149c96
sfi-move,0x334da65b40d8,0x8e566149ec0
sfi-move,0x334da65b4128,0x8e566149f10
tick,0x7f40773a70af,9577736,0,0x0,1
sfi-move,0x334da65b41b8,0x8e566149fa0
sfi-move,0x2a1384e25fa0,0x3f792a6cbaa0
sfi-move,0x2a1384e26010,0x2ac221050d48
sfi-move,0x2a1384e262a8,0x2ac221045938
sfi-move,0x2a1384e26318,0x2ac2210459a8
sfi-move,0x334da65b4248,0x8e56614a030
sfi-move,0x334da65b4280,0x8e56614a068
sfi-move,0x334da65b43d0,0x8e56614a1b8
sfi-move,0x334da65b4420,0x8e56614a208
sfi-move,0x334da65b4490,0x8e56614a278
sfi-move,0x334da65b44e0,0x8e56614a2c8
sfi-move,0x334da65b4530,0x8e56614a318
sfi-move,0x334da65b4580,0x8e56614a368
sfi-move,0x334da65b45d0,0x8e56614a3b8
sfi-move,0x334da65b4650,0x8e56614a438
sfi-move,0x334da65b46d0,0x8e56614a4b8
sfi-move,0x334da65b4720,0x8e56614a508
code-move,0x334da65b4e16,0x8e56614abfe
sfi-move,0x334da65b5050,0x8e56614ae38
code-move,0x334da65b513e,0x8e56614af26
new,MemoryChunk,0x164e16400000,262144
sfi-move,0x334da65b5410,0x8e56614b1d8
tick,0x7f40774247f2,9579022,0,0x0,1
sfi-move,0x2a1384e265b0,0x164e164011f0
sfi-move,0x2a1384e26620,0x164e16401260
sfi-move,0x2a1384e269a8,0x164e164015e8
sfi-move,0x2a1384e26a18,0x164e16401658
sfi-move,0x2a1384e26a88,0x164e164016c8
sfi-move,0x334da65b5480,0x8e56614b248
code-move,0x334da65b56ee,0x8e56614b4b6
sfi-move,0x334da65b5908,0x8e56614b600
sfi-move,0x334da65b5970,0x8e56614b668
sfi-move,0x334da65b59c0,0x8e56614b6b8
sfi-move,0x334da65b5a10,0x8e56614b708
sfi-move,0x334da65b5a60,0x8e56614b758
sfi-move,0x334da65b5af0,0x8e56614b7e8
sfi-move,0x334da65b5b40,0x8e56614b838
code-move,0x334da65b5f7e,0x8e56614bc76
sfi-move,0x334da65b61f8,0x8e56614bec0
sfi-move,0x334da65b6248,0x8e56614bf10
sfi-move,0x334da65b62c8,0x8e56614bf78
sfi-move,0x334da65b6358,0x8e56614c008
sfi-move,0x334da65b63e8,0x8e56614c098
sfi-move,0x334da65b6478,0x8e56614c128
sfi-move,0x334da65b6508,0x8e56614c1b8
sfi-move,0x334da65b6598,0x8e56614c228
sfi-move,0x334da65b6620,0x8e56614c298
sfi-move,0x334da65b66b0,0x8e56614c328
sfi-move,0x2a1384e26bb0,0x164e164017f0
sfi-move,0x334da65b6740,0x8e56614c398
sfi-move,0x334da65b6790,0x8e56614c3e8
sfi-move,0x334da65b6820,0x8e56614c478
sfi-move,0x334da65b68b0,0x8e56614c508
sfi-move,0x334da65b6930,0x8e56614c570
sfi-move,0x334da65b69b8,0x8e56614c5e0
sfi-move,0x2a1384e26e40,0x164e16401a80
tick,0x7f4077497839,9579984,0,0x0,1
sfi-move,0x2a1384e26eb0,0x164e16401af0
sfi-move,0x2a1384e27140,0x164e16401d80
sfi-move,0x2a1384e271b0,0x164e16401df0
sfi-move,0x334da65b6a48,0x8e56614c670
sfi-move,0x334da65b6ad8,0x8e56614c6e0
sfi-move,0x334da65b6b68,0x8e56614c770
sfi-move,0x334da65b6bf8,0x8e56614c800
sfi-move,0x334da65b6c80,0x8e56614c870
sfi-move,0x334da65b6d00,0x8e56614c8d8
sfi-move,0x334da65b6d90,0x8e56614c968
sfi-move,0x334da65b6e20,0x8e56614c9d8
code-move,0x334da65b70d6,0x8e56614cc8e
sfi-move,0x2a1384e27570,0x164e164021b0
sfi-move,0x2a1384e275e0,0x164e16402220
sfi-move,0x2a1384e27650,0x164e16402290
sfi-move,0x2a1384e276c0,0x164e16402300
sfi-move,0x2a1384e27950,0x164e16402590
sfi-move,0x2a1384e279c0,0x164e16402600
sfi-move,0x2a1384e27c50,0x164e16402890
sfi-move,0x2a1384e27cc0,0x164e16402900
sfi-move,0x2a1384e27f58,0x164e16402b98
sfi-move,0x2a1384e27fc8,0x164e16402c08
sfi-move,0x2a1384e288b8,0x164e164034f8
sfi-move,0x2a1384e28928,0x164e16403568
sfi-move,0x2a1384e28998,0x164e164035d8
sfi-move,0x2a1384e28a08,0x164e16403648
sfi-move,0x2a1384e28a78,0x164e164036b8
sfi-move,0x2a1384e28ae8,0x164e16403728
sfi-move,0x2a1384e28b58,0x164e16403798
sfi-move,0x2a1384e28bc8,0x164e16403808
tick,0x7f407749e170,9581449,0,0x0,1
sfi-move,0x334da65b7d40,0x8e56614d280
sfi-move,0x334da65b7dc0,0x8e56614d2e8
sfi-move,0x334da65b7e50,0x8e56614d378
sfi-move,0x334da65b7ed0,0x8e56614d3e0
code-move,0x334da65b802e,0x8e56614d53e
code-move,0x334da65b8696,0x8e56614d816
sfi-move,0x334da65b88c8,0x8e56614d978
sfi-move,0x334da65b8978,0x8e56614da10
sfi-move,0x334da65b89e8,0x8e56614da80
sfi-move,0x334da65b8a60,0x8e56614daf8
sfi-move,0x334da65b8ad8,0x8e56614db58
sfi-move,0x334da65b8b28,0x8e56614db90
sfi-move,0x334da65b8b78,0x8e56614dbe0
code-move,0x334da65b8eae,0x8e56614defe
sfi-move,0x334da65b91c0,0x8e56614e1e0
sfi-move,0x334da65b9210,0x8e56614e218
sfi-move,0x334da65b9260,0x8e56614e250
sfi-move,0x334da65b92b0,0x8e56614e288
sfi-move,0x334da65b9300,0x8e56614e2c0
sfi-move,0x334da65b9350,0x8e56614e2f8
sfi-move,0x334da65b93a0,0x8e56614e330
sfi-move,0x2a1384e28c38,0x164e16403878
sfi-move,0x2a1384e28ca8,0x164e164038e8
sfi-move,0x2a1384e28d18,0x164e16403958
sfi-move,0x2a1384e290f8,0x164e16403d38
tick,0x7f407749e170,9582208,0,0x0,1
sfi-move,0x2a1384e29398,0x164e16403fd8
sfi-move,0x2a1384e29408,0x164e16404048
sfi-move,0x2a1384e296a0,0x164e164042e0
sfi-move,0x2a1384e29710,0x164e16404350
sfi-move,0x2a1384e299a8,0x164e164045e8
sfi-move,0x2a1384e29a18,0x164e16404658
sfi-move,0x2a1384e29cb0,0x164e164048f0
sfi-move,0x2a1384e29d20,0x164e16404960
code-move,0x334da65b9556,0x8e56614e4ce
tick,0x7f40773a70af,9583257,0,0x0,1
sfi-move,0x334da65b99c8,0x8e56614e940
sfi-move,0x2a1384e29fb8,0x164e16404bf8
sfi-move,0x2a1384e2a028,0x164e16404c68
sfi-move,0x2a1384e2a2c0,0x164e16404f00
sfi-move,0x2a1384e2a330,0x164e16404f70
sfi-move,0x2a1384e2a5c8,0x164e16405208
sfi-move,0x2a1384e2a638,0x164e16405278
sfi-move,0x334da65b9a20,0x8e56614e978
sfi-move,0x334da65b9a70,0x8e56614e9c8
sfi-move,0x334da65b9ac0,0x8e56614ea00
sfi-move,0x334da65b9b10,0x8e56614ea50
sfi-move,0x334da65b9b60,0x8e56614ea88
sfi-move,0x334da65b9bb0,0x8e56614ead8
sfi-move,0x334da65b9c00,0x8e56614eb28
sfi-move,0x334da65b9c50,0x8e56614eb78
sfi-move,0x334da65b9ca0,0x8e56614ebc8
code-move,0x334da65b9fb6,0x8e56614eede
sfi-move,0x2a1384e2bd40,0x164e16406980
sfi-move,0x2a1384e2bdb0,0x164e164069f0
sfi-move,0x2a1384e2be20,0x164e16406a60
sfi-move,0x2a1384e2be90,0x164e16406ad0
sfi-move,0x2a1384e2bf00,0x164e16406b40
sfi-move,0x2a1384e2bf70,0x164e16406bb0
sfi-move,0x2a1384e2bfe0,0x164e16406c20
sfi-move,0x2a1384e2c050,0x164e16406c90
sfi-move,0x2a1384e2c0c0,0x164e16406d00
sfi-move,0x2a1384e2c130,0x164e16406d70
sfi-move,0x2a1384e2c1a0,0x164e16406de0
sfi-move,0x2a1384e2c210,0x164e16406e50
sfi-move,0x2a1384e2c280,0x164e16406ec0
sfi-move,0x2a1384e2c2f0,0x164e16406f30
sfi-move,0x2a1384e2c360,0x164e16406fa0
code-move,0x334da65ba43e,0x8e56614f266
sfi-move,0x334da65bafe0,0x8e56614fa98
sfi-move,0x334da65bb030,0x8e56614fae8
sfi-move,0x334da65bb080,0x8e56614fb38
sfi-move,0x334da65bb0d0,0x8e56614fb88
sfi-move,0x334da65bb120,0x8e56614fbd8
sfi-move,0x334da65bb170,0x8e56614fc28
sfi-move,0x334da65bb1c0,0x8e56614fc78
sfi-move,0x334da65bb210,0x8e56614fcc8
sfi-move,0x334da65bb260,0x8e56614fd18
sfi-move,0x334da65bb2b0,0x8e56614fd68
sfi-move,0x334da65bb300,0x8e56614fdb8
sfi-move,0x334da65bb350,0x8e56614fe08
sfi-move,0x334da65bb3a0,0x8e56614fe58
sfi-move,0x334da65bb3f0,0x8e56614fea8
sfi-move,0x334da65bb440,0x8e56614fef8
sfi-move,0x334da65bb490,0x8e56614ff48
sfi-move,0x2a1384e2c3d0,0x164e16407010
sfi-move,0x2a1384e2c440,0x164e16407080
sfi-move,0x2a1384e2c4b0,0x164e164070f0
sfi-move,0x2a1384e2c520,0x164e16407160
sfi-move,0x2a1384e2c590,0x164e164071d0
sfi-move,0x2a1384e2c600,0x164e16407240
sfi-move,0x2a1384e2c670,0x164e164072b0
sfi-move,0x2a1384e2c6e0,0x164e16407320
sfi-move,0x2a1384e2c750,0x164e16407390
sfi-move,0x2a1384e2c7c0,0x164e16407400
sfi-move,0x2a1384e2c830,0x164e16407470
sfi-move,0x2a1384e2c8a0,0x164e164074e0
sfi-move,0x2a1384e2c910,0x164e16407550
sfi-move,0x2a1384e2c9b8,0x164e164075f8
sfi-move,0x2a1384e2cb90,0x164e164077d0
sfi-move,0x2a1384e2cc98,0x164e164078d8
sfi-move,0x2a1384e2d068,0x164e16407ca8
sfi-move,0x2a1384e2d0d8,0x164e16407d18
sfi-move,0x2a1384e2d148,0x164e16407d88
sfi-move,0x2a1384e2d1b8,0x164e16407df8
sfi-move,0x2a1384e2d448,0x164e16408088
sfi-move,0x2a1384e2d4b8,0x164e164080f8
sfi-move,0x2a1384e2d628,0x164e16408268
sfi-move,0x2a1384e2d750,0x164e16408390
sfi-move,0x2a1384e2d880,0x164e164084c0
sfi-move,0x2a1384e2d9b0,0x164e164085f0
sfi-move,0x2a1384e2dab8,0x164e164086f8
sfi-move,0x2a1384e2dbe0,0x164e16408820
sfi-move,0x2a1384e2dd08,0x164e16408948
sfi-move,0x2a1384e2de30,0x164e16408a70
sfi-move,0x2a1384e2df98,0x164e16408bd8
sfi-move,0x2a1384e2e0c0,0x164e16408d00
sfi-move,0x2a1384e2e498,0x164e164090d8
sfi-move,0x2a1384e2e508,0x164e16409148
sfi-move,0x2a1384e2e578,0x164e164091b8
sfi-move,0x2a1384e2e5e8,0x164e16409228
sfi-move,0x2a1384e2e710,0x164e16409350
sfi-move,0x2a1384e2eae8,0x164e16409728
sfi-move,0x2a1384e2eb58,0x164e16409798
sfi-move,0x2a1384e2ec88,0x164e164098c8
sfi-move,0x2a1384e2edb0,0x164e164099f0
sfi-move,0x2a1384e2eed8,0x164e16409b18
sfi-move,0x2a1384e2efe0,0x164e16409c20
sfi-move,0x2a1384e2f208,0x164e16409e48
sfi-move,0x2a1384e2f3d0,0x164e1640a010
sfi-move,0x2a1384e2f598,0x164e1640a1d8
sfi-move,0x2a1384e30368,0x164e1640afa8
sfi-move,0x2a1384e303d8,0x164e1640b018
sfi-move,0x2a1384e30448,0x164e1640b088
sfi-move,0x2a1384e304b8,0x164e1640b0f8
sfi-move,0x2a1384e30528,0x164e1640b168
sfi-move,0x2a1384e30598,0x164e1640b1d8
sfi-move,0x2a1384e30608,0x164e1640b248
sfi-move,0x2a1384e30678,0x164e1640b2b8
sfi-move,0x2a1384e306e8,0x164e1640b328
sfi-move,0x2a1384e30758,0x164e1640b398
sfi-move,0x2a1384e307c8,0x164e1640b408
sfi-move,0x2a1384e30838,0x164e1640b478
sfi-move,0x2a1384e308a8,0x164e1640b4e8
sfi-move,0x2a1384e30918,0x164e1640b558
sfi-move,0x2a1384e30988,0x164e1640b5c8
sfi-move,0x2a1384e309f8,0x164e1640b638
sfi-move,0x2a1384e30a68,0x164e1640b6a8
sfi-move,0x2a1384e30ad8,0x164e1640b718
sfi-move,0x2a1384e31088,0x164e1640bab0
sfi-move,0x2a1384e310d8,0x164e1640bb00
sfi-move,0x2a1384e31128,0x164e1640bb50
sfi-move,0x2a1384e31178,0x164e1640bba0
sfi-move,0x2a1384e322c0,0x164e1640c060
sfi-move,0x2a1384e32310,0x164e1640c0b0
sfi-move,0x2a1384e32360,0x164e1640c100
sfi-move,0x2a1384e323b0,0x164e1640c150
sfi-move,0x2a1384e32400,0x164e1640c1a0
sfi-move,0x2a1384e32450,0x164e1640c1f0
sfi-move,0x2a1384e324a0,0x164e1640c240
sfi-move,0x2a1384e324f0,0x164e1640c290
tick,0x7f407749e170,9588597,0,0x0,1
tick,0x7f407749e16e,9588687,0,0x0,1
sfi-move,0x334da65bb520,0x8e56614ffd8
sfi-move,0x2a1384e343c8,0x164e1640d130
sfi-move,0x334da65bb5b0,0x8e566150068
sfi-move,0x334da65bb640,0x8e5661500f8
sfi-move,0x334da65bb6d0,0x8e566150188
sfi-move,0x334da65bb760,0x8e566150218
sfi-move,0x334da65bb7f0,0x8e5661502a8
sfi-move,0x334da65bb880,0x8e566150338
sfi-move,0x334da65bb910,0x8e5661503c8
sfi-move,0x334da65bb9a0,0x8e566150458
sfi-move,0x334da65bba30,0x8e5661504e8
sfi-move,0x334da65bbac0,0x8e566150578
sfi-move,0x334da65bd690,0x8e566151f08
sfi-move,0x334da65bd798,0x8e566152010
sfi-move,0x334da65bd8a0,0x8e566152118
sfi-move,0x334da65bd9a8,0x8e566152220
sfi-move,0x334da65bdab0,0x8e566152328
sfi-move,0x334da65bdbb8,0x8e566152430
sfi-move,0x334da65bdcc0,0x8e566152538
sfi-move,0x334da65bddc8,0x8e566152640
sfi-move,0x334da65bded0,0x8e566152748
sfi-move,0x334da65bdfd8,0x8e566152850
sfi-move,0x334da65be0e0,0x8e566152958
sfi-move,0x334da65be1e8,0x8e566152a60
sfi-move,0x334da65be2b8,0x8e566152b30
tick,0x7f407749e170,9589819,0,0x0,1
tick,0x7f407749e170,9589899,0,0x0,1
tick,0x7f407749e16e,9589941,0,0x0,1
tick,0x7f40774248c4,9589991,0,0x0,1
code-move,0x334da65bf6de,0x8e566153e2e
sfi-move,0x334da65bf828,0x8e566153f78
code-move,0x334da65bf976,0x8e5661540ae
code-move,0x334da65bff1e,0x8e5661544d6
sfi-move,0x2a1384e34418,0x164e1640d168
sfi-move,0xa26aa886e0,0x8e56615bb68
sfi-move,0xa26aa88750,0x8e56615bbd8
sfi-move,0xa26aa887c0,0x8e56615bc48
sfi-move,0xa26aa88848,0x8e56615bcd0
sfi-move,0x2a1384e34468,0x164e1640d1b8
sfi-move,0x2a1384e344b8,0x164e1640d208
sfi-move,0x2a1384e34508,0x164e1640d258
sfi-move,0x2a1384e34558,0x164e1640d2a8
sfi-move,0xa26aa888b8,0x8e56615bd40
sfi-move,0xa26aa889e0,0x8e56615be68
sfi-move,0xa26aa88ae8,0x8e56615bf70
sfi-move,0x2a1384e345a8,0x164e1640d2f8
sfi-move,0x2a1384e345f8,0x164e1640d348
sfi-move,0x2a1384e34648,0x164e1640d398
sfi-move,0x2a1384e34698,0x164e1640d3e8
sfi-move,0x2a1384e346e8,0x164e1640d438
sfi-move,0x2a1384e34738,0x164e1640d488
sfi-move,0x2a1384e34788,0x164e1640d4d8
sfi-move,0x2a1384e347d8,0x164e1640d528
sfi-move,0x2a1384e34828,0x164e1640d578
sfi-move,0x2a1384e34878,0x164e1640d5c8
sfi-move,0x2a1384e348c8,0x164e1640d618
sfi-move,0x2a1384e34918,0x164e1640d668
sfi-move,0x2a1384e34968,0x164e1640d6b8
sfi-move,0x2a1384e349b8,0x164e1640d708
sfi-move,0x2a1384e34a08,0x164e1640d758
sfi-move,0x2a1384e34a58,0x164e1640d7a8
sfi-move,0x2a1384e34aa8,0x164e1640d7f8
sfi-move,0x2a1384e34af8,0x164e1640d848
sfi-move,0x2a1384e36fa8,0x164e1640df80
sfi-move,0x2a1384e380b8,0x164e1640e358
code-move,0x2a1384e3815e,0x164e1640e3fe
code-move,0x2a1384e382be,0x164e1640e55e
sfi-move,0xa26aa88c08,0x8e56615c090
sfi-move,0xa26aa88d78,0x8e56615c200
sfi-move,0xa26aa88f18,0x8e56615c3a0
sfi-move,0xa26aa89038,0x8e56615c4c0
sfi-move,0xa26aa89140,0x8e56615c5c8
sfi-move,0xa26aa89268,0x8e56615c6f0
sfi-move,0xa26aa89420,0x8e56615c8a8
sfi-move,0xa26aa89540,0x8e56615c9c8
sfi-move,0xa26aa896f8,0x8e56615cb80
sfi-move,0xa26aa89818,0x8e56615cca0
sfi-move,0xa26aa89938,0x8e56615cdc0
sfi-move,0xa26aa89a40,0x8e56615cec8
sfi-move,0x2a1384e3bed0,0x164e16411dc0
tick,0x7f407749e16e,9592070,0,0x0,1
tick,0x7f407749e16e,9592142,0,0x0,1
sfi-move,0x2a1384e3de28,0x164e16413418
sfi-move,0x2a1384e3de78,0x164e16413468
sfi-move,0x2a1384e3dec8,0x164e164134b8
sfi-move,0x2a1384e3df40,0x164e16413530
sfi-move,0x2a1384e3df90,0x164e16413580
sfi-move,0x2a1384e3dfe0,0x164e164135d0
sfi-move,0x2a1384e3e030,0x164e16413620
sfi-move,0x2a1384e3e080,0x164e16413670
sfi-move,0x2a1384e3e0d0,0x164e164136c0
sfi-move,0x2a1384e3e120,0x164e16413710
sfi-move,0x2a1384e3e170,0x164e16413760
sfi-move,0x2a1384e3e1c0,0x164e164137b0
sfi-move,0x2a1384e3e210,0x164e16413800
sfi-move,0x2a1384e3e260,0x164e16413850
sfi-move,0x2a1384e3e2b0,0x164e164138a0
sfi-move,0x2a1384e3e378,0x164e164138f0
sfi-move,0x2a1384e3e3c8,0x164e16413940
sfi-move,0x2a1384e3e418,0x164e16413990
sfi-move,0x2a1384e3e468,0x164e164139e0
tick,0x7f407749e170,9593114,0,0x0,1
sfi-move,0x2a1384e3e4e0,0x164e16413a18
sfi-move,0x2a1384e3e530,0x164e16413a68
sfi-move,0x2a1384e3e580,0x164e16413ab8
sfi-move,0x2a1384e3e5d0,0x164e16413b08
sfi-move,0x2a1384e3e620,0x164e16413b58
sfi-move,0x2a1384e3e670,0x164e16413ba8
sfi-move,0x2a1384e3e6c0,0x164e16413bf8
sfi-move,0x2a1384e3e710,0x164e16413c48
sfi-move,0x2a1384e3e760,0x164e16413c98
sfi-move,0x2a1384e3e7b0,0x164e16413ce8
sfi-move,0x2a1384e3e800,0x164e16413d38
sfi-move,0x2a1384e3e850,0x164e16413d88
sfi-move,0x2a1384e3e8a0,0x164e16413dd8
sfi-move,0x2a1384e3e8f0,0x164e16413e28
sfi-move,0x2a1384e3e980,0x164e16413eb8
sfi-move,0x2a1384e3e9d0,0x164e16413f08
sfi-move,0x2a1384e3ea90,0x164e16413fc8
sfi-move,0xa26aa89b48,0x8e56615cfd0
sfi-move,0x2a1384e3eb20,0x164e16414058
sfi-move,0x2a1384e3ebb0,0x164e164140e8
sfi-move,0x2a1384e3ec00,0x164e16414138
sfi-move,0xa26aa89d00,0x8e56615d188
sfi-move,0x2a1384e3ec90,0x164e164141c8
sfi-move,0x2a1384e3ed20,0x164e16414258
sfi-move,0x2a1384e3edb0,0x164e164142e8
sfi-move,0x2a1384e3ee40,0x164e16414378
sfi-move,0x2a1384e3eed0,0x164e16414408
sfi-move,0x2a1384e3ef58,0x164e16414490
sfi-move,0x2a1384e3efe8,0x164e16414520
sfi-move,0x2a1384e3f078,0x164e164145b0
sfi-move,0x2a1384e3f108,0x164e16414640
sfi-move,0x2a1384e3f198,0x164e164146d0
sfi-move,0x2a1384e3f228,0x164e16414760
sfi-move,0x2a1384e3f308,0x164e164147f0
sfi-move,0x2a1384e3f358,0x164e16414840
sfi-move,0x2a1384e3f3e8,0x164e164148d0
sfi-move,0x2a1384e3f478,0x164e16414960
sfi-move,0x2a1384e3f508,0x164e164149f0
sfi-move,0x2a1384e3f558,0x164e16414a40
sfi-move,0x2a1384e3f5a8,0x164e16414a90
sfi-move,0xa26aa89e08,0x8e56615d290
sfi-move,0xa26aa89f28,0x8e56615d3b0
sfi-move,0xa26aa8a0e0,0x8e56615d568
sfi-move,0x2a1384e3f5f8,0x164e16414ae0
sfi-move,0x2a1384e3f688,0x164e16414b70
sfi-move,0x2a1384e3f718,0x164e16414c00
code-move,0x224cfd0c1256,0x164e16414d8e
sfi-move,0xa26aa8a1e8,0x8e56615d670
sfi-move,0xa26aa8a2f0,0x8e56615d778
sfi-move,0xa26aa8a428,0x8e56615d898
tick,0x7f407749e170,9594826,0,0x0,1
code-move,0x224cfd0c17f6,0x164e1641532e
code-move,0x224cfd0c1a9e,0x164e164155d6
sfi-move,0x224cfd0c2250,0x164e16415b78
sfi-move,0x224cfd0c22a0,0x164e16415bb0
sfi-move,0x224cfd0c22f0,0x164e16415be8
sfi-move,0x224cfd0c2340,0x164e16415c38
sfi-move,0x224cfd0c2390,0x164e16415c88
code-move,0xa26aa8ac9e,0x8e56615db56
code-move,0x224cfd0c2b16,0x164e16415e86
code-move,0x224cfd0c2d2e,0x164e1641606e
code-move,0x224cfd0c2dd6,0x164e16416116
code-move,0x224cfd0c2fd6,0x164e16416316
code-move,0x224cfd0c31c6,0x164e16416506
code-move,0x224cfd0c33e6,0x164e16416726
code-move,0x224cfd0c361e,0x164e16416926
code-move,0x224cfd0c37f6,0x164e16416afe
code-move,0x224cfd0c39b6,0x164e16416cbe
code-move,0xa26aa8ba36,0x8e56615e8ce
sfi-move,0xa26aa8cb08,0x8e56615f5f0
code-move,0x224cfd0c402e,0x164e164172c6
code-move,0x224cfd0c4326,0x164e164175be
code-move,0x224cfd0c47d6,0x164e16417a6e
code-move,0x224cfd0c4916,0x164e16417bae
code-move,0x224cfd0c49ee,0x164e16417c86
code-move,0x224cfd0c4b9e,0x164e16417e36
code-move,0x224cfd0c4c8e,0x164e16417f26
sfi-move,0x224cfd0c4d60,0x164e16417fd8
code-move,0x224cfd0c4e26,0x164e1641809e
code-move,0x224cfd0c4fde,0x164e16418256
code-move,0x224cfd0c508e,0x164e16418306
code-move,0x224cfd0c54f6,0x164e1641876e
code-move,0x224cfd0c5b4e,0x164e16418dc6
code-move,0x224cfd0c5e0e,0x164e16419086
code-move,0x224cfd0c6126,0x164e1641939e
code-move,0x224cfd0c6366,0x164e164195de
code-move,0x224cfd0c663e,0x164e164198b6
code-move,0x224cfd0c699e,0x164e16419c16
code-move,0x224cfd0c6ca6,0x164e16419f1e
code-move,0x224cfd0c6ff6,0x164e1641a26e
code-move,0x224cfd0c724e,0x164e1641a416
code-move,0x224cfd0c75fe,0x164e1641a7c6
code-move,0x224cfd0c784e,0x164e1641a986
code-move,0x224cfd0c79ce,0x164e1641ab06
code-move,0x224cfd0c7df6,0x164e1641ade6
sfi-move,0xa26aa8cb58,0x8e56615f628
tick,0x7f4077497839,9596396,0,0x0,1
tick,0x7f4077497839,9596480,0,0x0,1
sfi-move,0xa26aa8cba8,0x8e56615f660
code-move,0x224cfd0ce676,0x164e16421666
code-move,0x224cfd0d066e,0x164e1642365e
code-move,0x224cfd0d0786,0x164e16423756
code-move,0x224cfd0d393e,0x164e1642690e
code-move,0x224cfd0d3a9e,0x164e16426a56
code-move,0x224cfd0d3cae,0x164e16426c06
code-move,0x224cfd0d3e26,0x164e16426d7e
code-move,0x224cfd0d42ae,0x164e16427206
code-move,0x224cfd0d43e6,0x164e1642733e
code-move,0x224cfd0d44ee,0x164e16427446
code-move,0x224cfd0d463e,0x164e1642757e
code-move,0x224cfd0d4856,0x164e1642777e
code-move,0x224cfd0d4a6e,0x164e16427996
sfi-move,0xa26aa8cbf8,0x8e56615f698
code-move,0x224cfd0d5436,0x164e1642835e
code-move,0x224cfd0d57a6,0x164e164286ce
code-move,0x224cfd0d5986,0x164e16428876
code-move,0x224cfd0d5e46,0x164e16428d06
code-move,0x224cfd0d62a6,0x164e1642914e
code-move,0x224cfd0d6736,0x164e1642946e
code-move,0x224cfd0d683e,0x164e16429576
code-move,0x224cfd0d69b6,0x164e164296ee
code-move,0x224cfd0d6b36,0x164e1642986e
code-move,0x224cfd0d6f0e,0x164e16429c46
code-move,0x224cfd0d72fe,0x164e1642a036
code-move,0x224cfd0d7496,0x164e1642a1ce
code-move,0x224cfd0d765e,0x164e1642a396
code-move,0x224cfd0d7766,0x164e1642a49e
code-move,0x224cfd0d78de,0x164e1642a616
code-move,0x224cfd0d7a36,0x164e1642a76e
code-move,0x224cfd0d7b3e,0x164e1642a876
code-move,0x224cfd0d7cc6,0x164e1642a9fe
code-move,0x224cfd0d7e8e,0x164e1642abc6
code-move,0x224cfd0d8056,0x164e1642ad8e
code-move,0x224cfd0d81ae,0x164e1642aee6
code-move,0x224cfd0d839e,0x164e1642b0d6
code-move,0x224cfd0d8606,0x164e1642b33e
code-move,0x224cfd0d8776,0x164e1642b4ae
code-move,0x224cfd0d88ce,0x164e1642b606
code-move,0x224cfd0d8abe,0x164e1642b7d6
code-move,0x224cfd0d8dc6,0x164e1642bade
code-move,0x224cfd0d8f7e,0x164e1642bc96
code-move,0x224cfd0d90b6,0x164e1642bdce
code-move,0x224cfd0d9376,0x164e1642c08e
code-move,0x224cfd0d975e,0x164e1642c476
code-move,0x224cfd0d99de,0x164e1642c6f6
code-move,0x224cfd0d9f9e,0x164e1642ccb6
code-move,0x224cfd0dab86,0x164e1642d89e
code-move,0x224cfd0dacfe,0x164e1642da16
code-move,0x224cfd0dae76,0x164e1642db8e
sfi-move,0x224cfd0daf88,0x164e1642dca0
sfi-move,0x224cfd0db058,0x164e1642dd70
code-move,0x224cfd0db26e,0x164e1642df86
sfi-move,0x224cfd0db718,0x164e1642e3d0
sfi-move,0x224cfd0db768,0x164e1642e408
sfi-move,0x224cfd0db7b8,0x164e1642e458
sfi-move,0xa26aa8cc48,0x8e56615f6d0
sfi-move,0xa26aa8cc98,0x8e56615f708
sfi-move,0xa26aa8cce8,0x8e56615f740
sfi-move,0xa26aa8cd60,0x8e56615f778
sfi-move,0xa26aa8cdb0,0x8e56615f7b0
sfi-move,0xa26aa8ce00,0x8e56615f800
sfi-move,0xa26aa8ce50,0x8e56615f838
sfi-move,0xa26aa8cec8,0x8e56615f870
sfi-move,0xa26aa8cf18,0x8e56615f8a8
sfi-move,0xa26aa8cf68,0x8e56615f8e0
sfi-move,0xa26aa8cfb8,0x8e56615f918
sfi-move,0xa26aa8d008,0x8e56615f950
sfi-move,0xa26aa8d058,0x8e56615f988
sfi-move,0xa26aa8d0a8,0x8e56615f9c0
sfi-move,0xa26aa8d138,0x8e56615f9f8
sfi-move,0xa26aa8d188,0x8e56615fa30
sfi-move,0xa26aa8d1d8,0x8e56615fa68
sfi-move,0xa26aa8d228,0x8e56615faa0
sfi-move,0xa26aa8d278,0x8e56615fad8
sfi-move,0xa26aa8d2c8,0x8e56615fb10
tick,0x7f407749e170,9599025,0,0x0,1
code-move,0x224cfd0dba4e,0x164e1642e6ee
sfi-move,0xa26aa8d318,0x8e56615fb48
sfi-move,0xa26aa8d368,0x8e56615fb80
sfi-move,0xa26aa8d3b8,0x8e56615fbb8
tick,0x7f407749e170,9599358,0,0x0,1
code-move,0x224cfd0dcc5e,0x164e1642f8de
code-move,0x224cfd0dcdbe,0x164e1642fa3e
code-move,0xa26aa8f2d6,0x8e56615ffce
code-move,0xa26aa90896,0x8e56616158e
code-move,0xa26aa9097e,0x8e566161676
code-move,0xa26aa90ce6,0x8e5661619de
code-move,0xa26aa935d6,0x8e5661642ce
code-move,0xa26aa93966,0x8e56616465e
code-move,0xa26aa93c2e,0x8e566164926
code-move,0xa26aa94af6,0x8e5661657ce
code-move,0xa26aa94c4e,0x8e566165926
code-move,0xa26aa94e0e,0x8e566165aa6
sfi-move,0x224cfd0e24e0,0x164e16434808
tick,0x7f40773a70af,9600315,0,0x0,1
code-move,0xa26aa98046,0x8e566168cde
sfi-move,0x224cfd0e2598,0x164e16434840
code-move,0xa26aa98a5e,0x8e5661696f6
code-move,0xa26aa98b5e,0x8e5661697f6
code-move,0xa26aa991c6,0x8e566169dd6
code-move,0xa26aa99546,0x8e56616a156
code-move,0xa26aa99956,0x8e56616a566
sfi-move,0xa26aa9b060,0x8e56616bc70
sfi-move,0xa26aa9b0b0,0x8e56616bca8
sfi-move,0xa26aa9b100,0x8e56616bcf8
code-move,0x224cfd0e2626,0x164e164348ce
tick,0x7f4077497839,9600882,0,0x0,1
sfi-move,0x224cfd0e2690,0x164e16434938
sfi-move,0x224cfd0e26e0,0x164e16434970
sfi-move,0x224cfd0e2768,0x164e164349e0
sfi-move,0x224cfd0e27f0,0x164e16434a50
sfi-move,0x224cfd0e2878,0x164e16434ac0
sfi-move,0x224cfd0e2900,0x164e16434b30
sfi-move,0x224cfd0e2988,0x164e16434ba0
sfi-move,0x224cfd0e2a10,0x164e16434c10
sfi-move,0x224cfd0e2a98,0x164e16434c80
sfi-move,0x224cfd0e2b20,0x164e16434cf0
sfi-move,0x224cfd0e2ba8,0x164e16434d60
sfi-move,0x224cfd0e2c30,0x164e16434dd0
sfi-move,0x224cfd0e2cb8,0x164e16434e40
sfi-move,0x224cfd0e2d40,0x164e16434eb0
sfi-move,0x224cfd0e2dc8,0x164e16434f20
sfi-move,0x224cfd0e2e50,0x164e16434f90
sfi-move,0xa26aa9b150,0x8e56616bd48
code-move,0xa26aa9b336,0x8e56616bf2e
sfi-move,0x224cfd0e2ed8,0x164e16435000
sfi-move,0x224cfd0e2f60,0x164e16435070
sfi-move,0x224cfd0e2fe8,0x164e164350e0
sfi-move,0x224cfd0e3070,0x164e16435150
sfi-move,0x224cfd0e30f8,0x164e164351c0
sfi-move,0x224cfd0e3180,0x164e16435230
sfi-move,0x224cfd0e3208,0x164e164352a0
sfi-move,0x224cfd0e3290,0x164e16435310
sfi-move,0x224cfd0e3318,0x164e16435380
sfi-move,0x224cfd0e33a0,0x164e164353f0
sfi-move,0x224cfd0e3428,0x164e16435460
sfi-move,0x224cfd0e34b0,0x164e164354d0
sfi-move,0x224cfd0e3538,0x164e16435540
sfi-move,0x224cfd0e35c0,0x164e164355b0
sfi-move,0x224cfd0e3648,0x164e16435620
sfi-move,0x224cfd0e36d0,0x164e16435690
sfi-move,0x224cfd0e3758,0x164e16435700
sfi-move,0x224cfd0e37e0,0x164e16435770
sfi-move,0x224cfd0e3868,0x164e164357e0
sfi-move,0x224cfd0e3990,0x164e16435850
sfi-move,0x224cfd0e3a18,0x164e164358c0
sfi-move,0x224cfd0e3aa0,0x164e16435930
sfi-move,0x224cfd0e3b28,0x164e164359a0
sfi-move,0x224cfd0e3bb0,0x164e16435a10
sfi-move,0x224cfd0e3c38,0x164e16435a80
sfi-move,0x224cfd0e3cc0,0x164e16435af0
sfi-move,0x224cfd0e3e40,0x164e16435b60
sfi-move,0x224cfd0e3ec8,0x164e16435bd0
sfi-move,0x224cfd0e3f50,0x164e16435c40
sfi-move,0x224cfd0e3fd8,0x164e16435cb0
sfi-move,0x224cfd0e4060,0x164e16435d20
sfi-move,0x224cfd0e40e8,0x164e16435d90
sfi-move,0x224cfd0e4218,0x164e16435e00
sfi-move,0x224cfd0e42a0,0x164e16435e70
sfi-move,0x224cfd0e4328,0x164e16435ee0
sfi-move,0x224cfd0e43b0,0x164e16435f50
sfi-move,0x224cfd0e4438,0x164e16435fc0
sfi-move,0x224cfd0e44c0,0x164e16436030
sfi-move,0x224cfd0e4548,0x164e164360a0
sfi-move,0x224cfd0e45d0,0x164e16436110
sfi-move,0x224cfd0e4658,0x164e16436180
sfi-move,0x224cfd0e46e0,0x164e164361f0
tick,0x7f407749e170,9603119,0,0x0,1
tick,0x7f407749e16e,9603127,0,0x0,1
sfi-move,0x224cfd0e4768,0x164e16436260
sfi-move,0x224cfd0e47f0,0x164e164362d0
sfi-move,0x224cfd0e4878,0x164e16436340
sfi-move,0x224cfd0e4900,0x164e164363b0
sfi-move,0x224cfd0e4988,0x164e16436420
sfi-move,0x224cfd0e4a10,0x164e16436490
sfi-move,0x224cfd0e4a98,0x164e16436500
sfi-move,0x224cfd0e4b20,0x164e16436570
code-move,0xa26aa9b986,0x8e56616c32e
code-move,0x224cfd0e5236,0x164e16436c86
sfi-move,0x224cfd0e57b0,0x164e16437200
sfi-move,0x224cfd0e5c10,0x164e164372f0
code-move,0x224cfd0e5cb6,0x164e16437396
sfi-move,0x224cfd0e6c78,0x164e16438358
sfi-move,0x224cfd0e6cc8,0x164e164383a8
sfi-move,0x224cfd0e6d18,0x164e164383f8
sfi-move,0x224cfd0e6d68,0x164e16438448
code-move,0x224cfd0e6e96,0x164e1643855e
sfi-move,0xa26aa9bd50,0x8e56616c6e8
code-move,0x224cfd0e79fe,0x164e1643904e
sfi-move,0x224cfd0e7f50,0x164e164395a0
sfi-move,0x224cfd0e7fa8,0x164e164395d8
sfi-move,0x224cfd0e7ff8,0x164e16439628
sfi-move,0x224cfd0e8048,0x164e16439660
sfi-move,0x224cfd0e8098,0x164e164396b0
sfi-move,0x224cfd0e80e8,0x164e164396e8
sfi-move,0x224cfd0e8138,0x164e16439720
code-move,0xa26aa9bdf6,0x8e56616c776
code-move,0x224cfd0e830e,0x164e164398f6
sfi-move,0x224cfd0e85b8,0x164e16439ba0
sfi-move,0x224cfd0e85f0,0x164e16439bd8
code-move,0x224cfd0e886e,0x164e16439e36
code-move,0x224cfd0e8b5e,0x164e1643a126
code-move,0x224cfd0e8d9e,0x164e1643a366
code-move,0x224cfd0e8e86,0x164e1643a44e
code-move,0x224cfd0e916e,0x164e1643a5e6
sfi-move,0x224cfd0e9e78,0x164e1643af48
sfi-move,0x224cfd0e9ec8,0x164e1643af98
sfi-move,0x224cfd0e9f48,0x164e1643b018
sfi-move,0x224cfd0e9f98,0x164e1643b068
sfi-move,0x224cfd0e9fe8,0x164e1643b0b8
sfi-move,0x224cfd0ea088,0x164e1643b158
sfi-move,0x224cfd0ea0d8,0x164e1643b190
sfi-move,0x224cfd0ea128,0x164e1643b1e0
sfi-move,0x224cfd0ea1a8,0x164e1643b260
sfi-move,0x224cfd0ea1f8,0x164e1643b298
sfi-move,0x224cfd0ea248,0x164e1643b2e8
sfi-move,0x224cfd0ea298,0x164e1643b338
sfi-move,0x224cfd0ea2e8,0x164e1643b388
sfi-move,0x224cfd0ea338,0x164e1643b3c0
sfi-move,0x224cfd0ea388,0x164e1643b3f8
sfi-move,0x224cfd0edef0,0x164e1643c3f0
sfi-move,0x224cfd0edf40,0x164e1643c428
sfi-move,0x224cfd0edf90,0x164e1643c478
sfi-move,0x224cfd0edfe0,0x164e1643c4c8
sfi-move,0x224cfd0ee030,0x164e1643c518
sfi-move,0x224cfd0ee080,0x164e1643c568
sfi-move,0x224cfd0ee0d0,0x164e1643c5b8
sfi-move,0x224cfd0ee120,0x164e1643c608
sfi-move,0x224cfd0ee170,0x164e1643c658
sfi-move,0x224cfd0ee258,0x164e1643c740
sfi-move,0x224cfd0ee2a8,0x164e1643c790
sfi-move,0x224cfd0ee328,0x164e1643c7c8
sfi-move,0x224cfd0ee378,0x164e1643c818
sfi-move,0x224cfd0ee3c8,0x164e1643c868
sfi-move,0x224cfd0ee418,0x164e1643c8a0
sfi-move,0x224cfd0ee468,0x164e1643c8f0
sfi-move,0x224cfd0ee4b8,0x164e1643c940
sfi-move,0x224cfd0ee508,0x164e1643c990
sfi-move,0x224cfd0ee558,0x164e1643c9e0
sfi-move,0x224cfd0ee5a8,0x164e1643ca30
sfi-move,0x224cfd0ee5f8,0x164e1643ca80
sfi-move,0x224cfd0ee648,0x164e1643cad0
sfi-move,0x224cfd0ee698,0x164e1643cb20
sfi-move,0x224cfd0ee6e8,0x164e1643cb70
sfi-move,0x224cfd0ee738,0x164e1643cbc0
sfi-move,0x224cfd0ee788,0x164e1643cc10
sfi-move,0x224cfd0ee810,0x164e1643cc98
sfi-move,0x224cfd0ee898,0x164e1643cd20
sfi-move,0x224cfd0ee920,0x164e1643cda8
sfi-move,0x224cfd0ee9a8,0x164e1643ce30
sfi-move,0x224cfd0ee9f8,0x164e1643ce80
sfi-move,0x224cfd0eea48,0x164e1643ced0
sfi-move,0x224cfd0eea98,0x164e1643cf20
sfi-move,0x224cfd0eeae8,0x164e1643cf70
sfi-move,0x224cfd0eeb50,0x164e1643cfd8
sfi-move,0x224cfd0eeba0,0x164e1643d028
tick,0x7f407749e170,9604714,0,0x0,1
code-move,0xa26aa9bfe6,0x8e56616c946
code-move,0x224cfd0efc56,0x164e1643d0ae
code-move,0xa26aa9d0f6,0x8e56616da56
code-move,0xa26aa9d25e,0x8e56616dbbe
code-move,0xa26aa9d3f6,0x8e56616dd2e
code-move,0xa26aa9d5a6,0x8e56616dede
code-move,0xa26aa9d726,0x8e56616e05e
sfi-move,0x224cfd0f3830,0x164e1643e480
code-move,0xa26aa9df76,0x8e56616e8ae
code-move,0xa26aa9e1e6,0x8e56616eb1e
sfi-move,0xa26aa9e5b0,0x8e56616ed98
sfi-move,0x224cfd0f3880,0x164e1643e4d0
sfi-move,0x224cfd0f38d0,0x164e1643e520
sfi-move,0x224cfd0f3920,0x164e1643e570
sfi-move,0x224cfd0f3970,0x164e1643e5c0
sfi-move,0x224cfd0f39c0,0x164e1643e610
sfi-move,0x224cfd0f3a10,0x164e1643e660
sfi-move,0x224cfd0f3a60,0x164e1643e6b0
sfi-move,0x224cfd0f3ab0,0x164e1643e700
sfi-move,0xa26aa9e638,0x8e56616ee20
sfi-move,0x224cfd0f3b00,0x164e1643e750
sfi-move,0x224cfd0f3b50,0x164e1643e7a0
sfi-move,0x224cfd0f3ba0,0x164e1643e7f0
sfi-move,0x224cfd0f3bf0,0x164e1643e840
sfi-move,0x224cfd0f3c40,0x164e1643e890
sfi-move,0x224cfd0f3c90,0x164e1643e8e0
sfi-move,0x224cfd0f3ce0,0x164e1643e930
sfi-move,0x224cfd0f3d30,0x164e1643e980
sfi-move,0x224cfd0f3d80,0x164e1643e9d0
sfi-move,0x224cfd0f3dd0,0x164e1643ea20
sfi-move,0x224cfd0f3e20,0x164e1643ea70
tick,0x7f4077497839,9605871,0,0x0,1
sfi-move,0xa26aa9e688,0x8e56616ee70
sfi-move,0x224cfd0f3e70,0x164e1643eac0
sfi-move,0x224cfd0f3ec0,0x164e1643eb10
sfi-move,0x224cfd0f3f10,0x164e1643eb60
sfi-move,0x224cfd0f3fd8,0x164e1643ec10
sfi-move,0x224cfd0f4060,0x164e1643ec98
sfi-move,0x224cfd0f40f0,0x164e1643ed28
code-move,0xa26aa9ef96,0x8e56616f366
sfi-move,0x224cfd0f4178,0x164e1643edb0
sfi-move,0x224cfd0f4200,0x164e1643ee20
sfi-move,0x224cfd0f4288,0x164e1643ee90
sfi-move,0x224cfd0f4310,0x164e1643ef18
sfi-move,0x224cfd0f43a0,0x164e1643efa8
sfi-move,0x224cfd0f4430,0x164e1643f038
sfi-move,0x224cfd0f44b8,0x164e1643f0c0
sfi-move,0x224cfd0f4548,0x164e1643f150
sfi-move,0x224cfd0f45d8,0x164e1643f1e0
sfi-move,0x224cfd0f4668,0x164e1643f270
sfi-move,0x224cfd0f46f8,0x164e1643f300
sfi-move,0x224cfd0f4788,0x164e1643f390
sfi-move,0x224cfd0f4818,0x164e1643f420
sfi-move,0x224cfd0f48a8,0x164e1643f4b0
sfi-move,0x224cfd0f4930,0x164e1643f520
sfi-move,0x224cfd0f49b8,0x164e1643f590
sfi-move,0x224cfd0f4a48,0x164e1643f620
sfi-move,0x224cfd0f4ad8,0x164e1643f6b0
sfi-move,0x224cfd0f4b68,0x164e1643f740
sfi-move,0x224cfd0f4bf8,0x164e1643f7d0
sfi-move,0x224cfd0f4c48,0x164e1643f820
sfi-move,0x224cfd0f4c98,0x164e1643f870
sfi-move,0x224cfd0f4ce8,0x164e1643f8c0
sfi-move,0x224cfd0f4d38,0x164e1643f910
sfi-move,0x224cfd0f4d88,0x164e1643f960
sfi-move,0x224cfd0f4dd8,0x164e1643f9b0
sfi-move,0x224cfd0f4e28,0x164e1643fa00
sfi-move,0x224cfd0f4e78,0x164e1643fa50
sfi-move,0x224cfd0f4ec8,0x164e1643faa0
sfi-move,0x224cfd0f4f18,0x164e1643faf0
code-move,0xa26aa9f20e,0x8e56616f5be
sfi-move,0x224cfd0f4f68,0x164e1643fb40
sfi-move,0x224cfd0f4fb8,0x164e1643fb90
sfi-move,0x224cfd0f5008,0x164e1643fbe0
tick,0x7f407749e170,9607704,0,0x0,1
new,MemoryChunk,0x311b5fb80000,262144
tick,0x7f407749e16e,9607815,0,0x0,1
code-move,0xa26aaa1866,0x8e566171bfe
code-move,0xa26aaa1b76,0x8e566171f0e
code-move,0xa26aaa1c66,0x8e566171ffe
code-move,0xa26aaa1ee6,0x8e566172216
code-move,0xa26aaa2286,0x8e56617259e
code-move,0xa26aaa2646,0x8e566172946
code-move,0xa26aaa287e,0x8e566172b7e
sfi-move,0xa26aaa2b38,0x8e566172e38
code-move,0xa26aaa2dae,0x8e5661730ae
code-move,0xa26aaa3036,0x8e566173336
code-move,0xa26aaa421e,0x8e566174506
code-move,0xa26aaa43de,0x8e5661746c6
code-move,0xa26aaa45ce,0x8e5661748b6
sfi-move,0xa26aaa47f0,0x8e566174aa8
sfi-move,0xa26aaa4840,0x8e566174af8
code-move,0xa26aaa4966,0x8e566174c06
code-move,0xa26aaa4f76,0x8e566175216
sfi-move,0xa26aaa5078,0x8e566175318
code-move,0xa26aaa518e,0x8e56617542e
sfi-move,0xa26aaa5730,0x8e566175870
sfi-move,0xa26aaa5780,0x8e5661758a8
sfi-move,0xa26aaa57d0,0x8e5661758f8
sfi-move,0xa26aaa5820,0x8e566175948
sfi-move,0xa26aaa5870,0x8e566175998
sfi-move,0xa26aaa58e0,0x8e566175a08
sfi-move,0xa26aaa5950,0x8e566175a78
sfi-move,0xa26aaa59c0,0x8e566175ae8
sfi-move,0xa26aaa5a30,0x8e566175b58
sfi-move,0xa26aaa5aa0,0x8e566175bc8
sfi-move,0xa26aaa5b10,0x8e566175c38
sfi-move,0xa26aaa5b80,0x8e566175ca8
sfi-move,0xa26aaa5bf0,0x8e566175d18
sfi-move,0xa26aaa5c68,0x8e566175d90
sfi-move,0xa26aaa5ce0,0x8e566175e08
sfi-move,0xa26aaa5d58,0x8e566175e80
sfi-move,0xa26aaa5dd0,0x8e566175ef8
sfi-move,0xa26aaa5e50,0x8e566175f78
sfi-move,0xa26aaa5ed0,0x8e566175ff8
sfi-move,0xa26aaa6ab8,0x8e5661762a8
sfi-move,0xa26aaa6df0,0x8e5661763b0
sfi-move,0xa26aaa6ef8,0x8e5661764b8
sfi-move,0xa26aaa7020,0x8e5661765e0
sfi-move,0xa26aaa7148,0x8e566176708
sfi-move,0xa26aaa7270,0x8e566176830
sfi-move,0xa26aaa7398,0x8e566176958
sfi-move,0xa26aaa74c0,0x8e566176a80
sfi-move,0xa26aaa75e8,0x8e566176ba8
sfi-move,0xa26aaa7710,0x8e566176cd0
sfi-move,0xa26aaa7838,0x8e566176df8
sfi-move,0xa26aaa7968,0x8e566176f28
sfi-move,0xa26aaa7a98,0x8e566177058
sfi-move,0xa26aaa7bc8,0x8e566177188
sfi-move,0xa26aaa7cf8,0x8e5661772b8
sfi-move,0xa26aaa7e30,0x8e5661773f0
code-move,0xa26aaa8076,0x8e566177626
code-move,0xa26aaa817e,0x8e56617772e
sfi-move,0xa26aaa8668,0x8e566177c18
code-move,0xa26aaa8746,0x8e566177cf6
code-move,0xa26aaa89d6,0x8e566177f86
code-move,0xa26aaa8dce,0x8e56617837e
code-move,0xa26aaa91be,0x8e56617876e
code-move,0xa26aaa932e,0x8e5661788de
sfi-move,0xa26aaa9e00,0x8e566179088
sfi-move,0xa26aaa9e50,0x8e5661790d8
sfi-move,0xa26aaa9ea0,0x8e566179110
sfi-move,0xa26aaa9ef0,0x8e566179148
sfi-move,0xa26aaa9f40,0x8e566179180
sfi-move,0xa26aaa9f90,0x8e5661791d0
sfi-move,0xa26aaa9fe0,0x8e566179220
sfi-move,0xa26aaaa030,0x8e566179270
sfi-move,0xa26aaaa080,0x8e5661792c0
sfi-move,0xa26aaaa0d0,0x8e566179310
sfi-move,0xa26aaaa120,0x8e566179360
sfi-move,0xa26aaaa170,0x8e5661793b0
sfi-move,0xa26aaaa1c0,0x8e566179400
sfi-move,0xa26aaaa210,0x8e566179450
code-move,0xa26aaab43e,0x8e56617977e
sfi-move,0xa26aaab9f0,0x8e566179be8
sfi-move,0xa26aaaba40,0x8e566179c38
sfi-move,0xa26aaaba90,0x8e566179c70
sfi-move,0xa26aaabae0,0x8e566179cc0
sfi-move,0xa26aaabb30,0x8e566179d10
sfi-move,0xa26aaabb80,0x8e566179d60
sfi-move,0xa26aaabbd0,0x8e566179db0
sfi-move,0xa26aaabc48,0x8e566179e28
code-move,0xa26aaac29e,0x8e566179ed6
sfi-move,0xa26aaacfb8,0x8e56617a510
sfi-move,0xa26aaad008,0x8e56617a548
sfi-move,0xa26aaad098,0x8e56617a580
sfi-move,0xa26aaad0e8,0x8e56617a5d0
sfi-move,0xa26aaad138,0x8e56617a620
sfi-move,0xa26aaad188,0x8e56617a670
code-move,0xa26aaae1ce,0x8e56617a856
code-move,0xa26aaae396,0x8e56617aa1e
code-move,0xa26aaae71e,0x8e56617ada6
sfi-move,0x224cfd0f8c28,0x311b5fb81330
sfi-move,0x224cfd0f8c78,0x311b5fb81380
sfi-move,0x224cfd0f8cc8,0x311b5fb813d0
sfi-move,0x224cfd0f8d18,0x311b5fb81420
sfi-move,0x224cfd0fa330,0x311b5fb82448
sfi-move,0x224cfd0fa3a0,0x311b5fb824b8
sfi-move,0x224cfd0fa410,0x311b5fb82528
sfi-move,0x224cfd0fa480,0x311b5fb82598
sfi-move,0x224cfd0fa4f0,0x311b5fb82608
sfi-move,0x224cfd0fa560,0x311b5fb82678
sfi-move,0x224cfd0fa5d0,0x311b5fb826e8
sfi-move,0x224cfd0fa640,0x311b5fb82758
sfi-move,0x224cfd0fa6b0,0x311b5fb827c8
sfi-move,0x224cfd0fa720,0x311b5fb82838
sfi-move,0x224cfd0fa790,0x311b5fb828a8
sfi-move,0x224cfd0fa800,0x311b5fb82918
sfi-move,0x224cfd0fa870,0x311b5fb82988
sfi-move,0x224cfd0fa8e0,0x311b5fb829f8
sfi-move,0x224cfd0fa950,0x311b5fb82a68
sfi-move,0x224cfd0fa9c0,0x311b5fb82ad8
sfi-move,0x224cfd0faa30,0x311b5fb82b48
sfi-move,0x224cfd0faaa0,0x311b5fb82bb8
sfi-move,0x224cfd0fab10,0x311b5fb82c28
sfi-move,0x224cfd0fab80,0x311b5fb82c98
sfi-move,0x224cfd0fabf0,0x311b5fb82d08
sfi-move,0x224cfd0fac60,0x311b5fb82d78
sfi-move,0x224cfd0facd0,0x311b5fb82de8
sfi-move,0x224cfd0fae70,0x311b5fb82f88
code-move,0xa26aaae826,0x8e56617ae8e
sfi-move,0xa26aaaebf8,0x8e56617b168
sfi-move,0xa26aaaec48,0x8e56617b1a0
sfi-move,0xa26aaaec98,0x8e56617b1f0
sfi-move,0xa26aaaece8,0x8e56617b228
code-move,0xa26aaaf09e,0x8e56617b5de
code-move,0xa26aaaf5b6,0x8e56617baf6
code-move,0xa26aaaf706,0x8e56617bc46
code-move,0xa26aaafc96,0x8e56617c1d6
sfi-move,0xa26aab1d48,0x8e56617d868
sfi-move,0xa26aab1d98,0x8e56617d8a0
sfi-move,0xa26aab1de8,0x8e56617d8d8
sfi-move,0xa26aab1e38,0x8e56617d910
sfi-move,0xa26aab1e88,0x8e56617d960
sfi-move,0xa26aab1ed8,0x8e56617d9b0
sfi-move,0xa26aab1f28,0x8e56617d9e8
sfi-move,0xa26aab1f78,0x8e56617da20
sfi-move,0xa26aab1fc8,0x8e56617da70
sfi-move,0xa26aab2018,0x8e56617daa8
sfi-move,0xa26aab2068,0x8e56617dae0
sfi-move,0xa26aab20b8,0x8e56617db18
sfi-move,0xa26aab2108,0x8e56617db50
sfi-move,0xa26aab2158,0x8e56617db88
sfi-move,0xa26aab21a8,0x8e56617dbc0
sfi-move,0xa26aab21f8,0x8e56617dc10
sfi-move,0xa26aab2248,0x8e56617dc60
sfi-move,0xa26aab2298,0x8e56617dcb0
sfi-move,0xa26aab22e8,0x8e56617dd00
sfi-move,0xa26aab2338,0x8e56617dd50
sfi-move,0xa26aab23b8,0x8e56617dd88
sfi-move,0xa26aab2408,0x8e56617ddd8
sfi-move,0xa26aab2488,0x8e56617de58
sfi-move,0xa26aab2578,0x8e56617de90
sfi-move,0xa26aab25c8,0x8e56617dee0
sfi-move,0xa26aab2618,0x8e56617df30
sfi-move,0xa26aab2668,0x8e56617df80
sfi-move,0xa26aab26b8,0x8e56617dfd0
sfi-move,0xa26aab2708,0x8e56617e020
sfi-move,0xa26aab2758,0x8e56617e070
sfi-move,0xa26aab27a8,0x8e56617e0c0
sfi-move,0xa26aab27f8,0x8e56617e110
sfi-move,0xa26aab2848,0x8e56617e148
sfi-move,0xa26aab2968,0x8e56617e1c0
sfi-move,0xa26aab29f8,0x8e56617e238
sfi-move,0xa26aab2a88,0x8e56617e2b0
sfi-move,0xa26aab2ad8,0x8e56617e300
sfi-move,0xa26aab2b28,0x8e56617e350
sfi-move,0xa26aab2bb0,0x8e56617e3a8
sfi-move,0xa26aab2c40,0x8e56617e420
sfi-move,0xa26aab2cc8,0x8e56617e478
sfi-move,0xa26aab2d50,0x8e56617e4e8
sfi-move,0xa26aab2de0,0x8e56617e560
sfi-move,0xa26aab2ea8,0x8e56617e610
sfi-move,0xa26aab2f70,0x8e56617e6d8
sfi-move,0xa26aab3038,0x8e56617e7a0
sfi-move,0xa26aab30c8,0x8e56617e818
sfi-move,0xa26aab3158,0x8e56617e890
sfi-move,0xa26aab31a8,0x8e56617e8e0
sfi-move,0xa26aab7e60,0x8e56617f030
sfi-move,0xa26aab8880,0x8e56617f520
sfi-move,0xa26aab88d0,0x8e56617f570
sfi-move,0xa26aab8960,0x8e56617f600
sfi-move,0xa26aab89b0,0x8e56617f650
tick,0x7f40773a70af,9615558,0,0x0,1
tick,0x7f40773a70af,9615614,0,0x0,1
tick,0x7f4077497839,9615667,0,0x0,1
tick,0x7f407749e170,9615722,0,0x0,1
tick,0x7f407773d6b0,9615763,0,0x0,1
tick,0x7f4077497839,9615801,0,0x0,1
tick,0x7f407773d36f,9615808,0,0x0,1
sfi-move,0xa26aaba178,0x1c8aa8c34ef0
sfi-move,0x224cfd0fc138,0x311b5fb83fa0
sfi-move,0x224cfd0fc1a8,0x311b5fb84010
sfi-move,0x224cfd0fc218,0x311b5fb84080
sfi-move,0x224cfd0fc618,0x311b5fb84468
sfi-move,0x224cfd0fc960,0x311b5fb844f0
sfi-move,0x224cfd0fc9d0,0x311b5fb84560
sfi-move,0x224cfd0fca40,0x311b5fb845d0
sfi-move,0x224cfd0fcdd0,0x311b5fb847e0
sfi-move,0x224cfd0fce20,0x311b5fb84830
sfi-move,0xa26aaba1f8,0x1c8aa8c346f8
sfi-move,0x224cfd0fcea0,0x311b5fb848b0
sfi-move,0x224cfd0fcef0,0x311b5fb84900
sfi-move,0x224cfd0fcf40,0x311b5fb84950
sfi-move,0x224cfd0fcfb8,0x311b5fb849c8
sfi-move,0xa26aaba248,0x1c8aa8c012d8
sfi-move,0xa26aaba298,0x1c8aa8c3f338
tick,0x7f40773a70af,9616273,0,0x0,1
sfi-move,0xa26aaba2e8,0x1c8aa8c0bff0
sfi-move,0xa26aaba338,0x1c8aa8c3f820
sfi-move,0xa26aaba388,0x1c8aa8c230b8
sfi-move,0xa26aaba3d8,0x1c8aa8c23108
sfi-move,0xa26aaba428,0x1c8aa8c04360
sfi-move,0xa26aaba478,0x1c8aa8c043b0
sfi-move,0x224cfd0fdbf0,0x311b5fb84b70
sfi-move,0x224cfd0fe068,0x311b5fb84de8
sfi-move,0xa26aaba4c8,0x1c8aa8c3ff30
sfi-move,0xa26aaba518,0x1c8aa8c3ff80
sfi-move,0xa26aaba568,0x69ecac387e8
code-move,0xa26aabafe6,0x1c8aa8c2de76
sfi-move,0xa26aabd2a0,0x1c8aa8c06050
sfi-move,0xa26aabd2f0,0x1c8aa8c060a0
sfi-move,0xa26aabd340,0x1c8aa8c060d8
sfi-move,0xa26aabd390,0x1c8aa8c06128
sfi-move,0xa26aabd3e0,0x1c8aa8c243e8
sfi-move,0xa26aabe150,0x1c8aa8c07c40
sfi-move,0xa26aabe1a0,0x1c8aa8c246c8
sfi-move,0xa26aabe1f0,0x1c8aa8c069c0
sfi-move,0xa26aabe240,0x1c8aa8c06a10
sfi-move,0xa26aabe290,0x1c8aa8c06a60
sfi-move,0xa26aabf740,0x69ecac0ffc0
sfi-move,0xa26aabf7b0,0x69ecac10030
sfi-move,0xa26aabf820,0x69ecac100a0
sfi-move,0xa26aabf890,0x69ecac10110
sfi-move,0xa26aabf900,0x69ecac0c0c0
sfi-move,0xa26aabf970,0x69ecac0c130
sfi-move,0xa26aabf9e0,0x69ecac0c1a0
sfi-move,0xa26aabfa50,0x69ecac0c210
sfi-move,0xa26aabfac0,0x69ecac0c280
sfi-move,0xa26aabfb30,0x69ecac0c2f0
sfi-move,0xa26aabfc40,0x69ecac0b3a0
sfi-move,0xa26aabfd48,0x69ecac0b4a8
tick,0xeb5d4b,9617345,0,0x0,1
delete,MemoryChunk,0x334da6580000
delete,MemoryChunk,0x2a1384e00000
delete,MemoryChunk,0xa26aa80000
delete,MemoryChunk,0x224cfd0c0000
markcompact,end,0,454132,1663277521168
tick,0x7f40773b19ab,9618428,0,0x0,1
delete,MemoryChunk,0x32809b900000
delete,MemoryChunk,0x157be9a40000
delete,MemoryChunk,0x37d98400000
delete,MemoryChunk,0x565c10c0000
tick,0x7f40773b8296,17437954,0,0x0,8
code-creation,LazyCompile,10,17438184,0x1c8aa8c0451e,130,exit node:internal/process/per_thread:182:16,0x3e83b614f490,~
code-source-info,0x1c8aa8c0451e,30,4809,5279,C0O4822C5O4830C17O4842C20O4830C26O4867C31O4884C36O4897C43O4914C47O4927C52O4940C58O4958C64O4975C68O4989C73O4997C86O5018C94O4997C100O5233C105O5241C115O5260C123O5241C129O5278,,
tick,0x7f407749a374,17438562,1,0xb73fc0,6,0xd3aa20,0x1c8aa8c04599,0x8e566172322
tick,0x7f407749a374,17439891,1,0xb73fc0,6,0xd3aa20,0x1c8aa8c04599,0x8e566172322
tick,0x7f407749a374,17441029,1,0xb73fc0,6,0xd3aa20,0x1c8aa8c04599,0x8e566172322
tick,0x7f407749b499,17442099,1,0xb73fc0,6,0xd3aa20,0x1c8aa8c04599,0x8e566172322
